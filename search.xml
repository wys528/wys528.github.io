<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/07/09/2022-10-28-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/07/09/2022-10-28-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础1</title>
      <link href="/2024/07/09/java%E5%9F%BA%E7%A1%801/"/>
      <url>/2024/07/09/java%E5%9F%BA%E7%A1%801/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h4 id="查看对象在内存中的布局"><a href="#查看对象在内存中的布局" class="headerlink" title="查看对象在内存中的布局"></a>查看对象在内存中的布局</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">import</span> org.openjdk.jol.info.ClassLayout;</span><br><span class="line">System.out.println(ClassLayout.parseInstance(student).toPrintable());</span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>单行：Ctrl + &#x2F;</p><p>多行：Ctrl + shift + &#x2F;  常用于：说明方法作用或一段代码功能</p><p>文档：&#x2F;** 常用于：类定义或公有方法定义的前面</p><h4 id="创建数组类"><a href="#创建数组类" class="headerlink" title="创建数组类"></a>创建数组类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt;arraylist=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br></pre></td></tr></table></figure><p>常量关键字：final</p><p>算数左移（符号位不变，右边补零p&lt;&lt;3）</p><p>算数右移（符号位不变，左边补符号位p&gt;&gt;3）</p><p>逻辑右移（左边补0 p&gt;&gt;&gt;3）</p><h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q&gt;r?a:b</span><br></pre></td></tr></table></figure><h4 id="instance判断是否是Student类的实例"><a href="#instance判断是否是Student类的实例" class="headerlink" title="instance判断是否是Student类的实例"></a>instance判断是否是Student类的实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s1 <span class="keyword">instanceof</span> student)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.pritln(<span class="string">&quot;s1是student的实例&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>boolean类型的不能转换成其他类型</p><p>在混合运算中，容量小的类型自动转换为大容量的数据类型，排序如下：</p><p>byte,short,char-&gt;int-&gt;long-&gt;float-&gt;double</p><p>byte,short,char之间不会相互转换，他们三者在计算时首先会转换为int类型</p><p>容量大的数据类型转换为容量小的类型时要加上强制转换符</p><p>有多种类型的数据混合运算时，系统首先自动将所有的数据转换成容量最大的那种数据类型，然后进行计算</p><p>默认出现小数都算double</p><p>默认出现数字都算int</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i1=<span class="number">123</span>;</span><br><span class="line">        <span class="type">int</span> i2=<span class="number">456</span>;</span><br><span class="line">        <span class="type">double</span> d1=(i1+i2)*<span class="number">1.2</span>;<span class="comment">//自动类型转换</span></span><br><span class="line">        <span class="type">float</span> f1=(<span class="type">float</span>)((i1+i2)*<span class="number">1.2</span>);</span><br><span class="line">        <span class="type">byte</span> b1=<span class="number">67</span>;</span><br><span class="line">        <span class="type">byte</span> b2=<span class="number">89</span>;</span><br><span class="line">        <span class="type">byte</span> b3=(<span class="type">byte</span>)(b1+b2);</span><br><span class="line">        <span class="type">double</span> d2=<span class="number">1e200</span>;</span><br><span class="line">        System.out.println(d2);</span><br><span class="line">        <span class="type">float</span> f2=(<span class="type">float</span>)(d2);</span><br><span class="line">        System.out.println(f2);<span class="comment">//打印输出 f2 的值。由于 d2 超出了 float 的表示范围，所以 f2 将会是特定的值，通常是 Infinity 或 -Infinity，这取决于 d2 的正负。</span></span><br><span class="line">        <span class="type">float</span> f3=<span class="number">1.23f</span>;</span><br><span class="line">        <span class="type">long</span> l1=<span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> l2=<span class="number">3000000L</span>;</span><br><span class="line">        <span class="type">float</span> f4=l1+l2+f3;</span><br><span class="line">        System.out.println(f4);</span><br><span class="line">        <span class="type">long</span> l3=(<span class="type">long</span>)f4;</span><br><span class="line">        System.out.println(l3);</span><br><span class="line">        <span class="type">byte</span> a=(<span class="type">byte</span>)<span class="number">128</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for循环遍历数组"><a href="#for循环遍历数组" class="headerlink" title="for循环遍历数组"></a>for循环遍历数组</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i:arr)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类的定义格式（移动窗口例子）"><a href="#类的定义格式（移动窗口例子）" class="headerlink" title="类的定义格式（移动窗口例子）"></a>类的定义格式（移动窗口例子）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyFrame myFrame=<span class="keyword">new</span> <span class="title class_">MyFrame</span>();</span><br><span class="line">        myFrame.createWindow();</span><br><span class="line">        myFrame.walk();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFrame</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> selfWidth=<span class="number">500</span>,selfHeigth=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x=<span class="number">200</span>,y=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> screenWidth=<span class="number">0</span>,screenHeigth=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> ScreenWidth=<span class="number">0</span>,ScreenHeight=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> loopCount=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> flagX=<span class="literal">true</span>,flagY=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> Frame frame;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createWindow</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建窗口</span></span><br><span class="line">        frame=<span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;台球窗口例子&quot;</span>);</span><br><span class="line">        <span class="comment">//窗口的可见性</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//窗口的大小</span></span><br><span class="line">        frame.setSize(selfWidth,selfHeigth);</span><br><span class="line">        <span class="comment">//窗口的背景色</span></span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">10</span>,<span class="number">10</span>,<span class="number">200</span>));</span><br><span class="line">        <span class="comment">//窗口位置</span></span><br><span class="line">        frame.setLocation(x,y);</span><br><span class="line">        <span class="comment">//窗口的大小是否可改变</span></span><br><span class="line">        frame.setResizable(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获取屏幕尺寸</span></span><br><span class="line">        Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();</span><br><span class="line">        screenWidth=screenSize.width;</span><br><span class="line">        screenHeigth= screenSize.height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">walk</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            loopCount+=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">4</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span>||(x+selfWidth)&gt;screenWidth)</span><br><span class="line">            &#123;</span><br><span class="line">                flagX=!flagX;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(y&lt;<span class="number">0</span>||(y+selfHeigth)&gt;screenHeigth)</span><br><span class="line">            &#123;</span><br><span class="line">                flagY=!flagY;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flagX)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                x-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flagY)</span><br><span class="line">            &#123;</span><br><span class="line">                y+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                y-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            frame.setLocation(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="继承的基本概念"><a href="#继承的基本概念" class="headerlink" title="继承的基本概念"></a>继承的基本概念</h4><p>访问父类用super.</p><h4 id="访问权限控制"><a href="#访问权限控制" class="headerlink" title="访问权限控制"></a>访问权限控制</h4><p>private：只能在类内部访问（权限要求最高，能被访问的范围越小）。</p><p>default（啥也不写，默认的）：包级权限，可以被同包的其他类访问</p><p>protected:可以被子类访问，也可以被同包的其他类访问到， protected在被同包的类访问的基础上，还能被其他包的子类访 问。</p><p>public：可以在类外部访问（权限要求最低）</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
