<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>持久化技术</title>
      <link href="/2024/12/26/%E6%8C%81%E4%B9%85%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
      <url>/2024/12/26/%E6%8C%81%E4%B9%85%E5%8C%96%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="持久化技术"><a href="#持久化技术" class="headerlink" title="持久化技术"></a>持久化技术</h1><h2 id="持久化技术简介"><a href="#持久化技术简介" class="headerlink" title="持久化技术简介"></a>持久化技术简介</h2><p>数据持久化就是指将那些内存中的瞬时数据保存到存储设备中，保证即使在手机或计算机关机 的情况下，这些数据仍然不会丢失。保存在内存中的数据是处于瞬时状态的，而保存在存储设 备中的数据是处于持久状态的。持久化技术提供了一种机制，可以让数据在瞬时状态和持久状 态之间进行转换。</p><h2 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h2><p>文件存储是Android中最基本的数据存储方式，它不对存储的内容进行任何格式化处理，所有数 据都是原封不动地保存到文件当中的，因而它比较适合存储一些简单的文本数据或二进制数 据。如果你想使用文件存储的方式来保存一些较为复杂的结构化数据，就需要定义一套自己的 格式规范，方便之后将数据从文件中重新解析出来。</p><h3 id="将数据存储到文件中"><a href="#将数据存储到文件中" class="headerlink" title="将数据存储到文件中"></a>将数据存储到文件中</h3><p>Context类提供了一个openFileOutput()方法，可以用于将数据存储到指定的文件中。接收两个参数：第一个参数是文件名，不能包含路径；第二个参数是文件的操作模式，主要有MODE_PRIVATE和MODE_APPEND两种模式可选，默认是MODE_PRIVATE，表示当指定相同文件名的时候，所写入的内容将会覆盖原文件中的内容，而MODE_APPEND则表示文件已存在，就往文件里面追加内容， 不存在就创建新文件。</p><p>openFileOutput()方法返回的是一个FileOutputStream对象，得到这个对象之后就可以使用Java流的方式将数据写入文件中了。以下是一段简单的代码示例，展示了如何将一段文本文件内容保存到文件中：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">save</span><span class="params">(inputText:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> output = openFileOutput(<span class="string">&quot;data&quot;</span>,Context.MODE_PRIVATAE)</span><br><span class="line">    <span class="keyword">val</span> write = BuffererWrite(OutputStreamWriter(output))</span><br><span class="line">    writer.use&#123;</span><br><span class="line">        it.write(inputText)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里通过openFileOutput()方 法能够得到一个FileOutputStream对象，然后借助它构建出一个OutputStreamWriter对 象，接着再使用OutputStreamWriter构建出一个BufferedWriter对象，这样你就可以通 过BufferedWriter将文本内容写入文件中了。</p><p>注意，这里还使用了一个use函数，这是Kotlin提供的一个内置扩展函数。它会保证在Lambda 表达式中的代码全部执行完之后自动将外层的流关闭，这样就不需要我们再编写一个finally 语句，手动去关闭流了，是一个非常好用的扩展函数</p><p>另外，Kotlin是没有异常检查机制（checked exception）的。这意味着使用Kotlin编写的所 有代码都不会强制要求你进行异常捕获或异常抛出。上述代码中的try catch代码块是参照 Java的编程规范添加的，即使你不写try catch代码块，在Kotlin中依然可以编译通过。</p><p>下面我们就编写一个完整的例子，借此学习一下如何在Android项目中使用文件存储的技术。首 先创建一个FilePersistenceTest项目，并修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://shcemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@+id/editText&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layot_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:hint</span>=<span class="string">&quot;Type something here&quot;</span></span></span><br><span class="line"><span class="tag">              /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们要做的，就是在数据被回收之前，将它存储到 文件当中。修改MainActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        <span class="keyword">val</span> inputText = editText.text.toString()</span><br><span class="line">        save(inputText)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">save</span><span class="params">(inputText:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">val</span> output = openFileOutput(<span class="string">&quot;data&quot;</span>,Context.MODE_PRIVATE)</span><br><span class="line">            <span class="keyword">val</span> writer = BufferedWriter(OutputStreamWriter(output))</span><br><span class="line">            writer.use&#123;</span><br><span class="line">                it.write(inputText)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(e:IOException)&#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，首先我们重写了onDestroy()方法，这样就可以保证在Activity销毁之前一定会调 用这个方法。在onDestroy()方法中，我们获取了EditText中输入的内容，并调用save()方 法把输入的内容存储到文件中，文件命名为data。save()方法中的代码和之前的示例基本相 同，这里就不再做解释了。</p><p>然后按下Back键关闭程序，这时我们输入的内容就保存到文件中了。那么如何才能证实数据确 实已经保存成功了呢？我们可以借助Device File Explorer工具查看一下。这个工具在Android Studio的右侧边栏当中，通常是在右下角的位置，如果你的右侧边栏中没有这个工具的话，也 可以使用快捷键Ctrl + Shift + A（Mac系统是command + shift + A）打开搜索功能，在搜 索框中输入“Device File Explorer”即可找到这个工具。</p><h3 id="从文件中读取数据"><a href="#从文件中读取数据" class="headerlink" title="从文件中读取数据"></a>从文件中读取数据</h3><p>类似于将数据存储到文件中，Context类中还提供了一个openFileInput()方法，用于从文 件中读取数据。这个方法要比openFileOutput()简单一些，它只接收一个参数，即要读取的 文件名，然后系统会自动到&#x2F;data&#x2F;data&#x2F;&#x2F;ﬁles&#x2F;目录下加载这个文件，并返 回一个FileInputStream对象，得到这个对象之后，再通过流的方式就可以将数据读取出来 了。</p><p>以下是一段简单的代码示例，展示了如何从文件中读取文本数据：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">load</span><span class="params">()</span></span>:String&#123;</span><br><span class="line">    <span class="keyword">val</span> content = StringBuilder()</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">val</span> input = openFileInput(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> reader = BufferedReader(InputStreamReader(input))</span><br><span class="line">        reader.use&#123;</span><br><span class="line">            reader.forEachLine&#123;</span><br><span class="line">                content.append(it)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>了解了从文件中读取数据的方法，那么我们就来继续完善上一小节中的例子，使得重新启动程 序时EditText中能够保留我们上次输入的内容。修改MainActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstaceState)</span><br><span class="line">        binding = ActivityMianBinding.inflate(layoutInflater)</span><br><span class="line">        <span class="keyword">val</span> inputText = load()</span><br><span class="line">        <span class="keyword">val</span> editText = binding.editText</span><br><span class="line">        <span class="keyword">if</span>(inputText.isNotEmpty())&#123;</span><br><span class="line">            editText.setText(inputText)</span><br><span class="line">            editText.setSelection(inputTextt.length)</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;Restoring succeeded&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">load</span><span class="params">()</span></span>:String&#123;</span><br><span class="line">        <span class="keyword">val</span> content = StringBuilder()</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">val</span> input = openFileInput(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">            <span class="keyword">val</span> reader = BufferedReader(InputStreamReader(input))</span><br><span class="line">            reader.use&#123;</span><br><span class="line">                reader.forEachLine&#123;</span><br><span class="line">                    content.append(it)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(e:IOException)&#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> content.toString()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里的思路非常简单，在onCreate()方法中调用load()方法读取文件中存储的文 本内容，如果读到的内容不为空，就调用EditText的setText()方法将内容填充到EditText 里，并调用setSelection()方法将输入光标移动到文本的末尾位置以便继续输入，然后弹出 一句还原成功的提示。load()方法中的细节我们在前面已经讲过，这里就不再赘述了。</p><h3 id="读写文件总结"><a href="#读写文件总结" class="headerlink" title="读写文件总结"></a>读写文件总结</h3><h4 id="写文件用到的几个类"><a href="#写文件用到的几个类" class="headerlink" title="写文件用到的几个类"></a>写文件用到的几个类</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">openFileOutput()</span><br><span class="line">BufferedWritter()</span><br><span class="line">OutPutStreamWriter()</span><br></pre></td></tr></table></figure><h4 id="读文件用到的几个类"><a href="#读文件用到的几个类" class="headerlink" title="读文件用到的几个类"></a>读文件用到的几个类</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">openFileInput()</span><br><span class="line">BufferdReader()</span><br><span class="line">InPutStreamReader()</span><br></pre></td></tr></table></figure><h2 id="SharedPreferences存储"><a href="#SharedPreferences存储" class="headerlink" title="SharedPreferences存储"></a>SharedPreferences存储</h2><h3 id="将数据存储到SharedPreferences中"><a href="#将数据存储到SharedPreferences中" class="headerlink" title="将数据存储到SharedPreferences中"></a>将数据存储到SharedPreferences中</h3><p>要想使用SharedPreferences存储数据，首先需要获取SharedPreferences对象。Android中主要提供了以下两种方法用于得到SharedPreference对象</p><ul><li><p>Context类中的getSharedPreferences()方法</p><p>此方法接收两个参数：第一个参数用于指定SharedPreference文件的名称，如果指定的文件不存在则会创建一个，SharedPreferences文件都是存在&#x2F;data&#x2F;data&#x2F;<packagename>&#x2F;shared_prefs目录下的；第二个参数用于指定操作模式，目前只有默认的MODE_PRIVATE这一种模式可选，它和直接传入0的效果是相同的，表示只有当前的应用程序才可以对这个SharedPreferences文件进行读写。</p></li><li><p>Activity类中的getPreferences()方法</p><p>这个方法和Context中的getShared方法很相似，不过它直接收一个操作模式参数，因为使用这个方法时会自定将当前的Activity的类名作为SharedPreferences的文件名</p></li></ul><p>向SharedPreferences文件中存储数据的步骤</p><ul><li>调用SharedPreferences对象的edit()方法获取一个SharedPreferences.Editor对象</li><li>向SharedPreferences.Editor对象中添加数据，比如添加一个布尔型数据就使用putBoolean()方法，添加一个字符串则使用putString()方法，以此类推</li><li>调用apply()方法将添加的数据提交，从而完成数据存储操作</li></ul><p>新建一个SharedPreferencesTest项目，然后修改activity_main.xml中的代码，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/saveButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Save Data&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们不做任何复杂的功能，只是简单地放置了一个按钮，用于将一些数据存储到 SharedPreferences文件当中。然后修改MainActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        <span class="keyword">val</span> saveButton = binding.saveButton</span><br><span class="line">        saveButton.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> editor = getSharedPreferences(<span class="string">&quot;data&quot;</span>,Context.MODE_PRIVATE).edit()</span><br><span class="line">            editor.putString(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Tom&quot;</span>)</span><br><span class="line">            editor.putInt(<span class="string">&quot;age&quot;</span>,<span class="number">28</span>)</span><br><span class="line">            editor.putBoolean(<span class="string">&quot;married&quot;</span>,<span class="literal">false</span>)</span><br><span class="line">            editor.apply()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="从SharedPreferences中读取数据"><a href="#从SharedPreferences中读取数据" class="headerlink" title="从SharedPreferences中读取数据"></a>从SharedPreferences中读取数据</h3><p>通过例子来实际体验一下吧，仍然是在SharedPreferencesTest项目的基础上继续开 发，修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/saveButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Save Data&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/restoreButton&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Restore Data&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() &#123; </span><br><span class="line"> </span><br><span class="line">     <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123; </span><br><span class="line">             <span class="keyword">super</span>.onCreate(savedInstanceState) </span><br><span class="line">             setContentView(R.layout.activity_main) </span><br><span class="line">             ... </span><br><span class="line">             restoreButton.setOnClickListener &#123; </span><br><span class="line">             <span class="keyword">val</span> prefs = getSharedPreferences(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE) </span><br><span class="line">             <span class="keyword">val</span> name = prefs.getString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;&quot;</span>) </span><br><span class="line">             <span class="keyword">val</span> age = prefs.getInt(<span class="string">&quot;age&quot;</span>, <span class="number">0</span>) </span><br><span class="line">             <span class="keyword">val</span> married = prefs.getBoolean(<span class="string">&quot;married&quot;</span>, <span class="literal">false</span>) </span><br><span class="line">             Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;name is <span class="variable">$name</span>&quot;</span>) </span><br><span class="line">             Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;age is <span class="variable">$age</span>&quot;</span>) </span><br><span class="line">             Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;married is <span class="variable">$married</span>&quot;</span>) </span><br><span class="line">         &#125; </span><br><span class="line">     &#125; </span><br><span class="line"> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="实现记住密码的功能"><a href="#实现记住密码的功能" class="headerlink" title="实现记住密码的功能"></a>实现记住密码的功能</h3><p>activity_login.xml中的代 码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Account:&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/accountEdit&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;Enter your account&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Password:&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/passwordEdit&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;Enter your password&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">&quot;textPassword&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/rememberPass&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Remember password&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/login&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Login&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里使用了一个新控件：CheckBox。这是一个复选框控件，用户可以通过点击的方式进行选中 和取消，我们就使用这个控件来表示用户是否需要记住密码。</p><p>然后修改LoginActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.broadcastbestpractice</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> androidx.activity.enableEdgeToEdge</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat</span><br><span class="line"><span class="keyword">import</span> com.example.broadcastbestpractice.databinding.ActivityLoginBinding</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginActivity</span> : <span class="type">BaseActivity</span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        <span class="keyword">val</span> binding = ActivityLoginBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> login = binding.login</span><br><span class="line">        <span class="keyword">val</span> accountEdit = binding.accountEdit</span><br><span class="line">        <span class="keyword">val</span> passwordEdit = binding.passwordEdit</span><br><span class="line">        <span class="keyword">val</span> prefs = getPreferences(Context.MODE_PRIVATE)</span><br><span class="line">        <span class="keyword">val</span> isRemember = prefs.getBoolean(<span class="string">&quot;remember_password&quot;</span>,<span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">val</span> rememberPass = binding.rememberPass</span><br><span class="line">        <span class="keyword">if</span>(isRemember)&#123;</span><br><span class="line">            <span class="keyword">val</span> account = prefs.getString(<span class="string">&quot;account&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">val</span> password = prefs.getString(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">            accountEdit.setText(account)</span><br><span class="line">            passwordEdit.setText(password)</span><br><span class="line">            rememberPass.isChecked = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        login.setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> account = accountEdit.text.toString()</span><br><span class="line">            <span class="keyword">val</span> password = passwordEdit.text.toString()</span><br><span class="line">            <span class="keyword">if</span>(account==<span class="string">&quot;admin&quot;</span>&amp;&amp;password==<span class="string">&quot;123456&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">val</span> editor = prefs.edit()</span><br><span class="line">                <span class="keyword">if</span>(rememberPass.isChecked)&#123;</span><br><span class="line">                    editor.putBoolean(<span class="string">&quot;remember_password&quot;</span>,<span class="literal">true</span>)</span><br><span class="line">                    editor.putString(<span class="string">&quot;account&quot;</span>,account)</span><br><span class="line">                    editor.putString(<span class="string">&quot;password&quot;</span>,password)</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    editor.clear()</span><br><span class="line">                &#125;</span><br><span class="line">                editor.apply()</span><br><span class="line">                <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">                startActivity(intent)</span><br><span class="line">                finish()</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;account or password is invalid&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SQLite数据库存储"><a href="#SQLite数据库存储" class="headerlink" title="SQLite数据库存储"></a>SQLite数据库存储</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>Android为我们提供了一个SQLiteOpenHelper帮助类，我们可以通过这个类来对数据库进行创建和升级</p><p>SQLiteOpenHelper是一个抽象类，如果要使用就需要自己创建一个类来继承它。SQLiteOpenHelper中有两个抽象方法：onCreate()和onUpgrade()。我们必须在自己的帮助类里重写这两个方法，然后分别在这两个方法中实现创建和升级数据库的逻辑</p><p>SQLiteOpenHelper中还有两个非常重要的实例方法：getReadableDatabase()和getWritableDatabase()。这两个方法都可以创建或打开一个现有的数据库(如果数据库已存在则直接打开，否则要创建一个新的数据库)，并返回一个可对数据库进行读写操作的对象。不同的是，当数据库不可写入的时候(如磁盘空间)已满，getReadable方法返回的对象将以只读的方式打开数据库，而getWritableDatabase()方法则将出现异常。</p><p>SQLiteOpenHelper中有两个构造方法可供重写，一般使用参数少一点的构造方法。这个构造方法中接收4个参数：第一个参数是Context，第二个是数据库名，第三个参数是Cursor，一般传入null，第四个参数表示当前的数据库的版本号。构建出SQLiteOpenHelper实例之后，再调用它的getReadableDatabase()或getWritableDatabase()方法就能创建数据库了，数据库文件会放在&#x2F;data&#x2F;data&#x2F;<package name>&#x2F;databases&#x2F;目录下</p><p>接下来还是让我们通过具体的例子来更加直观地体会SQLiteOpenHelper的用法吧，首先新建 一个DatabaseTest项目</p><p>这里我们希望创建一个名为BookStore.db的数据库，然后在这个数据库中新建一张Book表， 表中有id（主键）、作者、价格、页数和书名等列。创建数据库表当然还是需要用建表语句的， 这里就要考验一下你的SQL基本功了，Book表的建表语句如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">create table Book(</span><br><span class="line">id integer primary key autoincrement,</span><br><span class="line">    author text,</span><br><span class="line">    price real,</span><br><span class="line">    pages integer,</span><br><span class="line">    name text)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>integer：表示整型，real表式浮点型，text表示文本类型，blob表示二进制类型，使用primary key将id类设为主键，并用autoincrement关键字表示id列是自增长的</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDatabaseHelper</span>(<span class="keyword">val</span> context:Context,name:String,version:<span class="built_in">Int</span>):</span><br><span class="line">SQLiteOpenHelper(context,name,<span class="literal">null</span>,version)&#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book(&quot;</span>+</span><br><span class="line">            <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;author text,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;price real,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;pages integer,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;name text)&quot;</span></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(db:<span class="type">SQLiteDatabase</span>)</span></span>&#123;</span><br><span class="line">                db.execSQL(createBook)</span><br><span class="line">                Toast.makeText(context,<span class="string">&quot;Create succeeded&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(db:<span class="type">SQLiteDatabase</span>,oldVersion:<span class="type">Int</span>,newVersion:<span class="type">Int</span>)</span></span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们把建表语句定义成了一个字符串变量，然后在onCreate()方法中又调用了 SQLiteDatabase的execSQL()方法去执行这条建表语句，并弹出一个Toast提示创建成功， 这样就可以保证在数据库创建完成的同时还能成功创建Book表。</p><p>现在修改activity_main.xml中的代码，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/createDatabase&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Create Daabase&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>布局文件很简单，就是加入了一个按钮，用于创建数据库。最后修改MainActivity中的代码， 如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(saveInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstance)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">val</span> createDatabase = binding.createDatabase</span><br><span class="line">        createDatabase.setOnClickListener&#123;</span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们在onCreate()方法中构建了一个MyDatabaseHelper对象，并且通过构造函数的参 数将数据库名指定为BookStore.db，版本号指定为1，然后在“Create Database”按钮的点击 事件里调用了getWritableDatabase()方法。这样当第一次点击“Create Database”按钮 时，就会检测到当前程序中并没有BookStore.db这个数据库，于是会创建该数据库并调用 MyDatabaseHelper中的onCreate()方法，这样Book表也就创建好了，然后会弹出一个 Toast提示创建成功。再次点击“Create Database”按钮时，会发现此时已经存在 BookStore.db数据库了，因此不会再创建一次。</p><h4 id="创建数据库的步骤"><a href="#创建数据库的步骤" class="headerlink" title="创建数据库的步骤"></a>创建数据库的步骤</h4><ul><li><p>继承SQLiteOpenHelper，重写它onCreate()和onUpgrade()方法</p></li><li><p>使用SQLiteDababase</p></li><li><p>MyDatabaseHelper</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDatabaseHelp</span>(context:Context,name:String,version:<span class="built_in">Int</span>):</span><br><span class="line">SQLiteOpenHleper(context,name,<span class="literal">null</span>,version)&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> crateBook = <span class="string">&quot;create table Book(&quot;</span>,</span><br><span class="line">          <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">          <span class="string">&quot;author text,&quot;</span>+</span><br><span class="line">          <span class="string">&quot;pages integer,&quot;</span>+</span><br><span class="line">          <span class="string">&quot;name text)&quot;</span></span><br><span class="line">        <span class="keyword">override</span> onCreate(db:SQLiteDatabase)&#123;</span><br><span class="line">            db.exeSQL(createBook)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> onUpgrade(db :QLiteDatabase,oldVersion:<span class="built_in">Int</span>,newVersion:<span class="built_in">Int</span>)&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意</strong>使用Database Navigation插件时候路径不要加双引号</p><h3 id="升级数据库"><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h3><p>目前，DatabaseTest项目中已经有一张Book表用于存放书的各种详细数据，如果我们想再添 加一张Category表用于记录图书的分类，该怎么做呢</p><p>比如Category表中有id（主键）、分类名和分类代码这几个列，那么建表语句就可以写成：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">create table Category(</span><br><span class="line">id integer primary key autoincrement</span><br><span class="line">    category_name text,</span><br><span class="line">    category_code ingeger</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>接下来我们将这条建表语句添加到MyDatabaseHelper中，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDatabaseHelper</span>(context:Context,name:String,version:<span class="built_in">Int</span>):</span><br><span class="line">SQLiteopenHelper(context,name,version)&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book(&quot;</span>+</span><br><span class="line">           <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;author text,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;pages integer,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;name text)&quot;</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createCategory = <span class="string">&quot;create table category(&quot;</span>+</span><br><span class="line">           <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;category_name text,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;category_code text)&quot;</span></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(db:<span class="type">SQLiteDatabase</span>)</span></span>&#123;</span><br><span class="line">            db.execSQL(createBook)</span><br><span class="line">            db.execSQL(createCategory)</span><br><span class="line">            Toast.makeText(context,<span class="string">&quot;Create succeed&quot;</span>,Toast.LENGHT_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(db:<span class="type">SQLiteDatabase</span>,oldVerdion:<span class="type">Int</span>,newVersion:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">            db.exeSQL(<span class="string">&quot;drop table if exists Book&quot;</span>)</span><br><span class="line">            db.exeSQL(<span class="string">&quot;drop table if exists category&quot;</span>)</span><br><span class="line">            onCreate(db)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>MainActivity的代码</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding : ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInfalter)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDataBaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">val</span> createDatabase = binding.createDatabase</span><br><span class="line">        createDatabase.setOnClickListener&#123;</span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><p>我们可以对数据进行的操作无非有4种，即CRUD，C代表添加(create)，R代表查找(retrieve)，U代表更新(update)，D代表删除(delete)。</p><p>前面我们已经知道，调用SQLiteOpenHelper的getReadableDatabase()或 getWritableDatabase()方法是可以用于创建和升级数据库的，不仅如此，这两个方法还都 会返回一个SQLiteDatabase对象，借助这个对象就可以对数据进行CRUD操作了</p><p>那么下面我们首先学习一下如何向数据库的表中添加数据吧。SQLiteDatabase中提供了一个 insert()方法，专门用于添加数据。它接收3个参数：第一个参数是表名，我们希望向哪张表 里添加数据，这里就传入该表的名字；第二个参数用于在未指定添加数据的情况下给某些可为 空的列自动赋值NULL，一般我们用不到这个功能，直接传入null即可；第三个参数是一个 ContentValues对象，它提供了一系列的put()方法重载，用于向ContentValues中添加数 据，只需要将表中的每个列名以及相应的待添加数据传入即可</p><p>介绍完了基本用法，接下来还是让我们通过例子来亲身体验一下如何添加数据吧。修改 activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_widht</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:Llayout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/createDatabase&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;createDatabase&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/addData&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Add Data&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，我们在布局文件中又新增了一个按钮，稍后就会在这个按钮的点击事件里编写添加 数据的逻辑。接着修改MainActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">Create</span><span class="params">(savedInstaceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> deHelper = MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">val</span> createDatabase = binding.createDatabase</span><br><span class="line">        <span class="keyword">val</span> addData = binding.addData</span><br><span class="line">        createDatabase.setOnClickListener&#123;</span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">        addData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values1 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Da Vinci Code&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">454</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>,<span class="number">16.96</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values1)</span><br><span class="line">            <span class="keyword">val</span> value2 = ContentValues().applly&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Lost Symbol&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">510</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>,<span class="number">29.95</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values2)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p>SQLiteDatabase中提供了一个非常好用的update()方法，用于对数据进行更新。这个方法 接收4个参数：第一个参数和insert()方法一样，也是表名，指定更新哪张表里的数据；第二 个参数是ContentValues对象，要把更新数据在这里组装进去；第三、第四个参数用于约束更 新某一行或某几行中的数据，不指定的话默认会更新所有行。 那么接下来，我们仍然是在DatabaseTest项目的基础上修改，看一下更新数据的具体用法。比 如刚才添加到数据库里的第一本书，由于过了畅销季，卖得不是很火了，现在需要通过降低价 格的方式来吸引更多的顾客，我们应该怎么操作呢？首先修改activity_main.xml中的代码，如 下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_widht</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:Llayout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/createDatabase&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;createDatabase&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/addData&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Add Data&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/updateData&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Update Data&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改MainActivity的代码</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>: <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding : ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstance)</span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContent(binding.root)</span><br><span class="line">        <span class="keyword">val</span> createDatabase = binding.createDatabase</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDataBaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        createDatabase.setOnClickListener&#123;</span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> addData = binding.addData&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHleper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values1 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Da Vinci Code&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">454</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>,<span class="number">16.96</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values1)</span><br><span class="line">            <span class="keyword">val</span> values2 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Lost Symbol&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">510</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>,<span class="number">19.95</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values2)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> updateData = binding.updataData</span><br><span class="line">        updateData.setOnClickListern&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values3 = ContentValues()</span><br><span class="line">            valuse3.put(<span class="string">&quot;price&quot;</span>,<span class="number">10.99</span>)</span><br><span class="line">            db.updata(<span class="string">&quot;Book&quot;</span>,values3,<span class="string">&quot;name=?&quot;</span>,arrayOf(<span class="string">&quot;The Da Vinci Code&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><p>修改activity_main.xml中的代码，如下 所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> &gt;</span> </span><br><span class="line">     ... </span><br><span class="line">     <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:id</span>=<span class="string">&quot;@+id/deleteData&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:text</span>=<span class="string">&quot;Delete Data&quot;</span> </span></span><br><span class="line"><span class="tag">     /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后修改MainActivity中的代码，如下 所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDataBaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">val</span> createDatabase = binding.createDatabase</span><br><span class="line">        createDatabase.setOnClickListener&#123;</span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> addData = binding.addData</span><br><span class="line">        addData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values1 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Da Vinci Code&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">454</span>)</span><br><span class="line">                put(<span class="string">&quot;price,16.96&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values)</span><br><span class="line">            <span class="keyword">val</span> values2 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Lost Symbol&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">510</span>)</span><br><span class="line">                put(<span class="string">&quot;prices&quot;</span>,<span class="number">19.95</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values2)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> updataData = binding.updateData</span><br><span class="line">        updataData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values3 = ContentValue()</span><br><span class="line">            values3.put(<span class="string">&quot;price&quot;</span>,<span class="number">10.99</span>)</span><br><span class="line">            db.update(<span class="string">&quot;Book&quot;</span>,values3,<span class="string">&quot;name=?&quot;</span>,arrayOf(<span class="string">&quot;The Da Vinci Code&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> deleteData = binding.deleteData</span><br><span class="line">        deleteData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            db.delete(<span class="string">&quot;Book&quot;</span>,<span class="string">&quot;pages&gt;?&quot;</span>,arrayOf(<span class="string">&quot;500&quot;</span>))</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p>SQLiteDatabase中还提供了一个query()方法用于对数据进行查询。这 个方法的参数非常复杂，最短的一个方法重载也需要传入7个参数。那我们就先来看一下这7个 参数各自的含义吧。第一个参数不用说，当然还是表名，表示我们希望从哪张表中查询数据。 第二个参数用于指定去查询哪几列，如果不指定则默认查询所有列。第三、第四个参数用于约 束查询某一行或某几行的数据，不指定则默认查询所有行的数据。第五个参数用于指定需要去 group by的列，不指定则表示不对查询结果进行group by操作。第六个参数用于对group by 之后的数据进行进一步的过滤，不指定则表示不进行过滤。第七个参数用于指定查询结果的排 序方式，不指定则表示使用默认的排序方式。</p><p>虽然query()方法的参数非常多，但是不要对它产生畏惧，因为我们不必为每条查询语句都指 定所有的参数，多数情况下只需要传入少数几个参数就可以完成查询操作了。调用query()方 法后会返回一个Cursor对象，查询到的所有数据都将从这个对象中取出。</p><p>下面还是让我们通过具体的例子来体验一下查询数据的用法，修改activity_main.xml中的代 码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> &gt;</span> </span><br><span class="line"></span><br><span class="line">     ... </span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:id</span>=<span class="string">&quot;@+id/queryData&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:text</span>=<span class="string">&quot;Query Data&quot;</span> </span></span><br><span class="line"><span class="tag">     /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个已经没什么好说的了，添加了一个按钮用于查询数据。然后修改MainActivity中的代码， 如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        、、、、</span><br><span class="line">        qerryData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> cursor = db.query(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">if</span>(cursor.moveToFirst())&#123;</span><br><span class="line">                <span class="keyword">do</span>&#123;</span><br><span class="line">                    <span class="keyword">val</span> name = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> author = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;author&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> pages = cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;pages&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> price = cursor.getDouble(cursor.getColumnIndex(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book name is <span class="variable">$name</span>&quot;</span>) </span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book author is <span class="variable">$author</span>&quot;</span>) </span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book pages is <span class="variable">$pages</span>&quot;</span>) </span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book price is <span class="variable">$price</span>&quot;</span>)</span><br><span class="line">                &#125;<span class="keyword">while</span>(cursor.moveToNext())</span><br><span class="line">            &#125;</span><br><span class="line">            cursor.close()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>最后别忘了调用close()方法来关闭 Cursor</strong></p><h2 id="SQLite数据库基本操作总结"><a href="#SQLite数据库基本操作总结" class="headerlink" title="SQLite数据库基本操作总结"></a>SQLite数据库基本操作总结</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>使用<strong>SQLiteOpenHelper</strong></p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDatabaseHelper</span>(<span class="keyword">val</span> context:Context, <span class="keyword">val</span> name:String, <span class="keyword">val</span> version:<span class="built_in">Int</span>):</span><br><span class="line">SQLiteOpenHelper(context,name,version)&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book(&quot;</span>+</span><br><span class="line">           <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;autor text,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;pages integer,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;name text)&quot;</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createCategory = <span class="string">&quot;create table Category(&quot;</span>+</span><br><span class="line">           <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;category_name text,&quot;</span>+</span><br><span class="line">           <span class="string">&quot;category_code integer)&quot;</span></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(db:<span class="type">SQLiteDatabase</span>)</span></span>&#123;</span><br><span class="line">            db.execSQL(createBook)</span><br><span class="line">            db.execSQL(createCategory)</span><br><span class="line">            Toast.makeText(context,<span class="string">&quot;Create succeed&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(db:<span class="type">SQLiteDatabase</span>,oldVersion:<span class="type">Int</span>,newVersion:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">            <span class="comment">//升级操作</span></span><br><span class="line">            db.execSQL(<span class="string">&quot;drop table if exists Book&quot;</span>)</span><br><span class="line">            db.execSQL(<span class="string">&quot;drop table if exists Category&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接下来是完整操作</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="meta">@SuppressLint(<span class="string">&quot;Range&quot;</span>)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstaceState)</span><br><span class="line">        binding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">val</span> createDatabase = binding.createDatabase</span><br><span class="line">        createDatabase.setOnClickListener&#123;</span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> addData = binding.addData</span><br><span class="line">        addData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values1 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Da Vinci Code&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">454</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>,<span class="number">16.96</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values1)</span><br><span class="line">            <span class="keyword">val</span> values2 = ContentValues().apply&#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;The Lost Symbol&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Dan Brown&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>,<span class="number">510</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>,<span class="number">19.95</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> updateData = binding.updateData</span><br><span class="line">        updateData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values3 = ContentValues()</span><br><span class="line">            values3.put(<span class="string">&quot;price&quot;</span>,<span class="number">10.99</span>)</span><br><span class="line">            db.update(<span class="string">&quot;Book&quot;</span>,value3,<span class="string">&quot;name=?&quot;</span>,arrayOf(<span class="string">&quot;The Da Vinci Code&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> deleteData = binding.deleteData</span><br><span class="line">        deleteData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            db.delete(<span class="string">&quot;Book&quot;</span>,<span class="string">&quot;pages&gt;?&quot;</span>,arrayOf(<span class="string">&quot;500&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> queryData = binding.queryData</span><br><span class="line">        queryData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> cursor = db.query(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">if</span>(cursor.moveToFirst())&#123;</span><br><span class="line">                <span class="keyword">do</span>&#123;</span><br><span class="line">                    <span class="keyword">val</span> name = cursor.getStrng(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> author = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;author&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> pages = cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;pages&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> price = cursor.getDouble(cursor.getColumnIndex(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">  Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book name is <span class="variable">$name</span>&quot;</span>)</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book author is <span class="variable">$author</span>&quot;</span>)</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book pages is <span class="variable">$pages</span>&quot;</span>)</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book price is <span class="variable">$price</span>&quot;</span>)</span><br><span class="line">                &#125;<span class="keyword">while</span>(cursor.movtToNext)</span><br><span class="line">                cursor.close()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>记得调用cursor.close()</strong></p><h3 id="使用SQL操作数据库"><a href="#使用SQL操作数据库" class="headerlink" title="使用SQL操作数据库"></a>使用SQL操作数据库</h3><p>虽然Android已经给我们提供了很多非常方便的API用于操作数据库，不过总会有一些人不习惯 使用这些辅助性的方法，而是更加青睐于直接使用SQL来操作数据库。如果你也是其中之一的 话，那么恭喜，Android充分考虑到了你们的编程习惯，同样提供了一系列的方法，使得可以直 接通过SQL来操作数据库。</p><p>下面我就来简略演示一下，如何直接使用SQL来完成前面几个小节中学过的CRUD操作</p><h4 id="添加数据："><a href="#添加数据：" class="headerlink" title="添加数据："></a>添加数据：</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">db.execSQL(<span class="string">&quot;insert into Book (name, author, pages, price) values(?, ?, ?, ?)&quot;</span>, </span><br><span class="line"> arrayOf(<span class="string">&quot;The Da Vinci Code&quot;</span>, <span class="string">&quot;Dan Brown&quot;</span>, <span class="string">&quot;454&quot;</span>, <span class="string">&quot;16.96&quot;</span>) </span><br><span class="line">) </span><br><span class="line">db.execSQL(<span class="string">&quot;insert into Book (name, author, pages, price) values(?, ?, ?, ?)&quot;</span>, </span><br><span class="line"> arrayOf(<span class="string">&quot;The Lost Symbol&quot;</span>, <span class="string">&quot;Dan Brown&quot;</span>, <span class="string">&quot;510&quot;</span>, <span class="string">&quot;19.95&quot;</span>) </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="更新数据："><a href="#更新数据：" class="headerlink" title="更新数据："></a>更新数据：</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">db.execSQL(<span class="string">&quot;update Book set price = ? where name =?&quot;</span>,arrayOf(<span class="string">&quot;10.99&quot;</span>,<span class="string">&quot;The Da Vinci Code&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="删除数据："><a href="#删除数据：" class="headerlink" title="删除数据："></a>删除数据：</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">db.execSQL(<span class="string">&quot;delete from Book where pages&gt;?&quot;</span>,arrayOf(<span class="string">&quot;500&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="查询数据-1"><a href="#查询数据-1" class="headerlink" title="查询数据"></a>查询数据</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> cursor = db.rawQuery(<span class="string">&quot;select * from Book&quot;</span>,<span class="literal">null</span>)</span><br></pre></td></tr></table></figure><h2 id="SQLite数据库的最佳实践"><a href="#SQLite数据库的最佳实践" class="headerlink" title="SQLite数据库的最佳实践"></a>SQLite数据库的最佳实践</h2><h3 id="使用事务"><a href="#使用事务" class="headerlink" title="使用事务"></a>使用事务</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">2</span>)</span><br><span class="line">        、、、</span><br><span class="line">        replaceData.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            db.beginTransaction()</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                db.delete(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                    <span class="keyword">throw</span> NullPointerException</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">val</span> values = ContentValues().apply&#123;</span><br><span class="line">                    put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Game of Thrones&quot;</span>)</span><br><span class="line">                    put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Georage Martin&quot;</span>)</span><br><span class="line">                    put(<span class="string">&quot;pages&quot;</span>,<span class="number">720</span>)</span><br><span class="line">                    put(<span class="string">&quot;price&quot;</span>,<span class="number">20.85</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                db.insert(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,values)</span><br><span class="line">                db.setTransactionSuccessful()</span><br><span class="line">            &#125;<span class="keyword">catch</span>(e:Exception)&#123;</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                db.endTransaction()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="升级数据库的最佳写法"><a href="#升级数据库的最佳写法" class="headerlink" title="升级数据库的最佳写法"></a>升级数据库的最佳写法</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDatabaseHelper</span>(<span class="keyword">val</span> context:Context,name:String,version:<span class="built_in">Int</span>):</span><br><span class="line">SQLiteOpenHelper(context,name,<span class="literal">null</span>,version)&#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book(&quot;</span>+</span><br><span class="line">               <span class="string">&quot;id integer primary key autoincrement,&quot;</span>+</span><br><span class="line">               <span class="string">&quot;author text,&quot;</span>+</span><br><span class="line">               <span class="string">&quot;price real,&quot;</span>+</span><br><span class="line">               <span class="string">&quot;pages integer,&quot;</span>+</span><br><span class="line">               <span class="string">&quot;name text,&quot;</span>+</span><br><span class="line">               <span class="string">&quot;category_id integer)&quot;</span></span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">val</span> createCategory = <span class="string">&quot;create table Category(&quot;</span>+</span><br><span class="line">                  <span class="string">&quot;category_name text,&quot;</span>+</span><br><span class="line">               <span class="string">&quot;category_code integer)&quot;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(db:<span class="type">SQLiteDatabase</span>)</span></span>&#123;</span><br><span class="line">                db.execSQL(createBook)</span><br><span class="line">                db.execSQL(createCategory)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(db:<span class="type">SQLiteDatabase</span>,oldVersion:<span class="type">Int</span>,newVersion:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(oldVersion&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">                    db.execSQL(createCategory)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(oldVersion&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">                    db.execSQL(<span class="string">&quot;alter table Book add column category_id integer&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="Kotlin-高阶函数的应用"><a href="#Kotlin-高阶函数的应用" class="headerlink" title="Kotlin:高阶函数的应用"></a>Kotlin:高阶函数的应用</h2><h3 id="简化SharedPreference的用法"><a href="#简化SharedPreference的用法" class="headerlink" title="简化SharedPreference的用法"></a>简化SharedPreference的用法</h3><p>首先来看SharedPreferences，在开始对它进行简化之前，我们先回顾一下 SharedPreferences原来的用法。向SharedPreferences中存储数据的过程大致可以分为 以下3步：</p><p>(1) 调用SharedPreferences的edit()方法获取SharedPreferences.Editor对象； (2) 向SharedPreferences.Editor对象中添加数据； (3) 调用apply()方法将添加的数据提交，完成数据存储操作。</p><p>对应的代码示例如下：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> editor = getSharedPreferences(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE).edit() </span><br><span class="line">editor.putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>) </span><br><span class="line">editor.putInt(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>) </span><br><span class="line">editor.putBoolean(<span class="string">&quot;married&quot;</span>, <span class="literal">false</span>) </span><br><span class="line">editor.apply()</span><br></pre></td></tr></table></figure><p>当然，这段代码其实本身已经足够简单了，但是这种写法更多还是在用Java的编程思维来编写 代码，而在Kotlin当中我们明显可以做到更好。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> SharedPreferences.<span class="title">open</span><span class="params">(block: <span class="type">SharedPreferences</span>.<span class="type">Editor</span>.() -&gt; <span class="type">Unit</span>)</span></span> &#123; </span><br><span class="line"> <span class="keyword">val</span> editor = edit() </span><br><span class="line"> editor.block() </span><br><span class="line"> editor.apply() </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义好了open函数之后，我们以后在项目中使用SharedPreferences存储数据就会更加方便 了，写法如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">getSharedPreferences(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE).<span class="keyword">open</span> &#123; </span><br><span class="line"> putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>) </span><br><span class="line"> putInt(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>) </span><br><span class="line"> putBoolean(<span class="string">&quot;married&quot;</span>, <span class="literal">false</span>) </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="简化ContentValues的用法"><a href="#简化ContentValues的用法" class="headerlink" title="简化ContentValues的用法"></a>简化ContentValues的用法</h3><p>新建一个ContentValues.kt文件，然后在里面 定义一个cvOf()方法，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">cvOf</span><span class="params">(<span class="keyword">vararg</span> pairs: <span class="type">Pair</span>&lt;<span class="type">String</span>, Any?&gt;)</span></span>: ContentValues &#123; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这个方法的作用是构建一个ContentValues对象，有几点我需要解释一下。首先，cvOf()方 法接收了一个Pair参数，也就是使用A to B语法结构创建出来的参数类型，但是我们在参数 前面加上了一个vararg关键字，这是什么意思呢？其实vararg对应的就是Java中的可变参数 列表，我们允许向这个方法传入0个、1个、2个甚至任意多个Pair类型的参数，这些参数都会 被赋值到使用vararg声明的这一个变量上面，然后使用for-in循环可以将传入的所有参数遍 历出来。</p><p>Any是Kotlin中所有类的共同基类，相当于Java中的Object，而Any?则表示允许传入空值</p><p>接下来我们开始为cvOf()方法实现功能逻辑，核心思路就是先创建一个ContentValues对 象，然后遍历pairs参数列表，取出其中的数据并填入ContentValues中，最终将 ContentValues对象返回即可。思路并不复杂，但是存在一个问题：Pair参数的值是Any?类 型的，我们怎样让它和ContentValues所支持的数据类型对应起来呢？这个确实没有什么好的 办法，只能使用when语句一一进行条件判断，并覆盖ContentValues所支持的所有数据类 型。结合下面的代码来理解应该更加清楚一些：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">cvOf</span><span class="params">(<span class="keyword">vararg</span> pairs: <span class="type">Pair</span>&lt;<span class="type">String</span>, Any?&gt;)</span></span> = ContentValues().apply &#123; </span><br><span class="line">     <span class="keyword">for</span> (pair <span class="keyword">in</span> pairs) &#123; </span><br><span class="line">     <span class="keyword">val</span> key = pair.first </span><br><span class="line">     <span class="keyword">val</span> value = pair.second </span><br><span class="line">         <span class="keyword">when</span> (value) &#123; </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Int</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Long</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Short</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Float</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Double</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Boolean</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> String -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> <span class="built_in">Byte</span> -&gt; put(key, value) </span><br><span class="line">             <span class="keyword">is</span> ByteArray -&gt; put(key, value) </span><br><span class="line">             <span class="literal">null</span> -&gt; putNull(key) </span><br><span class="line">         &#125; </span><br><span class="line">     &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了这个cvOf()方法之后，我们使用ContentValues时就会变得更加简单了，比如向数据库 中插入一条数据就可以这样写：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> values = cvOf(<span class="string">&quot;name&quot;</span> to <span class="string">&quot;Game of Thrones&quot;</span>, <span class="string">&quot;author&quot;</span> to <span class="string">&quot;George Martin&quot;</span>, </span><br><span class="line"> <span class="string">&quot;pages&quot;</span> to <span class="number">720</span>, <span class="string">&quot;price&quot;</span> to <span class="number">20.85</span>) </span><br><span class="line">db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>探究BroadcastReceiver</title>
      <link href="/2024/12/25/%E6%8E%A2%E7%A9%B6BroadcastReceiver/"/>
      <url>/2024/12/25/%E6%8E%A2%E7%A9%B6BroadcastReceiver/</url>
      
        <content type="html"><![CDATA[<h1 id="BroadcastReceiver"><a href="#BroadcastReceiver" class="headerlink" title="BroadcastReceiver"></a>BroadcastReceiver</h1><h2 id="广播机制简介"><a href="#广播机制简介" class="headerlink" title="广播机制简介"></a>广播机制简介</h2><p>Android中的每个应用程序都可以对自己 感兴趣的广播进行注册，这样该程序就只会收到自己所关心的广播内容，这些广播可能是来自 于系统的，也可能是来自于其他应用程序的。而接收广播的方法则需要引入一个新的概念—— BroadcastReceiver。</p><p>BroadcastReceiver的具体用法将会在下一节介绍，这里我们先来了解一下广播的类型。 Android中的广播主要可以分为两种类型：<strong>标准广播</strong>和<strong>有序广播</strong>。</p><ul><li>标准广播（normal broadcasts）是一种完全异步执行的广播，在广播发出之后，所有的 BroadcastReceiver几乎会在同一时刻收到这条广播消息，因此它们之间没有任何先后顺 序可言。这种广播的效率会比较高，但同时也意味着它是无法被截断的。</li><li>有序广播（ordered broadcasts）则是一种同步执行的广播，在广播发出之后，同一时刻 只会有一个BroadcastReceiver能够收到这条广播消息，当这个BroadcastReceiver中的 逻辑执行完毕后，广播才会继续传递。所以此时的BroadcastReceiver是有先后顺序的， 优先级高的BroadcastReceiver就可以先收到广播消息，并且前面的BroadcastReceiver 还可以截断正在传递的广播，这样后面的BroadcastReceiver就无法收到广播消息了。</li></ul><p>掌握了这些基本概念后，我们就可以来学习广播的用法了，首先从接收系统广播开始吧。</p><h2 id="接受系统广播"><a href="#接受系统广播" class="headerlink" title="接受系统广播"></a>接受系统广播</h2><p>Android内置了很多系统级别的广播，我们可以在应用程序中通过监听这些广播来得到各种系统 的状态信息。比如手机开机完成后会发出一条广播，电池的电量发生变化会发出一条广播，系 统时间发生改变也会发出一条广播，等等。如果想要接收这些广播，就需要使用 BroadcastReceiver，下面我们就来看一下它的具体用法。</p><h3 id="动态注册监听时间变化"><a href="#动态注册监听时间变化" class="headerlink" title="动态注册监听时间变化"></a>动态注册监听时间变化</h3><p>我们可以根据自己感兴趣的广播，自由地注册BroadcastReceiver，这样当有相应的广播发出 时，相应的BroadcastReceiver就能够收到该广播，并可以在内部进行逻辑处理。注册 BroadcastReceiver的方式一般有两种：在代码中注册和在AndroidManifest.xml中注册。其 中前者也被称为动态注册，后者也被称为静态注册</p><p>那么如何创建一个BroadcastReceiver呢？其实只需新建一个类，让它继承自 BroadcastReceiver，并重写父类的onReceive()方法就行了。这样当有广播到来时， onReceive()方法就会得到执行，具体的逻辑就可以在这个方法中处理。</p><p>下面我们就先通过动态注册的方式编写一个能够监听时间变化的程序，借此学习一下 BroadcastReceiver的基本用法。新建一个BroadcastTest项目，然后修改MainActivity中的 代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> timeChangeReceiver:TimeChangeReceiver</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        <span class="keyword">val</span> binding  = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> intentFilter = IntentFilter()</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;android.intent.action.TIME_TICK&quot;</span>)</span><br><span class="line">        timeChangeReceiver = TimeChangeReceiver()</span><br><span class="line">        registerReiver(timeChangeReceiver,intentFilter)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        unregisterReceiver(timeChangeReceiver)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">TimeChangeReceiver</span> : <span class="type">BroadcastReceiver</span>()&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceiver</span><span class="params">(context:<span class="type">context</span>,intent:<span class="type">Intent</span>())</span></span>&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;Time has changed&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们在MainActivity中定义了一个内部类TimeChangeReceiver，这个类是继承 自BroadcastReceiver的，并重写了父类的onReceive()方法。这样每当系统时间发生变化 时，onReceive()方法就会得到执行，这里只是简单地使用Toast提示了一段文本信息。</p><p>然后观察onCreate()方法，首先我们创建了一个IntentFilter的实例，并给它添加了一个 值为android.intent.action.TIME_TICK的action，为什么要添加这个值呢？因为当系统 时间发生变化时，系统发出的正是一条值为android.intent.action.TIME_TICK的广播， 也就是说我们的BroadcastReceiver想要监听什么广播，就在这里添加相应的action。接下 来创建了一个TimeChangeReceiver的实例，然后调用registerReceiver()方法进行注 册，将TimeChangeReceiver的实例和IntentFilter的实例都传了进去，这样 TimeChangeReceiver就会收到所有值为android.intent.action.TIME_TICK的广播， 也就实现了监听系统时间变化的功能。</p><p>最后要记得，动态注册的BroadcastReceiver一定要取消注册才行，这里我们是在 onDestroy()方法中通过调用unregisterReceiver()方法来实现的。</p><p>这就是动态注册BroadcastReceiver的基本用法，虽然这里我们只使用了一种系统广播来举 例，但是接收其他系统广播的用法是一模一样的。Android系统还会在亮屏熄屏、电量变化、网 络变化等场景下发出广播。如果你想查看完整的系统广播列表，可以到如下的路径中去查看：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">&lt;Android SDK&gt;/platforms/&lt;任意android api版本&gt;/<span class="keyword">data</span>/broadcast_actions.txt </span><br></pre></td></tr></table></figure><h3 id="静态注册实现开机自启动"><a href="#静态注册实现开机自启动" class="headerlink" title="静态注册实现开机自启动"></a>静态注册实现开机自启动</h3><p>动态注册的BroadcastReceiver可以自由地控制注册与注销，在灵活性方面有很大的优势。但 是它存在着一个缺点，即必须在程序启动之后才能接收广播，因为注册的逻辑是写在 onCreate()方法中的。那么有没有什么办法可以让程序在未启动的情况下也能接收广播呢？ 这就需要使用静态注册的方式了。</p><p>其实从理论上来说，动态注册能监听到的系统广播，静态注册也应该能监听到，在过去的 Android系统中确实是这样的。但是由于大量恶意的应用程序利用这个机制在程序未启动的情况 下监听系统广播，从而使任何应用都可以频繁地从后台被唤醒，严重影响了用户手机的电量和 性能，因此Android系统几乎每个版本都在削减静态注册BroadcastReceiver的功能。</p><p>在这些特殊的系统广播当中，有一条值为android.intent.action.BOOT_COMPLETED的广 播，这是一条开机广播，那么就使用它来举例学习吧。</p><p>这里我们准备实现一个开机启动的功能。在开机的时候，我们的应用程序肯定是没有启动的， 因此这个功能显然不能使用动态注册的方式来实现，而应该使用静态注册的方式来接收开机广 播，然后在onReceive()方法里执行相应的逻辑，这样就可以实现开机启动的功能了。</p><p>那么就开始动手吧。上一小节中我们是使用内部类的方式创建的BroadcastReceiver，其实还 可以通过Android Studio提供的快捷方式来创建。右击com.example.broadcasttest包 →New→Other→Broadcast Receiver</p><p>可以看到，这里我们将创建的类命名为BootCompleteReceiver，Exported属性表示是否允 许这个BroadcastReceiver接收本程序以外的广播，Enabled属性表示是否启用这个 BroadcastReceiver。勾选这两个属性，点击“Finish”完成创建</p><p>然后修改BootCompleteReceiver中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BootCompleteReceiver</span>:<span class="type">BroadcastReceiver</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context:<span class="type">Context</span>,intent:<span class="type">Intent</span>)</span></span>&#123;</span><br><span class="line">        Toast.makeText(context,<span class="string">&quot;Boot Complete&quot;</span>,Toast.LENGTH_LONG).show()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码非常简单，我们只是在onReceive()方法中使用Toast弹出一段提示信息。</p><p>另外，静态的BroadcastReceiver一定要在AndroidManifest.xml文件中注册才可以使用。不 过，由于我们是使用Android Studio的快捷方式创建的BroadcastReceiver，因此注册这一步 已经自动完成了。打开AndroidManifest.xml文件瞧一瞧，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">package</span>=<span class="string">&quot;com.example.broadcasttest&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">     <span class="tag">&lt;<span class="name">application</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span> </span><br><span class="line">         ... </span><br><span class="line">         <span class="tag">&lt;<span class="name">receiver</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:name</span>=<span class="string">&quot;.BootCompleteReceiver&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">application</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到，标签内出现了一个新的标签，所有静态的 BroadcastReceiver都是在这里进行注册的。它的用法其实和标签非常相似，也 是通过android:name指定具体注册哪一个BroadcastReceiver，而enabled和exported属 性则是根据我们刚才勾选的状态自动生成的。</p><p>另外，这里有非常重要的一点需要说明。Android 系统为了保护用户设备的安全和隐私，做了 严格的规定：如果程序需要进行一些对用户来说比较敏感的操作，必须在 AndroidManifest.xml文件中进行权限声明，否则程序将会直接崩溃。比如这里接收系统的开 机广播就是需要进行权限声明的，所以我们在上述代码中使用标签声明 了<strong>android.permission.RECEIVE_BOOT_COMPLETED</strong>权限。</p><p>这是你第一次遇到权限的问题，其实 Android中的许多操作是需要声明权限才可以进行的，后 面我们还会不断使用新的权限。不过目前这个接收系统开机广播的权限还是比较简单的，只需 要在 AndroidManifest.xml 文件中声明一下就可以了。Android 6.0 系统中引入了更加严格 的运行时权限，从而能够更好地保证用户设备的安全和隐私。关于这部分内容我们将在第 8章 中学习。</p><h2 id="发送自定义广播"><a href="#发送自定义广播" class="headerlink" title="发送自定义广播"></a>发送自定义广播</h2><h3 id="发送标准广播"><a href="#发送标准广播" class="headerlink" title="发送标准广播"></a>发送标准广播</h3><p>在发送广播之前，我们还是需要先定义一个BroadcastReceiver来准备接收此广播，不然发出 去也是白发。因此新建一个MyBroadcastReceiver，并在onReceive()方法中加入如下代 码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyBroadcastReceiver</span> : <span class="type">BroadcastReceiver</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context:<span class="type">Context</span>,intent:<span class="type">Intent</span>)</span></span>&#123;</span><br><span class="line">        Toast.makeText(context,<span class="string">&quot;received in MyBroadcastReceiver&quot;</span>).show()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当MyBroadcastReceiver收到自定义的广播时，就会弹出“received in MyBroadcastReceiver”的提示。</p><p>然后在AndroidManifest.xml中对这个BroadcastReceiver进行修改：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">package</span>=<span class="string">&quot;com.example.broadcasttest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:icon</span>=<span class="string">&quot;mipman/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> </span></span><br><span class="line"><span class="tag">                 <span class="attr">android:rountIcon</span>=<span class="string">&quot;mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:supportRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:name</span>=<span class="string">&quot;.MyBroadcastReceiver&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:enable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.broadcasttest.MY_BROADCADT&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span> </span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:text</span>=<span class="string">&quot;Send Broadcast&quot;</span> </span></span><br><span class="line"><span class="tag">     /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里在布局文件中定义了一个按钮，用于作为发送广播的触发点。然后修改MainActivity中的 代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        <span class="keyword">val</span> binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> button = binding.button</span><br><span class="line">        button.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="string">&quot;com.example.broadcasttest.MY_BROADCAST&quot;</span>)</span><br><span class="line">            intent.setPackage(packageName)</span><br><span class="line">            sendBroadcast(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们在按钮的点击事件里面加入了发送自定义广播的逻辑。 首先构建了一个Intent对象，并把要发送的广播的值传入。然后调用Intent的setPackage() 方法，并传入当前应用程序的包名。packageName是getPackageName()的语法糖写法，用 于获取当前应用程序的包名。最后调用sendBroadcast()方法将广播发送出去，这样所有监 听com.example.broadcasttest.MY_BROADCAST这条广播的BroadcastReceiver就会收 到消息了。此时发出去的广播就是一条标准广播。 这里我还得对第2步调用的setPackage()方法进行更详细的说明。前面已经说过，在Android 8.0系统之后，静态注册的BroadcastReceiver是无法接收隐式广播的，而默认情况下我们发出 的自定义广播恰恰都是隐式广播。因此这里一定要调用setPackage()方法，指定这条广播是 发送给哪个应用程序的，从而让它变成一条显式广播，否则静态注册的BroadcastReceiver将 无法接收到这条广播。</p><h3 id="发送有序广播"><a href="#发送有序广播" class="headerlink" title="发送有序广播"></a>发送有序广播</h3><p>和标准广播不同，有序广播是一种同步执行的广播，并且是可以被截断的。为了验证这一点， 我们需要再创建一个新的BroadcastReceiver。新建AnotherBroadcastReceiver，代码如下 所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AnotherBroadcastReceiver</span>:<span class="type">BroadcastReceiver</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context:<span class="type">Context</span>,intent:<span class="type">Intent</span>)</span></span>&#123;</span><br><span class="line">        Toast.makeText(context,<span class="string">&quot;received in AnotherBroadcastReceiver&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单，这里仍然是在onReceive()方法中弹出了一段文本信息。 然后在AndroidManifest.xml中对这个BroadcastReceiver的配置进行修改，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:androd</span>=<span class="string">&quot;http://schmas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">package</span>=<span class="string">&quot;com.example.broadcasttest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:supportRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:name</span>=<span class="string">&quot;.AnotherBroadcastReceiver&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:enable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.broadcasttest.MY_BROADCAST&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，AnotherBroadcastReceiver同样接收的是 com.example.broadcasttest.MY_BROADCAST这条广播。现在重新运行程序，并点 击“Send Broadcast”按钮，就会分别弹出两次提示信息</p><p>不过，到目前为止，程序发出的都是标准广播，现在我们来尝试一下发送有序广播。重新回到 BroadcastTest项目，然后修改MainActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedKnstanceState)</span><br><span class="line">        <span class="keyword">val</span> binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        intent.setPackage(packageName)</span><br><span class="line">        intent.sendOrdererBroadcast(intent,<span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，发送有序广播只需要改动一行代码，即将sendBroadcast()方法改成 sendOrderedBroadcast()方法。sendOrderedBroadcast()方法接收两个参数：第一个 参数仍然是Intent；第二个参数是一个与权限相关的字符串，这里传入null就行了。现在重 新运行程序，并点击“Send Broadcast”按钮，你会发现，两个BroadcastReceiver仍然都可 以收到这条广播。 看上去好像和标准广播并没有什么区别嘛。不过别忘了，这个时候的BroadcastReceiver是有 先后顺序的，而且前面的BroadcastReceiver还可以将广播截断，以阻止其继续传播。</p><p>那么该如何设定BroadcastReceiver的先后顺序呢？当然是在注册的时候进行设定了，修改 AndroidManifest.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:androd</span>=<span class="string">&quot;http://schmas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">package</span>=<span class="string">&quot;com.example.broadcasttest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:supportRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:name</span>=<span class="string">&quot;.AnotherBroadcastReceiver&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:enable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.broadcasttest.MY_BROADCAST&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，我们通过android:priority属性给BroadcastReceiver设置了优先级，优先级 比较高的BroadcastReceiver就可以先收到广播。这里将MyBroadcastReceiver的优先级设 成了100，以保证它一定会在AnotherBroadcastReceiver之前收到广播。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyBroadcastReceiver</span> : <span class="type">BroadcastReceiver</span>() &#123; </span><br><span class="line"> </span><br><span class="line">     <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context: <span class="type">Context</span>, intent: <span class="type">Intent</span>)</span></span> &#123; </span><br><span class="line">         Toast.makeText(context, <span class="string">&quot;received in MyBroadcastReceiver&quot;</span>, </span><br><span class="line">         Toast.LENGTH_SHORT).show() </span><br><span class="line">         abortBroadcast() </span><br><span class="line">     &#125; </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在onReceive()方法中调用了abortBroadcast()方法，就表示将这条广播截断，后面 的BroadcastReceiver将无法再接收到这条广播。</p><h2 id="广播的最佳实践：实现强制下线功能"><a href="#广播的最佳实践：实现强制下线功能" class="headerlink" title="广播的最佳实践：实现强制下线功能"></a>广播的最佳实践：实现强制下线功能</h2><p>先创建一个ActivityCollector类用于管理所有的Activity，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">obejct ActivityCollector&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> activities = ArrayList&lt;Activity&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">addActivity</span><span class="params">(activity:<span class="type">Activity</span>)</span></span>&#123;</span><br><span class="line">        activities.add(activity)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">removeActivity</span><span class="params">(activity:<span class="type">Activity</span>)</span></span>&#123;</span><br><span class="line">        activities.remove(activity)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">finishAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(activity <span class="keyword">in</span> activitise)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing)&#123;</span><br><span class="line">                acitivity.finish()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        activities.clear()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后创建BaseActivity类作为所有Activity的父类，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstance)</span><br><span class="line">        ActivityCollector.addActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        ActivityCollector.removeActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个LoginActivity来作为登录界面，并让Android Studio帮我们自 动生成相应的布局文件。然后编辑布局文件activity_login.xml，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextVeiw</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:text</span>=<span class="string">&quot;Account:&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/accountEdit&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:hint</span>=<span class="string">&quot;Enter you account&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">andorid:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:text</span>=<span class="string">&quot;Password&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/passwordEdit&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:hint</span>=<span class="string">&quot;Enter your password&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:inputType</span>=<span class="string">&quot;textPassword&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/login&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;login&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来修改LoginActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LoginActivity</span>:<span class="type">BaseActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(saveInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(saveInstanceState)</span><br><span class="line">        setContetnView(R.layout.activity_login)</span><br><span class="line">        login.setOnclickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> account = accountEdit.text.toString()</span><br><span class="line">            <span class="keyword">val</span> password = passwordEdit.text.toString()</span><br><span class="line">            login.setOnClickListener&#123;</span><br><span class="line">                <span class="keyword">if</span>(account==<span class="string">&quot;admin&quot;</span>&amp;&amp;password==<span class="string">&quot;123456&quot;</span>)&#123;</span><br><span class="line">                    <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">                    startActivity(intent)</span><br><span class="line">                    finish()</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;account or password is valid&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们模拟了一个非常简单的登录功能。首先将LoginActivity的继承结构改成继承自 BaseActivity，然后在登录按钮的点击事件里对输入的账号和密码进行判断：如果账号是 admin并且密码是123456，就认为登录成功并跳转到MainActivity，否则就提示用户账号或 密码错误。</p><p>因此，你可以将MainActivity理解成是登录成功后进入的程序主界面，这里我们并不需要在主 界面提供什么花哨的功能，只需要加入强制下线功能就可以了。修改activity_main.xml中的代 码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://shemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/forceOffline&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Send force offline broadCast&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>非常简单，只有一个按钮用于触发强制下线功能。然后修改MainActivity中的代码，如下所 示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MianActivity</span>:<span class="type">BaseActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(saved)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        forceOffline.setOnCLickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="string">&quot;com.example.broadcastbestparctice.FORCE_OFFLIN&quot;</span>)</span><br><span class="line">            sendBoradcast(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样非常简单，不过这里有个重点，我们在按钮的点击事件里发送了一条广播，广播的值为 com.example.broadcastbestpractice.FORCE_OFFLINE，这条广播就是用于通知程序 强制用户下线的。也就是说，强制用户下线的逻辑并不是写在MainActivity里的，而是应该写 在接收这条广播的BroadcastReceiver里。这样强制下线的功能就不会依附于任何界面了，不 管是在程序的任何地方，只要发出这样一条广播，就可以完成强制下线的操作了。</p><p>那么毫无疑问，接下来我们就需要创建一个BroadcastReceiver来接收这条强制下线广播。唯 一的问题就是，应该在哪里创建呢？由于BroadcastReceiver中需要弹出一个对话框来阻塞用 户的正常操作，但如果创建的是一个静态注册的BroadcastReceiver，是没有办法在 onReceive()方法里弹出对话框这样的UI控件的，而我们显然也不可能在每个Activity中都注 册一个动态的BroadcastReceiver。 那么到底应该怎么办呢？答案其实很明显，只需要在BaseActivity中动态注册一个 BroadcastReceiver就可以了，因为所有的Activity都继承自BaseActivity。 修改BaseActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> receiver : ForceOfflineReceiver</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedIntaceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        ActivityCollector.addActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        <span class="keyword">val</span> intentFilter = IntentFilter()</span><br><span class="line">        intetnFilter.addAction(<span class="string">&quot;com.example.broadcastbestpractice.FORCE_OFFLINE&quot;</span>)</span><br><span class="line">        receiver = ForceOfflineReceiver()</span><br><span class="line">        registerReceiver(receiver,intentFilter)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPause</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause()</span><br><span class="line">        unregisterReceiver(receiver)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        ActivityyCollector.removeActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">ForceOfflineReceiver</span> : <span class="type">BroadcastReceiver</span>()&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context:<span class="type">Context</span>,intent:<span class="type">Intent</span>)</span></span>&#123;</span><br><span class="line">            AlertDialog.Builder(context).apply&#123;</span><br><span class="line">                setTitle(<span class="string">&quot;Warning&quot;</span>)</span><br><span class="line">                setMessage(<span class="string">&quot;You are forced to be offline. Please try to login again.&quot;</span>)</span><br><span class="line">                setCancelable(<span class="string">&quot;false&quot;</span>)</span><br><span class="line">                setPositiveButton(<span class="string">&quot;OK&quot;</span>)&#123;_,_-&gt;</span><br><span class="line">                                       ActivityCollector.finishAll()</span><br><span class="line">                                       <span class="keyword">val</span> i = Intent(context,LoginActivity::<span class="keyword">class</span>.java)</span><br><span class="line">                                       context.startActivity(i)</span><br><span class="line">                                       &#125;</span><br><span class="line">                show()</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先来看一下ForceOﬄineReceiver中的代码，这次onReceive()方法里可不再是仅仅弹出一个 Toast了，而是加入了较多的代码，那我们就来仔细看看吧。首先是使用AlertDialog.Builder 构建一个对话框。注意，这里一定要调用setCancelable()方法将对话框设为不可取消，否 则用户按一下Back键就可以关闭对话框继续使用程序了。然后使用setPositiveButton()方 法给对话框注册确定按钮，当用户点击了“OK”按钮时，就调用ActivityCollector的 finishAll()方法销毁所有Activity，并重新启动LoginActivity。</p><p>再来看一下我们是怎么注册ForceOﬄineReceiver这个BroadcastReceiver的。可以看到，这 里重写了onResume()和onPause()这两个生命周期方法，然后分别在这两个方法里注册和取 消注册了ForceOﬄineReceiver</p><p>为什么要这样写呢？之前不都是在onCreate()和onDestroy()方法里注册和取消注册 BroadcastReceiver的吗？这是因为我们始终需要保证只有处于栈顶的Activity才能接收到这 条强制下线广播，非栈顶的Activity不应该也没必要接收这条广播，所以写在onResume()和 onPause()方法里就可以很好地解决这个问题，当一个Activity失去栈顶位置时就会自动取消 BroadcastReceiver的注册。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">     <span class="attr">package</span>=<span class="string">&quot;com.example.broadcastbestpractice&quot;</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">application</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.LoginActivity&quot;</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span> </span><br><span class="line">             <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span> </span><br><span class="line">             <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span> </span><br><span class="line">         <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">activity</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">activity</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">application</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.acton.MAIN&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h2><p>因为是在任何Activity中都要起到强制下线的作用，所以可以使用一个ActivityCollector类用于管理所有的Activity</p><h3 id="ActivityCollector"><a href="#ActivityCollector" class="headerlink" title="ActivityCollector"></a>ActivityCollector</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> ActivityCollector&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">val</span> activities = ArrayList&lt;Activity&gt;()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">addActivity</span><span class="params">(activity:<span class="type">Activity</span>)</span></span>&#123;</span><br><span class="line">        activities.add(activity)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">removeActivity</span><span class="params">(activity:<span class="type">Activity</span>)</span></span>&#123;</span><br><span class="line">        activities.remove(activity)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">finishAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(activity <span class="keyword">in</span> activities)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing)&#123;</span><br><span class="line">                activity.finish()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        activities.clear()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><h4 id="MainActivity的布局文件activity-mian-xml，只需要一个button按钮"><a href="#MainActivity的布局文件activity-mian-xml，只需要一个button按钮" class="headerlink" title="MainActivity的布局文件activity_mian.xml，只需要一个button按钮"></a>MainActivity的布局文件activity_mian.xml，只需要一个button按钮</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/forceOffline&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">andorid:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Send force offline broadcast&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="LoginActivity的布局文件activity-login-xml"><a href="#LoginActivity的布局文件activity-login-xml" class="headerlink" title="LoginActivity的布局文件activity_login.xml"></a>LoginActivity的布局文件activity_login.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http:schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:text</span>=<span class="string">&quot;Account&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/accountEdit&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:hint</span>=<span class="string">&quot;Enter your Account&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/passwordEdit&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:hint</span>=<span class="string">&quot;Enter your password&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@id/login&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Login&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改下AndroidManifest-xml的信息，使LoginActivity成为主Activity"><a href="#修改下AndroidManifest-xml的信息，使LoginActivity成为主Activity" class="headerlink" title="修改下AndroidManifest.xml的信息，使LoginActivity成为主Activity"></a>修改下AndroidManifest.xml的信息，使LoginActivity成为主Activity</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:name</span>=<span class="string">&quot;.LoginActivity&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCH&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">BaseActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(saveInstaceState)</span><br><span class="line">        <span class="keyword">val</span> binding = ActivityMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> forceOffline.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="string">&quot;com.example.broadcastbestpractice.FORCE_OFFLINE&quot;</span>)</span><br><span class="line">            sendBroadcast(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LoginActivity"><a href="#LoginActivity" class="headerlink" title="LoginActivity"></a>LoginActivity</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LoginActivity</span>:<span class="type">BaseActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstaceState)</span><br><span class="line">        <span class="keyword">val</span> binding = ActivityLoginBinding.inflate(layoutInflater)</span><br><span class="line">        <span class="keyword">val</span> longin = binding.login</span><br><span class="line">        <span class="keyword">val</span> accountEdit = binding.accountEdit</span><br><span class="line">        <span class="keyword">val</span> passwordEdit = binding.passwordEdit</span><br><span class="line">        login.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> account = accountEdit.text.toString()</span><br><span class="line">            <span class="keyword">val</span> password = passwordEdit.text.toString()</span><br><span class="line">            <span class="keyword">if</span>(account==<span class="string">&quot;admim&quot;</span>&amp;&amp;password==<span class="string">&quot;123456&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">                startActivity(intent)</span><br><span class="line">                finish()</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;account or password is invalid&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BaseActivity"><a href="#BaseActivity" class="headerlink" title="BaseActivity"></a>BaseActivity</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> receiver : ForceOfflineReceiver</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstandeState)</span><br><span class="line">        ActivityCollertor.addActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        <span class="keyword">val</span> intentFilter = IntentFilter()</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;com.example.broadcastbestpractice.FORCE_OFFLINE&quot;</span>)</span><br><span class="line">        receiver = ForceOfflineReceiver()</span><br><span class="line">        registerReceiver(receiver,intentFilter)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPause</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause()</span><br><span class="line">        unregisterReceiver(receiver)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        ActivityCollector.removeActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">ForceOfflineReceiver</span>:<span class="type">BroadcastReceiver</span>()&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context:<span class="type">Context</span>?,intent:<span class="type">Intent</span>?)</span></span>&#123;</span><br><span class="line">            context?.let&#123;</span><br><span class="line">                AlertDialog.Build(it).apply&#123;</span><br><span class="line">                    setTitle(<span class="string">&quot;Warning&quot;</span>)</span><br><span class="line">                    setMessage(<span class="string">&quot;You are forced to be offline. Please try to login again&quot;</span>)</span><br><span class="line">                    setPositiveButton(<span class="string">&quot;OK&quot;</span>)&#123;_,_-&gt;</span><br><span class="line">                                           ActivityCollector.finishAll()</span><br><span class="line">                                           <span class="keyword">val</span> i = Intent(context,LoginActivity::<span class="keyword">class</span>.java)</span><br><span class="line">                                            context.startActivity(i)</span><br><span class="line">                                           &#125;</span><br><span class="line">                    show()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Kotlin课堂：高阶函数详解"><a href="#Kotlin课堂：高阶函数详解" class="headerlink" title="Kotlin课堂：高阶函数详解"></a>Kotlin课堂：高阶函数详解</h2><h3 id="定义高阶函数"><a href="#定义高阶函数" class="headerlink" title="定义高阶函数"></a>定义高阶函数</h3><p>首先来看一下高阶函数的定义。如果一个函数接收另一个函数作为参数，或者返回值的类型是 另一个函数，那么该函数就称为高阶函数。</p><p>接下来我们就学习一下如何定义一个函数类型。不同于定义一个普通的字段类型，函数类型的 语法规则是有点特殊的，基本规则如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(String, Int) -&gt; Unit</span><br></pre></td></tr></table></figure><p>既然是定义一个函数类型，那么最关键的就是要声明该函数接收什么参数，以及它的返回值是 什么。因此，-&gt;左边的部分就是用来声明该函数接收什么参数的，多个参数之间使用逗号隔 开，如果不接收任何参数，写一对空括号就可以了。而-&gt;右边的部分用于声明该函数的返回值 是什么类型，如果没有返回值就使用Unit，它大致相当于Java中的void。</p><p>现在将上述函数类型添加到某个函数的参数声明或者返回值声明上，那么这个函数就是一个高 阶函数了，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">example</span><span class="params">(func:(<span class="type">String</span>,<span class="type">Int</span>)-&gt;<span class="type">Unit</span>)</span></span>&#123;</span><br><span class="line">    func(<span class="string">&quot;hello&quot;</span>,<span class="number">123</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里的example()函数接收了一个函数类型的参数，因此example()函数就是一个 高阶函数。而调用一个函数类型的参数，它的语法类似于调用一个普通的函数，只需要在参数 名的后面加上一对括号，并在括号中传入必要的参数即可</p><p>现在我们已经了解了高阶函数的定义方式，但是这种函数具体有什么用途呢？由于高阶函数的 用途实在是太广泛了，这里如果要让我简单概括一下的话，那就是高阶函数允许让函数类型的 参数来决定函数的执行逻辑。即使是同一个高阶函数，只要传入不同的函数类型参数，那么它 的执行逻辑和最终的返回结果就可能是完全不同的。为了详细说明这一点，下面我们来举一个 具体的例子。</p><p>这里我准备定义一个叫作num1AndNum2()的高阶函数，并让它接收两个整型和一个函数类型的 参数。我们会在num1AndNum2()函数中对传入的两个整型参数进行某种运算，并返回最终的运 算结果，但是具体进行什么运算是由传入的函数类型参数决定的。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">num1AndNum2</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>,operation:(<span class="type">Int</span>,<span class="type">Int</span>)-&gt;<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">val</span> result = operation(num1,num2)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个非常简单的高阶函数，可能它并没有多少实际的意义，却是个很好的学习示例。 num1AndNum2()函数的前两个参数没有什么需要解释的，第三个参数是一个接收两个整型参数 并且返回值也是整型的函数类型参数。在num1AndNum2()函数中，我们没有进行任何具体的运 算操作，而是将num1和num2参数传给了第三个函数类型参数，并获取它的返回值，最终将得到 的返回值返回。</p><p>现在高阶函数已经定义好了，那么我们该如何调用它呢？由于num1AndNum2()函数接收一个函 数类型的参数，因此我们还得先定义与其函数类型相匹配的函数才行。在 HigherOrderFunction.kt文件中添加如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">plus</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1+num2</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">minus</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1-num2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里定义了两个函数，并且这两个函数的参数声明和返回值声明都和num1AndNum2()函数中的 函数类型参数是完全匹配的。其中，plus()函数将两个参数相加并返回，minus()函数将两个 参数相减并返回，分别对应了两种不同的运算操作。</p><p>有了上述函数之后，我们就可以调用num1AndNum2()函数了，在main()函数中编写如下代 码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> num1 = <span class="number">100</span></span><br><span class="line">    <span class="keyword">val</span> num2 = <span class="number">80</span></span><br><span class="line">    <span class="keyword">val</span> result1 = num1AndNum2(num1,num2,::plus)</span><br><span class="line">    <span class="keyword">val</span> result2 = num1AndNum2(num1,num2,::minus)</span><br><span class="line">    println(<span class="string">&quot;result1 is <span class="variable">$result1</span>&quot;</span>) </span><br><span class="line">    println(<span class="string">&quot;result2 is <span class="variable">$result2</span>&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里调用num1AndNum2()函数的方式，第三个参数使用了::plus和::minus这种写法。 这是一种函数引用方式的写法，表示将plus()和minus()函数作为参数传递给 num1AndNum2()函数。而由于num1AndNum2()函数中使用了传入的函数类型参数来决定具体 的运算逻辑，因此这里实际上就是分别使用了plus()和minus()函数来对两个数字进行运算。</p><p>使用这种函数引用的写法虽然能够正常工作，但是如果每次调用任何高阶函数的时候都还得先 定义一个与其函数类型参数相匹配的函数，这是不是有些太复杂了？ 没错，因此Kotlin还支持其他多种方式来调用高阶函数，比如Lambda表达式、匿名函数、成员 引用等。其中，Lambda表达式是最常见也是最普遍的高阶函数调用方式，也是我们接下来要 重点学习的内容。 上述代码如果使用Lambda表达式的写法来实现的话，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> num1 = <span class="number">100</span></span><br><span class="line">    <span class="keyword">val</span> num2 = <span class="number">80</span></span><br><span class="line">    <span class="keyword">val</span> result = num1AndNum2(num1,num2)&#123;n1,n2-&gt;n1+n2&#125;</span><br><span class="line">    <span class="keyword">val</span> result = num1AndNum2(num1,num2)&#123;n1,n2-&gt;n1-n2&#125;</span><br><span class="line">    println(<span class="string">&quot;result is <span class="variable">$result1</span>&quot;</span>)</span><br><span class="line">    println(<span class="string">&quot;reuslt is <span class="variable">$result2</span>&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Lambda表达式的语法规则我们在2.6.2小节已经学习过了，因此这段代码对于你来说应该不难 理解。你会发现，Lambda表达式同样可以完整地表达一个函数的参数声明和返回值声明 （Lambda表达式中的最后一行代码会自动作为返回值），但是写法却更加精简</p><p>下面我们继续对高阶函数进行探究。回顾之前在第3章学习的apply函数，它可以用于给 Lambda表达式提供一个指定的上下文，当需要连续调用同一个对象的多个方法时，apply函 数可以让代码变得更加精简，比如StringBuilder就是一个典型的例子。接下来我们就使用高 阶函数模仿实现一个类似的功能。</p><p>修改HigherOrderFunction.kt文件，在其中加入如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> StringBuiler.<span class="title">build</span><span class="params">(block:<span class="type">StringBuiler</span>.()-&gt;<span class="type">Unit</span>)</span></span>:StringBuilder&#123;</span><br><span class="line">    block()</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们给StringBuilder类定义了一个build扩展函数，这个扩展函数接收一个函数类型参 数，并且返回值类型也是StringBuilder。</p><p>注意，这个函数类型参数的声明方式和我们前面学习的语法有所不同：它在函数类型的前面加 上了一个StringBuilder. 的语法结构。这是什么意思呢？其实这才是定义高阶函数完整的语 法规则，在函数类型的前面加上ClassName. 就表示这个函数类型是定义在哪个类当中的。 那么这里将函数类型定义到StringBuilder类当中有什么好处呢？好处就是当我们调用build 函数时传入的Lambda表达式将会自动拥有StringBuilder的上下文，同时这也是apply函数 的实现方式。 现在我们就可以使用自己创建的build函数来简化StringBuilder构建字符串的方式了。这里 仍然用吃水果这个功能来举例：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> result = StringBuilder().build&#123;</span><br><span class="line">        append(<span class="string">&quot;Start eating fruits.\n&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">            append(fruit).append(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        append(<span class="string">&quot;Ate all fruits.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    println(result.toString())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，build函数的用法和apply函数基本上是一模一样的，只不过我们编写的build函 数目前只能作用在StringBuilder类上面，而apply函数是可以作用在所有类上面的。</p><h3 id="内联函数的作用"><a href="#内联函数的作用" class="headerlink" title="内联函数的作用"></a>内联函数的作用</h3><p>高阶函数确实非常神奇，用途也十分广泛，可是你知道它背后的实现原理是怎样的吗？当然， 这个话题并不要求每个人都必须了解，但是为了接下来可以更好地理解内联函数这个知识点， 我们还是简单分析一下高阶函数的实现原理。</p><p>这里仍然使用刚才编写的num1AndNum2()函数来举例，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">num1AndNum2</span><span class="params">(num1: <span class="type">Int</span>, num2: <span class="type">Int</span>, operation: (<span class="type">Int</span>, <span class="type">Int</span>) -&gt; <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123; </span><br><span class="line">     <span class="keyword">val</span> result = operation(num1, num2) </span><br><span class="line">     <span class="keyword">return</span> result </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line">     <span class="keyword">val</span> num1 = <span class="number">100</span> </span><br><span class="line">     <span class="keyword">val</span> num2 = <span class="number">80</span> </span><br><span class="line">     <span class="keyword">val</span> result = num1AndNum2(num1, num2) &#123; n1, n2 -&gt; </span><br><span class="line">     n1 + n2 </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，上述代码中调用了num1AndNum2()函数，并通过Lambda表达式指定对传入的两个 整型参数进行求和。这段代码在Kotlin中非常好理解，因为这是高阶函数最基本的用法。可是我 们都知道，Kotlin的代码最终还是要编译成Java字节码的，但Java中并没有高阶函数的概念。</p><p>那么Kotlin究竟使用了什么魔法来让Java支持这种高阶函数的语法呢？这就要归功于Kotlin强大 的编译器了。Kotlin的编译器会将这些高阶函数的语法转换成Java支持的语法结构，上述的 Kotlin代码大致会被转换成如下Java代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">num1AndNum2</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2, Function operation)</span> &#123; </span><br><span class="line">     <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> (<span class="type">int</span>) operation.invoke(num1, num2); </span><br><span class="line">     <span class="keyword">return</span> result; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123; </span><br><span class="line">     <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">100</span>; </span><br><span class="line">     <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">80</span>; </span><br><span class="line">     <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> num1AndNum2(num1, num2, <span class="keyword">new</span> <span class="title class_">Function</span>() &#123; </span><br><span class="line">     <span class="meta">@Override</span> </span><br><span class="line">     <span class="keyword">public</span> Integer <span class="title function_">invoke</span><span class="params">(Integer n1, Integer n2)</span> &#123; </span><br><span class="line">     <span class="keyword">return</span> n1 + n2; </span><br><span class="line"> &#125; </span><br><span class="line"> &#125;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考虑到可读性，我对这段代码进行了些许调整，并不是严格对应了Kotlin转换成的Java代码。可 以看到，在这里num1AndNum2()函数的第三个参数变成了一个Function接口，这是一种 Kotlin内置的接口，里面有一个待实现的invoke()函数。而num1AndNum2()函数其实就是调 用了Function接口的invoke()函数，并把num1和num2参数传了进去。</p><p>调用num1AndNum2()函数的时候，之前的Lambda表达式在这里变成了Function接口的匿 名类实现，然后在invoke()函数中实现了n1 + n2的逻辑，并将结果返回。 这就是Kotlin高阶函数背后的实现原理。你会发现，原来我们一直使用的Lambda表达式在底层 被转换成了匿名类的实现方式。这就表明，我们每调用一次Lambda表达式，都会创建一个新 的匿名类实例，当然也会造成额外的内存和性能开销。 为了解决这个问题，Kotlin提供了内联函数的功能，它可以将使用Lambda表达式带来的运行时 开销完全消除。</p><p>内联函数的用法非常简单，只需要在定义高阶函数时加上inline关键字的声明即可，如下所 示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">num1AndNum2</span><span class="params">(num1: <span class="type">Int</span>, num2: <span class="type">Int</span>, operation: (<span class="type">Int</span>, <span class="type">Int</span>) -&gt; <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123; </span><br><span class="line">     <span class="keyword">val</span> result = operation(num1, num2) </span><br><span class="line">     <span class="keyword">return</span> result </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么内联函数的工作原理又是什么呢？其实并不复杂，就是Kotlin编译器会将内联函数中的代码 在编译的时候自动替换到调用它的地方，这样也就不存在运行时的开销了。</p><p>当然，仅仅一句话的描述可能还是让人不太容易理解，下面我们通过图例的方式来详细说明内 联函数的代码替换过程</p><p>首先，Kotlin编译器会将Lambda表达式中的代码替换到函数类型参数调用的地方，如图6.13 所示。</p><p><img src="/../image/Bcr.png"></p><p>接下来，再将内联函数中的全部代码替换到函数调用的地方，如图6.14所示。</p><p><img src="/../image/Bcr2.png"></p><p>最终的代码就被替换成了如图6.15所示的样子。</p><p><img src="/../image/Bcr3.png"></p><h3 id="noinline与crossinline"><a href="#noinline与crossinline" class="headerlink" title="noinline与crossinline"></a>noinline与crossinline</h3><p>接下来我们要讨论一些更加特殊的情况。比如，一个高阶函数中如果接收了两个或者更多函数 类型的参数，这时我们给函数加上了inline关键字，那么Kotlin编译器会自动将所有引用的 Lambda表达式全部进行内联</p><p>但是，如果我们只想内联其中的一个Lambda表达式该怎么办呢？这时就可以使用noinline关 键字了，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">inlineTest</span><span class="params">(block1: () -&gt; <span class="type">Unit</span>, <span class="keyword">noinline</span> block2: () -&gt; <span class="type">Unit</span>)</span></span> &#123; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里使用inline关键字声明了inlineTest()函数，原本block1和block2这两 个函数类型参数所引用的Lambda表达式都会被内联。但是我们在block2参数的前面又加上了 一个noinline关键字，那么现在就只会对block1参数所引用的Lambda表达式进行内联了。 这就是noinline关键字的作用。</p><p>前面我们已经解释了内联函数的好处，那么为什么Kotlin还要提供一个noinline关键字来排除 内联功能呢？这是因为内联的函数类型参数在编译的时候会被进行代码替换，因此它没有真正 的参数属性。非内联的函数类型参数可以自由地传递给其他任何函数，因为它就是一个真实的 参数，而内联的函数类型参数只允许传递给另外一个内联函数，这也是它最大的局限性。</p><p>另外，内联函数和非内联函数还有一个重要的区别，那就是内联函数所引用的Lambda表达式 中是可以使用return关键字来进行函数返回的，而非内联函数只能进行局部返回。为了说明这 个问题，我们来看下面的例子</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">printString</span><span class="params">(str: <span class="type">String</span>, block: (<span class="type">String</span>) -&gt; <span class="type">Unit</span>)</span></span> &#123; </span><br><span class="line">     println(<span class="string">&quot;printString begin&quot;</span>) </span><br><span class="line">     block(str) </span><br><span class="line">     println(<span class="string">&quot;printString end&quot;</span>) </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line">     println(<span class="string">&quot;main start&quot;</span>) </span><br><span class="line">     <span class="keyword">val</span> str = <span class="string">&quot;&quot;</span> </span><br><span class="line">     printString(str) &#123; s -&gt; </span><br><span class="line">     println(<span class="string">&quot;lambda start&quot;</span>) </span><br><span class="line">     <span class="keyword">if</span> (s.isEmpty()) <span class="keyword">return</span><span class="symbol">@printString</span> </span><br><span class="line">     println(s) </span><br><span class="line">     println(<span class="string">&quot;lambda end&quot;</span>) </span><br><span class="line">     &#125; </span><br><span class="line">     println(<span class="string">&quot;main end&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里定义了一个叫作printString()的高阶函数，用于在Lambda表达式中打印传入的字符串 参数。但是如果字符串参数为空，那么就不进行打印。注意，Lambda表达式中是不允许直接 使用return关键字的，这里使用了return@printString的写法，表示进行局部返回，并且 不再执行Lambda表达式的剩余部分代码。</p><p>可以看到，除了Lambda表达式中return@printString语句之后的代码没有打印，其他的日 志是正常打印的，说明return@printString确实只能进行局部返回。</p><p>但是如果我们将printString()函数声明成一个内联函数，那么情况就不一样了，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">printString</span><span class="params">(str: <span class="type">String</span>, block: (<span class="type">String</span>) -&gt; <span class="type">Unit</span>)</span></span> &#123; </span><br><span class="line"> println(<span class="string">&quot;printString begin&quot;</span>) </span><br><span class="line"> block(str) </span><br><span class="line"> println(<span class="string">&quot;printString end&quot;</span>) </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line"> println(<span class="string">&quot;main start&quot;</span>) </span><br><span class="line"> <span class="keyword">val</span> str = <span class="string">&quot;&quot;</span> </span><br><span class="line"> printString(str) &#123; s -&gt; </span><br><span class="line"> println(<span class="string">&quot;lambda start&quot;</span>) </span><br><span class="line"> <span class="keyword">if</span> (s.isEmpty()) <span class="keyword">return</span> </span><br><span class="line"> println(s) </span><br><span class="line"> println(<span class="string">&quot;lambda end&quot;</span>) </span><br><span class="line"> &#125; </span><br><span class="line"> println(<span class="string">&quot;main end&quot;</span>) </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>现在printString()函数变成了内联函数，我们就可以在Lambda表达式中使用return关键 字了。此时的return代表的是返回外层的调用函数，也就是main()函数，如果想不通为什么 的话，可以回顾一下在上一小节中学习的内联函数的代码替换过程</p><p>可以看到，不管是main()函数还是printString()函数，确实都在return关键字之后停止 执行了，和我们所预期的结果一致。</p><p>将高阶函数声明成内联函数是一种良好的编程习惯，事实上，绝大多数高阶函数是可以直接声 明成内联函数的，但是也有少部分例外的情况。观察下面的代码示例：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">runRunnable</span><span class="params">(block: () -&gt; <span class="type">Unit</span>)</span></span> &#123; </span><br><span class="line"> <span class="keyword">val</span> runnable = Runnable &#123; </span><br><span class="line"> block() </span><br><span class="line"> &#125; </span><br><span class="line"> runnable.run() </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码在没有加上inline关键字声明的时候绝对是可以正常工作的，但是在加上inline关 键字之后就会提示如图6.18所示的错误</p><p>这个错误出现的原因解释起来可能会稍微有点复杂。首先，在runRunnable()函数中，我们创 建了一个Runnable对象，并在Runnable的Lambda表达式中调用了传入的函数类型参数。而 Lambda表达式在编译的时候会被转换成匿名类的实现方式，也就是说，上述代码实际上是在 匿名类中调用了传入的函数类型参数</p><p>而内联函数所引用的Lambda表达式允许使用return关键字进行函数返回，但是由于我们是在 匿名类中调用的函数类型参数，此时是不可能进行外层调用函数返回的，最多只能对匿名类中 的函数调用进行返回，因此这里就提示了上述错误。</p><p>也就是说，如果我们在高阶函数中创建了另外的Lambda或者匿名类的实现，并且在这些实现 中调用函数类型参数，此时再将高阶函数声明成内联函数，就一定会提示错误。</p><p>那么是不是在这种情况下就真的无法使用内联函数了呢？也不是，比如借助crossinline关键 字就可以很好地解决这个问题</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">runRunnable</span><span class="params">(<span class="keyword">crossinline</span> block: () -&gt; <span class="type">Unit</span>)</span></span> &#123; </span><br><span class="line"> <span class="keyword">val</span> runnable = Runnable &#123; </span><br><span class="line"> block() </span><br><span class="line"> &#125; </span><br><span class="line"> runnable.run() </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里在函数类型参数的前面加上了crossinline的声明，代码就可以正常编译通过 了</p><p>那么这个crossinline关键字又是什么呢？前面我们已经分析过，之所以会提示图6.18所示的 错误，就是因为内联函数的Lambda表达式中允许使用return关键字，和高阶函数的匿名类实 现中不允许使用return关键字之间造成了冲突。而crossinline关键字就像一个契约，它用 于保证在内联函数的Lambda表达式中一定不会使用return关键字，这样冲突就不存在了，问 题也就巧妙地解决了</p><p>声明了crossinline之后，我们就无法在调用runRunnable函数时的Lambda表达式中使用 return关键字进行函数返回了，但是仍然可以使用return@runRunnable的写法进行局部返 回。总体来说，除了在return关键字的使用上有所区别之外，crossinline保留了内联函数 的其他所有特性。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>探究Fragment</title>
      <link href="/2024/12/22/%E6%8E%A2%E7%A9%B6Fragment/"/>
      <url>/2024/12/22/%E6%8E%A2%E7%A9%B6Fragment/</url>
      
        <content type="html"><![CDATA[<h1 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h1><h2 id="Fragment是什么"><a href="#Fragment是什么" class="headerlink" title="Fragment是什么"></a>Fragment是什么</h2><p>Fragment是一种可以嵌入在Activity中的UI片段，它能让程序更加合理和充分地利用大屏幕的空间，因而在平板上应用得非常广泛。</p><h2 id="Fragment的使用方式"><a href="#Fragment的使用方式" class="headerlink" title="Fragment的使用方式"></a>Fragment的使用方式</h2><p>首先创建一个平板模拟器，接着新建一个FragmentTest项目</p><h3 id="Fragment的简单使用方法"><a href="#Fragment的简单使用方法" class="headerlink" title="Fragment的简单使用方法"></a>Fragment的简单使用方法</h3><p>先写一个最简单的Fragment实例来练练手。在一个Activity当中添加两个Fragment，并让这两个Fragment平分Activity的空间</p><p>新建一个左侧Fragment的布局left_fragment.xml，代码如下</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">     <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后新建右侧Fragment的布局right_fragment.xml，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">     <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:textSize</span>=<span class="string">&quot;24sp&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:text</span>=<span class="string">&quot;This is right fragment&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>接着新建一个LeftFragment类，并让它继承自Fragment。</p><p><em><em>注意：这里可能会有两个不同包 下的Fragment供你选择：一个是系统内置的android.app.Fragment，一个是AndroidX库中 的androidx.fragment.app.Fragment。这里请一定要使用AndroidX库中的Fragment，因 为它可以让Fragment的特性在所有Android系统版本中保持一致，而系统内置的Fragment在 Android 9.0版本中已被废弃。使用AndroidX库中的Fragment并不需要在build.gradle文件 中添加额外的依赖，只要你在创建新项目时勾选了Use androidx.</em> artifacts选项，Android Studio会自动帮你导入必要的AndroidX库。</em>*</p><p>现在编写一下LeftFragment中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LeftFragment</span> : <span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,container:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        <span class="keyword">return</span> LeftFragmentBinding.inflate(inflater,container,<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再编写下RightFragment中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RightFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreatView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,container:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">BUndle</span>?)</span></span>:View?&#123;</span><br><span class="line">        <span class="keyword">return</span> RightFragmentBinding.inflate(inflater,container,<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再修改下，activity_main.xml中的代码</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/leftFrag&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rightFrag&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.RightFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>通过android:name属性来显式声明要添加的Fragment类名，注意一定要将类的包名也加上。</strong></p><h3 id="动态添加Fragment"><a href="#动态添加Fragment" class="headerlink" title="动态添加Fragment"></a>动态添加Fragment</h3><p>新建another_right_fragment.xml，代码如下</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">     <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:textSize</span>=<span class="string">&quot;24sp&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">android:text</span>=<span class="string">&quot;This is another right fragment&quot;</span>/&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后新建AnotherRightFragment作为另一个右侧Fragment，代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AnotherRightFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,containr:<span class="type">ViewGroup</span>?,savaeInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        <span class="keyword">return</span> AnotherRightFragmentBinding.inflate(inflater,container,<span class="literal">false</span>).root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再修改activity_main.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmln:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@+id/leftFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:id</span>=<span class="string">&quot;@id?rightLayout&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面在MainActivity写代码来向FrameLayout里添加内容，从而实现动态添加Fragment。代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActitivy</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstance)</span><br><span class="line">        binding = ActivityuMainBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> button:Button=findViewById(R.id.button)</span><br><span class="line">        </span><br><span class="line">        button.setOnClickListener&#123;</span><br><span class="line">            replaceFragment(AnotherRightFragment())</span><br><span class="line">        &#125;</span><br><span class="line">        repalceFragment(RightFragment())</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">replaceFragment</span><span class="params">(fragment:<span class="type">Fragment</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">val</span> fragmentManager = supportFragmentManager</span><br><span class="line">        <span class="keyword">val</span> transaction = fragmentManager.beginTransaction()</span><br><span class="line">        transaction.replace(R.id.rightLayout,fragment)</span><br><span class="line">        transaction.commit()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="动态添加Fragment的步骤"><a href="#动态添加Fragment的步骤" class="headerlink" title="动态添加Fragment的步骤"></a>动态添加Fragment的步骤</h4><p>创建待添加Fragment的实例</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">RightFragment()</span><br></pre></td></tr></table></figure><p>获取FragmentManager</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> fragmentManager = supportFragmentManager</span><br></pre></td></tr></table></figure><p>开启一个事务</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> transaction = fragmentManager.beginTransaction()</span><br></pre></td></tr></table></figure><p>向容器中添加或替换Fragment</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">transaction.replace(R.id.rightLayout,fragment)</span><br></pre></td></tr></table></figure><p>提交事务</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">transaction.commit()</span><br></pre></td></tr></table></figure><h3 id="在Fragment中实返回栈"><a href="#在Fragment中实返回栈" class="headerlink" title="在Fragment中实返回栈"></a>在Fragment中实返回栈</h3><p>直接使用addToBackStack()方法，它可以接受一个名字用于描述返回栈的状态，传入null就可以了</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">replaceFragment</span><span class="params">(fragment:<span class="type">Fragment</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">val</span> fragmentManager = supportFragmentManager</span><br><span class="line">        <span class="keyword">val</span> transaction = fragmentManager.beginTransaction()</span><br><span class="line">        transaction.replace(R.id.rightLayout,fragment)</span><br><span class="line">        transaction.addToBackStack(<span class="literal">null</span>)</span><br><span class="line">        transaction.commit()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fragment和Activity之间的交互"><a href="#Fragment和Activity之间的交互" class="headerlink" title="Fragment和Activity之间的交互"></a>Fragment和Activity之间的交互</h3><p>FragmentManager提供了一个类似与findViewById()的方法，专门用于从布局文件中获取Fragment的实例，代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> fragment = supportFragmentManager.findFragmentById(R.id.leftFrag) <span class="keyword">as</span> LeftFragment</span><br></pre></td></tr></table></figure><p>在Fragment中获取Activity的实例</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(activity!=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="keyword">val</span> mainActivity = activity <span class="keyword">as</span> MainActivity</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Fragment间的通讯方式：首先在一个Fragment中可以得到与它相关的Activity，然后再通过这个Activity获取另外一个Fragment的实例</p><h2 id="Fragment的生命周期"><a href="#Fragment的生命周期" class="headerlink" title="Fragment的生命周期"></a>Fragment的生命周期</h2><h3 id="Fragment的状态和回调"><a href="#Fragment的状态和回调" class="headerlink" title="Fragment的状态和回调"></a>Fragment的状态和回调</h3><ul><li>运行状态：当一个Fragment所关联的Activity正处于运行状态时，该Fragment也处于运行状态</li><li>暂停状态：当一个Activity进入暂停状态时(由于另一个未占满屏幕的Activity被添加到了栈顶)，与它相关联的Fragment就会进入暂停状态</li><li>停止状态：当一个Activity进入停止状态时，与它相关联的Fragment就会进入停止状态，或者通过调用FragmentTransaction的remove()、replace()方法将Fragment从Activity中移除，但在事务提交之前就调用了addToBackStack()方法，这时的Fragment也会将纳入停止状态</li><li>Fragment总是依附于Activity而存在，因此当Activity被销毁时，与它相关联的 Fragment就会进入销毁状态。或者通过调用FragmentTransaction的remove()、 replace()方法将Fragment从Activity中移除，但在事务提交之前并没有调用 addToBackStack()方法，这时的Fragment也会进入销毁状态。</li></ul><p>Fragment中一些与Activity不一样的回调</p><ul><li>onAttach()：当Fragment和Activity建立关联时调用</li><li>onCreateView()：为Fragment创建视图(加载布局)时调用</li><li>onActivityCreated()：确保与Fragment相关联的Activity已经创建完毕时调用</li><li>onDetach()：当Fragment和Activity解除关联时调用</li></ul><p><img src="/../image/fragmt.png"></p><h3 id="体验Fragment的生命周期"><a href="#体验Fragment的生命周期" class="headerlink" title="体验Fragment的生命周期"></a>体验Fragment的生命周期</h3><p>修改RightFragment中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RightFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> TAG = <span class="string">&quot;RightFragment&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAttach</span><span class="params">(context:<span class="type">Context</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onAttach(context)</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onAttach&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onCreate&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInfalter</span>,container:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onCreateView&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> RightFragmentBinding.inflate(inflater,containrer,<span class="literal">false</span>).root</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart()</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onStart&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onResume&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPause</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause()</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onPause&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop()</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onStop&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroyView</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroyView()</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onDestroy&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDetach</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDetach()</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onDetach&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行可观察到，依次调用了onAttach(), onCreate(), onCreateView(), onActivityCreated(), onStart(), onResume()</p><p>按下button后，因为之前使用了addToBackStack()，观察到调用了，onPause(), onStop(), onDestroyView()，若是没有使用addToBackStack()，便会接着调用 onDestroy(), onDetach</p><p>按下back键，会调用onCreateView(), onActivityCreated(), onStart(), onResume() <strong>注意，此时onCreate()方法并不会执行，因为之前使用了addToBackStack()，使得RightFragment并没有被销毁</strong></p><p>再次按下back键，会调用onPause(), onStop(), onDestroyView(), onDestroy(), onDetach()</p><h2 id="动态加载布局技巧"><a href="#动态加载布局技巧" class="headerlink" title="动态加载布局技巧"></a>动态加载布局技巧</h2><h3 id="使用限定符"><a href="#使用限定符" class="headerlink" title="使用限定符"></a>使用限定符</h3><p>我们可以通过限定符来使程序判断是使用单页布局还是双页布局</p><p>修改FragmentTest项目中的activity_main.xml文件，代码如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://chemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/leftFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">andorid:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里将多余的代码删掉，只留下一个左侧Fragment，并让它充满整个父布局。接着在res目录 下新建layout-large文件夹，在这个文件夹下新建一个布局，也叫作activity_main.xml，代码 如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http:.//schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/leftFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;rightFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.RightFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，layout&#x2F;activity_main布局只包含了一个Fragment，即单页模式，而layoutlarge&#x2F; activity_main布局包含了两个Fragment，即双页模式。其中，large就是一个限定 符，那些屏幕被认为是large的设备就会自动加载layout-large文件夹下的布局，小屏幕的设备 则还是会加载layout文件夹下的布局。</p><h3 id="使用最小宽度限定符"><a href="#使用最小宽度限定符" class="headerlink" title="使用最小宽度限定符"></a>使用最小宽度限定符</h3><p>最小宽度限定符允许我们对屏幕的宽度指定一个最小值（以dp为单位），然后以这个最小值为 临界点，屏幕宽度大于这个值的设备就加载一个布局，屏幕宽度小于这个值的设备就加载另一 个布局。</p><p>在res目录下新建layout-sw600dp文件夹，然后在这个文件夹下新建activity_main.xml布 局，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLineLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/leftFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.framenttest.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/rightFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmenttest.RightFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLineLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Fragment的最佳实践：一个简易版的新闻应用"><a href="#Fragment的最佳实践：一个简易版的新闻应用" class="headerlink" title="Fragment的最佳实践：一个简易版的新闻应用"></a>Fragment的最佳实践：一个简易版的新闻应用</h2><p>准备一个新闻实体类，新建类<strong>News</strong>，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">News</span>(<span class="keyword">val</span> title:String,<span class="keyword">val</span> content:String)</span><br></pre></td></tr></table></figure><p>News类的代码非常简单，title字段表示新闻标题，content字段表示新闻内容。接着新建布局文件<strong>news_content_frag.xml</strong>，作为新闻内容的布局</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/contentLayout&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:visibily</span>=<span class="string">&quot;invisible&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitle&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:background</span>=<span class="string">&quot;#000&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/newsContent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:padding</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_alignParentLeft</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:background</span>=<span class="string">&quot;#000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>新闻内容的布局主要可以分为两个部分：头部部分显示新闻标题，正文部分显示新闻内容，中间使用一条水平方向的细线分隔开。除此之外，这里还使用了一条垂直方向的细线，它的作用是在双页模式时将左侧的新闻列表和右侧的新闻内容分隔开。细线是利用View来实现的，将View的宽或高设置为1dp，再通过background属性设置一下颜色就可以了，这里我们把细线设置成黑色</p><p>另外，我们还要将新闻内容的布局设置成不可见。因为在双页模式下，如果还没有选中新闻列表中的任何一条新闻，是不应该显示新闻内容布局的</p><p>接下来新建一个<strong>NewsContentFragment</strong>类，继承自Fragment，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsContentFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,container:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflater(R.layout.news_content_frat,container,<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">refresh</span><span class="params">(title:<span class="type">String</span>,content:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">        contentLayout.visibility = View.VISIBLE</span><br><span class="line">        newsTitle.text = title<span class="comment">//刷新新闻标题</span></span><br><span class="line">        newsContent.text = content<span class="comment">//刷新新闻内容</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里首先在onCreateView()方法中加载了我们刚刚创建的news_content_frag布局。接下来又提供了一个refresh()方法，用于将新闻的标题和内容显示在我们刚刚定义的界面上。注意，当调用了refresh()方法时，需要将我们刚才隐藏的新闻内容布局设置成可见</p><p>这样我们就把新闻的内容Fragment和布局都创建好了，但是它们都是在双页模式中使用的，如果想在单页模式中使用的话，我们还需要再创建一个Activity。将它命名为<strong>NewsContentActivity</strong>，布局名就使用默认的<strong>activity_news_content</strong>即可。然后修改activity_news_content.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/newsContentFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsContentFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们充分发挥了代码的复用性，直接在布局中引入了NewsContentFragment。这样相当于把news_content-frag布局内容自动加了进来。</p><p>然后修改NewsContentActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsContentActivity</span>：<span class="title">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">actionStart</span><span class="params">(context:<span class="type">Context</span>,title:<span class="type">String</span>,content:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(contentx,NewsContentActivity::<span class="keyword">class</span>.java).apply&#123;</span><br><span class="line">                putExtra(<span class="string">&quot;news_title&quot;</span>,title)</span><br><span class="line">                putExtra(<span class="string">&quot;news_content&quot;</span>,content)</span><br><span class="line">            &#125;</span><br><span class="line">            context.startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_news_content)</span><br><span class="line">        <span class="keyword">val</span> title = intent.getStringExtra(<span class="string">&quot;news_title&quot;</span>)<span class="comment">//获取传入的新闻标题</span></span><br><span class="line">        <span class="keyword">val</span> content = intent.getStringExtra(<span class="string">&quot;news_content&quot;</span>)<span class="comment">//获取传入的新闻内容</span></span><br><span class="line">        <span class="keyword">if</span>(title!=<span class="literal">null</span>&amp;&amp;content!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">val</span> fragment = newsContentFrag <span class="keyword">as</span> NewContentFragment</span><br><span class="line">            fragment.refresh(title,content)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，在onCreate()方法中，我们通过Intent获取到了传入的新闻标题和新闻内容，然后使用kotlin-android-extensions插件提供的简洁写法得到了NewsContentFragment的实例，接着调用它的refresh()方法，将新闻的标题和内容传入，就可以把这些数据显示出来了</p><p>接下来，还需要创建一个用于显示新闻列表的布局，新建<strong>news_title_frag.xml</strong>，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleRecyclerView&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                                               /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个布局就非常简单了，里面只用一个用于先睡新闻列表的RecyclerView。既然要用到RecyclerView，那么就必定少不了子项的布局。新建<strong>news_item.xml</strong>作为RecyclerView子项的布局，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://shcemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitle&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:maxLines</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingRight</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingBottom</span>=<span class="string">&quot;15dp&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>子项的布局也非常简单，只有一个TextView。仔细观察TextView，你会发现其中有几个属性是我们之前没学过的：android：padding表示个控件的周围加上补白，这样不至于让文本内容紧靠在边缘上；android：maxLines设置为1表示让这个TextView只能单行显示；android：ellipsize用于设定当文本内容超出控件宽度时文本的缩略方式，这里指定成end表示在尾部进行缩略</p><p>既然新闻列表和子项的布局都已经创建好了，那么接下来我们就需要一个用于展示新闻列表的地方。这里新建<strong>NewsTitleFragment</strong>作为展示新闻列表的Fragment，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsTitleFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> isTwoPane = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,container:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.news_title_frag,container,<span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityCreated</span><span class="params">(savedInstaceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState)</span><br><span class="line">        isTwoPane = activity?.findViewById&lt;View&gt;(R.id.newsContentLayout)!=<span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，NewsTitleFragment中并没有多少代码，在onCreateView()方法中加载了news_title_frag布局，这个没什么好说的。我们注意看一下onActivityCreated()方法，这个方法通过在Activty中能否找到一个id为newsContentLayout的View，来判断当前是双页模式还是单页模式，因此我们需要让这个id为newscontentLayout的View只在双页模式中出现。如何实现呢？</p><p>使用限定符就可以了，首先修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://shcemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleLayout&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsTitleFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码在单页模式下只会加载一个新闻标题的Fragment</p><p>然后新建layoutj-sw600dp文件夹，在这个文件夹下再新建一个activtiy_main.xml文件，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsTitleFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_weight</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:id</span>=<span class="string">&quot;@id/newsContentLayout&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_weight</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/newsContentFrag&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsContetnFragment&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出，在双页模式下，我们同时引入了两个Fragment，并将新闻内容的Fragment放在了 一个FrameLayout布局下，而这个布局的id正是newsContentLayout。因此，能够找到这个 id的时候就是双页模式，否则就是单页模式。</p><p>现在我们已经将绝大部分的工作完成了，但还剩下至关重要的一点，就是在 NewsTitleFragment中通过RecyclerView将新闻列表展示出来。我们在NewsTitleFragment 中新建一个内部类NewsAdapter来作为RecyclerView的适配器，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsTitle</span> <span class="title">NewsTitleFragment</span> : <span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> isTwoPane = <span class="literal">false</span></span><br><span class="line">    、、、</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">NewsAdapter</span>(<span class="keyword">val</span> newsList:List&lt;News&gt;):RecyclerView.Adpater&lt;NewsAdapter.ViewHolder&gt;()&#123;</span><br><span class="line">        <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">ViewHodler</span>(veiw:View):RecyclerView.ViewHolder(view)&#123;</span><br><span class="line">            <span class="keyword">val</span> newsTitle:TextView = view.findViewById(R.d.newsTitle)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent:<span class="type">ViewGroup</span>,viewType:<span class="type">Int</span>)</span></span>:ViewHolder&#123;</span><br><span class="line">            <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.news_item,parent,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">val</span> holder = ViewHolder(view)</span><br><span class="line">            holder.itemView.setOnclickListener&#123;</span><br><span class="line">                <span class="keyword">val</span> news = nesList[holder.adapterPosition]</span><br><span class="line">                <span class="keyword">if</span>(isTwoPane)&#123;</span><br><span class="line">                    <span class="keyword">val</span> fragment = newContentFrag <span class="keyword">as</span> NewsContentFragement</span><br><span class="line">                    fragment.refresh(news.title,news.content)</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    NewsContentActivity.actionStart(parent.contnxt,news.title,news.content)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> holder</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBindViewHolder</span><span class="params">(holder:<span class="type">ViewHolder</span>,position:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">            <span class="keyword">val</span> news = newsList[position]</span><br><span class="line">            holder.newsTitle.text = news.title</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemCount</span><span class="params">()</span></span> = newList.size</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ecyclerView的用法你已经相当熟悉了，因此这个适配器的代码对你来说应该没有什么难度 吧？需要注意的是，之前我们都是将适配器写成一个独立的类，其实也可以写成内部类。这里 写成内部类的好处就是可以直接访问NewsTitleFragment的变量，比如isTwoPane。</p><p>观察一下onCreateViewHolder()方法中注册的点击事件，首先获取了点击项的News实例， 然后通过isTwoPane变量判断当前是单页还是双页模式。如果是单页模式，就启动一个新的 Activity去显示新闻内容；如果是双页模式，就更新NewsContentFragment里的数据</p><p>现在还剩最后一步收尾工作，就是向RecyclerView中填充数据了。修改NewsTitleFragment 中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsTitleFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityCreated</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState)</span><br><span class="line">        isTwoPane = activity?.findViewById&lt;View&gt;(R.id.newsContentLayout)!=<span class="literal">null</span></span><br><span class="line">        <span class="keyword">val</span> layoutManager = LinearLayoutManager(activiy)</span><br><span class="line">        newTitleRecyclerView.layoutManager = layoutMananger</span><br><span class="line">        newsTitleRecyclerView.adapter = adapter</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getNews</span><span class="params">()</span></span>:List&lt;News&gt;&#123;</span><br><span class="line">        <span class="keyword">val</span> newList = ArrayList&lt;News&gt;()</span><br><span class="line">        <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.50</span>)&#123;</span><br><span class="line">            <span class="keyword">val</span> news = News(<span class="string">&quot;This is news title <span class="variable">$i</span>&quot;</span>,getRandomLengthString(<span class="string">&quot;This is news content <span class="variable">$i</span>. &quot;</span>))</span><br><span class="line">            newsList.add(news)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newList</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRandomLengthString</span><span class="params">(str:<span class="type">String</span>)</span></span>:String&#123;</span><br><span class="line">        <span class="keyword">val</span> n = (<span class="number">1.</span><span class="number">.20</span>).random()</span><br><span class="line">        <span class="keyword">val</span> builder = StringBuilder()</span><br><span class="line">        repeat(n)&#123;</span><br><span class="line">            builder.append(str)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.toString()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，onActivityCreated()方法中添加了RecyclerView标准的使用方法。在 Fragment中使用RecyclerView和在Activity中使用几乎是一模一样的，相信没有什么需要解 释的。另外，这里调用了getNews()方法来初始化50条模拟新闻数据，同样使用了一个 getRandomLengthString()方法来随机生成新闻内容的长度，以保证每条新闻的内容差距比 较大，相信你对这个方法肯定不会陌生了</p><h2 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h2><h3 id="设计布局"><a href="#设计布局" class="headerlink" title="设计布局"></a>设计布局</h3><p>总共需要六个布局</p><h4 id="单页activity-main-xml"><a href="#单页activity-main-xml" class="headerlink" title="单页activity_main.xml"></a>单页activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleLayout&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;id/newsTitleFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsTitleFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="双页activity-main-xml（layout-sw600dp）"><a href="#双页activity-main-xml（layout-sw600dp）" class="headerlink" title="双页activity_main.xml（layout-sw600dp）"></a>双页activity_main.xml（layout-sw600dp）</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleLayout&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitleFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsTitleFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:id</span>=<span class="string">&quot;@+id/newsContentLayout&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_weight</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@+id/newsContentFrag&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsContentFragment&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意，在不同的layout目录下，布局的根元素ID要一致，否则会导致ViewBinding生成的绑定类无法正确映射。且抛出错误：Configurations for activity_main.xml must agree on the root element’s ID</strong></p><h4 id="新闻内容news-content-frag"><a href="#新闻内容news-content-frag" class="headerlink" title="新闻内容news_content_frag"></a>新闻内容news_content_frag</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/contentLayout&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:visibility</span>=<span class="string">&quot;invisible&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitle&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:background</span>=<span class="string">&quot;#000&quot;</span></span></span><br><span class="line"><span class="tag">              /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/newsContent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:padding</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_alignParentLeft</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:background</span>=<span class="string">&quot;#000&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="新闻标题news-titile-frag-xml"><a href="#新闻标题news-titile-frag-xml" class="headerlink" title="新闻标题news_titile_frag.xml"></a>新闻标题news_titile_frag.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerVeiw</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:id</span>=<span class="string">&quot;@+id/newsTitleRecyclerView&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="recyclerview中的item布局news-item-xml"><a href="#recyclerview中的item布局news-item-xml" class="headerlink" title="recyclerview中的item布局news_item.xml"></a>recyclerview中的item布局news_item.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@id/newsTitle&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:maxLines</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:testSize</span>=<span class="string">&quot;18sp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingRight</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingTop</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:paddingBotton</span>=<span class="string">&quot;15dp&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Activity-NewsContent的布局activity-news-content"><a href="#Activity-NewsContent的布局activity-news-content" class="headerlink" title="Activity NewsContent的布局activity_news_content"></a>Activity NewsContent的布局activity_news_content</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/newsContentFrag&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;com.example.fragmentbestpractice.NewsContentFragment&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="新闻类实体"><a href="#新闻类实体" class="headerlink" title="新闻类实体"></a>新闻类实体</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsJ</span>(<span class="keyword">val</span> title:String,<span class="keyword">val</span> content:String)</span><br></pre></td></tr></table></figure><h3 id="新闻内容NewsContentFragment"><a href="#新闻内容NewsContentFragment" class="headerlink" title="新闻内容NewsContentFragment"></a>新闻内容NewsContentFragment</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsContentFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:NewsContentFragBindding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,containewr:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        bindding = NewsContentFragBinding.inflate(inflater,container,<span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">refresh</span><span class="params">(title:<span class="type">String</span>,content:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">        binding.contentLayout.visibility = View.VISIBLE</span><br><span class="line">        binding.newsTitle.text = title</span><br><span class="line">        binding.newsContent.text = content</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">var</span> newsContentFrag:NewsContentFragment?=<span class="literal">null</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:ActivityMainBinding</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstance:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedINstanceState)</span><br><span class="line">        binding = ActivityMainBinding.inflate(layoutInfalter)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">if</span>(binding.newsContentLayou!=<span class="literal">null</span>)&#123;</span><br><span class="line">            newsContentFrag = supportFragmentManager.findFragmentById(R.id.newsContentFrag) <span class="keyword">as</span>? NewsContentFragment</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单页面的Activity-NewsContentActivity"><a href="#单页面的Activity-NewsContentActivity" class="headerlink" title="单页面的Activity NewsContentActivity"></a>单页面的Activity NewsContentActivity</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsContentActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> binding:AcxtivityNewsContentBinding</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">actionStart</span><span class="params">(context:<span class="type">Context</span>,title:<span class="type">String</span>,content:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(context,NewsContentActivity::<span class="keyword">class</span>.java).apply&#123;</span><br><span class="line">                putExtra(<span class="string">&quot;news_title&quot;</span>,title)</span><br><span class="line">                putExtra(<span class="string">&quot;news_content&quot;</span>,content)</span><br><span class="line">            &#125;</span><br><span class="line">            context.startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bunlde</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstance)</span><br><span class="line">        binding = ActvityNewsContentBinding.inflate(layoutInflater)</span><br><span class="line">        setContentView(binding.root)</span><br><span class="line">        <span class="keyword">val</span> title = intent.getStringExtra(<span class="string">&quot;news_title&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> content = intent.getStringExtra(<span class="string">&quot;news_content&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span>(title!=<span class="literal">null</span>&amp;&amp;content!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">val</span> fragment = supportFragmentManager.findViewById(R.id.newsContentFrag) <span class="keyword">as</span>? NewsContentFragmet</span><br><span class="line">            fragment?.refresh(title,content)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Log.e(<span class="string">&quot;NewsContentActivity&quot;</span>,<span class="string">&quot;No news content received!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新闻标题列表NewsTitleFragment"><a href="#新闻标题列表NewsTitleFragment" class="headerlink" title="新闻标题列表NewsTitleFragment"></a>新闻标题列表NewsTitleFragment</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NewsTitleFragment</span>:<span class="type">Fragment</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> _binding:NewsTitleFragBinding? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> binding <span class="keyword">get</span>()=_binding!!</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> isTwoPane = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater:<span class="type">LayoutInflater</span>,container:<span class="type">ViewGroup</span>?,savedInstanceState:<span class="type">Bundle</span>?)</span></span>:View?&#123;</span><br><span class="line">        _binding = NewsTitleFragBinding.inflate(inflater,container,<span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">return</span> binding.root</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityCreated</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState)</span><br><span class="line">        isTwoPane = activity?.findViewById&lt;View&gt;(R.id.newsContentLayout)!=<span class="literal">null</span></span><br><span class="line">        binding.newsTitleRecyclerView.layoutManager = LinearLayoutManager(activity)</span><br><span class="line">        <span class="keyword">val</span> adapter = NewsAdapter(getNews())</span><br><span class="line">        binding.newsTitleRecyclerView.adapter = adapter</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRandomLengthString</span><span class="params">(str:<span class="type">String</span>)</span></span>:String&#123;</span><br><span class="line">        <span class="keyword">val</span> n = (<span class="number">1.</span><span class="number">.20</span>).random()</span><br><span class="line">        <span class="keyword">val</span> builder = StringBuilder()</span><br><span class="line">        repeat(n)&#123;builder.append(str)&#125;</span><br><span class="line">        <span class="keyword">return</span> builder.toString()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroyView</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroyView()</span><br><span class="line">        _binding = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">NewsAdapter</span>(<span class="keyword">val</span> newList:List&lt;News&gt;):RecyclerView.Adapter&lt;NewsAdapter.ViewHolder&gt;()&#123;</span><br><span class="line">        <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span>(<span class="keyword">private</span> <span class="keyword">val</span> binding : NewItemBinding):RecyclerView.ViewHolder(binding.root)&#123;</span><br><span class="line">            <span class="function"><span class="keyword">fun</span> <span class="title">bind</span><span class="params">(news:<span class="type">News</span>)</span></span>&#123;</span><br><span class="line">                binding.newsTitle.text = news.title</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHoder</span><span class="params">(parent:<span class="type">ViewGroup</span>,viewType:<span class="type">Int</span>)</span></span>:ViewHoder&#123;</span><br><span class="line">            <span class="keyword">val</span> binding = NewsItemBinding.inflate(LayoutInflater.fromj(parent.context),parent,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> ViewHolder(binding)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBindViewHolder</span><span class="params">(holder:<span class="type">ViewHolder</span>,position:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">            <span class="keyword">val</span> news = newsList[position]</span><br><span class="line">            holder.bind(news)</span><br><span class="line">            holder.itemView.setOnclickListener&#123;</span><br><span class="line">                <span class="keyword">if</span>(isTwoPane)&#123;</span><br><span class="line">                    <span class="keyword">val</span> fragment = (activity <span class="keyword">as</span> MainActivity).newsContentFrag</span><br><span class="line">                    fragment?.refresh(news.title,news.content)</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    NewsContentActivity.actiontStart(holder.itemView.context,news.title,news.content)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemCount</span><span class="params">()</span></span> = newsList.size</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Kotlin课堂：扩展函数和运算符重载"><a href="#Kotlin课堂：扩展函数和运算符重载" class="headerlink" title="Kotlin课堂：扩展函数和运算符重载"></a>Kotlin课堂：扩展函数和运算符重载</h2><h3 id="扩展函数"><a href="#扩展函数" class="headerlink" title="扩展函数"></a>扩展函数</h3><p>首先看一下什么是扩展函数。扩展函数表示即使在不修改某个类的源码的情况下，仍然可以打 开这个类，向该类添加新的函数。</p><p>为了帮助你更好地理解，我们先来思考一个功能。一段字符串中可能包含字母、数字和特殊符 号等字符，现在我们希望统计字符串中字母的数量，你要怎么实现这个功能呢？如果按照一般 的编程思维，可能大多数人会很自然地写出如下函数：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> StringUtil&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">lettersCount</span><span class="params">(str:<span class="type">String</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span>(char <span class="keyword">in</span> str)&#123;</span><br><span class="line">            <span class="keyword">if</span>(char.isLetter())&#123;</span><br><span class="line">                count++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里先定义了一个StringUtil单例类，然后在这个单例类中定义了一个lettersCount()函 数，该函数接收一个字符串参数。在lettersCount()方法中，我们使用for-in循环去遍历 字符串中的每一个字符。如果该字符是一个字母的话，那么就将计数器加1，最终返回计数器的 值。</p><p>现在，当我们需要统计某个字符串中的字母数量时，只需要编写如下代码即可：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> str = <span class="string">&quot;hyq328@@w&quot;</span></span><br><span class="line"><span class="keyword">val</span> count = StringUtil.lettersCount(str)</span><br></pre></td></tr></table></figure><p>这种写法绝对可以正常工作，并且这也是Java编程中最标准的实现思维。但是有了扩展函数之 后就不一样了，我们可以使用一种更加面向对象的思维来实现这个功能，比如说将 lettersCount()函数添加到String类当中</p><p>下面我们先来学习一下定义扩展函数的语法结构，其实非常简单，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> ClassName.<span class="title">methodName</span><span class="params">(param1: <span class="type">Int</span>,param2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于我们希望向String类中添加一个扩展函数，因此需要先创建一个String.kt文件。文件名虽 然并没有固定的要求，但是我建议向哪个类中添加扩展函数，就定义一个同名的Kotlin文件，这 样便于你以后查找。当然，扩展函数也是可以定义在任何一个现有类当中的，并不一定非要创 建新文件。不过通常来说，最好将它定义成顶层方法，这样可以让扩展函数拥有全局的访问 域。</p><p>现在在String.kt文件中编写如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> String.<span class="title">letterCount</span><span class="params">()</span></span>:<span class="built_in">Int</span>&#125;&#123;</span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(char <span class="keyword">in</span> <span class="keyword">this</span>)&#123;</span><br><span class="line">        ifj(char.isLetter())&#123;</span><br><span class="line">            count++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里的代码变化，现在我们将lettersCount()方法定义成了String类的扩展函数，那 么函数中就自动拥有了String实例的上下文。因此lettersCount()函数就不再需要接收一 个字符串参数了，而是直接遍历this即可，因为现在this就代表着字符串本身。</p><p>定义好了扩展函数之后，统计某个字符串中的字母数量只需要这样写即可：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> count = <span class="string">&quot;hys13r9jf@@&quot;</span>.letterCount()</span><br></pre></td></tr></table></figure><p>是不是很神奇？看上去就好像是String类中自带了lettersCount()方法一样。</p><h3 id="有趣的运算符重载"><a href="#有趣的运算符重载" class="headerlink" title="有趣的运算符重载"></a>有趣的运算符重载</h3><p> 运算符重载使用的是operator关键字，只要在指定函数的前面加上operator关键字，就可以 实现运算符重载的功能了。但问题在于这个指定函数是什么？这是运算符重载里面比较复杂的 一个问题，因为不同的运算符对应的重载函数也是不同的。比如说加号运算符对应的是plus() 函数，减号运算符对应的是minus()函数。</p><p>我们这里还是以加号运算符为例，如果想要实现让两个对象相加的功能，那么它的语法结构如 下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Obj</span> &#123; </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">plus</span><span class="params">(obj: <span class="type">Obj</span>)</span></span>: Obj &#123; </span><br><span class="line"> <span class="comment">// 处理相加的逻辑 </span></span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述语法结构中，关键字operator和函数名plus都是固定不变的，而接收的参数和函数返 回值可以根据你的逻辑自行设定。那么上述代码就表示一个Obj对象可以与另一个Obj对象相 加，最终返回一个新的Obj对象。对应的调用方式如下：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> obj1 = Obj() </span><br><span class="line"><span class="keyword">val</span> obj2 = Obj() </span><br><span class="line"><span class="keyword">val</span> obj3 = obj1 + obj2</span><br></pre></td></tr></table></figure><p>这种obj1 + obj2的语法看上去好像很神奇，但其实这就是Kotlin给我们提供的一种语法糖， 它会在编译的时候被转换成obj1.plus(obj2)的调用方式。</p><p>了解了运算符重载的基本语法之后，下面我们开始实现一个更加有意义功能：让两个Money对 象相加</p><p>首先定义Money类的结构，这里我准备让Money的主构造函数接收一个value参数，用于表示 钱的金额。创建Money.kt文件，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Money</span>(<span class="keyword">val</span> value: <span class="built_in">Int</span>)</span><br></pre></td></tr></table></figure><p>定义好了Money类的结构，接下来我们就使用运算符重载来实现让两个Money对象相加的功 能：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Money</span>(<span class="keyword">val</span> value: <span class="built_in">Int</span>) &#123; </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">plus</span><span class="params">(money: <span class="type">Money</span>)</span></span>: Money &#123; </span><br><span class="line"> <span class="keyword">val</span> sum = value + money.value </span><br><span class="line"> <span class="keyword">return</span> Money(sum) </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里使用了operator关键字来修饰plus()函数，这是必不可少的。在plus()函 数中，我们将当前Money对象的value和参数传入的Money对象的value相加，然后将得到的 和传给一个新的Money对象并将该对象返回。这样两个Money对象就可以相加了，就是这么简 单。</p><p>现在我们可以使用如下代码来对刚刚编写的功能进行测试：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> money1 = Money(<span class="number">5</span>) </span><br><span class="line"><span class="keyword">val</span> money2 = Money(<span class="number">10</span>) </span><br><span class="line"><span class="keyword">val</span> money3 = money1 + money2 </span><br><span class="line">println(money3.value)</span><br></pre></td></tr></table></figure><p>但是，Money对象只允许和另一个Money对象相加，有没有觉得这样不够方便呢？或许你会觉 得，如果Money对象能够直接和数字相加的话，就更好了。这个功能当然也是可以实现的，因 为Kotlin允许我们对同一个运算符进行多重重载，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Money</span>(<span class="keyword">val</span> value: <span class="built_in">Int</span>) &#123; </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">plus</span><span class="params">(money: <span class="type">Money</span>)</span></span>: Money &#123; </span><br><span class="line"> <span class="keyword">val</span> sum = value + money.value </span><br><span class="line"> <span class="keyword">return</span> Money(sum) </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">plus</span><span class="params">(newValue: <span class="type">Int</span>)</span></span>: Money &#123; </span><br><span class="line"> <span class="keyword">val</span> sum = value + newValue </span><br><span class="line"> <span class="keyword">return</span> Money(sum) </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这里我们又重载了一个plus()函数，不过这次接收的参数是一个整型数字，其他代码基本是一 样的。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> money1 = Money(<span class="number">5</span>) </span><br><span class="line"><span class="keyword">val</span> money2 = Money(<span class="number">10</span>) </span><br><span class="line"><span class="keyword">val</span> money3 = money1 + money2 </span><br><span class="line"><span class="keyword">val</span> money4 = money3 + <span class="number">20</span> </span><br><span class="line">println(money4.value)</span><br></pre></td></tr></table></figure><p>这里让money3对象再加上20的金额，最终打印的结果就变成了35</p><p>语法糖表达式和实际调用函数对照表</p><p><img src="/../image/kotlin.png"></p><p>回想一下，在第4章和本章中，我们都使用了一个随机生成字符串长度的函数，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getRandomLengthStirng</span><span class="params">(str:<span class="type">String</span>)</span></span>:String&#123;</span><br><span class="line">    <span class="keyword">val</span> n = (<span class="number">1.</span><span class="number">.20</span>).random()</span><br><span class="line">    <span class="keyword">val</span> builder = StringBuilder()</span><br><span class="line">    repeat(n)&#123;</span><br><span class="line">        builder.append(str)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> builder.toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实，这个函数的核心思想就是将传入的字符串重复n次，如果我们能够使用str * n这种写法 来表示让str字符串重复n次，这种语法体验是不是非常棒呢？而在Kotlin中这是可以实现的。</p><p>先来讲一下思路吧。要让一个字符串可以乘以一个数字，那么肯定要在String类中重载乘号运 算符才行，但是String类是系统提供的类，我们无法修改这个类的代码。这个时候就可以借助 扩展函数功能向String类中添加新函数了。</p><p>既然是向String类中添加扩展函数，那么我们还是打开刚才创建的String.kt文件，然后加入如 下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> String.<span class="title">times</span><span class="params">(n:<span class="type">Int</span>)</span></span>:String&#123;</span><br><span class="line">    <span class="keyword">val</span> builder = StringBuilder()</span><br><span class="line">    repear(n)&#123;</span><br><span class="line">        builder.append(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    retturn builder.toString()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码应该不难理解，这里只讲几个关键的点。首先，operator关键字肯定是必不可少的； 然后既然是要重载乘号运算符，参考表5.2可知，函数名必须是times；最后，由于是定义扩展 函数，因此还要在方向名前面加上String.的语法结构。其他就没什么需要解释的了。在 times()函数中，我们借助StringBuilder和repeat函数将字符串重复n次，最终将结果返 回。</p><p>现在，字符串就拥有了和一个数字相乘的能力，比如执行如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> str = <span class="string">&quot;abc&quot;</span> * <span class="number">3</span> </span><br><span class="line">println(str)</span><br></pre></td></tr></table></figure><p>另外，必须说明的是，其实Kotlin的String类中已经提供了一个用于将字符串重复n遍的 repeat()函数，因此times()函数还可以进一步精简成如下形式：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> String.<span class="title">times</span><span class="params">(n: <span class="type">Int</span>)</span></span> = repeat(n) </span><br></pre></td></tr></table></figure><p>掌握了上述功能之后，现在我们就可以在getRandomLengthString()函数中使用这种魔术一 般的写法了，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getRandomLengthString</span><span class="params">(str: <span class="type">String</span>)</span></span> = str * (<span class="number">1.</span><span class="number">.20</span>).random()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>UI开发的点点滴滴</title>
      <link href="/2024/12/08/UI%E5%BC%80%E5%8F%91%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
      <url>/2024/12/08/UI%E5%BC%80%E5%8F%91%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="UI开发"><a href="#UI开发" class="headerlink" title="UI开发"></a>UI开发</h1><h2 id="常用控件的使用方法"><a href="#常用控件的使用方法" class="headerlink" title="常用控件的使用方法"></a>常用控件的使用方法</h2><h3 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h3><p>下面我们就来看一看TextView的更多用法，将activity_main.xml的代码改成如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is TextView&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>Android中所有的控件都具有这两个属 性，可选值有3种：match_parent、wrap_content和固定值。固 定值表示表示给控件指定一个固定的尺寸，单位一般用dp，这是一种屏幕密度无关的尺寸单 位，可以保证在不同分辨率的手机上显示效果尽可能地一致，如50 dp就是一个有效的固定值。</p><p>修改TextView的文字对 齐方式，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is TextView&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>可选值有top、bottom、start、 end、center</p><p>另外，我们还可以对TextView中文字的颜色和大小进行修改，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#00ff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;24sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is TextView&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><p>它可配置的属性和TextView是差不多的，我们可以在 activity_main.xml中这样加入Button</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    ... </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你很细心的话，可能会发现我们在XML中指定按钮上的文字明明是Button，可是为什么界 面上显示的却是BUTTON呢？这是因为Android系统默认会将按钮上的英文字母全部转换成大 写，可能是认为按钮上的内容都比较重要吧。如果这不是你想要的效果，可以在XML中添加 android:textAllCaps&#x3D;”false”这个属性</p><p>接下来我们可以在MainActivity中为Button的点击事件注册一个监听器，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentVeiw(R.layout.activity_main)</span><br><span class="line">        button.setOnClickListener&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了使用函数式API的方式来注册监听器，也可以使用实现接口的方式来进行注册，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>(),View.OnClckListener&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentVew(R.layout.activity_main)</span><br><span class="line">        button.setOnClickListener(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v:<span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        whne(v?.id)&#123;</span><br><span class="line">            R.id.button-&gt;&#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们让MainActivity实现了View.OnClickListener接口，并重写了onClick()方法， 然后在调用button的setOnClickListener()方法时将MainActivity的实例传了进去。这样 每当点击按钮时，就会执行onClick()方法中的代码了</p><h3 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h3><p>EditText是程序用于和用户进行交互的另一个重要控件，它允许用户在控件里输入和编辑内 容，并可以在程序中对这些内容进行处理。那我们来看一看如何 在界面上加入EditText吧，修改activity_main.xml中的代码，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editText&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br></pre></td></tr></table></figure><p>你可能平时会留意到，一些做得比较人性化的软件会在输入框里显示一些提示性的文字，一旦 用户输入了任何内容，这些提示性的文字就会消失。这种提示功能在Android里是非常容易实现 的，我们甚至不需要做任何逻辑控制，因为系统已经帮我们都处理好了。修改 activity_main.xml，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editText&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;Type something here&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>不过，随着输入的内容不断增多，EditText会被不断地拉长。这是由于EditText的高度指定的是 wrap_content，因此它总能包含住里面的内容，但是当输入的内容过多时，界面就会变得非 常难看。我们可以使用android:maxLines属性来解决这个问题，修改activity_main.xml， 如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editText&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;Type something here&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxLines</span>=<span class="string">&quot;2&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>点击按钮以弹出EditText中的消息</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>(),View.OnclickListener&#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> editText:EditText</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> button:Button=findViewById(R.id.button)</span><br><span class="line">        editText=findViewById(R.id.editText)</span><br><span class="line">        button.setOnClickListener(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v:<span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">when</span>(v?.id)&#123;</span><br><span class="line">            R.id.button-&gt;&#123;</span><br><span class="line">                <span class="keyword">var</span> inputText = editText.text.toString()</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>,inputText,Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h3><p>ImageView是用于在界面上展示图片的一个控件，它可以让我们的程序界面变得更加丰富多彩。图片通常是放在以drawable开头的目录下的，并 且要带上具体的分辨率。现在最主流的手机屏幕分辨率大多是xxhdpi的，所以我们在res目录下 再新建一个drawable-xxhdpi目录，然后将事先准备好的两张图片img_1.png和img_2.png复 制到该目录当中</p><p>接下来修改activity_main.xml，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is TextView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#00ff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;24sp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAllCaps</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editText&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;Type something here&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxLines</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drwaable/img_1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用android:src属性给ImageView指定了一张图片。由于图片的宽和高都 是未知的，所以将ImageView的宽和高都设定为wrap_content，这样就保证了不管图片的尺 寸是多少，都可以完整地展示出来</p><p>我们还可以在程序中通过代码动态地更改ImageView中的图片，修改MainActivity的代码，如 下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>(),View.OnClickListener&#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v:<span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">when</span>(v?.id)&#123;</span><br><span class="line">            R.id.button-&gt;&#123;</span><br><span class="line">                imageViw.setImageResource(R.drwaable.img_2)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h3><p>ProgressBar用于在界面上显示一个进度条，表示我们的程序正在加载一些数据。它的用法也 非常简单，修改activity_main.xml中的代码，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinerLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:orientatio</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgerssBar</span> <span class="attr">android:id</span>=<span class="string">&quot;@id/progressBar&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>android:visibility进行指定，可选值有3种：visible、invisible和gone。visible 表示控件是可见的，这个值是默认值，不指定android:visibility时，控件都是可见的。 invisible表示控件不可见，但是它仍然占据着原来的位置和大小，可以理解成控件变成透明 状态了。gone则表示控件不仅不可见，而且不再占用任何屏幕空间。我们可以通过代码来设置 控件的可见性，使用的是setVisibility()方法，允许传入View.VISIBLE、 View.INVISIBLE和View.GONE这3种值</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>(),View.OnClickListener&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v:<span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">when</span>(v?.id)&#123;</span><br><span class="line">            R.id.button-&gt;&#123;</span><br><span class="line">                <span class="keyword">if</span>(progressBar.visibility == View.VISIBLE)&#123;</span><br><span class="line">                    progerssBar.visibility = View.GONE</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    progressBar.visibility = View.VISIBLE</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，我们还可以给ProgressBar指定不同的样式，刚刚是圆形进度条，通过style属性可以将 它指定成水平进度条，修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    ... </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/progressBar&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>指定成水平进度条后，我们还可以通过android:max属性给进度条设置一个最大值，然后在代 码中动态地更改进度条的进度。修改MainActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>(), View.OnClickListener &#123; </span><br><span class="line"> </span><br><span class="line">    ... </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v: <span class="type">View</span>?)</span></span> &#123; </span><br><span class="line">        <span class="keyword">when</span> (v?.id) &#123; </span><br><span class="line">            R.id.button -&gt; &#123; </span><br><span class="line">                progressBar.progress = progressBar.progress + <span class="number">10</span> </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="AlertDialog"><a href="#AlertDialog" class="headerlink" title="AlertDialog"></a>AlertDialog</h3><p>AlertDialog可以在当前界面弹出一个对话框，这个对话框是置顶于所有界面元素之上的，能够 屏蔽其他控件的交互能力，因此AlertDialog一般用于提示一些非常重要的内容或者警告信息</p><p>比如为了防止用户误删重要内容，在删除前弹出一个确认对话框。下面我们来学习一下它的用 法，修改MainActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCOmpatActivity</span>(),View.onClickListener&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v:<span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">when</span>(v?.id)&#123;</span><br><span class="line">            R.id.button-&gt;&#123;</span><br><span class="line">                AlertDialog.Builder(<span class="keyword">this</span>).apply&#123;</span><br><span class="line">                    setTitle(<span class="string">&quot;This is Dialog&quot;</span>)</span><br><span class="line">                    setMessage(<span class="string">&quot;Something important.&quot;</span>)</span><br><span class="line">                    setCancelable(<span class="literal">false</span>)</span><br><span class="line">                    setPostiviButton(<span class="string">&quot;OK&quot;</span>)&#123;dialog,which-&gt;&#125;</span><br><span class="line">                    setNegativeButton(<span class="string">&quot;Cancel&quot;</span>)&#123;dialog,which-&gt;&#125;</span><br><span class="line">                    show()                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="详解3种基本布局"><a href="#详解3种基本布局" class="headerlink" title="详解3种基本布局"></a>详解3种基本布局</h2><h3 id="LinearLayot"><a href="#LinearLayot" class="headerlink" title="LinearLayot"></a>LinearLayot</h3><p>下面来看android:layout_gravity属性，它和我们上一节中学到的android:gravity属 性看起来有些相似，这两个属性有什么区别呢？其实从名字就可以看出，android:gravity 用于指定文字在控件中的对齐方式，而android:layout_gravity用于指定控件在布局中的 对齐方式。android:layout_gravity的可选值和android:gravity差不多，但是需要注 意，当LinearLayout的排列方向是horizontal时，只有垂直方向上的对齐方式才会生效。因 为此时水平方向上的长度是不固定的，每添加一个控件，水平方向上的长度都会改变，因而无 法指定该方向上的对齐方式。同样的道理，当LinearLayout的排列方向是vertical时，只有 水平方向上的对齐方式才会生效。修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;top&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 1&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button2&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 2&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;bottom&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 3&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>接下来我们学习LinearLayout中的另一个重要属性——android:layout_weight。这个属 性允许我们使用比例的方式来指定控件的大小，它在手机屏幕的适配性方面可以起到非常重要 的作用。比如，我们正在编写一个消息发送界面，需要一个文本编辑框和一个发送按钮，修改 activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/input_message&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;Type something&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/send&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Send&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你会发现，这里竟然将EditText和Button的宽度都指定成了0 dp，这样文本编辑框和按钮还能 显示出来吗？不用担心，由于我们使用了android:layout_weight属性，此时控件的宽度就 不应该再由android:layout_width来决定了，这里指定成0 dp是一种比较规范的写法。</p><p>然后在EditText和Button里将android:layout_weight属性的值指定为1，这表示EditText 和Button将在水平方向平分宽度</p><p>为什么将android:layout_weight属性的值同时指定为1就会平分屏幕宽度呢？其实原理很 简单，系统会先把LinearLayout下所有控件指定的layout_weight值相加，得到一个总值， 然后每个控件所占大小的比例就是用该控件的layout_weight值除以刚才算出的总值。因此如 果想让EditText占据屏幕宽度的3&#x2F;5，Button占据屏幕宽度的2&#x2F;5，只需要将EditText的 layout_ weight改成3，Button的layout_weight改成2就可以了</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/input_message&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;Type something&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/send&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Send&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们仅指定了EditText的android:layout_weight属性，并将Button的宽度改回了 wrap_content。这表示Button的宽度仍然按照wrap_content来计算，而EditText则会占满 屏幕所有的剩余空间。使用这种方式编写的界面，不仅可以适配各种屏幕，而且看起来也更加 舒服。</p><h3 id="RelativeLayout"><a href="#RelativeLayout" class="headerlink" title="RelativeLayout"></a>RelativeLayout</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentLeft</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 1&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button2&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 2&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 3&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button4&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentLeft</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 4&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button5&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 5&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上代码不需要做过多解释，因为实在是太好理解了。我们让Button 1和父布局的左上角对 齐，Button 2和父布局的右上角对齐，Button 3居中显示，Button 4和父布局的左下角对齐， Button 5和父布局的右下角对齐。虽然android:layout_alignParentLeft、 android:layout_alignParentTop、android:layout_alignParentRight、 android:layout_alignParentBottom、android:layout_centerInParent这几个属 性我们之前都没接触过，可是它们的名字已经完全说明了它们的作用。</p><p>上面例子中的每个控件都是相对于父布局进行定位的，那控件可不可以相对于控件进行定位 呢？当然是可以的，修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 3&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_above</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_toLeftOf</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 1&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button2&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_above</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_toRightOf</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 2&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button4&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_toLeftOf</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 4&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button5&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_toRightOf</span>=<span class="string">&quot;@id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 5&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>RelativeLayout中还有另外一组相对于控件进行定位的属性，android:layout_alignLeft 表示让一个控件的左边缘和另一个控件的左边缘对齐，android:layout_alignRight表示 让一个控件的右边缘和另一个控件的右边缘对齐。此外，还有android:layout_alignTop和 android:layout_alignBottom，道理都是一样的</p><h3 id="FrameLayout"><a href="#FrameLayout" class="headerlink" title="FrameLayout"></a>FrameLayout</h3><p>FrameLayout又称作帧布局，它相比于前面两种布局就简单太多了，因此它的应用场景少了很 多。这种布局没有丰富的定位方式，所有的控件都会默认摆放在布局的左上角。让我们通过例子来看一看吧，修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is TextView&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>可以看到，文字和按钮都位于布局的左上角。由于Button是在TextView之后添加的，因此按钮 压在了文字的上面</p><p>当然，除了这种默认效果之外，我们还可以使用layout_gravity属性来指定控件在布局中的 对齐方式，这和LinearLayout中的用法是相似的。修改activity_main.xml中的代码，如下所 示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;left&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is TextView&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;right&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="系统控件不够用？创建自定义控件"><a href="#系统控件不够用？创建自定义控件" class="headerlink" title="系统控件不够用？创建自定义控件"></a>系统控件不够用？创建自定义控件</h2><p>我们所用的所有控件都是直接或间接继承自View的，所用的所有布局都是直接或间 接继承自ViewGroup的。View是Android中最基本的一种UI组件，它可以在屏幕上绘制一块矩 形区域，并能响应这块区域的各种事件，因此，我们使用的各种控件其实就是在View的基础上 又添加了各自特有的功能。而ViewGroup则是一种特殊的View，它可以包含很多子View和子 ViewGroup，是一个用于放置控件和布局的容器。</p><h3 id="引入布局"><a href="#引入布局" class="headerlink" title="引入布局"></a>引入布局</h3><p>如果在每个Activity的布局中都编 写一遍同样的标题栏代码，明显就会导致代码的大量重复。这时我们就可以使用引入布局的方 式来解决这个问题，在layout目录下新建一个title.xml布局，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/title_bg&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/titleBack&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;5dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/back_bg&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Back&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#fff&quot;</span>/&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/titleText&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Title Text&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#fff&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;24sp&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/titleEdit&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;5dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/edit_bg&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Edit&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#fff&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在标题栏布局已经编写完成了，剩下的就是如何在程序中使用这个标题栏了，修改 activity_main.xml中的代码，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/title&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>最后别忘了在MainActivity中将系统自带的标题栏隐藏掉，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() &#123; </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123; </span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState) </span><br><span class="line">        setContentView(R.layout.activity_main) </span><br><span class="line">        supportActionBar?.hide() </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="创建自定义控件"><a href="#创建自定义控件" class="headerlink" title="创建自定义控件"></a>创建自定义控件</h3><p>引入布局的技巧确实解决了重复编写布局代码的问题，但是如果布局中有一些控件要求能够响 应事件，我们还是需要在每个Activity中为这些控件单独编写一次事件注册的代码。比如标题栏 中的返回按钮，其实不管是在哪一个Activity中，这个按钮的功能都是相同的，即销毁当前 Activity。而如果在每一个Activity中都需要重新注册一遍返回按钮的点击事件，无疑会增加很 多重复代码，这种情况最好是使用自定义控件的方式来解决</p><p>新建TitleLayout继承自LinearLayout，让它成为我们自定义的标题栏控件，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TitleLayout</span>(context:Context,attrs:AttributeSet):LinerLayout(context,attrs)&#123;</span><br><span class="line">    <span class="keyword">init</span>&#123;</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title,<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们在TitleLayout的主构造函数中声明了Context和AttributeSet这两个参数，在布局中 引入TitleLayout控件时就会调用这个构造函数。然后在init结构体中需要对标题栏布局进行动 态加载，这就要借助LayoutInflater来实现了。通过LayoutInflater的from()方法可以构建出 一个LayoutInflater对象，然后调用inflate()方法就可以动态加载一个布局文件。 inflate()方法接收两个参数：第一个参数是要加载的布局文件的id，这里我们传入 R.layout.title；第二个参数是给加载好的布局再添加一个父布局，这里我们想要指定为 TitleLayout，于是直接传入this。</p><p>现在自定义控件已经创建好了，接下来我们需要在布局文件中添加这个自定义控件，修改 activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">com.example.uicustomviews.TitleLayout</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>添加自定义控件和添加普通控件的方式基本是一样的，只不过在添加自定义控件的时候，我们 需要指明控件的完整类名，包名在这里是不可以省略的。</p><p>下面我们尝试为标题栏中的按钮注册点击事件，修改TitleLayout中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TitleLayout</span>(context: Context, attrs: AttributeSet) : LinearLayout(context, attrs) &#123;  </span><br><span class="line">    <span class="keyword">init</span> &#123; </span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title, <span class="keyword">this</span>) </span><br><span class="line">        titleBack.setOnClickListener &#123; </span><br><span class="line">            <span class="keyword">val</span> activity = context <span class="keyword">as</span> Activity </span><br><span class="line">            activity.finish() </span><br><span class="line">        &#125; </span><br><span class="line">        titleEdit.setOnClickListener &#123; </span><br><span class="line">            Toast.makeText(context, <span class="string">&quot;You clicked Edit button&quot;</span>, Toast.LENGTH_SHORT).show() </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>注意，TitleLayout中接收的context参数实际上是一个Activity的实例，在返回按钮的点击事 件里，我们要先将它转换成Activity类型，然后再调用finish()方法销毁当前的Activity。 Kotlin中的类型强制转换使用的关键字是as，由于是第一次用到，所以这里单独讲解一下</p><h3 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h3><h3 id="ListView的简单使用方法"><a href="#ListView的简单使用方法" class="headerlink" title="ListView的简单使用方法"></a>ListView的简单使用方法</h3><p>首先新建一个ListViewTest项目，并让Android Studio自动帮我们创建好Activity。然后修改 activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/listView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来修改MainActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> <span class="keyword">data</span> = listOf(<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Watermelon&quot;</span>, </span><br><span class="line">        <span class="string">&quot;Pear&quot;</span>, <span class="string">&quot;Grape&quot;</span>, <span class="string">&quot;Pineapple&quot;</span>, <span class="string">&quot;Strawberry&quot;</span>, <span class="string">&quot;Cherry&quot;</span>, <span class="string">&quot;Mango&quot;</span>, </span><br><span class="line">        <span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Watermelon&quot;</span>, <span class="string">&quot;Pear&quot;</span>, <span class="string">&quot;Grape&quot;</span>, </span><br><span class="line">        <span class="string">&quot;Pineapple&quot;</span>, <span class="string">&quot;Strawberry&quot;</span>, <span class="string">&quot;Cherry&quot;</span>, <span class="string">&quot;Mango&quot;</span>) </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123; </span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState) </span><br><span class="line">        setContentView(R.layout.activity_main) </span><br><span class="line">        <span class="keyword">val</span> adapter = ArrayAdapter&lt;String&gt;(<span class="keyword">this</span>,android.R.layout.simple_list_item_1,<span class="keyword">data</span>) </span><br><span class="line">        listView.adapter = adapter </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>集合中的数据是无法直接传递给ListView的，我们还需要借助适配器来完成。Android 中提供了很多适配器的实现类，其中我认为最好用的就是ArrayAdapter。它可以通过泛型来指 定要适配的数据类型，然后在构造函数中把要适配的数据传入。ArrayAdapter有多个构造函数 的重载，你应该根据实际情况选择最合适的一种。由于我们这里提供的数据都是字符串，因此 将ArrayAdapter的泛型指定为String，然后在ArrayAdapter的构造函数中依次传入Activity 的实例、ListView子项布局的id，以及数据源。注意，我们使用了 android.R.layout.simple_list_item_1作为ListView子项布局的id，这是一个 Android内置的布局文件，里面只有一个TextView，可用于简单地显示一段文本。这样适配器 对象就构建好了</p><p>最后，还需要调用ListView的setAdapter()方法，将构建好的适配器对象传递进去，这样 ListView和数据之间的关联就建立完成了。</p><h3 id="定制ListView-的界面"><a href="#定制ListView-的界面" class="headerlink" title="定制ListView 的界面"></a>定制ListView 的界面</h3><p>接着定义一个实体类，作为ListView适配器的适配类型。新建Fruit类，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Fruit</span>(<span class="keyword">val</span> name:String,<span class="keyword">val</span> imageId:<span class="built_in">Int</span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Fruit类中只有两个字段：name表示水果的名字，imageId表示水果对应图片的资源id。</p><p>然后需要为ListView的子项指定一个我们自定义的布局，在layout目录下新建 fruit_item.xml，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruitImage&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;40dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruitName&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>在这个布局中，我们定义了一个ImageView用于显示水果的图片，又定义了一个TextView用于 显示水果的名称，并让ImageView和TextView都在垂直方向上居中显示。</p><p>接下来需要创建一个自定义的适配器，这个适配器继承自ArrayAdapter，并将泛型指定为 Fruit类。新建类FruitAdapter，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FruitAdapter</span>(activity:Activity:,<span class="keyword">val</span> resourceId:int,<span class="keyword">data</span>:List&lt;Fruit&gt;):</span><br><span class="line">ArrayAdapter&lt;Fruint&gt;(activity,resuorceId,<span class="keyword">data</span>)&#123;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getView</span><span class="params">(position:<span class="type">Int</span>,convertView:<span class="type">View</span>?,parent:<span class="type">ViewGroup</span>)</span></span>:View&#123;</span><br><span class="line">                <span class="keyword">val</span> view = LayoutInflater.from(context).inflate(resourceId,parent,<span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">val</span> fruitImage:ImageView = view.findViewById(R.id.fruitImage)</span><br><span class="line">                <span class="keyword">val</span> fruitName:TextView=view.findViewById(R.id.fruitName)</span><br><span class="line">                <span class="keyword">var</span> fruit = getItem(position)</span><br><span class="line">                <span class="keyword">if</span>(fruit!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    fruitImage.setImageResource(fruit.imageId);</span><br><span class="line">                    fruitName.text=fruit.name</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> view</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>FruitAdapter定义了一个主构造函数，用于将Activity的实例、ListView子项布局的id和数 据源传递进来。另外又重写了getView()方法，这个方法在每个子项被滚动到屏幕内的时候会 被调用。</p><p>在getView()方法中，首先使用LayoutInflater来为这个子项加载我们传入的布局。 LayoutInflater的inflate()方法接收3个参数，前两个参数我们已经知道是什么意思了， 第三个参数指定成false，表示只让我们在父布局中声明的layout属性生效，但不会为这个 View添加父布局。因为一旦View有了父布局之后，它就不能再添加到ListView中了。如果你现 在还不能理解这段话的含义，也没关系，只需要知道这是ListView中的标准写法就可以了，当 你以后对View理解得更加深刻的时候，再来读这段话就没有问题了</p><p>我们继续往下看，接下来调用View的findViewById()方法分别获取到ImageView和 TextView的实例，然后通过getItem()方法得到当前项的Fruit实例，并分别调用它们的 setImageResource()和setText()方法设置显示的图片和文字，最后将布局返回，这样我 们自定义的适配器就完成了。</p><p>最后修改MainActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fruitLsit = ArrayList&lt;Fruit&gt;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">BUndle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        initFruits()</span><br><span class="line">        <span class="keyword">val</span> adapter = FruitAdaper(<span class="keyword">this</span>,R.layout.fruit_item,fruitList)</span><br><span class="line">        listView.adapter = adapter     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initFruits</span><span class="params">()</span></span> &#123; </span><br><span class="line">        repeat(<span class="number">2</span>) &#123; </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Apple&quot;</span>, R.drawable.apple_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Banana&quot;</span>, R.drawable.banana_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Orange&quot;</span>, R.drawable.orange_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Watermelon&quot;</span>, R.drawable.watermelon_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Pear&quot;</span>, R.drawable.pear_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Grape&quot;</span>, R.drawable.grape_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Pineapple&quot;</span>, R.drawable.pineapple_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Strawberry&quot;</span>, R.drawable.strawberry_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Cherry&quot;</span>, R.drawable.cherry_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Mango&quot;</span>, R.drawable.mango_pic)) </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里添加了一个initFruits()方法，用于初始化所有的水果数据。在Fruit类的 构造函数中将水果的名字和对应的图片id传入，然后把创建好的对象添加到水果列表中。另外， 我们使用了一个repeat函数将所有的水果数据添加了两遍，这是因为如果只添加一遍的话，数 据量还不足以充满整个屏幕。repeat函数是Kotlin中另外一个非常常用的标准函数，它允许你 传入一个数值n，然后会把Lambda表达式中的内容执行n遍。接着在onCreate()方法中创建 了FruitAdapter对象，并将它作为适配器传递给ListView，这样定制ListView界面的任务就 完成了</p><h3 id="提升ListView-的运行效率"><a href="#提升ListView-的运行效率" class="headerlink" title="提升ListView 的运行效率"></a>提升ListView 的运行效率</h3><p>之所以说ListView这个控件很难用，是因为它有很多细节可以优化，其中运行效率就是很重要 的一点。目前我们ListView的运行效率是很低的，因为在FruitAdapter的getView()方法 中，每次都将布局重新加载了一遍，当ListView快速滚动的时候，这就会成为性能的瓶颈。</p><p>仔细观察你会发现，getView()方法中还有一个convertView参数，这个参数用于将之前加 载好的布局进行缓存，以便之后进行重用，我们可以借助这个参数来进行性能优化。修改 FruitAdapter中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FruitAdapter</span>(activity:Activity,<span class="keyword">val</span> resuorceId:<span class="built_in">Int</span>,<span class="keyword">data</span>:List&lt;Fruit&gt;) :</span><br><span class="line">ArrayAdapter&lt;Fruit&gt;(activity,resourceId,<span class="keyword">data</span>)&#123;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getView</span><span class="params">(position: <span class="type">Int</span>,convertView:<span class="type">View</span>?,parent:<span class="type">ViewGroup</span>)</span></span>:View&#123;</span><br><span class="line">                <span class="keyword">val</span> view:View</span><br><span class="line">                <span class="keyword">if</span>(convertView == <span class="literal">null</span>)&#123;</span><br><span class="line">                    view = LayoutInflater.from(context).inflate(resourceId,parent,<span class="literal">false</span>)</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    view = convertView</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> fruitImage:ImageView = view.findViewById(R.id.fruitImage)</span><br><span class="line">                <span class="keyword">var</span> fruitName:TextView = view.findVIew</span><br><span class="line">                fruit = getItem(position)</span><br><span class="line">                <span class="keyword">if</span>(fruit!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    fruitImage.setImageResource(fruit.imageId)</span><br><span class="line">                    fruitName.text = fruit.name</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> view</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>可以看到，现在我们在getView()方法中进行了判断：如果convertView为null，则使用 LayoutInflater去加载布局；如果不为null，则直接对convertView进行重用。这样就大 大提高了ListView的运行效率，在快速滚动的时候可以表现出更好的性能。</p><p>不过，目前我们的这份代码还是可以继续优化的，虽然现在已经不会再重复去加载布局，但是 每次在getView()方法中仍然会调用View的findViewById()方法来获取一次控件的实例。 我们可以借助一个ViewHolder来对这部分性能进行优化，修改FruitAdapter中的代码，如 下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FruitAdapter</span>(activity:Activity,<span class="keyword">val</span> resourceId:<span class="built_in">Int</span>,<span class="keyword">data</span>:List&lt;Fruit&gt;):</span><br><span class="line">ArrayAdapter&lt;Fruit&gt;(activity,resourceId,<span class="keyword">data</span>)&#123;</span><br><span class="line">            <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span>(<span class="keyword">val</span> fruitImage:ImageView,<span class="keyword">val</span> fruitName:TextView)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getView</span><span class="params">(position:<span class="type">Int</span>,convertView:<span class="type">View</span>?,parent:<span class="type">ViewGroup</span>)</span></span>:View&#123;</span><br><span class="line">                <span class="keyword">val</span> view:View</span><br><span class="line">                <span class="keyword">val</span> viewHolder:ViewHolder</span><br><span class="line">                <span class="keyword">if</span>(convertView==<span class="literal">null</span>)&#123;</span><br><span class="line">                    view = LayoutInflater.from(context).inflate(resourceId,parent,<span class="literal">false</span>)</span><br><span class="line">                    <span class="keyword">val</span> fruitImage:ImageView = view.findViewById(R.id.fruitImage)</span><br><span class="line">                    <span class="keyword">val</span> fruitName :TextVIew = view.findViewById(R.id.fruitName)</span><br><span class="line">                    viewHolder = ViewHolder(fruitImage,fruitName)</span><br><span class="line">                    view.tag = viewHolder</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    view = convertView</span><br><span class="line">                    viewHolder = view.tag <span class="keyword">as</span> ViewHolder</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">val</span> fruit = getItem(position)</span><br><span class="line">                <span class="keyword">if</span>(fruit !=<span class="literal">null</span>)&#123;</span><br><span class="line">                    viewHolder.fruitImage.setImageResource(fruit.imageId)</span><br><span class="line">                    viewHolder.fruitName.text = fruit.name</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> view</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>我们新增了一个内部类ViewHolder，用于对ImageView和TextView的控件实例进行缓存， Kotlin中使用inner class关键字来定义内部类。当convertView为null的时候，创建一个 ViewHolder对象，并将控件的实例存放在ViewHolder里，然后调用View的setTag()方 法，将ViewHolder对象存储在View中。当convertView不为null的时候，则调用View的 getTag()方法，把ViewHolder重新取出。这样所有控件的实例都缓存在了ViewHolder里， 就没有必要每次都通过findViewById()方法来获取控件实例了。</p><h3 id="ListView的点击事件"><a href="#ListView的点击事件" class="headerlink" title="ListView的点击事件"></a>ListView的点击事件</h3><p>话说回来，ListView的滚动毕竟只是满足了我们视觉上的效果，可是如果ListView中的子项不 能点击的话，这个控件就没有什么实际的用途了。因此，本小节我们就来学习一下ListView如 何才能响应用户的点击事件</p><p>修改MainActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppComPatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fruitList = ArrayList&lt;Fruit&gt;()</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(savedInstanceState)</span><br><span class="line">        initFruits()</span><br><span class="line">        <span class="keyword">val</span> adapter = FruitAdappter(<span class="keyword">this</span>,R.layout.fruit_item,fruitLis)</span><br><span class="line">        listView.adapter = adapter</span><br><span class="line">        listView.setOnItemClickListener&#123;parent,view,position,id-&gt;</span><br><span class="line">                                       vla fruit = fruitList[positon]</span><br><span class="line">                                       Toast.maktText(<span class="keyword">this</span>,fruit.name,Toast.LENGTH_SHORT).show()&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们使用setOnItemClickListener()方法为ListView注册了一个监听器，当用 户点击了ListView中的任何一个子项时，就会回调到Lambda表达式中。这里我们可以通过 position参数判断用户点击的是哪一个子项，然后获取到相应的水果，并通过Toast将水果的 名字显示出来</p><p>另外你会发现，虽然这里我们必须在Lambda表达式中声明4个参数，但实际上却只用到了 position这一个参数而已。针对这种情况，Kotlin允许我们将没有用到的参数使用下划线来替 代，因此下面这种写法也是合法且更加推荐的</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">listView.setOnItemClickListener &#123; _, _, position, _ -&gt; </span><br><span class="line">    <span class="keyword">val</span> fruit = fruitList[position] </span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>, fruit.name, Toast.LENGTH_SHORT).show() </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h2><p>Android提供了一个更强大的滚动控件——RecyclerView。它可以说是一个增强版的 ListView，不仅可以轻松实现和ListView同样的效果，还优化了ListView存在的各种不足之 处。</p><h3 id="RecyclerView的基本用法"><a href="#RecyclerView的基本用法" class="headerlink" title="RecyclerView的基本用法"></a>RecyclerView的基本用法</h3><p>打开app&#x2F;build.gradle文件，在dependencies闭包中添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dependencies &#123; </span><br><span class="line">    implementation fileTree(dir: &#x27;libs&#x27;, include: [&#x27;*.jar&#x27;]) </span><br><span class="line">    implementation&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version&quot; </span><br><span class="line">    implementation &#x27;androidx.appcompat:appcompat:1.0.2&#x27; </span><br><span class="line">    implementation &#x27;androidx.core:core-ktx:1.0.2&#x27; </span><br><span class="line">    implementation &#x27;androidx.constraintlayout:constraintlayout:1.1.3&#x27; </span><br><span class="line">    implementation &#x27;androidx.recyclerview:recyclerview:1.0.0&#x27; </span><br><span class="line">    testImplementation &#x27;junit:junit:4.12&#x27; </span><br><span class="line">    androidTestImplementation &#x27;androidx.test:runner:1.1.1&#x27; </span><br><span class="line">    androidTestImplementation &#x27;androidx.test.espresso:espresso-core:3.1.1&#x27; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>接下来修改activity_main.xml中的代码，如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;&gt;</span><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/recyclerView&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来需要为RecyclerView准备一个适配器，新建FruitAdapter类，让这个适配器继承自 RecyclerView.Adapter，并将泛型指定为FruitAdapter.ViewHolder。其中， ViewHolder是我们在FruitAdapter中定义的一个内部类，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FruitAdapter</span>(<span class="keyword">val</span> fruitList:List&lt;Fruit&gt;):</span><br><span class="line">RecyclerView.Adapter&lt;FruitAdapter.ViewHolder&gt;()&#123;</span><br><span class="line">            <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span>(view:View):RecycleView.ViewHolder(view)&#123;</span><br><span class="line">                <span class="keyword">val</span> fruitImage:ImageIvew = view.findViewById(R.id.fruitImage)</span><br><span class="line">                <span class="keyword">val</span> fruitName:TextView = view.findViewById(R.id.fruirName)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent:<span class="type">ViewGroup</span>,viewType:<span class="type">Int</span>)</span></span>:ViewHolder&#123;</span><br><span class="line">                <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.fruit_item,parent,<span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">return</span> ViewHolder(view)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBindViewHolder</span><span class="params">(holder:<span class="type">ViewHolder</span>,position:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">                <span class="keyword">val</span> fruit = fruitList[position]</span><br><span class="line">                holder.fruitImage.setImageResource(fruit.imageId)</span><br><span class="line">                holder.fruitName.text = fruit.name</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemCount</span><span class="params">()</span></span> = fruitList.size</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>这是RecyclerView适配器标准的写法，虽然看上去好像多了好几个方法，但其实它比ListView 的适配器要更容易理解。这里我们首先定义了一个内部类ViewHolder，它要继承自 RecyclerView.ViewHolder。然后ViewHolder的主构造函数中要传入一个View参数，这 个参数通常就是RecyclerView子项的最外层布局，那么我们就可以通过findViewById()方 法来获取布局中ImageView和TextView的实例了。</p><p>FruitAdapter中也有一个主构造函数，它用于把要展示的数据源传进来，我们后续的操作都 将在这个数据源的基础上进行。 继续往下看，由于FruitAdapter是继承自RecyclerView.Adapter的，那么就必须重写 onCreateViewHolder()、onBindViewHolder()和getItemCount()这3个方法。 onCreateViewHolder()方法是用于创建ViewHolder实例的，我们在这个方法中将 fruit_item布局加载进来，然后创建一个ViewHolder实例，并把加载出来的布局传入构造 函数当中，最后将ViewHolder的实例返回。onBindViewHolder()方法用于对 RecyclerView子项的数据进行赋值，会在每个子项被滚动到屏幕内的时候执行，这里我们通过 position参数得到当前项的Fruit实例，然后再将数据设置到ViewHolder的ImageView和 TextView当中即可。getItemCount()方法就非常简单了，它用于告诉RecyclerView一共有 多少子项，直接返回数据源的长度就可以了</p><p>适配器准备好了之后，我们就可以开始使用RecyclerView了，修改MainActivity中的代码，如 下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fruitList = ArrayList&lt;Fruit&gt;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        initFruits()</span><br><span class="line">        <span class="keyword">val</span> layoutManager = LinerLayoutManager(<span class="keyword">this</span>)</span><br><span class="line">        recycylerView.layoutManager = layoutManager</span><br><span class="line">        <span class="keyword">val</span> adapter = FruitAdapter(fruitList)</span><br><span class="line">        recyclerView.adapter = adapter</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initFruits</span><span class="params">()</span></span> &#123; </span><br><span class="line">        repeat(<span class="number">2</span>) &#123; </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Apple&quot;</span>, R.drawable.apple_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Banana&quot;</span>, R.drawable.banana_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Orange&quot;</span>, R.drawable.orange_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Watermelon&quot;</span>, R.drawable.watermelon_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Pear&quot;</span>, R.drawable.pear_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Grape&quot;</span>, R.drawable.grape_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Pineapple&quot;</span>, R.drawable.pineapple_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Strawberry&quot;</span>, R.drawable.strawberry_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Cherry&quot;</span>, R.drawable.cherry_pic)) </span><br><span class="line">            fruitList.add(Fruit(<span class="string">&quot;Mango&quot;</span>, R.drawable.mango_pic)) </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里使用了一个同样的initFruits()方法，用于初始化所有的水果数据。接着在 onCreate()方法中先创建了一个LinearLayoutManager对象，并将它设置到 RecyclerView当中。LayoutManager用于指定RecyclerView的布局方式，这里使用的 LinearLayoutManager是线性布局的意思，可以实现和ListView类似的效果。接下来我们创 建了FruitAdapter的实例，并将水果数据传入FruitAdapter的构造函数中，最后调用 RecyclerView的setAdapter()方法来完成适配器设置，这样RecyclerView和数据之间的关 联就建立完成了。</p><h3 id="实现横向滚动和瀑布流布局"><a href="#实现横向滚动和瀑布流布局" class="headerlink" title="实现横向滚动和瀑布流布局"></a>实现横向滚动和瀑布流布局</h3><p>首先要对fruit_item布局进行修改，因为目前这个布局里面的元素是水平排列的，适用于纵 向滚动的场景，而如果我们要实现横向滚动的话，应该把fruit_item里的元素改成垂直排列 才比较合理。修改fruit_item.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruitImage&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;40dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruitName&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>可以看到，我们将LinearLayout改成垂直方向排列，并把宽度设为80 dp。这里将宽度指定为 固定值是因为每种水果的文字长度不一致，如果用wrap_content的话，RecyclerView的子项 就会有长有短，非常不美观，而如果用match_parent的话，就会导致宽度过长，一个子项占 满整个屏幕</p><p>然后我们将ImageView和TextView都设置成了在布局中水平居中，并且使用 layout_marginTop属性让文字和图片之间保持一定距离</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fruitList = ArrayList&lt;Fruit&gt;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        initFruits()</span><br><span class="line">        <span class="keyword">val</span> layoutManager = LinerLayoutMananger(<span class="keyword">this</span>)</span><br><span class="line">        layoutManager.orientation = LinerLayoutManager.HORIZONTAL</span><br><span class="line">        recyclerView.layoutManager = layoutManager</span><br><span class="line">        <span class="keyword">val</span> adapter = FruitAdapter(fruitList)</span><br><span class="line">        recyclerView.adapter = adapter</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MainActivity中只加入了一行代码，调用LinearLayoutManager的setOrientation()方法 设置布局的排列方向。默认是纵向排列的，我们传入LinearLayoutManager.HORIZONTAL 表示让布局横行排列，这样RecyclerView就可以横向滚动了。</p><p>你可以用手指在水平方向上滑动来查看屏幕外的数据。 为什么ListView很难或者根本无法实现的效果在RecyclerView上这么轻松就实现了呢？这主要 得益于RecyclerView出色的设计。ListView的布局排列是由自身去管理的，而RecyclerView则将这个工作交给了LayoutManager。LayoutManager制定了一套可扩展的布局排列接口， 子类只要按照接口的规范来实现，就能定制出各种不同排列方式的布局了</p><p>除了LinearLayoutManager之外，RecyclerView还给我们提供了GridLayoutManager和 StaggeredGridLayoutManager这两种内置的布局排列方式。GridLayoutManager可以用于 实现网格布局，StaggeredGridLayoutManager可以用于实现瀑布流布局。这里我们来实现 一下效果更加炫酷的瀑布流布局，网格布局就作为课后习题，交给你自己来研究了。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;5dp&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruitImage&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;40dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_horizontal&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruitName&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;left&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>这里做了几处小的调整，首先将LinearLayout的宽度由80 dp改成了match_parent，因为瀑 布流布局的宽度应该是根据布局的列数来自动适配的，而不是一个固定值。其次我们使用了 layout_margin属性来让子项之间互留一点间距，这样就不至于所有子项都紧贴在一些。最后 还将TextView的对齐属性改成了居左对齐，因为待会我们会将文字的长度变长，如果还是居中 显示就会感觉怪怪的。</p><p>接着修改MainActivity中的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fruitList = ArrayList&lt;Fruit&gt;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        initFruits()</span><br><span class="line">        <span class="keyword">val</span> layoutMaanager = StaggeredGridLayoutManager(<span class="number">3</span>,StaggeredGridLayoutManagre.VERTICAL)</span><br><span class="line">        recyclerView.layoutManager = layoutManager</span><br><span class="line">        <span class="keyword">val</span> adapter  FruitAdatpe(fruitList)</span><br><span class="line">        recyclerView.adapter = adapter</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line">                repeat(<span class="number">2</span>) &#123; </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Apple&quot;</span>), </span><br><span class="line">                R.drawable.apple_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Banana&quot;</span>), </span><br><span class="line">                R.drawable.banana_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Orange&quot;</span>), </span><br><span class="line">                R.drawable.orange_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Watermelon&quot;</span>), </span><br><span class="line">                R.drawable.watermelon_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Pear&quot;</span>), </span><br><span class="line">                R.drawable.pear_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Grape&quot;</span>), </span><br><span class="line">                R.drawable.grape_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Pineapple&quot;</span>), </span><br><span class="line">                R.drawable.pineapple_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Strawberry&quot;</span>), </span><br><span class="line">                R.drawable.strawberry_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Cherry&quot;</span>), </span><br><span class="line">                R.drawable.cherry_pic)) </span><br><span class="line">            fruitList.add(Fruit(getRandomLengthString(<span class="string">&quot;Mango&quot;</span>), </span><br><span class="line">                R.drawable.mango_pic)) </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRandomLengthString</span><span class="params">(str:<span class="type">String</span>)</span></span>:String&#123;</span><br><span class="line">        <span class="keyword">val</span> n = (<span class="number">1.</span>.<span class="number">.20</span>).random()</span><br><span class="line">        <span class="keyword">val</span> builder = StringBuilder()</span><br><span class="line">        repeat(n)&#123;</span><br><span class="line">            builder.append(str)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.toString</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先，在onCreate()方法中，我们创建了一个StaggeredGridLayoutManager的实例。 StaggeredGridLayoutManager的构造函数接收两个参数：第一个参数用于指定布局的列 数，传入3表示会把布局分为3列；第二个参数用于指定布局的排列方向，传入 StaggeredGridLayoutManager.VERTICAL表示会让布局纵向排列。最后把创建好的实例 设置到RecyclerView当中就可以了，就是这么简单</p><p>没错，仅仅修改了一行代码，我们就已经成功实现瀑布流布局的效果了。不过由于瀑布流布局 需要各个子项的高度不一致才能看出明显的效果，为此我又使用了一个小技巧。这里我们把眼 光聚焦到getRandomLengthString()这个方法上，这个方法中调用了Range对象的 random()函数来创造一个1到20之间的随机数，然后将参数中传入的字符串随机重复几遍。在 initFruits()方法中，每个水果的名字都改成调用getRandomLengthString()这个方法 来生成，这样就能保证各水果名字的长短差距比较大，子项的高度也就各不相同了。</p><h3 id="RecycleView的点击事件"><a href="#RecycleView的点击事件" class="headerlink" title="RecycleView的点击事件"></a>RecycleView的点击事件</h3><p>和ListView一样，RecyclerView也必须能响应点击事件才可以，不然的话就没什么实际用途 了。不过不同于ListView的是，RecyclerView并没有提供类似于 setOnItemClickListener()这样的注册监听器方法，而是需要我们自己给子项具体的View 去注册点击事件。这相比于ListView来说，实现起来要复杂一些</p><p>那么你可能就有疑问了，为什么RecyclerView在各方面的设计都要优于ListView，偏偏在点击 事件上却没有处理得非常好呢？其实不是这样的，ListView在点击事件上的处理并不人性化， setOnItemClickListener()方法注册的是子项的点击事件，但如果我想点击的是子项里具 体的某一个按钮呢？虽然ListView也能做到，但是实现起来就相对比较麻烦了。为此， RecyclerView干脆直接摒弃了子项点击事件的监听器，让所有的点击事件都由具体的View去 注册，就再没有这个困扰了。</p><p>下面我们来具体学习一下如何在RecyclerView中注册点击事件，修改FruitAdapter中的代 码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FruitAdapter</span>(<span class="keyword">val</span> fruitList:List&lt;Fruit&gt;):</span><br><span class="line">RecyclerView.Adapter&lt;FruitAdapter.ViewHolder&gt;()&#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent:<span class="type">ViewGroup</span>,viewType:<span class="type">Int</span>)</span></span>:ViewHolder&#123;</span><br><span class="line">            <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.fruit_item,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">val</span> viewHolder = ViewHolder(view)</span><br><span class="line">            viewHolder.itemView.setOnClickListener&#123;</span><br><span class="line">                <span class="keyword">val</span> position = viewHolder.adapterPosition</span><br><span class="line">                <span class="keyword">val</span> fruit = fruitList[positon]</span><br><span class="line">                Toast.makeText(parent.context,<span class="string">&quot;you clicked view <span class="subst">$&#123;fruit.name&#125;</span>&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">            viewHolder.fruitImage.setOnClickListener&#123;</span><br><span class="line">                <span class="keyword">val</span> positon = viewHolder.adapterPositon</span><br><span class="line">                <span class="keyword">val</span> fruit = fruitList[position]</span><br><span class="line">                Toast.makeText(parent.context,<span class="string">&quot;you clicked image <span class="subst">$&#123;fruit.name&#125;</span>&quot;</span>),Toast.LENGTH_SHORT).show()</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> viewHolder</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="ViewBinding的使用"><a href="#ViewBinding的使用" class="headerlink" title="ViewBinding的使用"></a>ViewBinding的使用</h2><h3 id="项目集成"><a href="#项目集成" class="headerlink" title="项目集成"></a>项目集成</h3><p>需要使用ViewBinding的功能，需要在对应的module的build.gradle文件中启用ViewBinding支持。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">        ...</span><br><span class="line">        viewBinding &#123;</span><br><span class="line">            enabled = true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果您希望在生成绑定类时忽略某个布局文件，请将<code>tools:viewBindingIgnore=&quot;true&quot;</code>属性添加到相应布局文件的根视图中：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">...</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:viewBindingIgnore</span>=<span class="string">&quot;true&quot;</span> &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在Activity中使用"><a href="#在Activity中使用" class="headerlink" title="在Activity中使用"></a>在Activity中使用</h3><p>如需设置绑定类的实例以供 Activity 使用，请在 Activity 的onCreate()方法中执行以下步骤：</p><ol><li>调用生成的绑定类中包含的静态inflate()方法。此操作会创建该绑定类的实例以供 Activity 使用。</li><li>通过调用 getRoot()方法或使用kotlin语法获取对根视图的引用。</li><li>将根视图传递到setContentView，使其成为屏幕上的活动视图</li></ol><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding .inflate(getLayoutInflater());</span><br><span class="line">        View view = binding.getRoot();</span><br><span class="line">        setContentView(view);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>配置后使用方式如下：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">binding.btnTest.setText(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">binding.button.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">    <span class="comment">// todo</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="在Adapter中使用ViewBinding"><a href="#在Adapter中使用ViewBinding" class="headerlink" title="在Adapter中使用ViewBinding"></a>在Adapter中使用ViewBinding</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainAdapter</span> <span class="title">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="type">MainAdapter.ViewHolder</span>&gt; &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; mList;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> MainAdapter(List&lt;String&gt; list) &#123;</span><br><span class="line">        mList = list;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MainAdapter.ViewHolder onCreateViewHolder(<span class="meta">@NonNull</span> ViewGroup parent, int viewType) &#123;</span><br><span class="line">        <span class="comment">//之前的写法</span></span><br><span class="line">        <span class="comment">//View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_comment, parent, false);</span></span><br><span class="line">        <span class="comment">//ViewHolder holder = new ViewHolder(view);</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//使用ViewBinding的写法</span></span><br><span class="line">        LayoutCommentBinding commentBinding = LayoutCommentBinding.inflate(LayoutInflater.from(parent.getContext()), parent, <span class="literal">false</span>);</span><br><span class="line">        ViewHolder holder = new ViewHolder(commentBinding);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void onBindViewHolder(<span class="meta">@NonNull</span> MainAdapter.ViewHolder holder, int position) &#123;</span><br><span class="line">        holder.mTextView.setText(mList.<span class="keyword">get</span>(position));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> int getItemCount() &#123;</span><br><span class="line">        <span class="keyword">return</span> mList.size();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    static <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="title">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> &#123;</span><br><span class="line"> </span><br><span class="line">        TextView mTextView;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//之前的写法</span></span><br><span class="line">        <span class="comment">//public ViewHolder(@NonNull View itemView) &#123;</span></span><br><span class="line">        <span class="comment">//    super(itemView);</span></span><br><span class="line">        <span class="comment">//    mTextView = itemView.findViewById(R.id.tv_include);</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//使用ViewBinding的写法</span></span><br><span class="line">        ViewHolder(<span class="meta">@NonNull</span> LayoutCommentBinding commentBinding) &#123;</span><br><span class="line">            <span class="keyword">super</span>(commentBinding.getRoot());</span><br><span class="line">            mTextView = commentBinding.tvInclude;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ViewPage2"><a href="#ViewPage2" class="headerlink" title="ViewPage2"></a>ViewPage2</h2><h3 id="MainActivyty-java"><a href="#MainActivyty-java" class="headerlink" title="MainActivyty.java"></a>MainActivyty.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(BUndle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState)</span><br><span class="line">            setContentVeiw(R.layout.activity_main);</span><br><span class="line">        <span class="type">ViewPager2</span> <span class="variable">viewPager</span> <span class="operator">=</span> findViewById(R.id.viewPager);</span><br><span class="line">        <span class="type">viewPagerAdapter</span> <span class="variable">viewPagerAdpater</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewPagerAdapter</span>();</span><br><span class="line">        viewPager.setAdapter(viewPagerAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ViewPagerAdapter-java"><a href="#ViewPagerAdapter-java" class="headerlink" title="ViewPagerAdapter.java"></a>ViewPagerAdapter.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;ViewPagerAdapter.ViewPagerViewHolder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; titles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(); </span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; colors = <span class="keyword">new</span> <span class="title class_">ArrayLIst</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ViewPagerAdapter</span><span class="params">()</span>&#123;</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> RecyclerView.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent,<span class="type">int</span> viewType)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewPagerViewHolder</span>(LayoutInlater.from(parent.getContext()).inflate(R.ayout.item_pager,parent,<span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewPagerViewHolder holder,<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        holder.mYv.setText(titles.get(position));</span><br><span class="line">        holder.mContainer.setBakcgroundResource(colors.get(position));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewPagerViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">            TextVeiw mTv;</span><br><span class="line">            RelativeLayout mContainer;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">viewPagerViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span>&#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            mContainer = itemView.findViewById(R.id.container);</span><br><span class="line">            mTv = itemView.findViewById(R.id.tvTitle);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="item-pager-xml"><a href="#item-pager-xml" class="headerlink" title="item_pager.xml"></a>item_pager.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RealtiveLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;https//schemas.android.com/apk/res&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span> = <span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span> = <span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span> = <span class="string">&quot;@+id/container&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span> = <span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span> = <span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span> = <span class="string">&quot;+id/tvTitle&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_centerInParent</span> = <span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:textColor</span> = <span class="string">&quot;#ff4532&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:textSize</span> = <span class="string">&quot;32dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:text</span> = <span class="string">&quot;hello&quot;</span></span></span><br><span class="line"><span class="tag">              /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="colors-xml"><a href="#colors-xml" class="headerlink" title="colors.xml"></a>colors.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;red&quot;</span>&gt;</span>#ff4411<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;black&quot;</span>&gt;</span>000000<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;white&quot;</span>&gt;</span>#ffffff<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编写界面的最佳实践"><a href="#编写界面的最佳实践" class="headerlink" title="编写界面的最佳实践"></a>编写界面的最佳实践</h2><h3 id="制作9-Patch图片"><a href="#制作9-Patch图片" class="headerlink" title="制作9-Patch图片"></a>制作9-Patch图片</h3><p>那么9-Patch图片到底有什么实际作用呢？我们还是通过一个例子来看一下吧。首先在 UIBestPractice项目中放置一张气泡样式的图片message_left.png</p><p>我们将这张图片设置为LinearLayout的背景图片，修改activity_main.xml中的代码，如下所 示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:layout_height</span>=<span class="string">&quot;50dp&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">android:background</span>=<span class="string">&quot;@drawable/message_left&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，由于message_left的宽度不足以填满整个屏幕的宽度，整张图片被均匀地拉伸 了！这种效果非常差，用户肯定是不能容忍的，这时就可以使用9-Patch图片来进行改善。 制作9-Patch图片其实并不复杂，只要掌握好规则就行了，那么现在我们就来学习一下。 在Android Studio中，我们可以将任何png类型的图片制作成9-Patch图片。首先对着 message_left.png图片右击→Create 9-Patch ﬁle</p><p>我们可以在图片的4个边框绘制一个个的小黑点，在上边框和左边框绘制的部分表示当图片需要 拉伸时就拉伸黑点标记的区域，在下边框和右边框绘制的部分表示内容允许被放置的区域。使 用鼠标在图片的边缘拖动就可以进行绘制了，按住Shift键拖动可以进行擦除。绘制完成后效果 如图4.43所示。</p><p>最后记得要将原来的message_left.png图片删除，只保留制作好的message_left.9.png图片 即可，因为Android项目中不允许同一文件夹下有两张相同名称的图片（即使后缀名不同也不行）。重新运行程序，效果如图4.44所示。</p><h3 id="编写精美的聊天界面"><a href="#编写精美的聊天界面" class="headerlink" title="编写精美的聊天界面"></a>编写精美的聊天界面</h3><p>开始编写主界面，修改activity_main.xml中的代码，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android:</span>&quot;<span class="attr">http:schemas.android.com</span>/<span class="attr">apk</span>/<span class="attr">res</span>/<span class="attr">android</span>&quot;</span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">background</span>=<span class="string">&quot;#d8e0e8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:id</span>=<span class="string">&quot;@id/recyclerView&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">aandroid:id</span>=<span class="string">layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                                               <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinderLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@+id/inputText&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:hint</span>=<span class="string">&quot;Type something here&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:maxLines</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@id/send&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;Send&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinderLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们在主界面中放置了一个RecyclerView用于显示聊天的消息内容，又放置了一个EditText用 于输入消息，还放置了一个Button用于发送消息。这里用到的所有属性都是我们之前学过的， 相信你理解起来应该不费力。</p><p>然后定义消息的实体类，新建Msg，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Msg</span>(<span class="keyword">val</span> content:String,<span class="keyword">val</span> type:<span class="built_in">Int</span>)&#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">       <span class="keyword">const</span> <span class="keyword">val</span> TYPE_RECEIVED = <span class="number">0</span></span><br><span class="line">       <span class="keyword">const</span> <span class="keyword">val</span> TYPE_SENT = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Msg类中只有两个字段：content表示消息的内容，type表示消息的类型。其中消息类型有两 个值可选：TYPE_RECEIVED表示这是一条收到的消息，TYPE_SENT表示这是一条发出的消息。这里我们将TYPE_RECEIVED和TYPE_SENT定义成了常量，定义常量的关键字是const， 注意只有在单例类、companion object或顶层方法中才可以使用const关键字。</p><p>接下来开始编写RecyclerView的子项布局，新建msg_left_item.xml，代码如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:</span>&quot;<span class="attr">http:</span>//<span class="attr">schemas.android.com</span>/<span class="attr">apk</span>/<span class="attr">res</span>/<span class="attr">android</span>&quot;</span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:pddding</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_grativity</span>=<span class="string">&quot;left&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:background</span>=<span class="string">&quot;drawable/message_left&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/leftMsg&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_margin</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textColor</span>=<span class="string">&quot;#fff&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这是接收消息的子项布局。这里我们让收到的消息居左对齐，并使用message_left.9.png作为 背景图。</p><p>类似地，我们还需要再编写一个发送消息的子项布局，新建msg_right_item.xml，代码如下所 示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinerLayout</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:layout_gravity</span>=<span class="string">&quot;right&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">android:background</span>=<span class="string">&quot;@drawable/message_right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:id</span>=<span class="string">&quot;@id/rightMsg&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:layout_margin</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:textColor</span>=<span class="string">&quot;#000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinerLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们让发出的消息居右对齐，并使用message_right.9.png作为背景图，基本上和刚才的 msg_left_item.xml是差不多的</p><p>接下来需要创建RecyclerView的适配器类，新建类MsgAdapter，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MsgAdapter</span>(<span class="keyword">val</span> msgList:List&lt;Msg&gt;):RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;()&#123;</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">LeftViewHolder</span>(view:View):RecyclerView.ViewHolder(view)&#123;</span><br><span class="line">        <span class="keyword">val</span> leftMsg: TextView = view.findViewById(R.id.leftMsg)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">class</span> <span class="title class_">RightViewHolder</span>(view:View):RecyclerView.ViewHOlder(view)&#123;</span><br><span class="line">        <span class="keyword">val</span> rightMsg: TextView = view.findViewById(R.id.rightMsg)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemViewType</span><span class="params">(position:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">        <span class="keyword">val</span> msg = msgList[position]</span><br><span class="line">        <span class="keyword">return</span> msg.Type</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent:<span class="type">ViewGroup</span>,viewType:<span class="type">Int</span>)</span></span> = <span class="keyword">if</span>(viewType==Msg.TYPE_RECEIVED)&#123;</span><br><span class="line">        <span class="keyword">val</span> view = LayoutInflater.fron(parent.context).inflate(R.layout.msg_left_item,parent,<span class="literal">false</span>)</span><br><span class="line">        LeftViewHolder(view)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.msg_right_item,parent,<span class="literal">false</span>)</span><br><span class="line">        RightViewHolder(view)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBindViewHolder</span><span class="params">(holder:<span class="type">RecyclerVIew</span>.<span class="type">ViewHolder</span>,position:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">val</span> msg = msgList[position]</span><br><span class="line">        <span class="keyword">when</span>(holder)&#123;</span><br><span class="line">            <span class="keyword">is</span> LeftViewHolder-&gt;holder.leftMsg.text = msg.content</span><br><span class="line">            <span class="keyword">is</span> RightViewHolder-&gt;holder.rightMst.text = msg.content</span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="keyword">throw</span> IlleaglArgumentException()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中用到了一个新的知识点：根据不同的viewType创建不同的界面。首先我们定义了 LeftViewHolder和RightViewHolder这两个ViewHolder，分别用于缓存 msg_left_item.xml和msg_right_item.xml布局中的控件。然后要重写 getItemViewType()方法，并在这个方法中返回当前position对应的消息类型。</p><p>接下来的代码你应该就比较熟悉了，和我们之前学习的RecyclerView用法是比较相似的，只是 要在onCreateViewHolder()方法中根据不同的viewType来加载不同的布局并创建不同的 ViewHolder。然后在onBindViewHolder()方法中判断ViewHolder的类型：如果是 LeftViewHolder，就将内容显示到左边的消息布局；如果是RightViewHolder，就将内容 显示到右边的消息布局。</p><p>最后修改MainActivity中的代码，为RecyclerView初始化一些数据，并给发送按钮加入事件响 应，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>(),View.OnClickListener&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> msgList = ArrayLIst&lt;Msg&gt;()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> adapter:MsgAdapter? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentVeiw(R.layout.activity_main)</span><br><span class="line">        initMsg()</span><br><span class="line">        <span class="keyword">val</span> layoutManager = LinearLayoutManager(<span class="keyword">this</span>)</span><br><span class="line">        recyclerView.layoutManager = layoutManager</span><br><span class="line">        adapter = MsgAdapter(magList)</span><br><span class="line">        recyclerView.adapter = adapter</span><br><span class="line">        send.setOnClickListner(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v:<span class="type">View</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">when</span>(v)&#123;</span><br><span class="line">            send-&gt;&#123;</span><br><span class="line">                <span class="keyword">val</span> content = inputText.text.toString()</span><br><span class="line">                <span class="keyword">if</span>(content.isNotEmpty())&#123;</span><br><span class="line">                    <span class="keyword">val</span> msg = Msg(content,Msg.TYPE_SENT)</span><br><span class="line">                    magList.add(msg)</span><br><span class="line">                    adapter?.notifyItemInserted(msgLsig.size-<span class="number">1</span>)</span><br><span class="line">                    recyclerView.scrollToPosition(msgLisg.size-<span class="number">1</span>)</span><br><span class="line">                    inputText.setText(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initMst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">val</span> masl = Msg(<span class="string">&quot;Hello guy.&quot;</span>,Msg.TYPE_RECEIVED)</span><br><span class="line">        msgLisg.add(msg1)</span><br><span class="line">        <span class="keyword">val</span> msg2 = Msg(<span class="string">&quot;Hello. Who is that?&quot;</span>,Msg.TYPE_SENT)</span><br><span class="line">        msgList.add(msg2)</span><br><span class="line">        <span class="keyword">val</span> msg3 = Msg(<span class="string">&quot;This is Tom.Nice talking to you&quot;</span>,Msg.TYPE_RECEIVED)</span><br><span class="line">        msgList.add(msg3)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Kotlin课堂-延迟初始化和密封类"><a href="#Kotlin课堂-延迟初始化和密封类" class="headerlink" title="Kotlin课堂:延迟初始化和密封类"></a>Kotlin课堂:延迟初始化和密封类</h2><h3 id="对变量延迟初始化"><a href="#对变量延迟初始化" class="headerlink" title="对变量延迟初始化"></a>对变量延迟初始化</h3><p>延迟初始化使用的是lateinit关键字，它可以告诉Kotlin编译器，我会在晚些时候对这个变量 进行初始化，这样就不用在一开始的时候将它赋值为null了。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> adapter:MsgAdapter</span><br></pre></td></tr></table></figure><p>当然，使用lateinit关键字也不是没有任何风险，如果我们在adapter变量还没有初始化的 情况下就直接使用它，那么程序就一定会崩溃，并且抛出一个 UninitializedPropertyAccessException异常</p><p>另外，我们还可以通过代码来判断一个全局变量是否已经完成了初始化，这样在某些时候能够 有效地避免重复对某一个变量进行初始化操作，示例代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(::adapter.isInitialized)&#123;</span><br><span class="line">    adapter = MsgAdpater(msgList)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体语法就是这样，::adapter.isInitialized可用于判断adapter变量是否已经初始 化。虽然语法看上去有点奇怪，但这是固定的写法。然后我们再对结果进行取反，如果还没有 初始化，那么就立即对adapter变量进行初始化，否则什么都不用做。</p><h3 id="使用密封类优化代码"><a href="#使用密封类优化代码" class="headerlink" title="使用密封类优化代码"></a>使用密封类优化代码</h3><p>首先来了解一下密封类具体的作用，这里我们来看一个简单的例子。新建一个Kotlin文件，文件 名就叫Result.kt好了，然后在这个文件中编写如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Result</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Success</span>(<span class="keyword">val</span> msg:String):Result</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Failure</span>(<span class="keyword">val</span> error:Exception):Result</span><br></pre></td></tr></table></figure><p>这里定义了一个Result接口，用于表示某个操作的执行结果，接口中不用编写任何内容。然后 定义了两个类去实现Result接口：一个Success类用于表示成功时的结果，一个Failure类 用于表示失败时的结果，这样就把准备工作做好了。</p><p>接下来再定义一个getResultMsg()方法，用于获取最终执行结果的信息，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getResultMsg</span><span class="params">(result:<span class="type">Result</span>)</span></span> = <span class="keyword">when</span>(result)&#123;</span><br><span class="line">    <span class="keyword">is</span> Success -&gt; result.msg</span><br><span class="line">    <span class="keyword">is</span> Failure -&gt; result.error.message</span><br><span class="line">    <span class="keyword">else</span> -&gt; <span class="keyword">throw</span> IllegalArgumentException()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>etResultMsg()方法中接收一个Result参数。我们通过when语句来判断：如果Result属 于Success，那么就返回成功的消息；如果Result属于Failure，那么就返回错误信息。到 目前为止，代码都是没有问题的，但比较让人讨厌的是，接下来我们不得不再编写一个else条 件，否则Kotlin编译器会认为这里缺少条件分支，代码将无法编译通过。但实际上Result的执 行结果只可能是Success或者Failure，这个else条件是永远走不到的，所以我们在这里直接 抛出了一个异常，只是为了满足Kotlin编译器的语法检查而已。</p><p>另外，编写else条件还有一个潜在的风险。如果我们现在新增了一个Unknown类并实现 Result接口，用于表示未知的执行结果，但是忘记在getResultMsg()方法中添加相应的条 件分支，编译器在这种情况下是不会提醒我们的，而是会在运行的时候进入else条件里面，从 而抛出异常并导致程序崩溃。</p><p>密封类的关键字是sealed class，它的用法同样非常简单，我们可以轻松地将Result接口改 造成密封类的写法：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">Result</span> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Success</span>(<span class="keyword">val</span> msg:String):Result()</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Failure</span>(<span class="keyword">val</span> reror:Exception):Result()</span><br></pre></td></tr></table></figure><p>可以看到，代码并没有什么太大的变化，只是将interface关键字改成了sealed class。另 外，由于密封类是一个可继承的类，因此在继承它的时候需要在后面加上一对括号，这一点我 们在第2章就学习过了。</p><p>那么改成密封类之后有什么好处呢？你会发现现在getResultMsg()方法中的else条件已经不 再需要了，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getResultMsg</span><span class="params">(result: <span class="type">Result</span>)</span></span> = <span class="keyword">when</span> (result) &#123; </span><br><span class="line"> <span class="keyword">is</span> Success -&gt; result.msg </span><br><span class="line"> <span class="keyword">is</span> Failure -&gt; <span class="string">&quot;Error is <span class="subst">$&#123;result.error.message&#125;</span>&quot;</span> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>为什么这里去掉了else条件仍然能编译通过呢？这是因为当在when语句中传入一个密封类变量 作为条件时，Kotlin编译器会自动检查该密封类有哪些子类，并强制要求你将每一个子类所对应 的条件全部处理。这样就可以保证，即使没有编写else条件，也不可能会出现漏写条件分支的 情况。而如果我们现在新增一个Unknown类，并也让它继承自Result，此时 getResultMsg()方法就一定会报错，必须增加一个Unknown的条件分支才能让代码编译通 过。</p><p>了解了这么多关于密封类的知识，接下来我们看一下它该如何结合MsgAdapter中的 ViewHolder一起使用，并顺便优化一下MsgAdapter中的代码。</p><p>观看MsgAdapter现在的代码，你会发现onBindViewHolder()方法中就存在一个没有实际作 用的else条件，只是抛出了一个异常而已。对于这部分代码，我们就可以借助密封类的特性来 进行优化。首先删除MsgAdapter中的LeftViewHolder和RightViewHolder，然后新建一个 MsgViewHolder.kt文件，在其中加入如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">MsgViewHolder</span>(view: View) : RecyclerView.ViewHolder(view) </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LeftViewHolder</span>(view: View) : MsgViewHolder(view) &#123; </span><br><span class="line"> <span class="keyword">val</span> leftMsg: TextView = view.findViewById(R.id.leftMsg) </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RightViewHolder</span>(view: View) : MsgViewHolder(view) &#123; </span><br><span class="line"> <span class="keyword">val</span> rightMsg: TextView = view.findViewById(R.id.rightMsg) </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Activity</title>
      <link href="/2024/12/06/Activity/"/>
      <url>/2024/12/06/Activity/</url>
      
        <content type="html"><![CDATA[<h1 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h1><h2 id="Activity是什么"><a href="#Activity是什么" class="headerlink" title="Activity是什么"></a>Activity是什么</h2><p>Activity是最容易吸引用户的地方，它是一种可以包含用户界面的组件，主要用于和用户进行交 互。一个应用程序中可以包含零个或多个Activity，但不包含任何Activity的应用程序很少见， 谁也不想让自己的应用永远无法被用户看到吧</p><h2 id="Activity的基本使用方法"><a href="#Activity的基本使用方法" class="headerlink" title="Activity的基本使用方法"></a>Activity的基本使用方法</h2><p>到现在为止，你还没有手动创建过Activity呢，因为第1章中的MainActivity是Android Studio 自动帮我们创建的。手动创建Activity可以加深我们的理解，因此现在是时候自己动手了。选择“Add No Activity”</p><h3 id="手动创建Activity"><a href="#手动创建Activity" class="headerlink" title="手动创建Activity"></a>手动创建Activity</h3><p>现在右击com.example.activitytest包→New→Activity→Empty Activity，会弹出一个创建 Activity的对话框，我们将Activity命名为FirstActivity，并且不要勾选Generate Layout File 和Launcher Activity这两个选项</p><p>勾选Generate Layout File表示会自动为FirstActivity创建一个对应的布局文件，勾选 Launcher Activity表示会自动将FirstActivity设置为当前项目的主Activity。由于你是第一次 手动创建Activity，这些自动生成的东西暂时都不要勾选，下面我们将会一个个手动来完成。勾 选Backwards Compatibility表示会为项目启用向下兼容旧版系统的模式，这个选项要勾上</p><p>你需要知道，项目中的任何Activity都应该重写onCreate()方法，而目前我们的FirstActivity 中已经重写了这个方法，这是Android Studio自动帮我们完成的，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FirstActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建和加载布局"><a href="#创建和加载布局" class="headerlink" title="创建和加载布局"></a>创建和加载布局</h3><p>前面我们说过，Android程序的设计讲究逻辑和视图分离，最好每一个Activity都能对应一个布 局。布局是用来显示界面内容的，我们现在就来手动创建一个布局文件。</p><p>右击app&#x2F;src&#x2F;main&#x2F;res目录→New→Directory，会弹出一个新建目录的窗口，这里先创建一个 名为layout的目录。然后对着layout目录右键→New→Layout resource file，又会弹出一个 新建布局资源文件的窗口，我们将这个布局文件命名为first_layout，根元素默认选择为 LinearLayout</p><p>可看到如下代码</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span><br><span class="line">      android:orientation=<span class="string">&quot;vertical&quot;</span> </span><br><span class="line">      android:layout_width=<span class="string">&quot;match_parent&quot;</span> </span><br><span class="line">      android:layout_height=<span class="string">&quot;match_parent&quot;</span>&gt; </span><br><span class="line">&lt;/LinearLayout&gt; </span><br></pre></td></tr></table></figure><p>由于我们刚才在创建布局文件时选择了LinearLayout作为根元素，因此现在布局文件中已经有 一个LinearLayout元素了。我们现在对这个布局稍做编辑，添加一个按钮，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/button1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">androdi:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">androdi:text</span>=<span class="string">&quot;Button 1&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，按钮已经成功显示出来了，这样一个简单的布局就编写完成了。那么接下来我们要 做的，就是在Activity中加载这个布局</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FirstActivity</span>:<span class="type">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.first_layout)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里调用了setContentView()方法来给当前的Activity加载一个布局，而在 setContentView()方法中，我们一般会传入一个布局文件的id。在第1章介绍项目资源的时 候我曾提到过，项目中添加的任何资源都会在R文件中生成一个相应的资源id，因此我们刚才创 建的first_layout.xml布局的id现在已经添加到R文件中了。在代码中引用布局文件的方法 你也已经学过了，只需要调用R.layout.first_layout就可以得到first_layout.xml布 局的id，然后将这个值传入setContentView()方法即可</p><h3 id="在AndroidManifest文件中注册"><a href="#在AndroidManifest文件中注册" class="headerlink" title="在AndroidManifest文件中注册"></a>在AndroidManifest文件中注册</h3><p>我们打开 app&#x2F;src&#x2F;main&#x2F;AndroidManifest.xml文件瞧一瞧，代码如下所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">package</span>=<span class="string">&quot;com.example.activitytest&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.FirstActivity&quot;</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>可以看到，Activity的注册声明要放在标签内，这里是通过标签 来对Activity进行注册的。那么又是谁帮我们自动完成了对FirstActivity的注册呢？当然是 Android Studio了。在过去，当创建Activity或其他系统组件时，很多人会忘记要去Android Manifest.xml中进行注册，从而导致程序运行崩溃，很显然Android Studio在这方面做得更加 人性化</p><p>在标签中，我们使用了android:name来指定具体注册哪一个Activity，那么这 里填入的.FirstActivity是什么意思呢？其实这不过是 com.example.activitytest.FirstActivity的缩写而已。由于在最外层的 标签中已经通过package属性指定了程序的包名是com.example.activitytest，因此在注 册Activity时，这一部分可以省略，直接使用.FirstActivity就足够了</p><p>不过，仅仅是这样注册了Activity，我们的程序仍然不能运行，因为还没有为程序配置主 Activity。也就是说，程序运行起来的时候，不知道要首先启动哪个Activity。配置主Activity 的方法其实在第1章中已经介绍过了，就是在标签的内部加入 标签，并在这个标签里添加和这两句声明即可。</p><p>除此之外，我们还可以使用android:label指定Activity中标题栏的内容，标题栏是显示在 Activity最顶部的，待会儿运行的时候你就会看到。需要注意的是，给主Activity指定的label不 仅会成为标题栏中的内容，还会成为启动器（Launcher）中应用程序显示的名称。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">package</span>=<span class="string">&quot;com.example.activitytest&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.FirstActivity&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">android:label</span>=<span class="string">&quot;This is FirstActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;androiod.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span>   </span><br></pre></td></tr></table></figure><p>这样，FirstActivity就成为我们这个程序的主Activity了，点击桌面应用程序图标时首先打开的 就是这个Activity。另外需要注意，如果你的应用程序中没有声明任何一个Activity作为主 Activity，这个程序仍然是可以正常安装的，只是你无法在启动器中看到或者打开这个程序。这 种程序一般是作为第三方服务供其他应用在内部进行调用的。</p><h3 id="在Activity-中使用Toast"><a href="#在Activity-中使用Toast" class="headerlink" title="在Activity 中使用Toast"></a>在Activity 中使用Toast</h3><p>Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通 知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间，我们现在就尝试 一下如何在Activity中使用Toast。</p><p>首先需要定义一个弹出Toast的触发点，正好界面上有个按钮，那我们就让这个按钮的点击事件 作为弹出Toast的触发点吧。在onCreate()方法中添加如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstaceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstaceState)</span><br><span class="line">    steContentView(R.layout.first_layout)</span><br><span class="line">    <span class="keyword">val</span> button1:Buntton = findViewById(R.id.button1)</span><br><span class="line">    button1.setOnClickListener&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;You clicked Button 1&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Activity中，可以通过findViewById()方法获取在布局文件中定义的元素，这里我们传入 R.id.button1来得到按钮的实例，这个值是刚才在first_layout.xml中通过android:id属 性指定的。findViewById()方法返回的是一个继承自View的泛型对象，因此Kotlin无法自动 推导出它是一个Button还是其他控件，所以我们需要将button1变量显式地声明成Button类 型。得到按钮的实例之后，我们通过调用setOnClickListener()方法为按钮注册一个监听 器，点击按钮时就会执行监听器中的onClick()方法。因此，弹出Toast的功能当然是要在 onClick()方法中编写了。 Toast的用法非常简单，通过静态方法makeText()创建出一个Toast对象，然后调用show() 将Toast显示出来就可以了。这里需要注意的是，makeText()方法需要传入3个参数。第一个 参数是Context，也就是Toast要求的上下文，由于Activity本身就是一个Context对象，因此 这里直接传入this即可。第二个参数是Toast显示的文本内容。第三个参数是Toast显示的时 长，有两个内置常量可以选择：Toast.LENGTH_SHORT和Toast.LENGTH_LONG</p><p>于findViewById()方法的使用，我还得再多讲一些。我们已经知道，findViewById()方 法的作用就是获取布局文件中控件的实例，但是前面的例子比较简单，只有一个按钮，如果某 个布局文件中有10个控件呢？没错，我们就需要调用10次findViewById()方法才行。这种 写法虽然很正确，但是很笨拙，于是就滋生出了诸如ButterKnife之类的第三方开源库，来简化 findViewById()方法的调用。</p><p>不过，这个问题在Kotlin中就不复存在了，因为使用Kotlin编写的Android项目在 app&#x2F;build.gradle文件的头部默认引入了一个kotlin-android-extensions插件，这个插件会根 据布局文件中定义的控件id自动生成一个具有相同名称的变量，我们可以在Activity里直接使用 这个变量，而不用再调用findViewById()方法了</p><h3 id="在Activity中使用Menu"><a href="#在Activity中使用Menu" class="headerlink" title="在Activity中使用Menu"></a>在Activity中使用Menu</h3><p>首先在res目录下新建一个menu文件夹，右击res目录→New→Directory，输入文件夹 名“menu”，点击“OK”。接着在这个文件夹下新建一个名叫“main”的菜单文件，右击menu文 件夹→New→Menu resource file</p><p>文件名输入“main”，点击“OK”完成创建，然后在main.xml中添加如下代码</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.androdi.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/add_item&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:title</span>=<span class="string">&quot;Add&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/remove_item&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:title</span>=<span class="string">&quot;Remove&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们创建了两个菜单项，其中标签用来创建具体的某一个菜单项，然后通过 android:id给这个菜单项指定一个唯一的标识符，通过android:title给这个菜单项指定一 个名称</p><p>接着回到FirstActivity中来重写onCreateOptionsMenu()方法，重写方法可以使用Ctrl + O 快捷键</p><p>然后在onCreateOptionsMenu()方法中编写如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateOptionsMenu</span><span class="params">(menu:<span class="type">Menu</span>?)</span></span>:<span class="built_in">Boolean</span>&#123;</span><br><span class="line">    menuInflater.inflate(R.menu.main,menu)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在继续讲解这段代码之前，我还得再介绍一个Kotlin的语法糖。如果你熟悉Java的话，应该知道 Java Bean的概念，它是一个非常简单的Java类，会根据类中的字段自动生成相应的Getter和 Setter方法，如下所示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span> &#123; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> pages; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getPages</span><span class="params">()</span> &#123; </span><br><span class="line">      <span class="keyword">return</span> pages; </span><br><span class="line">   &#125; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPages</span><span class="params">(<span class="type">int</span> pages)</span> &#123; </span><br><span class="line">      <span class="built_in">this</span>.pages = pages; </span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Kotlin中调用这种语法结构的Java方法时，可以使用一种更加简便的写法，比如用如下代码来 设置和读取Book类中的pages字段：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> book = Book()</span><br><span class="line">book.pages=<span class="number">500</span></span><br><span class="line"><span class="keyword">val</span> bookPages=book.pages</span><br></pre></td></tr></table></figure><p>这里看上去好像我们并没有调用Book类的setPages()和getPages()方法，而是直接对 pages字段进行了赋值和读取。其实这就是Kotlin给我们提供的语法糖，它会在背后自动将上述 代码转换成调用setPages()方法和getPages()方法</p><p>而我们刚才在onCreateOptionsMenu()方法中编写的menuInflater就使用了这种语法糖， 它实际上是调用了父类的getMenuInflater()方法。getMenuInflater()方法能够得到一 个MenuInflater对象，再调用它的inflate()方法，就可以给当前Activity创建菜单了。 inflate()方法接收两个参数：第一个参数用于指定我们通过哪一个资源文件来创建菜单，这 里当然是传入R.menu.main；第二个参数用于指定我们的菜单项将添加到哪一个Menu对象当 中，这里直接使用onCreateOptionsMenu()方法中传入的menu参数。最后给这个方法返回 true，表示允许创建的菜单显示出来，如果返回了false，创建的菜单将无法显示。</p><p>当然，仅仅让菜单显示出来是不够的，我们定义菜单不仅是为了看的，关键是要菜单真正可用 才行，因此还要再定义菜单响应事件。在FirstActivity中重写onOptionsItemSelected()方 法，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onOptionsItemSelected</span><span class="params">(item:<span class="type">MenuItem</span>)</span></span>:<span class="built_in">Boolean</span>&#123;</span><br><span class="line">    <span class="keyword">when</span>(item.itemId)&#123;</span><br><span class="line">        R.id.add_item-&gt;Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;You clicked Add&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">        R.id.remove_item-&gt;Toast.makeText(<span class="keyword">this</span>,<span class="string">&quot;You clcked Remove&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在onOptionsItemSelected()方法中，我们通过调用item.itemId来判断点击的是哪一个 菜单项。另外，其实这里也应用了刚刚学到的语法糖，Kotlin实际上在背后调用的是item的 getItemId()方法。接下来我们将item.itemId的结果传入when语句当中，然后给每个菜单 项加入自己的逻辑处理，这里我们就活学活用，弹出一个刚刚学会的Toas</p><h3 id="销毁一个Activity"><a href="#销毁一个Activity" class="headerlink" title="销毁一个Activity"></a>销毁一个Activity</h3><p>修改按钮监听器中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">finish()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用Intent在Activity之间穿梭"><a href="#使用Intent在Activity之间穿梭" class="headerlink" title="使用Intent在Activity之间穿梭"></a>使用Intent在Activity之间穿梭</h2><h3 id="使用显示Intent"><a href="#使用显示Intent" class="headerlink" title="使用显示Intent"></a>使用显示Intent</h3><p>你应该已经对创建Activity的流程比较熟悉了，那我们现在在ActivityTest项目中再快速地创建 一个Activity。 还是右击com.example.activitytest包→New→Activity→Empty Activity，会弹出一个创建 Activity的对话框，这次我们命名为SecondActivity，并勾选Generate Layout File，给布局 文件起名为second_layout，但不要勾选Launcher Activity选项</p><p>现在第二个Activity已经创建完成，剩下的问题就是如何去启 动它了，这里我们需要引入一个新的概念：Intent</p><p>Intent是Android程序中各组件之间进行交互的一种重要方式，它不仅可以指明当前组件想要执 行的动作，还可以在不同组件之间传递数据。Intent一般可用于启动Activity、启动Service以 及发送广播等场景，由于Service、广播等概念你暂时还未涉及，那么本章我们的目光无疑就锁 定在了启动Activity上面。</p><p>Intent大致可以分为两种：显式Intent和隐式Intent。我们先来看一下显式Intent如何使用</p><p>Intent有多个构造函数的重载，其中一个是Intent(Context packageContext, Class cls)。这个构造函数接收两个参数：第一个参数Context要求提供一个启动Activity的上下 文；第二个参数Class用于指定想要启动的目标Activity，通过这个构造函数就可以构建出 Intent的“意图”。那么接下来我们应该怎么使用这个Intent呢？Activity类中提供了一个 startActivity()方法，专门用于启动Activity，它接收一个Intent参数，这里我们将构建好 的Intent传入startActivity()方法就可以启动目标Activity了</p><p>修改FirstActivity中按钮的点击事件，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,SecondActitivy::<span class="keyword">class</span>.java)</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们首先构建了一个Intent对象，第一个参数传入this也就是FirstActivity作为上下文，第二 个参数传入SecondActivity::class.java作为目标Activity，这样我们的“意图”就非常明 显了，即在FirstActivity的基础上打开SecondActivity。注意，Kotlin中 SecondActivity::class.java的写法就相当于Java中SecondActivity.class的写法。 接下来再通过startActivity()方法执行这个Intent就可以了</p><p>重新运行程序，在FirstActivity的界面点击一下按钮，可以看到，我们已经成功启动SecondActivity了。如果你想要回到上一个Activity怎么办呢？ 很简单，按一下Back键就可以销毁当前Activity，从而回到上一个Activity了。 使用这种方式来启动Activity，Intent的“意图”非常明显，因此我们称之为显式Intent</p><h3 id="使用隐式Intent"><a href="#使用隐式Intent" class="headerlink" title="使用隐式Intent"></a>使用隐式Intent</h3><p>相比于显式Intent，隐式Intent则含蓄了许多，它并不明确指出想要启动哪一个Activity，而是 指定了一系列更为抽象的action和category等信息，然后交由系统去分析这个Intent，并帮 我们找出合适的Activity去启动</p><p>什么叫作合适的Activity呢？简单来说就是可以响应这个隐式Intent的Activity，那么目前 SecondActivity可以响应什么样的隐式Intent呢？额，现在好像还什么都响应不了，不过很快就可以了。</p><p>通过在标签下配置的内容，可以指定当前Activity能够响应的 action和category，打开AndroidManifest.xml，添加如下代码</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SecondeActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;con.example.activityest.ACCTION_START&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在标签中我们指明了当前Activity可以响应 com.example.activitytest.ACTION_START这个action，而标签则包含了 一些附加信息，更精确地指明了当前Activity能够响应的Intent中还可能带有的category。只 有和中的内容同时匹配Intent中指定的action和category时，这个 Activity才能响应该Intent</p><p>修改FirstActivity中按钮的点击事件，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="string">&quot;com.example.activitytest.ACTION_START&quot;</span>)</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们使用了Intent的另一个构造函数，直接将action的字符串传了进去，表明我们 想要启动能够响应com.example.activitytest.ACTION_START这个action的Activity。 前面不是说要和同时匹配才能响应吗？怎么没看到哪里有指定 category呢？这是因为android.intent.category.DEFAULT是一种默认的category， 在调用startActivity()方法的时候会自动将这个category添加到Intent中。</p><p>每个Intent中只能指定一个action，但能指定多个category。目前我们的Intent中只有一个 默认的category，那么现在再来增加一个吧。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="string">&quot;com.example.activitytest.ACTION_START&quot;</span>)</span><br><span class="line">    intent.addCategory(<span class="string">&quot;com.example.activitytest.MY_CATEGORY&quot;</span>)</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更多的Intent的用法"><a href="#更多的Intent的用法" class="headerlink" title="更多的Intent的用法"></a>更多的Intent的用法</h3><p>使用隐式Intent，不仅可以启动自己程序内的Activity，还可以启动其他程序的Activity，这就 使多个应用程序之间的功能共享成为了可能。比如你的应用程序中需要展示一个网页，这时你 没有必要自己去实现一个浏览器（事实上也不太可能），只需要调用系统的浏览器来打开这个 网页就行了。</p><p>修改FirstActivity中按钮点击事件的代码，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClckListener&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(Intent.ACTION_VIEW)</span><br><span class="line">    intent.<span class="keyword">data</span> = Uri.parse(<span class="string">&quot;https:www.baidu.com&quot;</span>)</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们首先指定了Intent的action是Intent.ACTION_VIEW，这是一个Android系统内置 的动作，其常量值为android.intent.action.VIEW。然后通过Uri.parse()方法将一个 网址字符串解析成一个Uri对象，再调用Intent的setData()方法将这个Uri对象传递进去。 当然，这里再次使用了前面学习的语法糖，看上去像是给Intent的data属性赋值一样。 重新运行程序，在FirstActivity界面点击按钮就可以看到打开了系统浏览器</p><p>在上述代码中，可能你会对setData()方法部分感到陌生，这是我们前面没有讲到的。这个方 法其实并不复杂，它接收一个Uri对象，主要用于指定当前Intent正在操作的数据，而这些数据 通常是以字符串形式传入Uri.parse()方法中解析产生的。</p><p>与此对应，我们还可以在标签中再配置一个标签，用于更精确地指 定当前Activity能够响应的数据。<data>标签中主要可以配置以下内容。</p><p>android:scheme。用于指定数据的协议部分，如上例中的https部分。 android:host。用于指定数据的主机名部分，如上例中的部分。 android:port。用于指定数据的端口部分，一般紧随在主机名之后。 android:path。用于指定主机名和端口之后的部分，如一段网址中跟在域名之后的内 容。 android:mimeType。用于指定可以处理的数据类型，允许使用通配符的方式进行指定。</p><p>只有当<data>标签中指定的内容和Intent中携带的Data完全一致时，当前Activity才能够响应 该Intent。不过，在标签中一般不会指定过多的内容。例如在上面的浏览器示例中，其 实只需要指定android:scheme为https，就可以响应所有https协议的Intent了。</p><p>右击com.example.activitytest包→New→Activity→Empty Activity，新建ThirdActivity， 并勾选Generate Layout File，给布局文件起名为third_layout，点击“Finish”完成创建。然 后编辑third_layout.xml，将里面的代码替换成如下内容</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button3&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button 3&quot;</span> </span></span><br><span class="line"><span class="tag">    /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>ThirdActivity中的代码保持不变即可，最后在AndroidManifest.xml中修改ThirdActivity的注 册信息</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.ThirdActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">tools:ignore</span>=<span class="string">&quot;AppLinkUrlError&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.ViEW&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">&quot;https/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们在ThirdActivity的中配置了当前Activity能够响应的action是 Intent.ACTION_VIEW的常量值，而category则毫无疑问地指定了默认的category值，另 外在标签中，我们通过android:scheme指定了数据的协议必须是https协议，这样 ThirdActivity应该就和浏览器一样，能够响应一个打开网页的Intent了。另外，由于Android Studio认为所有能够响应ACTION_VIEW的Activity都应该加上BROWSABLE的category，否 则就会给出一段警告提醒。加上BROWSABLE的category是为了实现deep link功能，和我们 目前学习的东西无关，所以这里直接在标签上使用tools:ignore属性将 警告忽略即可。</p><p>可以看到，系统自动弹出了一个列表，显示了目前能够响应这个Intent的所有程序。选择 Chrome还会像之前一样打开浏览器，并显示百度的主页，而如果选择了ActivityTest，则会启 动ThirdActivity。JUST ONCE表示只是这次使用选择的程序打开，ALWAYS则表示以后一直使 用这次选择的程序打开。需要注意的是，虽然我们声明了ThirdActivity是可以响应打开网页的 Intent的，但实际上这个Activity并没有加载并显示网页的功能，所以在真正的项目中尽量不要 出现这种有可能误导用户的行为，不然会让用户对我们的应用产生负面的印象</p><p>除了https协议外，我们还可以指定很多其他协议，比如geo表示显示地理位置、tel表示拨打电 话。下面的代码展示了如何在我们的程序中调用系统拨号界面。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(Intent.ACTION_DIAL)</span><br><span class="line">    intent.<span class="keyword">data</span> = Uri.parse(<span class="string">&quot;tel:10086&quot;</span>)</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先指定了Intent的action是Intent.ACTION_DIAL，这又是一个Android系统的内置动 作。然后在data部分指定了协议是tel，号码是10086。重新运行一下程序，在FirstActivity 的界面点击一下按钮</p><h3 id="向下一个Activity传递数据"><a href="#向下一个Activity传递数据" class="headerlink" title="向下一个Activity传递数据"></a>向下一个Activity传递数据</h3><p>经过前面几节的学习，你已经对Intent有了一定的了解。不过到目前为止，我们只是简单地使 用Intent来启动一个Activity，其实Intent在启动Activity的时候还可以传递数据，下面我们来 一起看一下。</p><p>在启动Activity时传递数据的思路很简单，Intent中提供了一系列putExtra()方法的重载，可 以把我们想要传递的数据暂存在Intent中，在启动另一个Activity后，只需要把这些数据从 Intent中取出就可以了。比如说FirstActivity中有一个字符串，现在想把这个字符串传递到 SecondActivity中，你就可以这样编写：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">    <span class="keyword">val</span> <span class="keyword">data</span> = <span class="string">&quot;Hello SecondActivity&quot;</span></span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,SecondActivity::<span class="keyword">class</span>.java)</span><br><span class="line">    intent.putExtra(<span class="string">&quot;extra_data&quot;</span>,<span class="keyword">data</span>)</span><br><span class="line">    startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们还是使用显式Intent的方式来启动SecondActivity，并通过putExtra()方法传递了 一个字符串。注意，这里putExtra()方法接收两个参数，第一个参数是键，用于之后从 Intent中取值，第二个参数才是真正要传递的数据</p><p>然后在SecondActivity中将传递的数据取出，并打印出来，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SecondActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstaceState)</span><br><span class="line">        setContentView(R.layout.second_layout)</span><br><span class="line">        <span class="keyword">val</span> extraData = intent.getStringExtra(<span class="string">&quot;extra_data&quot;</span>)</span><br><span class="line">        Log.d(<span class="string">&quot;SecondActivity&quot;</span>,<span class="string">&quot;extra data is <span class="variable">$extraData</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中的intent实际上调用的是父类的getIntent()方法，该方法会获取用于启动 SecondActivity的Intent，然后调用getStringExtra()方法并传入相应的键值，就可以得 到传递的数据了。这里由于我们传递的是字符串，所以使用getStringExtra()方法来获取传 递的数据。如果传递的是整型数据，则使用getIntExtra()方法；如果传递的是布尔型数据， 则使用getBooleanExtra()方法，以此类推。</p><h3 id="返回数据给上一个Activity"><a href="#返回数据给上一个Activity" class="headerlink" title="返回数据给上一个Activity"></a>返回数据给上一个Activity</h3><p>既然可以传递数据给下一个Activity，那么能不能够返回数据给上一个Activity呢？答案是肯定 的。不过不同的是，返回上一个Activity只需要按一下Back键就可以了，并没有一个用于启动 Activity的Intent来传递数据，这该怎么办呢？其实Activity类中还有一个用于启动Activity的 startActivityForResult()方法，但它期望在Activity销毁的时候能够返回一个结果给上 一个Activity。毫无疑问，这就是我们所需要的。</p><p>startActivityForResult()方法接收两个参数：第一个参数还是Intent；第二个参数是请 求码，用于在之后的回调中判断数据的来源。我们还是来实战一下，修改FirstActivity中按钮的 点击事件，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnCLickListener&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,SecondActivity::<span class="keyword">class</span>.java)</span><br><span class="line">    startActivityForResult(intent,<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们使用了startActivityForResult()方法来启动SecondActivity，请求码只要是一 个唯一值即可，这里传入了1。接下来我们在SecondActivity中给按钮注册点击事件，并在点 击事件中添加返回数据的逻辑，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SecnodActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> fum onCreate(savedInstancerState:Bundle?)&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.second_layout)</span><br><span class="line">        button2.setOnClickListener&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent()</span><br><span class="line">            intent.putExtra(<span class="string">&quot;data_return&quot;</span>,<span class="string">&quot;Hello FirstActivity&quot;</span>)</span><br><span class="line">            setResult(RESULT_OK,intent)</span><br><span class="line">            finish()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们还是构建了一个Intent，只不过这个Intent仅仅用于传递数据而已，它没有指定 任何的“意图”。紧接着把要传递的数据存放在Intent中，然后调用了setResult()方法。这个 方法非常重要，专门用于向上一个Activity返回数据。setResult()方法接收两个参数：第一 个参数用于向上一个Activity返回处理结果，一般只使用RESULT_OK或RESULT_CANCELED这 两个值；第二个参数则把带有数据的Intent传递回去。最后调用了finish()方法来销毁当前 Activity。</p><p>由于我们是使用startActivityForResult()方法来启动SecondActivity的，在 SecondActivity被销毁之后会回调上一个Activity的onActivityResult()方法，因此我们 需要在FirstActivity中重写这个方法来得到返回的数据，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityResult</span><span class="params">(requestCode:<span class="type">int</span>,resultCode:<span class="type">Int</span>,<span class="keyword">data</span>:<span class="type">Intent</span>?)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode,resultCode,<span class="keyword">data</span>)</span><br><span class="line">    <span class="keyword">when</span>(requestCode)&#123;</span><br><span class="line">        <span class="number">1</span>-&gt;<span class="keyword">if</span>(request==RESULT_OK)&#123;</span><br><span class="line">            <span class="keyword">val</span> returnedData = <span class="keyword">data</span>?.getStringExtra(<span class="string">&quot;dat_return&quot;</span>)</span><br><span class="line">            Log.d(<span class="string">&quot;FirstActivity&quot;</span>,<span class="string">&quot;returned data is <span class="variable">$returnedData</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>onActivityResult()方法带有3个参数：第一个参数requestCode，即我们在启动Activity 时传入的请求码；第二个参数resultCode，即我们在返回数据时传入的处理结果；第三个参 数data，即携带着返回数据的Intent。由于在一个Activity中有可能调用 startActivityForResult()方法去启动很多不同的Activity，每一个Activity返回的数据都 会回调到onActivityResult()这个方法中，因此我们首先要做的就是通过检查 requestCode的值来判断数据来源。确定数据是从SecondActivity返回的之后，我们再通过 resultCode的值来判断处理结果是否成功。最后从data中取值并打印出来，这样就完成了向 上一个Activity返回数据的工作</p><p>你可能会问，如果用户在SecondActivity中并不是通过点击按钮，而是通过按下Back键回到 FirstActivity，这样数据不就没法返回了吗？没错，不过这种情况还是很好处理的，我们可以通 过在SecondActivity中重写onBackPressed()方法来解决这个问题，代码如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBackPressed</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent()</span><br><span class="line">    intent.putExtra(<span class="string">&quot;data_return&quot;</span>,<span class="string">&quot;Hello FirstActivity&quot;</span>)</span><br><span class="line">    setResult(RESULT_OK,intent)</span><br><span class="line">    finish()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，当用户按下Back键后，就会执行onBackPressed()方法中的代码，我们在这里添加返 回数据的逻辑就行了。</p><h2 id="Activity的生命周期"><a href="#Activity的生命周期" class="headerlink" title="Activity的生命周期"></a>Activity的生命周期</h2><p>掌握Activity的生命周期对任何Android开发者来说都非常重要，当你深入理解Activity的生命 周期之后，就可以写出更加连贯流畅的程序，并在如何合理管理应用资源方面发挥得游刃有 余。你的应用程序也将会拥有更好的用户体验。</p><h3 id="返回栈"><a href="#返回栈" class="headerlink" title="返回栈"></a>返回栈</h3><p>经过前面几节的学习，相信你已经发现了Android中的Activity是可以层叠的。我们每启动一个 新的Activity，就会覆盖在原Activity之上，然后点击Back键会销毁最上面的Activity，下面的 一个Activity就会重新显示出来。</p><p>其实Android是使用任务（task）来管理Activity的，一个任务就是一组存放在栈里的Activity 的集合，这个栈也被称作返回栈（back stack）。栈是一种后进先出的数据结构，在默认情况 下，每当我们启动了一个新的Activity，它就会在返回栈中入栈，并处于栈顶的位置。而每当我 们按下Back键或调用finish()方法去销毁一个Activity时，处于栈顶的Activity就会出栈，前 一个入栈的Activity就会重新处于栈顶的位置。系统总是会显示处于栈顶的Activity给用户。</p><h3 id="Activity-状态"><a href="#Activity-状态" class="headerlink" title="Activity 状态"></a>Activity 状态</h3><p>每个Activity在其生命周期中最多可能会有4种状态。</p><h4 id="运行状态"><a href="#运行状态" class="headerlink" title="运行状态"></a>运行状态</h4><p>当一个Activity位于返回栈的栈顶时，Activity就处于运行状态。系统最不愿意回收的就是 处于运行状态的Activity，因为这会带来非常差的用户体验</p><h4 id="暂停状态"><a href="#暂停状态" class="headerlink" title="暂停状态"></a>暂停状态</h4><p>当一个Activity不再处于栈顶位置，但仍然可见时，Activity就进入了暂停状态。你可能会 觉得，既然Activity已经不在栈顶了，怎么会可见呢？这是因为并不是每一个Activity都会 占满整个屏幕，比如对话框形式的Activity只会占用屏幕中间的部分区域。处于暂停状态的 Activity仍然是完全存活着的，系统也不愿意回收这种Activity（因为它还是可见的，回收 可见的东西都会在用户体验方面有不好的影响），只有在内存极低的情况下，系统才会去 考虑回收这种Activity。</p><h4 id="停止状态"><a href="#停止状态" class="headerlink" title="停止状态"></a>停止状态</h4><p>当一个Activity不再处于栈顶位置，并且完全不可见的时候，就进入了停止状态。系统仍然 会为这种Activity保存相应的状态和成员变量，但是这并不是完全可靠的，当其他地方需要 内存时，处于停止状态的Activity有可能会被系统回收</p><h4 id="销毁状态"><a href="#销毁状态" class="headerlink" title="销毁状态"></a>销毁状态</h4><p>一个Activity从返回栈中移除后就变成了销毁状态。系统最倾向于回收处于这种状态的 Activity，以保证手机的内存充足。</p><h3 id="Activity的生存期"><a href="#Activity的生存期" class="headerlink" title="Activity的生存期"></a>Activity的生存期</h3><p>Activity类中定义了7个回调方法，覆盖了Activity生命周期的每一个环节，下面就来一一介绍这7个方法</p><ul><li>onCreate()。这个方法你已经看到过很多次了，我们在每个Activity中都重写了这个方法，它会在Activity第一次被创建的时候调用。你应该在这个方法中完成Activity的初始化操作，比如加载布局绑定事件等等</li><li>onStart()。这个方法在Activity由不可见变为可见的时候调用</li><li>onResume()。这个方法在Activity准备好和用户进行交互的时候调用。此时的Activity一定位于返回栈的栈顶，并且处于运行状态</li><li>onPause()。这个方法在系统准备去启动或者恢复另一个Activity的时候调用。我们通常会在这个方法将消耗CPU的资源释放掉，以及保存一些关键数据，但这个方法的执行速度一定要快，不如会影响到新的栈顶Actiity的使用</li><li>onStop()。这个方法在Activity完全不可见时候调用。它和onPause()方法的主要区别在于，如果启动新的Activity时一个对话框式的Activity，那么onPause()方法会得到执行，而onStop方法并不会执行</li><li>onDestory()。这个方法在Activity被销毁之前调用，之后Activity的状态将变为销毁状态</li><li>onRestart()。。这个方法在Activity由停止状态变为运行状态之前调用，也就是Activity 被重新启动了</li></ul><p>以上7个方法中除了onRestart()方法，其他都是两两相对的，从而又可以将Activity分为以 下3种生存期。</p><p>完整生存期。Activity在onCreate()方法和onDestroy()方法之间所经历的就是完整生 存期。一般情况下，一个Activity会在onCreate()方法中完成各种初始化操作，而在 onDestroy()方法中完成释放内存的操作。</p><p>可见生存期。Activity在onStart()方法和onStop()方法之间所经历的就是可见生存 期。在可见生存期内，Activity对于用户总是可见的，即便有可能无法和用户进行交互。我 们可以通过这两个方法合理地管理那些对用户可见的资源。比如在onStart()方法中对资 源进行加载，而在onStop()方法中对资源进行释放，从而保证处于停止状态的Activity不 会占用过多内存。</p><p>前台生存期 。Activity在onResume()方法和onPause()方法之间所经历的就是前台生存 期。在前台生存期内，Activity总是处于运行状态，此时的Activity是可以和用户进行交互 的，我们平时看到和接触最多的就是这个状态下的Activity。</p><h3 id="体验Activity的生命周期"><a href="#体验Activity的生命周期" class="headerlink" title="体验Activity的生命周期"></a>体验Activity的生命周期</h3><p>讲了这么多理论知识，是时候进行实战了。下面我们将通过一个实例，让你可以更加直观地体 验Activity的生命周期。 这次我们不准备在ActivityTest这个项目的基础上修改了，而是新建一个项目。因此，首先关闭 ActivityTest项目，点击导航栏File→Close Project。然后新建一个ActivityLifeCycleTest项 目，新建项目的过程你应该已经非常清楚了，不需要我再进行赘述，这次我们允许Android Studio帮我们自动创建Activity和布局，这样可以省去不少工作，创建的Activity名和布局名都 使用默认值。 这样主Activity就创建完成了，我们还需要分别再创建两个子Activity——NormalActivity和 DialogActivity，下面一步步来实现。</p><p>右击com.example.activitylifecycletest包→New→Activity→Empty Activity，新建 NormalActivity，布局起名为normal_layout。然后使用同样的方式创建DialogActivity，布 局起名为dialog_layout</p><p>现在编辑normal_layout.xml文件，将里面的代码替换成如下内容：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layouot_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:ayout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:text</span>=<span class="string">&quot;This is a normal activity&quot;</span></span></span><br><span class="line"><span class="tag">              /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个布局中，我们非常简单地使用了一个TextView，用于显示一行文字，在下一章中你将会 学到关于TextView的更多用法</p><p>然后编辑dialog_layout.xml文件，将里面的代码替换成如下内容：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">&quot;vertacial&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:text</span>=<span class="string">&quot;This is a dialog activity&quot;</span></span></span><br><span class="line"><span class="tag">              /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两个布局文件的代码几乎没有区别，只是显示的文字不同而已</p><p>其实从名字上就可以看出，这两个Activity一个是普通的Activity，一个是对话框式的 Activity。可是我们并没有修改Activity的任何代码，两个Activity的代码应该几乎是一模一样 的，那么是在哪里将Activity设成对话框式的呢？别着急，下面我们马上开始设置。修改 AndroidManifest.xml的标签的配置，如下所示：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.DialogActivity&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.AppCompat.Dialog&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.NormalActivity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里是两个Activity的注册代码，但是DialogActivity的代码有些不同，我们给它使用了一个 android:theme属性，用于给当前Activity指定主题，Android系统内置有很多主题可以选 择，当然我们也可以定制自己的主题，而这里的@style&#x2F;Theme.AppCompat.Dialog则毫无 疑问是让DialogActivity使用对话框式的主题。</p><p>接下来我们修改activity_main.xml，重新定制主Activity的布局，将里面的代码替换成如下内 容</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/startNormalActivity&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Start NormalActivity&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/startDialogActivity&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Start DialogActivity&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>最后修改MainActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> tag = <span class="string">&quot;MainActivity&quot;</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState)</span></span></span><br><span class="line">    Log.d(tag,<span class="string">&quot;onCreate&quot;</span>)</span><br><span class="line">    setContentView(R.layout.activity_main)</span><br><span class="line">    <span class="keyword">val</span> startNormalActivity:Button = findViewById(R.id.startNormalActivity)</span><br><span class="line">    <span class="keyword">val</span> startDialogActivity:Button = findViewById(R.id.startDialogActivity)</span><br><span class="line">    startNormalActivity.setOnClickListener&#123;</span><br><span class="line">        <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,NormalActivity::<span class="keyword">class</span>.java)</span><br><span class="line">        startActivity(intent)</span><br><span class="line">    &#125;</span><br><span class="line">    startDialogActivity.setOnClickListener&#123;</span><br><span class="line">        <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,DialogActivity::<span class="keyword">class</span>.java)</span><br><span class="line">        startActivity(intent)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart()</span><br><span class="line">        Log.d(tag,<span class="string">&quot;onStart&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        Log.d(tag,<span class="string">&quot;onResume&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPause</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause()</span><br><span class="line">        Log.d(tag,<span class="string">&quot;onPause&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop()</span><br><span class="line">        Log.d(tag,<span class="string">&quot;onStop&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        Log.d(tag,<span class="string">&quot;onDestroy&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRestart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRestart()</span><br><span class="line">        Log.d(tag,<span class="string">&quot;onRestart&quot;</span>)</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在onCreate()方法中，我们分别为两个按钮注册了点击事件，点击第一个按钮会启动 NormalActivity，点击第二个按钮会启动DialogActivity。然后在Activity的7个回调方法中分 别打印了一句话，这样就可以通过观察日志来更直观地理解Activity的生命周期。</p><h3 id="Activity被回收了怎么办"><a href="#Activity被回收了怎么办" class="headerlink" title="Activity被回收了怎么办"></a>Activity被回收了怎么办</h3><p>前面我们说过，当一个Activity进入了停止状态，是有可能被系统回收的。那么想象以下场景： 应用中有一个Activity A，用户在Activity A的基础上启动了Activity B，Activity A就进入了 停止状态，这个时候由于系统内存不足，将Activity A回收掉了，然后用户按下Back键返回 Activity A，会出现什么情况呢？其实还是会正常显示Activity A的，只不过这时并不会执行 onRestart()方法，而是会执行Activity A的onCreate()方法，因为Activity A在这种情况 下会被重新创建一次。 这样看上去好像一切正常，可是别忽略了一个重要问题：Activity A中是可能存在临时数据和状 态的。打个比方，MainActivity中如果有一个文本输入框，现在你输入了一段文字，然后启动 NormalActivity，这时MainActivity由于系统内存不足被回收掉，过了一会你又点击了Back键 回到MainActivity，你会发现刚刚输入的文字都没了，因为MainActivity被重新创建了。</p><p>如果我们的应用出现了这种情况，是会比较影响用户体验的，所以得想想办法解决这个问题。 其实，Activity中还提供了一个onSaveInstanceState()回调方法，这个方法可以保证在 Activity被回收之前一定会被调用，因此我们可以通过这个方法来解决问题</p><p>onSaveInstanceState()方法会携带一个Bundle类型的参数，Bundle提供了一系列的方法 用于保存数据，比如可以使用putString()方法保存字符串，使用putInt()方法保存整型数 据，以此类推。每个保存方法需要传入两个参数，第一个参数是键，用于后面从Bundle中取 值，第二个参数是真正要保存的内容</p><p>在MainActivity中添加如下代码就可以将临时数据进行保存了</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSaveInstanceState</span><span class="params">(outSide:<span class="type">Bundle</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onSaveInstanceState(outState)</span><br><span class="line">    <span class="keyword">val</span> tempData = <span class="string">&quot;Something you just typed&quot;</span></span><br><span class="line">    outState.putString(<span class="string">&quot;data_key&quot;</span>,tempData)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据是已经保存下来了，那么我们应该在哪里进行恢复呢？细心的你也许早就发现，我们一直 使用的onCreate()方法其实也有一个Bundle类型的参数。这个参数在一般情况下都是 null，但是如果在Activity被系统回收之前，你通过onSaveInstanceState()方法保存数 据，这个参数就会带有之前保存的全部数据，我们只需要再通过相应的取值方法将数据取出即 可。</p><p>修改MainActivity的onCreate()方法，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">    Log.d(tag,<span class="string">&quot;onCreate&quot;</span>)</span><br><span class="line">    setContentView(R.layout.activity_main)</span><br><span class="line">    <span class="keyword">if</span>(savedInstanceState!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">val</span> tempData = savadInstanceState.getString(<span class="string">&quot;data_key&quot;</span>)</span><br><span class="line">        Log.d(tag,<span class="string">&quot;tempData is <span class="variable">$tempData</span>&quot;</span>)</span><br><span class="line">        ............</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Activity的启动模式"><a href="#Activity的启动模式" class="headerlink" title="Activity的启动模式"></a>Activity的启动模式</h2><p>Activity的启动模式对你来说应该是个全新的概念，在实际项目中我们应该根据特定的需求为每 个Activity指定恰当的启动模式。启动模式一共有4种，分别是standard、singleTop、 singleTask和singleInstance，可以在AndroidManifest.xml中通过给标签指定 android:launchMode属性来选择启动模式。下面我们来逐个进行学习。</p><h3 id="standard"><a href="#standard" class="headerlink" title="standard"></a>standard</h3><p>tandard是Activity默认的启动模式，在不进行显式指定的情况下，所有Activity都会自动使用 这种启动模式。到目前为止，我们写过的所有Activity都是使用的standard模式。经过上一节 的学习，你已经知道了Android是使用返回栈来管理Activity的，在standard模式下，每当启 动一个新的Activity，它就会在返回栈中入栈，并处于栈顶的位置。对于使用standard模式的 Activity，系统不会在乎这个Activity是否已经在返回栈中存在，每次启动都会创建一个该 Activity的新实例。</p><h3 id="singleTop"><a href="#singleTop" class="headerlink" title="singleTop"></a>singleTop</h3><p>可能在有些情况下，你会觉得standard模式不太合理。Activity明明已经在栈顶了，为什么再 次启动的时候还要创建一个新的Activity实例呢？别着急，这只是系统默认的一种启动模式而 已，你完全可以根据自己的需要进行修改，比如使用singleTop模式。当Activity的启动模式指 定为singleTop，在启动Activity时如果发现返回栈的栈顶已经是该Activity，则认为可以直接 使用它，不会再创建新的Activity实例。</p><p>我们还是通过实践来体会一下，修改AndroidManifest.xml中FirstActivity的启动模式，如下 所示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">          <span class="attr">addroid:name</span>=<span class="string">&quot;.FirstActivity&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:launchMode</span>=<span class="string">&quot;singleTop&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:label</span>=<span class="string">&quot;This is FirstActivity&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="singleTask"><a href="#singleTask" class="headerlink" title="singleTask"></a>singleTask</h3><p>使用singleTop模式可以很好地解决重复创建栈顶Activity的问题，但是正如你在上一节所看到 的，如果该Activity并没有处于栈顶的位置，还是可能会创建多个Activity实例的。那么有没有 什么办法可以让某个Activity在整个应用程序的上下文中只存在一个实例呢？这就要借助 singleTask模式来实现了。当Activity的启动模式指定为singleTask，每次启动该Activity时， 系统首先会在返回栈中检查是否存在该Activity的实例，如果发现已经存在则直接使用该实例， 并把在这个Activity之上的所有其他Activity统统出栈，如果没有发现就会创建一个新的 Activity实例</p><h3 id="singleInstance"><a href="#singleInstance" class="headerlink" title="singleInstance"></a>singleInstance</h3><p>singleInstance模式应该算是4种启动模式中最特殊也最复杂的一个了，你也需要多花点工夫来 理解这个模式。不同于以上3种启动模式，指定为singleInstance模式的Activity会启用一个新 的返回栈来管理这个Activity（其实如果singleTask模式指定了不同的taskAffinity，也会启动 一个新的返回栈）</p><h2 id="Activity的最佳实践"><a href="#Activity的最佳实践" class="headerlink" title="Activity的最佳实践"></a>Activity的最佳实践</h2><h3 id="知晓当前是在哪一个Activity"><a href="#知晓当前是在哪一个Activity" class="headerlink" title="知晓当前是在哪一个Activity"></a>知晓当前是在哪一个Activity</h3><p>我们还是在ActivityTest项目的基础上修改，首先需要新建一个BaseActivity类。右击 com.example.activitytest包→New→Kotlin File&#x2F;Class，在弹出的窗口中输入 BaseActivity，创建类型选择Class</p><p>注意，这里的BaseActivity和普通Activity的创建方式并不一样，因为我们不需要让 BaseActivity在AndroidManifest.xml中注册，所以选择创建一个普通的Kotlin类就可以 了。然后让BaseActivity继承自AppCompatActivity，并重写onCreate()方法，如下所 示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        Log.d(<span class="string">&quot;BaseActivity&quot;</span>,javaClass.simpleName)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在onCreate()方法中加了一行日志，用于打印当前实例的类名。这里我要额外说明一 下，Kotlin中的javaClass表示获取当前实例的Class对象，相当于在Java中调用 getClass()方法；而Kotlin中的BaseActivity::class.java表示获取BaseActivity类的 Class对象，相当于在Java中调用BaseActivity.class。在上述代码中，我们先是获取了当 前实例的Class对象，然后再调用simpleName获取当前实例的类名。</p><p>接下来我们需要让BaseActivity成为ActivityTest项目中所有Activity的父类，为了使 BaseActivity可以被继承，我已经提前在类名的前面加上了open关键字。然后修改 FirstActivity、SecondActivity和ThirdActivity的继承结构，让它们不再继承自 AppCompatActivity，而是继承自BaseActivity。而由于BaseActivity又是继承自 AppCompatActivity的，所以项目中所有Activity的现有功能并不受影响，它们仍然继承了 Activity中的所有特性</p><p>现在每当我们进入一个Activity的界面，该Activity的类名就会被打印出来，这样我们就可以时 刻知晓当前界面对应的是哪一个Activity了。</p><h3 id="随时随地退出程序"><a href="#随时随地退出程序" class="headerlink" title="随时随地退出程序"></a>随时随地退出程序</h3><p>如果目前你手机的界面还停留在ThirdActivity，你会发现当前想退出程序是非常不方便的，需 要连按3次Back键才行。按Home键只是把程序挂起，并没有退出程序。如果我们的程序需要 注销或者退出的功能该怎么办呢？看来要有一个随时随地都能退出程序的方案才行。其实解决思路也很简单，只需要用一个专门的集合对所有的Activity进行管理就可以了。下面我 们就来实现一下。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> ActivityCollector&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> activities = ArrayList&lt;Activity&gt;()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">addActivity</span><span class="params">(activity:<span class="type">Activity</span>)</span></span>&#123;</span><br><span class="line">        activities.add(activity)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">removeActivity</span><span class="params">(activity:<span class="type">Activity</span>)</span></span>&#123;</span><br><span class="line">        activities.remove(activity)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">finishAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(activity <span class="keyword">in</span> activities)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing)&#123;</span><br><span class="line">                activity.finish()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        activities.clear()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来修改BaseActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span>:<span class="type">AppCompatActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        Log.d(<span class="string">&quot;BaseActivity&quot;</span>,javaClass.simpleName)</span><br><span class="line">        ActivityCollector.addActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        ActivityCollector.removeActivity(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在BaseActivity的onCreate()方法中调用了ActivityCollector的addActivity()方 法，表明将当前正在创建的Activity添加到集合里。然后在BaseActivity中重写 onDestroy()方法，并调用了ActivityCollector的removeActivity()方法，表明从集 合里移除一个马上要销毁的Activity</p><p>从此以后，不管你想在什么地方退出程序，只需要调用ActivityCollector.finishAll() 方法就可以了。例如在ThirdActivity界面想通过点击按钮直接退出程序，只需将代码改成如下 形式</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ThirdActivity</span>:<span class="type">BaseActivity</span>()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState:<span class="type">Bundle</span>?)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        Log.d(<span class="string">&quot;ThirdActivity&quot;</span>,<span class="string">&quot;Task id is <span class="variable">$taskId</span>&quot;</span>)</span><br><span class="line">        setContentView(R.layout.third_layout)</span><br><span class="line">        <span class="keyword">val</span> button3:Button = findViewById(R.id.Button3)</span><br><span class="line">        button3.setOnClickListener&#123;</span><br><span class="line">            ActivityColletor.finishAll()</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然你还可以在销毁所有Activity的代码后面再加上杀掉当前进程的代码，以保证程序完全退 出，杀掉进程的代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">android.os.Process.killProcess(android.os.Process.myPid())</span><br></pre></td></tr></table></figure><p>killProcess()方法用于杀掉一个进程，它接收一个进程id参数，我们可以通过myPid()方 法来获得当前程序的进程id。需要注意的是，killProcess()方法只能用于杀掉当前程序的 进程，不能用于杀掉其他程序</p><h3 id="启动Activity的最佳方法"><a href="#启动Activity的最佳方法" class="headerlink" title="启动Activity的最佳方法"></a>启动Activity的最佳方法</h3><p>假设SecondActivity中需要用到两个非常重要的字符串参数，在启动SecondActivity的时候必 须传递过来，那么我们很容易会写出如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,SecondActivity::<span class="keyword">class</span>.java)</span><br><span class="line">intent.putExtra(<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;data1&quot;</span>)</span><br><span class="line">intent.putExtra(<span class="string">&quot;param2&quot;</span>,<span class="string">&quot;data2&quot;</span>)</span><br></pre></td></tr></table></figure><p>虽然这样写是完全正确的，但是在真正的项目开发中经常会出现对接的问题。比如 SecondActivity并不是由你开发的，但现在你负责开发的部分需要启动SecondActivity，而你 却不清楚启动SecondActivity需要传递哪些数据。这时无非就有两个办法：一个是你自己去阅 读SecondActivity中的代码，另一个是询问负责编写SecondActivity的同事。你会不会觉得很 麻烦呢？其实只需要换一种写法，就可以轻松解决上面的窘境。 修改SecondActivity中的代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SecondActivity</span>:<span class="type">BaseActivity</span>()&#123;</span><br><span class="line">    compain <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">actionStart</span><span class="params">(context:<span class="type">Context</span>,data1:<span class="type">String</span>,data2:<span class="type">String</span>)</span></span>&#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(context,SecondActivity::<span class="keyword">class</span>.java)</span><br><span class="line">            intent.putExtra(<span class="string">&quot;param1&quot;</span>,data1)</span><br><span class="line">            intent.putExtra(<span class="string">&quot;param2&quot;</span>,data2)</span><br><span class="line">            context.startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里我们使用了一个新的语法结构companion object，并在companion object中定义 了一个actionStart()方法。之所以要这样写，是因为Kotlin规定，所有定义在companion object中的方法都可以使用类似于Java静态方法的形式调用。关于companion object的更 多内容，我会在本章的Kotlin课堂中进行讲解</p><p>接下来我们重点看actionStart()方法，在这个方法中完成了Intent的构建，另外所有 SecondActivity中需要的数据都是通过actionStart()方法的参数传递过来的，然后把它们 存储到Intent中，最后调用startActivity()方法启动SecondActivity。</p><p>这样写的好处在哪里呢？最重要的一点就是一目了然，SecondActivity所需要的数据在方法参 数中全部体现出来了，这样即使不用阅读SecondActivity中的代码，不去询问负责编写 SecondActivity的同事，你也可以非常清晰地知道启动SecondActivity需要传递哪些数据。另  外，这样写还简化了启动Activity的代码，现在只需要一行代码就可以启动SecondActivity， 如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">button1.setOnClickListener&#123;</span><br><span class="line">    SecondActivity.actionStart(<span class="keyword">this</span>,<span class="string">&quot;data1&quot;</span>,<span class="string">&quot;data2&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Kotlin课堂：标准函数和静态方法"><a href="#Kotlin课堂：标准函数和静态方法" class="headerlink" title="Kotlin课堂：标准函数和静态方法"></a>Kotlin课堂：标准函数和静态方法</h2><h3 id="标准函数with、run和apply"><a href="#标准函数with、run和apply" class="headerlink" title="标准函数with、run和apply"></a>标准函数with、run和apply</h3><p> Kotlin的标准函数指的是Standard.kt文件中定义的函数，任何Kotlin代码都可以自由地调用所 有的标准函数</p><p>下面我们从with函数开始学起。with函数接收两个参数：第一个参数可以是一个任意类型的对 象，第二个参数是一个Lambda表达式。with函数会在Lambda表达式中提供第一个参数对象 的上下文，并使用Lambda表达式中的最后一行代码作为返回值返回。示例代码如下：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> result = with(obj) &#123; </span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">这里是obj的上下文 </span><br><span class="line">    <span class="string">&quot;value&quot;</span> <span class="comment">// with函数的返回值 </span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>那么这个函数有什么作用呢？它可以在连续调用同一个对象的多个方法时让代码变得更加精 简，下面我们来看一个具体的例子。</p><p>比如有一个水果列表，现在我们想吃完所有水果，并将结果打印出来，就可以这样写</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> builder = StringBuilder()</span><br><span class="line">builder.append(<span class="string">&quot;Start eating fruits.\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">    builder.append(fruit).append(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">builder.append(<span class="string">&quot;Ate all fruits.&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> result = builder.toString()</span><br><span class="line">println(result)</span><br></pre></td></tr></table></figure><p>仔细观察上述代码，你会发现我们连续调用了很多次builder对象的方法。其实这个时候就可 以考虑使用with函数来让代码变得更加精简，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> result = with(StringBuilder())&#123;</span><br><span class="line">    append(<span class="string">&quot;Start eating fruits.\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">       append(fruit).append(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    append(<span class="string">&quot;Ate all fruits&quot;</span>)</span><br><span class="line">    toString</span><br><span class="line">&#125;</span><br><span class="line">println(result)</span><br></pre></td></tr></table></figure><p>这段代码乍一看可能有点迷惑性，其实很好理解。首先我们给with函数的第一个参数传入了一 个StringBuilder对象，那么接下来整个Lambda表达式的上下文就会是这个 StringBuilder对象。于是我们在Lambda表达式中就不用再像刚才那样调用 builder.append()和builder.toString()方法了，而是可以直接调用append()和 toString()方法。Lambda表达式的最后一行代码会作为with函数的返回值返回，最终我们 将结果打印出来。 这两段代码的执行结果是一模一样的，但是明显第二段代码的写法更加简洁一些，这就是with 函数的作用</p><p>下面我们再来学习另外一个常用的标准函数：run函数。run函数的用法和使用场景其实和 with函数是非常类似的，只是稍微做了一些语法改动而已。首先run函数通常不会直接调用， 而是要在某个对象的基础上调用；其次run函数只接收一个Lambda参数，并且会在Lambda表 达式中提供调用对象的上下文。其他方面和with函数是一样的，包括也会使用Lambda表达式 中的最后一行代码作为返回值返回。示例代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> result = obj.run &#123; </span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">这里是obj的上下文 </span><br><span class="line">    <span class="string">&quot;value&quot;</span> <span class="comment">// run函数的返回值 </span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>那么现在我们就可以使用run函数来修改一下吃水果的这段代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> result = StringBuilder().run&#123;</span><br><span class="line">    append(<span class="string">&quot;Start eating fruits.\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">        append(fruit).append(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    append(<span class="string">&quot;Ate all fruits&quot;</span>)</span><br><span class="line">    toSring()</span><br><span class="line">&#125;</span><br><span class="line">println(result)</span><br></pre></td></tr></table></figure><p>最后我们再来学习标准函数中的apply函数。apply函数和run函数也是极其类似的，都要在某 个对象上调用，并且只接收一个Lambda参数，也会在Lambda表达式中提供调用对象的上下 文，但是apply函数无法指定返回值，而是会自动返回调用对象本身。示例代码如下：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> result = obj.apply &#123; </span><br><span class="line">     <span class="comment">// 这里是obj的上下文 </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// result == obj </span></span><br></pre></td></tr></table></figure><p>那么现在我们再使用apply函数来修改一下吃水果的这段代码，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> result = StringBuilder().apply&#123;</span><br><span class="line">    append(<span class="string">&quot;Start eating fruits.\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">        append(fruit).append(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里的代码变化，由于apply函数无法指定返回值，只能返回调用对象本身，因此这里的 result实际上是一个StringBuilder对象，所以我们在最后打印的时候还要再调用它的 toString()方法才行。这段代码的执行结果和前面两段仍然是完全相同的，我就不再重复演 示了</p><p>回想一下刚刚在最佳实践环节编写的启动Activity的代码</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> intent = Intent(context,SecnodActivity::<span class="keyword">class</span>.java)</span><br><span class="line">intent.putExtra(<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;data1&quot;</span>)</span><br><span class="line">intent.putExtra(<span class="string">&quot;param2&quot;</span>,<span class="string">&quot;data2&quot;</span>)</span><br><span class="line">context.startActivity(intent)</span><br></pre></td></tr></table></figure><p>这里每传递一个参数就要调用一次intent.putExtra()方法，如果要传递10个参数，那就得 调用10次。对于这种情况，我们就可以使用标准函数来对代码进行精简，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> intent = Intent(context,SecondActivity::<span class="keyword">class</span>.java).apply&#123;</span><br><span class="line">    putExtra(<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;data1&quot;</span>)</span><br><span class="line">    putExtra(<span class="string">&quot;param2&quot;</span>,<span class="string">&quot;data2&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">context.startActivity(intent)</span><br></pre></td></tr></table></figure><p>可以看到，由于Lambda表达式中的上下文就是Intent对象，所以我们不再需要调用 intent.putExtra()方法，而是直接调用putExtra()方法就可以了。传递的参数越多，这 种写法的优势也就越明显</p><h3 id="定义静态方法"><a href="#定义静态方法" class="headerlink" title="定义静态方法"></a>定义静态方法</h3><p>像工具类这种功能，在Kotlin中就非常推荐使用单例类的方式来实现，比如上述的Util工具 类，如果使用Kotlin来实现的话就可以这样写</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> Util&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">doAction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(<span class="string">&quot;do action&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然这里的doAction()方法并不是静态方法，但是我们仍然可以使用Util.doAction()的 方式来调用，这就是单例类所带来的便利性。</p><p>不过，使用单例类的写法会将整个类中的所有方法全部变成类似于静态方法的调用方式，而如 果我们只是希望让类中的某一个方法变成静态方法的调用方式该怎么办呢？这个时候就可以使 用刚刚在最佳实践环节用到的companion object了，示例如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Util</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">doAction1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(<span class="string">&quot;do action1&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">doAction2</span><span class="params">()</span></span>&#123;</span><br><span class="line">            println(<span class="string">&quot;do action2&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而如果你确确实实需要定义真正的静态方法， Kotlin仍然提供了两种实现方式：注解和顶层 方法。下面我们来逐个学习一下。</p><p>如果我们给单例类或companion object中的方 法加上@JvmStatic注解，那么Kotlin编译器就会将这些方法编译成真正的静态方法，如下所 示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Util</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">doAction1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(<span class="string">&quot;do action1&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">        <span class="meta">@JvmStatic</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">doAction2</span><span class="params">()</span></span>&#123;</span><br><span class="line">            println(<span class="string">&quot;do action2&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，@JvmStatic注解只能加在单例类或companion object中的方法上，如果你尝试加在 一个普通方法上，会直接提示语法错误。</p><p>再来看顶层方法，顶层方法指的是那些没有定义在任何类中的方法，比如我们在上一节中编写 的main()方法。Kotlin编译器会将所有的顶层方法全部编译成静态方法，因此只要你定义了一 个顶层方法，那么它就一定是静态方法</p><p>想要定义一个顶层方法，首先需要创建一个Kotlin文件。对着任意包名右击 → New → Kotlin File&#x2F;Class，在弹出的对话框中输入文件名即可。注意创建类型要选择File，点击“OK”完成创建，这样刚刚的包名路径下就会出现一个Helper.kt文件。现在我们在这个文件 中定义的任何方法都会是顶层方法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kotlin</title>
      <link href="/2024/11/29/kotlin/"/>
      <url>/2024/11/29/kotlin/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="val"><a href="#val" class="headerlink" title="val"></a>val</h2><p>val（value的简写）用来声明一个不可变的变量，这种变量在初始赋值之后就再也不能重新赋 值，对应Java中的final变量。</p><h2 id="var"><a href="#var" class="headerlink" title="var"></a>var</h2><p>var（variable的简写）用来声明一个可变的变量，这种变量在初始赋值之后仍然可以再被重新 赋值，对应Java中的非final变量。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> a=<span class="number">10</span></span><br><span class="line">    println(<span class="string">&quot;a = &quot;</span> + a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示的进行变量声明"><a href="#显示的进行变量声明" class="headerlink" title="显示的进行变量声明"></a>显示的进行变量声明</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> a: <span class="built_in">Int</span> = <span class="number">10</span></span><br></pre></td></tr></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">methodName</span><span class="params">(param1: <span class="type">Int</span>, param2: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函数名后面紧跟着一对括号，里面可以声明该函数接收什么参数，参数的数量可以是任意多<br>个，例如上述示例就表示该函数接收两个Int类型的参数。参数的声明格式是“参数名: 参数类<br>型”，其中参数名也是可以随便定义的，这一点和函数名类似。如果不想接收任何参数，那么写<br>一对空括号就可以了</li><li>参数括号后面的那部分是可选的，用于声明该函数会返回什么类型的数据，上述示例就表示该<br>函数会返回一个Int类型的数据。如果你的函数不需要返回任何数据，这部分可以直接不写。</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.helloworld</span><br><span class="line"><span class="keyword">import</span> kotlin.math.max</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> num1:<span class="built_in">Int</span> = <span class="number">10</span></span><br><span class="line">    <span class="keyword">val</span> num2:<span class="built_in">Int</span> = <span class="number">100</span></span><br><span class="line">    <span class="keyword">val</span> value = largerNumber(num1,num2)</span><br><span class="line">    println(<span class="string">&quot;larger number is &quot;</span> + value)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> max(num1,num2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h3><p>当一个函数中只有一行代码时，Kotlin允许我们不必编写函数体，可以直接将唯一的一行代码写 在函数定义的尾部，中间用等号连接即可。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span> =max(num1,num2)</span><br></pre></td></tr></table></figure><p>使用这种语法，return关键字也可以省略了，等号足以表达返回值的意思。另外，还记得 Kotlin出色的类型推导机制吗？在这里它也可以发挥重要的作用。由于max()函数返回的是一个 Int值，而我们在largerNumber()函数的尾部又使用等号连接了max()函数，因此Kotlin可 以推导出largerNumber()函数返回的必然也是一个Int值，这样就不用再显式地声明返回值 类型了，代码可以进一步简化成如下形式：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>=max(num1,num2)</span><br></pre></td></tr></table></figure><h1 id="程序的逻辑控制"><a href="#程序的逻辑控制" class="headerlink" title="程序的逻辑控制"></a>程序的逻辑控制</h1><h2 id="if条件语句"><a href="#if条件语句" class="headerlink" title="if条件语句"></a>if条件语句</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span>(num1&gt;num2)&#123;</span><br><span class="line">        value=num1</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        value=num2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kotlin中的if语句相比于Java有一个额外的功能，它是可以有返回值的，返回值就是if语句每 一个条件中最后一行代码的返回值。因此，上述代码就可以简化成如下形式</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>:<span class="built_in">Int</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="keyword">if</span>(num1&gt;num2)&#123;</span><br><span class="line">        num1</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        num2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仔细观察上述代码，你会发现value其实也是一个多余的变量，我们可以直接将if语句返回， 这样代码将会变得更加精简，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">if</span>(num1&gt;num2)&#123;</span><br><span class="line">        num1</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        num2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用语法糖，使得代码更加精简</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">largerNumber</span><span class="params">(num1:<span class="type">Int</span>,num2:<span class="type">Int</span>)</span></span> = <span class="keyword">if</span>(num1&gt;num2)&#123;</span><br><span class="line">    num1</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    num2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="when条件语句"><a href="#when条件语句" class="headerlink" title="when条件语句"></a>when条件语句</h2><p>编写一个查询考试成绩的功能，输入一个学生的姓名，返回该学生考试的分数。我 们先用上一小节学习的if语句来实现这个功能</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getScore</span><span class="params">(name:<span class="type">String</span>)</span></span> = <span class="keyword">if</span>(name==<span class="string">&quot;Tom&quot;</span>)&#123;</span><br><span class="line">    <span class="number">86</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(name==<span class="string">&quot;Jim&quot;</span>)&#123;</span><br><span class="line">    <span class="number">77</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(name==<span class="string">&quot;Jack&quot;</span>)&#123;</span><br><span class="line">    <span class="number">95</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(name==<span class="string">&quot;Lily&quot;</span>)&#123;</span><br><span class="line">    <span class="number">100</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然上述代码确实可以实现我们想要的功能，但是写了这么多的if和else，你有没有觉得代码 很冗余？没错，当你的判断条件非常多的时候，就是应该考虑使用when语句的时候，现在我们 将代码改成如下写法</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getScore</span><span class="params">(name:<span class="type">String</span>)</span></span> = <span class="keyword">when</span>(name)&#123;</span><br><span class="line">    <span class="string">&quot;Tom&quot;</span>-&gt;<span class="number">86</span></span><br><span class="line">    <span class="string">&quot;Jim&quot;</span>-&gt;<span class="number">77</span></span><br><span class="line">    <span class="string">&quot;Jack&quot;</span>-&gt;<span class="number">95</span></span><br><span class="line">    <span class="string">&quot;Lily&quot;</span>-&gt;<span class="number">100</span></span><br><span class="line">    <span class="keyword">else</span>-&gt;<span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>when语句允许传入一个任意类型的参数，然后可以在when的结构体中定义一系列的条件，格式 是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">匹配值 -&gt; &#123;执行逻辑&#125;</span><br></pre></td></tr></table></figure><p>当你的执行逻辑只有一行代码时，{ }可以省略。这样再来看上述代码就很好理解了吧</p><p>除了精确匹配之外，when语句还允许进行类型匹配。什么是类型匹配呢？这里我再举个例子</p><p>定义一个checkNumber()函数，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">checkNumber</span><span class="params">(num:<span class="type">Number</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">when</span>(num)&#123;</span><br><span class="line">        <span class="keyword">is</span> <span class="built_in">Int</span>-&gt;println(<span class="string">&quot;number is Int&quot;</span>)</span><br><span class="line">        <span class="keyword">is</span> <span class="built_in">Double</span>-&gt;println(<span class="string">&quot;number is Double&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span> -&gt;println(<span class="string">&quot;number not support&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中，is关键字就是类型匹配的核心，它相当于Java中的instanceof关键字。由于 checkNumber()函数接收一个Number类型的参数，这是Kotlin内置的一个抽象类，像Int、 Long、Float、Double等与数字相关的类都是它的子类，所以这里就可以使用类型匹配来判断传入的参数到底属于什么类型，如果是Int型或Double型，就将该类型打印出来，否则就打 印不支持该参数的类型。</p><p>when语句的基本用法就是这些，但其实when语句还有一种不带参数的用法，虽然这种用法可能 不太常用，但有的时候却能发挥很强的扩展性</p><p>拿刚才的getScore()函数举例，如果我们不在when语句中传入参数的话，还可以这么写</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getScore</span><span class="params">(name:<span class="type">String</span>)</span></span> = <span class="keyword">when</span>&#123;</span><br><span class="line">    name==<span class="string">&quot;Tom&quot;</span>-&gt;<span class="number">86</span></span><br><span class="line">    name==<span class="string">&quot;Jim&quot;</span>-&gt;<span class="number">77</span></span><br><span class="line">    name==<span class="string">&quot;Jack&quot;</span>-&gt;<span class="number">95</span></span><br><span class="line">    name==<span class="string">&quot;Lily&quot;</span>-&gt;<span class="number">100</span></span><br><span class="line">    <span class="keyword">else</span>-&gt;<span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这种用法是将判断的表达式完整地写在when的结构体当中。注意，Kotlin中判断字 符串或对象是否相等可以直接使用&#x3D;&#x3D;关键字，而不用像Java那样调用equals()方法。可能你 会觉得这种无参数的when语句写起来比较冗余，但有些场景必须使用这种写法才能实现。举个 例子，假设所有名字以Tom开头的人，他的分数都是86分，这种场景如果用带参数的when语句 来写就无法实现，而使用不带参数的when语句就可以这样写：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getScore</span><span class="params">(name:<span class="type">String</span>)</span></span> = <span class="keyword">when</span>&#123;</span><br><span class="line">    name.startWith(<span class="string">&quot;Tom&quot;</span>)-&gt;<span class="number">86</span></span><br><span class="line">    name==<span class="string">&quot;Jim&quot;</span>-&gt;<span class="number">77</span></span><br><span class="line">    name==<span class="string">&quot;Jack&quot;</span>-&gt;<span class="number">95</span></span><br><span class="line">    name==<span class="string">&quot;Lily&quot;</span>-&gt;<span class="number">100</span></span><br><span class="line">    <span class="keyword">else</span>-&gt;<span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>在开始学习for-in循环之前，还得先向你普及一个区间的概念，因为这也是Java中没有的东 西。我们可以使用如下Kotlin代码来表示一个区间</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> range=<span class="number">0.</span><span class="number">.10</span></span><br></pre></td></tr></table></figure><p>在开始学习for-in循环之前，还得先向你普及一个区间的概念，因为这也是Java中没有的东 西。我们可以使用如下Kotlin代码来表示一个区间</p><p>有了区间之后，我们就可以通过for-in循环来遍历这个区间，比如在main()函数中编写如下 代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.10</span>)&#123;</span><br><span class="line">        println(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kotlin中可以使用until关键字来创建一个左闭右开的区间，如 下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> range=<span class="number">0</span> until <span class="number">10</span></span><br></pre></td></tr></table></figure><p>默认情况下，for-in循环每次执行循环时会在区间范围内递增1，相当于Java for-i循环中 i++的效果，而如果你想跳过其中的一些元素，可以使用step关键字：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">0</span> until <span class="number">10</span> step <span class="number">2</span>)&#123;</span><br><span class="line">        println(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码表示在遍历[0, 10)这个区间的时候，每次执行循环都会在区间范围内递增2，相当于 for-i循环中i &#x3D; i + 2的效果。</p><p>不过，前面我们所学习的..和until关键字都要求区间的左端必须小于等于区间的右端，也就 是这两种关键字创建的都是一个升序的区间。如果你想创建一个降序的区间，可以使用downTo 关键字，用法如下：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">10</span> downTo <span class="number">1</span>)&#123;</span><br><span class="line">        println(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.helloworld</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(name+<span class="string">&quot; is eating. He is &quot;</span>+ age +<span class="string">&quot;years old.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> p=Person()</span><br><span class="line">    p.name=<span class="string">&quot;Jack&quot;</span></span><br><span class="line">    p.age=<span class="number">19</span></span><br><span class="line">    p.eat()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承与构造函数"><a href="#继承与构造函数" class="headerlink" title="继承与构造函数"></a>继承与构造函数</h2><p>Student类</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.helloworld</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> sno=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">var</span> grade = <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一件事，使Person类可以被继承。可能很多人会觉得奇怪，尤其是有Java编程经验的人。一 个类本身不就是可以被继承的吗？为什么还要使Person类可以被继承呢？这就是Kotlin不同的 地方，在Kotlin中任何一个非抽象类默认都是不可以被继承的，相当于Java中给类声明了final 关键字。之所以这么设计，其实和val关键字的原因是差不多的，因为类和变量一样，最好都是 不可变的，而一个类允许被继承的话，它无法预知子类会如何实现，因此可能就会存在一些未 知的风险。Effective Java这本书中明确提到，如果一个类不是专门为继承而设计的，那么就应 该主动将它加上final声明，禁止它可以被继承</p><p>很明显，Kotlin在设计的时候遵循了这条编程规范，默认所有非抽象类都是不可以被继承的。之 所以这里一直在说非抽象类，是因为抽象类本身是无法创建实例的，一定要由子类去继承它才 能创建实例，因此抽象类必须可以被继承才行，要不然就没有意义了。由于Kotlin中的抽象类和 Java中并无区别，这里我就不再多讲了。 既然现在Person类是无法被继承的，我们得让它可以被继承才行，方法也很简单，在Person 类的前面加上open关键字就可以了，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加上open关键字之后，我们就是在主动告诉Kotlin编译器，Person这个类是专门为继承而设计 的，这样Person类就允许被继承了</p><p>第二件事，要让Student类继承Person类。在Java中继承的关键字是extends，而在Kotlin 中变成了一个冒号，写法如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> : <span class="type">Person</span>()&#123;</span><br><span class="line">    <span class="keyword">var</span> sno = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">var</span> grade = <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任何一个面向对象的编程语言都会有构造函数的概念，Kotlin中也有，但是Kotlin将构造函数分 成了两种：主构造函数和次构造函数</p><p>主构造函数将会是你最常用的构造函数，每个类默认都会有一个不带参数的主构造函数，当然 你也可以显式地给它指明参数。主构造函数的特点是没有函数体，直接定义在类名的后面即 可。比如下面这种写法：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">calss Student(<span class="keyword">val</span> sno:String,<span class="keyword">val</span> grade:<span class="built_in">Int</span>):Person()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主构造函数将会是你最常用的构造函数，每个类默认都会有一个不带参数的主构造函数，当然 你也可以显式地给它指明参数。主构造函数的特点是没有函数体，直接定义在类名的后面即 可。比如下面这种写法：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> student = Student(<span class="string">&quot;a123&quot;</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>你可能会问，主构造函数没有函数体，如果我想在主构造函数中编写一些逻辑，该怎么办呢？ Kotlin给我们提供了一个init结构体，所有主构造函数中的逻辑都可以写在里面：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="keyword">val</span> sno:String,<span class="keyword">val</span> grade:<span class="built_in">Int</span>):Person()&#123;</span><br><span class="line"><span class="keyword">init</span>&#123;</span><br><span class="line">        println(<span class="string">&quot;sno is &quot;</span>+sno)</span><br><span class="line">        println(<span class="string">&quot;grade is &quot;</span>+grade)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>果我们将Person改造一下，将姓名和年龄都放到主构造函数当中，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">Person</span>(<span class="keyword">val</span> name:String,<span class="keyword">val</span> age:<span class="built_in">Int</span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以在Student类的主构造函 数中加上name和age这两个参数，再将这两个参数传给Person类的构造函数，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="keyword">val</span> sno:String,<span class="keyword">val</span> grade:<span class="built_in">Int</span>,name:String,age:<span class="built_in">Int</span>):Person(name,age)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，我们在Student类的主构造函数中增加name和age这两个字段时，不能再将它们声明成 val，因为在主构造函数中声明成val或者var的参数将自动成为该类的字段，这就会导致和父 类中同名的name和age字段造成冲突。因此，这里的name和age参数前面我们不用加任何关键 字，让它的作用域仅限定在主构造函数当中即可。</p><p>现在就可以通过如下代码来创建一个Student类的实例：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> student = Student(<span class="string">&quot;a123&quot;</span>,<span class="number">5</span>,<span class="string">&quot;Jack&quot;</span>,<span class="number">19</span>)</span><br></pre></td></tr></table></figure><p>任何一个类只能有一个主构造函数，但是可以有多个次构造函数。次构造函数也可 以用于实例化一个类，这一点和主构造函数没有什么不同，只不过它是有函数体的。</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="keyword">val</span> sno:String,<span class="keyword">val</span> grade:<span class="built_in">Int</span>,name:String,age:<span class="built_in">Int</span>):Person(name,age)&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name:String,age:<span class="built_in">Int</span>):<span class="keyword">this</span>(<span class="string">&quot; &quot;</span>,<span class="number">0</span>,name,age)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">constructor</span>():<span class="keyword">this</span>(<span class="string">&quot;&quot;</span>,<span class="number">0</span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>次构造函数是通过constructor关键字来定义的，这里我们定义了两个次构造函数：第一个次 构造函数接收name和age参数，然后它又通过this关键字调用了主构造函数，并将sno和 grade这两个参数赋值成初始值；第二个次构造函数不接收任何参数，它通过this关键字调用 了我们刚才定义的第一个次构造函数，并将name和age参数也赋值成初始值，由于第二个次构 造函数间接调用了主构造函数，因此这仍然是合法的。</p><p>那么现在我们就拥有了3种方式来对Student类进行实体化，分别是通过不带参数的构造函数、 通过带两个参数的构造函数和通过带4个参数的构造函数，对应代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> student1 = Student()</span><br><span class="line"><span class="keyword">val</span> student2 = Student(<span class="string">&quot;Jack&quot;</span>,<span class="number">19</span>)</span><br><span class="line"><span class="keyword">val</span> student3 = Student(<span class="string">&quot;a123&quot;</span>,<span class="number">5</span>,<span class="string">&quot;Jack&quot;</span>,<span class="number">19</span>)</span><br></pre></td></tr></table></figure><p>那么接下来我们就再来看一种非常特殊的情况：类中只有次构造函数，没有主构造函数。这种 情况真的十分少见，但在Kotlin中是允许的。当一个类没有显式地定义主构造函数且定义了次构 造函数时，它就是没有主构造函数的。我们结合代码来看一下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:<span class="type">Person</span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name:String,age:<span class="built_in">Int</span>):<span class="keyword">super</span>(name,age)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里的代码变化，首先Student类的后面没有显式地定义主构造函数，同时又因为定义了 次构造函数，所以现在Student类是没有主构造函数的。那么既然没有主构造函数，继承 Person类的时候也就不需要再加上括号了。其实原因就是这么简单，只是很多人在刚开始学习 Kotlin的时候没能理解这对括号的意义和规则，因此总感觉继承的写法有时候要加上括号，有时 候又不要加，搞得晕头转向的，而在你真正理解了规则之后，就会发现其实还是很好懂的</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>接口是用于实现多态编程的重要组成部分。我们都知道，Java是单继承结构的语言，任何一个 类最多只能继承一个父类，但是却可以实现任意多个接口，Kotlin也是如此</p><h3 id="Study接口"><a href="#Study接口" class="headerlink" title="Study接口"></a>Study接口</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Study</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">readBooks</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">doHomework</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就可以让Student类去实现Study接口了，这里我将Student类原有的代码调整了一 下，以突出继承父类和实现接口的区别</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(name:String,age:<span class="built_in">Int</span>):Person(name,age),Study&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">readBooks</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(name+<span class="string">&quot; is reading.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">doHomework</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(name+<span class="string">&quot; is doing homework.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们可以在main()函数中编写如下代码来调用这两个接口中的函数</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> student=Studnet(<span class="string">&quot;Jack&quot;</span>,<span class="number">19</span>)</span><br><span class="line">    doStudy(student)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">doStudy</span><span class="params">(study:<span class="type">Study</span>)</span></span>&#123;</span><br><span class="line">    study.redBooks()</span><br><span class="line">    study.doHomework()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java和Kotlin函数可见性修饰符对照表"><a href="#Java和Kotlin函数可见性修饰符对照表" class="headerlink" title="Java和Kotlin函数可见性修饰符对照表"></a>Java和Kotlin函数可见性修饰符对照表</h3><p><img src="/../image/kotlin1.png"></p><h1 id="Lambda编程"><a href="#Lambda编程" class="headerlink" title="Lambda编程"></a>Lambda编程</h1><h2 id="集合的创建和遍历"><a href="#集合的创建和遍历" class="headerlink" title="集合的创建和遍历"></a>集合的创建和遍历</h2><p>现在我们提出一个需求，创建一个包含许多水果名称的集合。如果是在Java中你会怎么实现？ 可能你首先会创建一个ArrayList的实例，然后将水果的名称一个个添加到集合中。当然，在 Kotlin中也可以这么做</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = ArrayList&lt;String&gt;()</span><br><span class="line">list.add(<span class="string">&quot;Apple&quot;</span>)</span><br><span class="line">list.add(<span class="string">&quot;Banana&quot;</span>)</span><br><span class="line">list.add(<span class="string">&quot;Orange&quot;</span>)</span><br><span class="line">list.add(<span class="string">&quot;Pear&quot;</span>)</span><br><span class="line">list.add(<span class="string">&quot;Grape&quot;</span>)</span><br></pre></td></tr></table></figure><p>但是这种初始化集合的方式比较烦琐，为此Kotlin专门提供了一个内置的listOf()函数来简化 初始化集合的写法，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br></pre></td></tr></table></figure><p>可以看到，这里仅用一行代码就完成了集合的初始化操作</p><p>还记得我们在学习循环语句时提到过的吗？for-in循环不仅可以用来遍历区间，还可以用来遍 历集合。现在我们就尝试一下使用for-in循环来遍历这个水果集合，在main()函数中编写如 下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">        println(<span class="string">&quot;fruit&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过需要注意的是，listOf()函数创建的是一个不可变的集合。你也许不太能理解什么叫作不 可变的集合，因为在Java中这个概念不太常见。不可变的集合指的就是该集合只能用于读取， 我们无法对集合进行添加、修改或删除操作</p><p>至于这么设计的理由，和val关键字、类默认不可继承的设计初衷是类似的，可见Kotlin在不可 变性方面控制得极其严格。那如果我们确实需要创建一个可变的集合呢？也很简单，使用 mutableListOf()函数就可以了，示例如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> list = mutableListOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line">    list.add(<span class="string">&quot;Watermelon&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> list)&#123;</span><br><span class="line">        println(fruit)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面我们介绍的都是List集合的用法，实际上Set集合的用法几乎与此一模一样，只是将创建 集合的方式换成了setOf()和mutableSetOf()函数而已。大致代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> <span class="keyword">set</span> = setOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> <span class="keyword">set</span>)&#123;</span><br><span class="line">        println(fruit)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再来看一下Map集合的用法。Map是一种键值对形式的数据结构，因此在用法上和List、 Set集合有较大的不同。传统的Map用法是先创建一个HashMap的实例，然后将一个个键值对数 据添加到Map中。比如这里我们给每种水果设置一个对应的编号，就可以这样写</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> map = HashMap&lt;String,<span class="built_in">Int</span>&gt;()</span><br><span class="line">map.put(<span class="string">&quot;Apple&quot;</span>,<span class="number">1</span>)</span><br><span class="line">map.put(<span class="string">&quot;Banana&quot;</span>,<span class="number">2</span>)</span><br><span class="line">map.put(<span class="string">&quot;Orange&quot;</span>,<span class="number">3</span>)</span><br><span class="line">map.put(<span class="string">&quot;Pear&quot;</span>,<span class="number">4</span>)</span><br><span class="line">map.put(<span class="string">&quot;Grape&quot;</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>我之所以先用这种写法，是因为这种写法和Java语法是最相似的，因此可能最好理解。但其实 在Kotlin中并不建议使用put()和get()方法来对Map进行添加和读取数据操作，而是更加推荐 使用一种类似于数组下标的语法结构，比如向Map中添加一条数据就可以这么写</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">map[<span class="string">&quot;Apple&quot;</span>]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>而从Map中读取一条数据就可以这么写：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> number = map[<span class="string">&quot;Apple&quot;</span>]</span><br></pre></td></tr></table></figure><p>因此，上述代码经过优化过后就可以变成如下形式</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> map = HashMap&lt;String,<span class="built_in">Int</span>&gt;()</span><br><span class="line">map[<span class="string">&quot;Apple&quot;</span>]=<span class="number">1</span></span><br><span class="line">map[<span class="string">&quot;Banana&quot;</span>]=<span class="number">2</span></span><br><span class="line">map[<span class="string">&quot;Orange&quot;</span>]=<span class="number">3</span></span><br><span class="line">map[<span class="string">&quot;Pear&quot;</span>]=<span class="number">4</span></span><br><span class="line">map[<span class="string">&quot;Grape&quot;</span>]=<span class="number">5</span></span><br></pre></td></tr></table></figure><p>当然，这仍然不是最简便的写法，因为Kotlin毫无疑问地提供了一对mapOf()和 mutableMapOf()函数来继续简化Map的用法。在mapOf()函数中，我们可以直接传入初始化 的键值对组合来完成对Map集合的创建：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> map = mapOf(<span class="string">&quot;Apple&quot;</span> to <span class="number">1</span>,<span class="string">&quot;Banana&quot;</span> to <span class="number">2</span>,<span class="string">&quot;Orange&quot;</span> to <span class="number">3</span>,<span class="string">&quot;Pear&quot;</span> to <span class="number">4</span>,<span class="string">&quot;Grape&quot;</span> to <span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>这里的键值对组合看上去好像是使用to这个关键字来进行关联的，但其实to并不是关键字，而 是一个infix函数，我们会在本书第9章的Kotlin课堂中深入探究infix函数的相关内容。</p><p>最后再来看一下如何遍历Map集合中的数据吧，其实使用的仍然是for-in循环。在main()函 数中编写如下代码</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> map = mapOf(<span class="string">&quot;Apple&quot;</span> to <span class="number">1</span>,<span class="string">&quot;Banana&quot;</span> to <span class="number">2</span>,<span class="string">&quot;Orange&quot;</span> to <span class="number">3</span>,<span class="string">&quot;Pear&quot;</span> to <span class="number">4</span>,<span class="string">&quot;Grape&quot;</span> to <span class="number">5</span>)</span><br><span class="line">    <span class="keyword">for</span>((fruit,number) <span class="keyword">in</span> map)&#123;</span><br><span class="line">        println(<span class="string">&quot;fruit is &quot;</span>+fruit+<span class="string">&quot;, number is &quot;</span>+number)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下Lambda表达式的语法结构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;参数名1：参数类型，参数名2：参数类型 -&gt;函数体&#125;</span><br></pre></td></tr></table></figure><p>这是Lambda表达式最完整的语法结构定义。首先最外层是一对大括号，如果有参数传入到 Lambda表达式中的话，我们还需要声明参数列表，参数列表的结尾使用一个-&gt;符号，表示参 数列表的结束以及函数体的开始，函数体中可以编写任意行代码（虽然不建议编写太长的代 码），并且最后一行代码会自动作为Lambda表达式的返回值</p><p>理解了maxBy函数的工作原理之后，我们就可以开始套用刚才学习的Lambda表达式的语法结 构，并将它传入到maxBy函数中了，如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>,<span class="string">&quot;Watermelon&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> lambda = &#123;fruit:String-&gt;fruit.length&#125;</span><br><span class="line"><span class="keyword">val</span> maxLengthFruit = list.maxBy(lambda)</span><br></pre></td></tr></table></figure><p>下面我们就开始对这段代 码一步步进行简化。</p><p>首先，我们不需要专门定义一个lambda变量，而是可以直接将lambda表达式传入maxBy函数 当中，因此第一步简化如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> maxLengthFruit = list.maxBy(&#123;fruit:String-&gt;fruit.length&#125;)</span><br></pre></td></tr></table></figure><p>然后Kotlin规定，当Lambda参数是函数的最后一个参数时，可以将Lambda表达式移到函数括 号的外面，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> maxLengthFruit = list.maxBy()&#123;fruit:String-&gt;fruit.length&#125;</span><br></pre></td></tr></table></figure><p>接下来，如果Lambda参数是函数的唯一一个参数的话，还可以将函数的括号省略</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> maxLengthFruit = list.maxBy&#123;fruit:String-&gt;fruit.length&#125;</span><br></pre></td></tr></table></figure><p>这样代码看起来就变得清爽多了吧？但是我们还可以继续进行简化。由于Kotlin拥有出色的类型 推导机制，Lambda表达式中的参数列表其实在大多数情况下不必声明参数类型，因此代码可 以进一步简化成</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> maxLengthFruit = list.maxBy&#123;fruit-&gt;fruit.length&#125;</span><br></pre></td></tr></table></figure><p>最后，当Lambda表达式的参数列表中只有一个参数时，也不必声明参数名，而是可以使用it 关键字来代替，那么代码就变成了</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> maxLengthFrut = list.maxBy&#123;it.length&#125;</span><br></pre></td></tr></table></figure><p>map函数的功能非常强大，它可以按照我们的需求对集合中的元素进行任意的映射转换，上面只 是一个简单的示例而已。除此之外，你还可以将水果名全部转换成小写，或者是只取单词的首 字母，甚至是转换成单词长度这样一个数字集合，只要在Lambda表示式中编写你需要的逻辑 即可。</p><p>接下来我们再来学习另外一个比较常用的函数式API——filter函数。顾名思义，filter函数 是用来过滤集合中的数据的，它可以单独使用，也可以配合刚才的map函数一起使用。 比如我们只想保留5个字母以内的水果，就可以借助filter函数来实现，代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>,<span class="string">&quot;Watermelon&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> newList = list.filter&#123;it.length&lt;=<span class="number">5</span>&#125;</span><br><span class="line">    .map&#123;it.toUpperCase()&#125;</span><br><span class="line">    <span class="keyword">for</span>(fruit <span class="keyword">in</span> newList)&#123;</span><br><span class="line">        println(fruit)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来我们继续学习两个比较常用的函数式API——any和all函数。其中any函数用于判断集 合中是否至少存在一个元素满足指定条件，all函数用于判断集合中是否所有元素都满足指定条 件。由于这两个函数都很好理解，我们就直接通过代码示例学习了</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;Banana&quot;</span>,<span class="string">&quot;Orange&quot;</span>,<span class="string">&quot;Pear&quot;</span>,<span class="string">&quot;Grape&quot;</span>,<span class="string">&quot;Watermelon&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> anyResult = list.any&#123;it.length&lt;=<span class="number">5</span>&#125;</span><br><span class="line">    <span class="keyword">val</span> allResult = lsit.all&#123;it.length&lt;=<span class="number">5</span>&#125;</span><br><span class="line">    println(<span class="string">&quot;anyResult is &quot;</span>+anyResult +<span class="string">&quot;, allResult is &quot;</span>+allResult)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java函数式API的使用"><a href="#Java函数式API的使用" class="headerlink" title="Java函数式API的使用"></a>Java函数式API的使用</h2><p>这里我们就通过Java的线程类Thread来学习一下。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Thread is running&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><p>而如果直接将这段代码翻译成Kotlin版本，写法将如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Thread(<span class="keyword">object</span>:Runnale&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(<span class="string">&quot;Thread is running&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start()</span><br></pre></td></tr></table></figure><p>Kotlin中匿名类的写法和Java有一点区别，由于Kotlin完全舍弃了new关键字，因此创建匿名类 实例的时候就不能再使用new了，而是改用了object关键字。这种写法虽然算不上复杂，但是 相比于Java的匿名类写法，并没有什么简化之处</p><p>但是别忘了，目前Thread类的构造方法是符合Java函数式API的使用条件的，下面我们就看看 如何对代码进行精简，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Thread(Runnable&#123;</span><br><span class="line">    println(<span class="string">&quot;Thread is running&quot;</span>)</span><br><span class="line">&#125;).start()</span><br></pre></td></tr></table></figure><p>另外，如果一个Java方法的参数列表中有且仅有一个Java单抽象方法接口参数，我们还可以将 接口名进行省略，这样代码就变得更加精简了：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Thread(&#123;println(<span class="string">&quot;Thread is running&quot;</span>)&#125;).start()</span><br></pre></td></tr></table></figure><h1 id="空指针检查"><a href="#空指针检查" class="headerlink" title="空指针检查"></a>空指针检查</h1><p>Kotlin将空指针异常的检查提前到了编译时期，如果我们的程序存在空指针异常的风 险，那么在编译的时候会直接报错，修正之后才能成功运行，这样就可以保证程序在运行时期 不会出现空指针异常了</p><h2 id="可为空的类型系统"><a href="#可为空的类型系统" class="headerlink" title="可为空的类型系统"></a>可为空的类型系统</h2><p>那么可为空的类型系统是什么样的呢？很简单，就是在类名的后面加上一个问号。比如，Int表 示不可为空的整型，而Int?就表示可为空的整型；String表示不可为空的字符串，而 String?就表示可为空的字符串</p><h2 id="判空辅助工具"><a href="#判空辅助工具" class="headerlink" title="判空辅助工具"></a>判空辅助工具</h2><p>首先学习最常用的?.操作符。这个操作符的作用非常好理解，就是当对象不为空时正常调用相 应的方法，当对象为空时则什么都不做。比如以下的判空处理代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a!=<span class="literal">null</span>)&#123;</span><br><span class="line">    a.doSomething()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码使用?.操作符就可以简化成：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a?.doSomething()</span><br></pre></td></tr></table></figure><p>了解了?.操作符的作用，下面我们来看一下如何使用这个操作符对doStudy()函数进行优化， 代码如下所示</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">doStudy</span><span class="params">(study:<span class="type">Study</span>?)</span></span>&#123;</span><br><span class="line">    study?.readBooks()</span><br><span class="line">    study?.doHomework()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面我们再来学习另外一个非常常用的?:操作符。这个操作符的左右两边都接收一个表达式， 如果左边表达式的结果不为空就返回左边表达式的结果，否则就返回右边表达式的结果。观察 如下代码：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> c = <span class="keyword">if</span>(a!=<span class="literal">null</span>)&#123;</span><br><span class="line">    a</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码的逻辑使用?:操作符就可以简化成：</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> c = a?:b</span><br></pre></td></tr></table></figure><p>使用非空断言工具，写法是在对象的后面加 上!!</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">printUpperCase</span><span class="params">()</span></span>&#123;</span><br><span class="line">    vla upperCase = content!!.toUpperCase()</span><br><span class="line">    println(upperCase)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后我们再来学习一个比较与众不同的辅助工具——let。let既不是操作符，也不是什么关键 字，而是一个函数。这个函数提供了函数式API的编程接口，并将原始调用对象作为参数传递到 Lambda表达式中。示例代码如下</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">obj.let&#123;obj2&gt;</span><br><span class="line"><span class="comment">//编写具体的业务逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Kotlin中的小魔术"><a href="#Kotlin中的小魔术" class="headerlink" title="Kotlin中的小魔术"></a>Kotlin中的小魔术</h1><h2 id="字符串内嵌表达式"><a href="#字符串内嵌表达式" class="headerlink" title="字符串内嵌表达式"></a>字符串内嵌表达式</h2><p>首先来看一下Kotlin中字符串内嵌表达式的语法规则</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;hello, <span class="subst">$&#123;obj.name&#125;</span>. nice to meet you!&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">println(&quot;Cellphone(brand=&quot; + brand + &quot;, price=&quot; + price + &quot;)&quot;) </span><br><span class="line">println(&quot;Cellphone(brand=$brand, price=$price)&quot;)</span><br></pre></td></tr></table></figure><h2 id="函数参数的默认值"><a href="#函数参数的默认值" class="headerlink" title="函数参数的默认值"></a>函数参数的默认值</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">printParams</span><span class="params">(num: <span class="type">Int</span>, str: <span class="type">String</span> = <span class="string">&quot;hello&quot;</span>)</span></span> &#123; </span><br><span class="line">    println(<span class="string">&quot;num is <span class="variable">$num</span> , str is <span class="variable">$str</span>&quot;</span>) </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line">    printParams(<span class="number">123</span>) </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>Kotlin提供了另外一种神奇的机制，就是可以通过键值对的方式来传参，从而不 必像传统写法那样按照参数定义的顺序来传参。比如调用printParams()函数，我们还可以这 样写</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">printParams</span><span class="params">(num: <span class="type">Int</span> = <span class="number">100</span>, str: <span class="type">String</span>)</span></span> &#123; </span><br><span class="line">    println(<span class="string">&quot;num is <span class="variable">$num</span> , str is <span class="variable">$str</span>&quot;</span>) </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line">    printParams(str = <span class="string">&quot;world&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>so</title>
      <link href="/2024/11/13/so/"/>
      <url>/2024/11/13/so/</url>
      
        <content type="html"><![CDATA[<h2 id="枚举各种"><a href="#枚举各种" class="headerlink" title="枚举各种"></a>枚举各种</h2><ul><li><p>通过枚举导入表，可以得到出现在导入表中的函数地址</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> imports=<span class="title class_">Module</span>.<span class="title function_">enumerateImports</span>(<span class="string">&quot;libxiaojianbang.so&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;imports.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(imports[i]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通过枚举导出表，可以得到出现在导出表中的函数地址</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">exports</span>=<span class="title class_">Module</span>.<span class="title function_">enumerateExports</span>(<span class="string">&quot;libxiaojianbang.so&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="built_in">exports</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="built_in">exports</span>[i]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通过枚举符号表，可以得出出现在符号表中的函数地址</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> symbol=<span class="title class_">Module</span>.<span class="title function_">enumerateSymbols</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;symbol.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(symbol[i]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通过枚举模块，在枚举出模块里面的导出表，可以快速找到某个导入函数出自哪个so</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> moudles=<span class="title class_">Process</span>.<span class="title function_">enumerateModules</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(moudles[<span class="number">0</span>].<span class="title function_">enumerateExports</span>()[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure></li></ul><h2 id="sohook导出函数"><a href="#sohook导出函数" class="headerlink" title="sohook导出函数"></a>sohook导出函数</h2><ul><li><p>在so导出表里的函数，可以通过frida提供的api来获取函数地址</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> funcAddr=<span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libxiaojianbang.so&quot;</span>,<span class="string">&quot;add&quot;</span>);</span><br><span class="line">函数名以汇编中出现的为准</span><br></pre></td></tr></table></figure></li><li><p>得到函数地址后，可以使用Interceptor.attach来对函数进行hook</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(<span class="title class_">Address</span>,&#123;</span><br><span class="line">    <span class="attr">onEnter</span>:<span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(args[<span class="number">0</span>]);<span class="comment">//打印参数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">context</span>.<span class="property">x1</span>);<span class="comment">//打印寄存器</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(args[<span class="number">2</span>].<span class="title function_">toInt32</span>());<span class="comment">//默认显示16进制，这里转成10进制</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onLeave</span>:<span class="keyword">function</span>(<span class="params">retval</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;retval&quot;</span>,retval,retval.<span class="title function_">toInt32</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> funcAddr=<span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libencryptlib.so&quot;</span>,<span class="string">&quot;_ZN7MD5_CTX11MakePassMD5EPhjS0_&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(funcAddr);</span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(funcAddr,&#123;</span><br><span class="line">   <span class="attr">onEnter</span>:<span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;funcAddr onEnter args[1]:&quot;</span>,<span class="title function_">hexdump</span>(args[<span class="number">1</span>]));</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;funcAddr onEnter args[2]:&quot;</span>,args[<span class="number">2</span>].<span class="title function_">toInt32</span>());</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">args3</span>=args[<span class="number">3</span>];</span><br><span class="line">   &#125;,<span class="attr">onLeave</span>:<span class="keyword">function</span>(<span class="params">retval</span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;funcAddr onEnter args[3]:&quot;</span>,<span class="title function_">hexdump</span>(<span class="variable language_">this</span>.<span class="property">args3</span>));</span><br><span class="line">   &#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="模块基址的几种方式"><a href="#模块基址的几种方式" class="headerlink" title="模块基址的几种方式"></a>模块基址的几种方式</h2><ul><li><p>在导入表、导出表、符号表里找不到的函数，地址需要自己计算</p></li><li><p>计算方式也很简单：so基址+函数在so中的偏移[+1]</p></li><li><p>因此，需要得到so基址，也就是模块基址</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Process</span>.<span class="title function_">findMoudleByName</span>(<span class="string">&quot;libart.so&quot;</span>);</span><br><span class="line"><span class="title class_">Process</span>.<span class="title function_">getMoudleByName</span>(<span class="string">&quot;libc.so&quot;</span>);</span><br><span class="line"><span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libart.so&quot;</span>);</span><br><span class="line"><span class="title class_">Process</span>.<span class="title function_">enumerateModules</span>();</span><br><span class="line"><span class="title class_">Process</span>.<span class="title function_">findModuleByAddress</span>(address);</span><br><span class="line"><span class="title class_">Process</span>.<span class="title function_">getModuleByAddress</span>(address);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> module1=<span class="title class_">Process</span>.<span class="title function_">findModuleByName</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;module1&quot;</span>,module1.<span class="property">base</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> module2=<span class="title class_">Process</span>.<span class="title function_">getModuleByName</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;module2&quot;</span>,module2.<span class="property">base</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> soAddr=<span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;soAddr&quot;</span>,soAddr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> modules=<span class="title class_">Process</span>.<span class="title function_">enumerateModules</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;modules.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(modules[i].<span class="property">name</span>==<span class="string">&quot;libencrypt.so&quot;</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(modules[i].<span class="property">name</span>+<span class="string">&quot; &quot;</span>+modules[i].<span class="property">base</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="variable language_">module</span>=<span class="title class_">Process</span>.<span class="title function_">findModuleByAddress</span>(<span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libencrypt.so&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;module &quot;</span>+<span class="variable language_">module</span>.<span class="property">name</span>+<span class="string">&quot; &quot;</span>+<span class="variable language_">module</span>.<span class="property">base</span>);</span><br></pre></td></tr></table></figure><h2 id="函数地址的计算"><a href="#函数地址的计算" class="headerlink" title="函数地址的计算"></a>函数地址的计算</h2><ul><li><p>在导入表、导出表、符号表里找不到的函数，地址需要自己计算</p></li><li><p>计算方式也很简单：so基址+函数在so中的偏移[+1]</p><p>如果是thumb指令，函数地址计算方式：so基址+函数在so中的偏移+1</p><p>如果是arm指令，函数地址的i计算方式：so基址+函数在so中的偏移</p></li><li><p>在安卓中，32位的so中的函数，基本都是thumb指令；64位的so基本都是arm指令</p></li><li><p>也可以通过显示汇编指令对应的opcode bytes，来判断</p><p>options-&gt;general-&gt;Number of opcode bytes(non-graph) 4</p><p>arm指令为4个字节，如果函数中有些指令是两个字节，那么函数地址计算需要+1</p></li><li><p>通过代码的方式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> soAddr=<span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(soAddr.<span class="title function_">add</span>(<span class="number">0x1FA38</span>)) </span><br></pre></td></tr></table></figure></li></ul><h2 id="Hook任意函数"><a href="#Hook任意函数" class="headerlink" title="Hook任意函数"></a>Hook任意函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> soAddr=<span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> funcAddr=soAddr.<span class="title function_">add</span>(<span class="number">0xFA38</span>);</span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(funcAddr,&#123;</span><br><span class="line">   <span class="attr">onEnter</span>:<span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;funcAddr onEnter args[1]:&quot;</span><span class="title function_">hexdump</span>(args[<span class="number">1</span>]));</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;funcAddr onEnter args[2]:&quot;</span>,args[<span class="number">2</span>].<span class="property">toInt32</span>);</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">args3</span>=args[<span class="number">3</span>];</span><br><span class="line">   &#125;,<span class="attr">onLeave</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;funcAddr onLeave args[3]:&quot;</span>,<span class="title function_">hexdump</span>(<span class="variable language_">this</span>.<span class="property">args3</span>));</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="封装成函数"><a href="#封装成函数" class="headerlink" title="封装成函数"></a>封装成函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">print_arg</span>(<span class="params">addr</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable language_">module</span>=<span class="title class_">Process</span>.<span class="title function_">findRangeByAddress</span>(addr);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">module</span>!=<span class="literal">null</span>) <span class="keyword">return</span> <span class="title function_">hexdump</span>(addr)+<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">ptr</span>(addr)+<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hook_native_addr</span>(<span class="params">funcPtr,paramsNum</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable language_">module</span>=<span class="title class_">Process</span>.<span class="title function_">findModuleByAddress</span>(funcPtr);</span><br><span class="line">    <span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(funcPtr,&#123;</span><br><span class="line">        <span class="attr">onEnter</span>:<span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">logs</span>=[];</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">params</span>=[];</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">logs</span>.<span class="title function_">push</span>(<span class="string">&quot;call &quot;</span>+<span class="variable language_">module</span>.<span class="property">name</span>+<span class="string">&quot;!&quot;</span>+<span class="title function_">ptr</span>(funcPtr).<span class="title function_">sub</span>(<span class="variable language_">module</span>.<span class="property">base</span>)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;paramsNum;i++)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">params</span>.<span class="title function_">push</span>(args[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;paramsNum;i++)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">logs</span>.<span class="title function_">push</span>(<span class="string">&quot;this.args&quot;</span>+i+<span class="string">&quot;onLeave: &quot;</span>+<span class="title function_">print_arg</span>(<span class="variable language_">this</span>.<span class="property">params</span>[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="attr">onLeave</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">logs</span>.<span class="title function_">push</span>(<span class="string">&quot;retval onLeave: &quot;</span>+<span class="title function_">print_arg</span>(retval)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">logs</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> soAddr=<span class="title class_">Module</span>.<span class="title function_">findBaseAddress</span>(<span class="string">&quot;libencryptlib.so&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> funcAddr=soAddr.<span class="title function_">add</span>(<span class="number">0x1FA38</span>);</span><br><span class="line"><span class="title function_">hook_native_addr</span>(funcAddr,<span class="number">4</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>密码学进阶</title>
      <link href="/2024/11/03/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%BF%9B%E9%98%B6/"/>
      <url>/2024/11/03/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h1><h2 id="MD5对明文的处理"><a href="#MD5对明文的处理" class="headerlink" title="MD5对明文的处理"></a>MD5对明文的处理</h2><h3 id="C实现MD5算法的使用"><a href="#C实现MD5算法的使用" class="headerlink" title="C实现MD5算法的使用"></a>C实现MD5算法的使用</h3><h4 id="MD5-h"><a href="#MD5-h" class="headerlink" title="MD5.h"></a>MD5.h</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Administrator on 2021-07-28.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//在一些情况下，反斜杠 \ 可以用作行连接符，用于将代码行连接在一起。换句话说，如果你想在一行代码上换行而不终止该行，可以在行末添加一个反斜杠。</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> HOOKDEMO_MD5_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HOOKDEMO_MD5_H</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> count[<span class="number">2</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> state[<span class="number">4</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> buffer[<span class="number">64</span>];</span><br><span class="line">&#125; MD5_CTX;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F(x,y,z) ((x &amp; y) | (~x &amp; z))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> G(x,y,z) ((x &amp; z) | (y &amp; ~z))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> H(x,y,z) (x^y^z)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I(x,y,z) (y ^ (x | ~z))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROTATE_LEFT(x,n) ((x <span class="string">&lt;&lt; n) | (x &gt;</span>&gt; (32-n)))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FF(a,b,c,d,x,s,ac) \</span></span><br><span class="line"><span class="meta">          &#123; \</span></span><br><span class="line"><span class="meta">          a += F(b,c,d) + x + ac; \</span></span><br><span class="line"><span class="meta">          a = ROTATE_LEFT(a,s); \</span></span><br><span class="line"><span class="meta">          a += b; \</span></span><br><span class="line"><span class="meta">          &#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GG(a,b,c,d,x,s,ac) \</span></span><br><span class="line"><span class="meta">          &#123; \</span></span><br><span class="line"><span class="meta">          a += G(b,c,d) + x + ac; \</span></span><br><span class="line"><span class="meta">          a = ROTATE_LEFT(a,s); \</span></span><br><span class="line"><span class="meta">          a += b; \</span></span><br><span class="line"><span class="meta">          &#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HH(a,b,c,d,x,s,ac) \</span></span><br><span class="line"><span class="meta">          &#123; \</span></span><br><span class="line"><span class="meta">          a += H(b,c,d) + x + ac; \</span></span><br><span class="line"><span class="meta">          a = ROTATE_LEFT(a,s); \</span></span><br><span class="line"><span class="meta">          a += b; \</span></span><br><span class="line"><span class="meta">          &#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> II(a,b,c,d,x,s,ac) \</span></span><br><span class="line"><span class="meta">          &#123; \</span></span><br><span class="line"><span class="meta">          a += I(b,c,d) + x + ac; \</span></span><br><span class="line"><span class="meta">          a = ROTATE_LEFT(a,s); \</span></span><br><span class="line"><span class="meta">          a += b; \</span></span><br><span class="line"><span class="meta">          &#125;</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Init</span><span class="params">(MD5_CTX* context)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Update</span><span class="params">(MD5_CTX* context, <span class="type">unsigned</span> <span class="type">char</span>* input, <span class="type">unsigned</span> <span class="type">int</span> inputlen)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Final</span><span class="params">(MD5_CTX* context, <span class="type">unsigned</span> <span class="type">char</span> digest[<span class="number">16</span>])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Transform</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> state[<span class="number">4</span>], <span class="type">unsigned</span> <span class="type">char</span> block[<span class="number">64</span>])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Encode</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>* output, <span class="type">unsigned</span> <span class="type">int</span>* input, <span class="type">unsigned</span> <span class="type">int</span> len)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Decode</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* output, <span class="type">unsigned</span> <span class="type">char</span>* input, <span class="type">unsigned</span> <span class="type">int</span> len)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">//HOOKDEMO_MD5_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="MD5-cpp"><a href="#MD5-cpp" class="headerlink" title="MD5.cpp"></a>MD5.cpp</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MD5.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> PADDING[] = &#123; <span class="number">0x80</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">                           <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">                           <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">                           <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Init</span><span class="params">(MD5_CTX* context)</span> &#123;</span><br><span class="line">    context-&gt;count[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    context-&gt;count[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    context-&gt;state[<span class="number">0</span>] = <span class="number">0x67452301</span>;</span><br><span class="line">    context-&gt;state[<span class="number">1</span>] = <span class="number">0xEFCDAB89</span>;</span><br><span class="line">    context-&gt;state[<span class="number">2</span>] = <span class="number">0x98BADCFE</span>;</span><br><span class="line">    context-&gt;state[<span class="number">3</span>] = <span class="number">0x10325476</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Update</span><span class="params">(MD5_CTX* context, <span class="type">unsigned</span> <span class="type">char</span>* input, <span class="type">unsigned</span> <span class="type">int</span> inputlen)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>, index = <span class="number">0</span>, partlen = <span class="number">0</span>;</span><br><span class="line">    index = (context-&gt;count[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>) &amp; <span class="number">0x3F</span>;</span><br><span class="line">    partlen = <span class="number">64</span> - index;</span><br><span class="line">    context-&gt;count[<span class="number">0</span>] += inputlen &lt;&lt; <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (context-&gt;count[<span class="number">0</span>] &lt; (inputlen &lt;&lt; <span class="number">3</span>))</span><br><span class="line">        context-&gt;count[<span class="number">1</span>]++;</span><br><span class="line">    context-&gt;count[<span class="number">1</span>] += inputlen &gt;&gt; <span class="number">29</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (inputlen &gt;= partlen) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(&amp;context-&gt;buffer[index], input, partlen);</span><br><span class="line">        MD5Transform(context-&gt;state, context-&gt;buffer);</span><br><span class="line">        <span class="keyword">for</span> (i = partlen; i + <span class="number">64</span> &lt;= inputlen; i += <span class="number">64</span>)</span><br><span class="line">            MD5Transform(context-&gt;state, &amp;input[i]);</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memcpy</span>(&amp;context-&gt;buffer[index], &amp;input[i], inputlen - i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Final</span><span class="params">(MD5_CTX* context, <span class="type">unsigned</span> <span class="type">char</span> digest[<span class="number">16</span>])</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> index = <span class="number">0</span>, padlen = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> bits[<span class="number">8</span>];</span><br><span class="line">    index = (context-&gt;count[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>) &amp; <span class="number">0x3F</span>;</span><br><span class="line">    padlen = (index &lt; <span class="number">56</span>) ? (<span class="number">56</span> - index) : (<span class="number">120</span> - index);</span><br><span class="line">    MD5Encode(bits, context-&gt;count, <span class="number">8</span>);</span><br><span class="line">    MD5Update(context, PADDING, padlen);</span><br><span class="line">    MD5Update(context, bits, <span class="number">8</span>);</span><br><span class="line">    MD5Encode(digest, context-&gt;state, <span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Encode</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>* output, <span class="type">unsigned</span> <span class="type">int</span>* input, <span class="type">unsigned</span> <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; len) &#123;</span><br><span class="line">        output[j] = input[i] &amp; <span class="number">0xFF</span>;</span><br><span class="line">        output[j + <span class="number">1</span>] = (input[i] &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        output[j + <span class="number">2</span>] = (input[i] &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        output[j + <span class="number">3</span>] = (input[i] &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        i++;</span><br><span class="line">        j += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Decode</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* output, <span class="type">unsigned</span> <span class="type">char</span>* input, <span class="type">unsigned</span> <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; len) &#123;</span><br><span class="line">        output[i] = (input[j]) |</span><br><span class="line">            (input[j + <span class="number">1</span>] &lt;&lt; <span class="number">8</span>) |</span><br><span class="line">            (input[j + <span class="number">2</span>] &lt;&lt; <span class="number">16</span>) |</span><br><span class="line">            (input[j + <span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">        i++;</span><br><span class="line">        j += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MD5Transform</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> state[<span class="number">4</span>], <span class="type">unsigned</span> <span class="type">char</span> block[<span class="number">64</span>])</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> a = state[<span class="number">0</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> b = state[<span class="number">1</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> c = state[<span class="number">2</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> d = state[<span class="number">3</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> x[<span class="number">64</span>];</span><br><span class="line">    MD5Decode(x, block, <span class="number">64</span>);</span><br><span class="line">    FF(a, b, c, d, x[<span class="number">0</span>], <span class="number">7</span>, <span class="number">0xd76aa478</span>); <span class="comment">/* 1 */</span></span><br><span class="line">    <span class="comment">// ... 省略其余部分，保持原代码中的内容</span></span><br><span class="line">    II(b, c, d, a, x[<span class="number">9</span>], <span class="number">21</span>, <span class="number">0xeb86d391</span>); <span class="comment">/* 64 */</span></span><br><span class="line">    state[<span class="number">0</span>] += a;</span><br><span class="line">    state[<span class="number">1</span>] += b;</span><br><span class="line">    state[<span class="number">2</span>] += c;</span><br><span class="line">    state[<span class="number">3</span>] += d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    MD5_CTX context;</span><br><span class="line">    MD5Init(&amp;context);</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span>* plainText = (<span class="type">unsigned</span> <span class="type">char</span>*)<span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    MD5Update(&amp;context, plainText, <span class="built_in">strlen</span>(reinterpret_cast&lt;<span class="type">const</span> <span class="type">char</span>*&gt;(plainText)));</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> result[<span class="number">16</span>];</span><br><span class="line">    MD5Final(&amp;context, result);</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> temp[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">// 修改为 3，2 + 1 结束符</span></span><br><span class="line">    <span class="type">char</span> finalResult[<span class="number">33</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">// 32 + 1 结束符</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">        sprintf_s(temp, <span class="keyword">sizeof</span>(temp), <span class="string">&quot;%.2x&quot;</span>, result[i]);</span><br><span class="line">        strcat_s(finalResult, <span class="keyword">sizeof</span>(finalResult), temp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; finalResult &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对明文进行Hex编码"><a href="#对明文进行Hex编码" class="headerlink" title="对明文进行Hex编码"></a>对明文进行Hex编码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">对于字符串 <span class="string">&quot;xiaojianbang&quot;</span>，每个字符对应的 ASCII 值及其十六进制表示如下：</span><br><span class="line">x -&gt; <span class="number">120</span> -&gt; <span class="number">78</span></span><br><span class="line">i -&gt; <span class="number">105</span> -&gt; <span class="number">69</span></span><br><span class="line">a -&gt; <span class="number">97</span> -&gt; <span class="number">61</span></span><br><span class="line">o -&gt; <span class="number">111</span> -&gt; <span class="number">6f</span></span><br><span class="line">j -&gt; <span class="number">106</span> -&gt; <span class="number">6</span>a</span><br><span class="line">i -&gt; <span class="number">105</span> -&gt; <span class="number">69</span></span><br><span class="line">a -&gt; <span class="number">97</span> -&gt; <span class="number">61</span></span><br><span class="line">n -&gt; <span class="number">110</span> -&gt; <span class="number">6</span>e</span><br><span class="line">b -&gt; <span class="number">98</span> -&gt; <span class="number">62</span></span><br><span class="line">a -&gt; <span class="number">97</span> -&gt; <span class="number">61</span></span><br><span class="line">n -&gt; <span class="number">110</span> -&gt; <span class="number">6</span>e</span><br><span class="line">g -&gt; <span class="number">103</span> -&gt; <span class="number">67</span></span><br></pre></td></tr></table></figure><h3 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h3><ul><li><p>把明文填充到448bit(56byte),先填一个1，后面跟对应个数的0</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">结果：78 69 61 6f 6a 69 61 6e 62 61 6e 67 80(80 -&gt; 1000 0000)</span><br></pre></td></tr></table></figure></li><li><p>附加消息长度，用64bit表示消息长度，xiaojianbang的长度为96bit，对应16进制为0x60，所以表示为:</p><p>60 00 00 00 00 00 00 00 转小端序60 00 00 00 00 00 00 00</p></li><li><p>如果内容过长，64比特位放不下，就取低64bit位。所以MD5输入长度考研无限大，SHA3算法也是无限大，其他哈希算法不是。</p></li><li><pre><code>大端序（Big-endian）在大端序中，数据的高位字节存储在内存的低地址处，低位字节存储在高地址处。换句话说，字节序列的第一个字节是最高有效字节（Most Significant Byte，MSB）。示例： 对于一个 32 位的整数 0x12345678，在大端序中，它在内存中的存储顺序是：复制代码地址    数据0x00    0x120x01    0x340x02    0x560x03    0x78小端序（Little-endian）在小端序中，数据的低位字节存储在内存的低地址处，高位字节存储在高地址处。也就是说，字节序列的第一个字节是最低有效字节（Least Significant Byte，LSB）。示例： 对于同一个 32 位整数 0x12345678，在小端序中，它在内存中的存储顺序是：复制代码地址    数据0x00    0x780x01    0x560x02    0x340x03    0x12区别和应用平台差异：不同的计算机架构可能使用不同的字节序。例如，Intel x86 和 x86-64 架构通常使用小端序，而某些网络协议和其他处理器（如某些 ARM 和 PowerPC 处理器）使用大端序。网络传输：在网络协议中，通常使用大端序（也称为网络字节序），这意味着在网络上传输多字节数据时需要转换为大端序。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- MD5的分组长度为512bit，数据需要处理到512的倍数，因此需要填充 </span><br><span class="line"></span><br><span class="line">- 把处理后的明文分成16块M1-M6</span><br><span class="line"></span><br><span class="line">### MD5的初始化常量</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">在内存中:d    </span><br><span class="line">A: 01 23 45 67</span><br><span class="line">B: 89 ab cd ef</span><br><span class="line">C: fe dc ba 98</span><br><span class="line">D: 76 54 32 10</span><br><span class="line">    </span><br><span class="line">context-&gt;state[0] = 0x67452301;</span><br><span class="line">context-&gt;state[1] = 0xEFCDAB89;</span><br><span class="line">context-&gt;state[2] = 0x98BADCFE;</span><br><span class="line">context-&gt;state[3] = 0x10325476;</span><br></pre></td></tr></table></figure></code></pre></li></ul><h3 id="MD5Transform"><a href="#MD5Transform" class="headerlink" title="MD5Transform"></a>MD5Transform</h3><p><img src="/../image/MD51.png"></p><ul><li>MD5总共64轮，每一轮都会把旧的D直接给新的A，旧的B直接给新的C，旧的C直接给新的D，也就是每一轮只计算一个新的B</li><li>图中的田代表相加  </li><li>图中的F函数并不是一个函数，而是由四个函数组成</li><li>K表里面的值是由公式计算的，但体现在代码中一般都是常量</li><li>&lt;&lt;&lt;s代表循环左移</li><li>最后把四个初始化常量不断变化后的值，拼接得到最终的摘要结果</li></ul><h3 id="IDA中的数据类型"><a href="#IDA中的数据类型" class="headerlink" title="IDA中的数据类型"></a>IDA中的数据类型</h3><p>DCB、DCW、DCD、DCQ</p><h3 id="ARM和THUMB模式"><a href="#ARM和THUMB模式" class="headerlink" title="ARM和THUMB模式"></a>ARM和THUMB模式</h3><p>ARM 和 THUMB 模式简介：</p><p>ARM 处理器有两种主要的指令编码模式：<strong>ARM 模式</strong>和<strong>THUMB 模式</strong>。这两种模式的主要区别是指令的大小：</p><ul><li><strong>ARM 模式</strong>：指令通常为 32 位长。</li><li><strong>THUMB 模式</strong>：指令通常为 16 位长，目的是提高代码密度，减少内存占用。</li></ul><p>这两种模式可以在执行时动态切换，允许程序根据需要在这两种模式之间切换，以达到性能和内存的平衡。</p><h1 id="SHA1"><a href="#SHA1" class="headerlink" title="SHA1"></a>SHA1</h1><h2 id="算法细节"><a href="#算法细节" class="headerlink" title="算法细节"></a>算法细节</h2><ul><li><p>SHA1算法对于明文的处理与MD5相同，区别是最后的消息长度是大端字节序，SHA1算法的初始化常量有5个，其中前四个与MD5是一致的</p></li><li><p>SHA1的分组长度也是512bit， 明文也要分段，类似Mi，区别是有80段，后64段是扩展出来的，遵循大端字节序</p></li><li><p>SHA1与SHA0的区别就是在扩展这64段的时候，增加了循环左移1位</p><p>W[t] &#x3D; SHACircularShift(1,w[t-3]^w[t-8]^w[t-14]^w[t-16]);</p></li><li><p>SHA1的核心计算过程与MD5差不多，区别是K值只有4个，每20轮用一个，总共80轮</p></li></ul><h1 id="哈希算法的识别"><a href="#哈希算法的识别" class="headerlink" title="哈希算法的识别"></a>哈希算法的识别</h1><h2 id="MD5-1"><a href="#MD5-1" class="headerlink" title="MD5"></a>MD5</h2><ul><li><p>初始化常量4个</p><p>A &#x3D; 0x67452301</p><p>B &#x3D; 0xEFCDAB89</p><p>C &#x3D; 0x98BADCFE</p><p>D &#x3D; 0x10325476</p></li><li><p>K表64个，每轮用一个，总共64轮</p><p>K1 &#x3D; 0xd76aa478</p><p>K2 &#x3D; 0xe8c7b756</p><p>K3 &#x3D; 0x242070db</p></li><li><p>输出长度16个字节，或者或32个十六进制数，有时候输出16个十六进制数</p></li></ul><h2 id="SHA1-1"><a href="#SHA1-1" class="headerlink" title="SHA1"></a>SHA1</h2><ul><li><p>初始化常量是5个</p><p>A &#x3D; 0x67452301</p><p>B &#x3D; 0xEFCDAB89</p><p>C &#x3D; 0x98BADCFE</p><p>D &#x3D; 0x10325476</p><p>E &#x3D; 0xC3D2E1F0</p><p>和MD5相比，有五个初始化链接变量，而且前四个链接变量是完全相同的</p></li><li><p>K表4个</p><p>只有4个K值，每20轮用同一个K作变换，而且前四个链接变量完全相同</p><p>K1 &#x3D; 0x5a837999</p><p>K2 &#x3D; 0x6ed9eba1</p><p>K3 &#x3D; 0x8f1bbcdc</p><p>K4 &#x3D; 0xca62c1d6</p></li><li><p>输出长度20个字节，或者或40个十六进制数</p></li></ul><h2 id="SHA256算法"><a href="#SHA256算法" class="headerlink" title="SHA256算法"></a>SHA256算法</h2><ul><li>初始化常量8个</li></ul><p>​A &#x3D; 0x6A09E667</p><p>​B &#x3D; 0xBB67AE85</p><p>​C &#x3D; 0x3C6EF372</p><p>​D &#x3D; 0xA54FF53A</p><p>​E &#x3D; 0x510E527F</p><p>​F &#x3D; 0x9B05688C</p><p>​G &#x3D; 0x1F83D9AB</p><p>​H &#x3D; 0x5BE0CD19</p><ul><li><p>K表64个，每轮一个K值</p></li><li><p>输出长度位32个字节，或者说64个十六进制数</p></li></ul><h2 id="SHA512"><a href="#SHA512" class="headerlink" title="SHA512"></a>SHA512</h2><ul><li>初始化常量8个，IDA反编译有时显示位16个</li><li>K表80个，每轮一个K值</li><li>输出长度为64字节，或者说128个十六进制数</li><li>MD5、SHA1、SHA256都是512bit分组，SHA512是1024bit分组</li></ul><h1 id="HmacMD5"><a href="#HmacMD5" class="headerlink" title="HmacMD5"></a>HmacMD5</h1><p><img src="/../image/Hmac1.png"></p><p>密钥扩展</p><ul><li><p>密钥a12345678转Hex编码：61 31 32 33 34 35  36 37 38</p></li><li><p>然后填充0，让密钥长度达到算法的分组长度，MD5的话就是512bit</p></li><li><p>如果密钥太长，就县进行MD5，再填充0</p><p>16字节 + 一堆0</p></li></ul><p>扩展后的密钥与0x36异或</p><ul><li>57 07、、、、0e、、、36、、、</li></ul><p>异或后的数据与明文级联</p><ul><li>级联（<strong>Concatenate</strong>）指的是将两个或多个数据元素（通常是字符串、数组、或其他数据结构）连接在一起，形成一个新的、更长的序列</li></ul><p>级联后的数据进行Hass(MD5)算法</p><p>扩展后的密钥与0x5c异或</p><p>异或的结果与Hash的结果级联</p><p>再次进行Hash算法</p><h3 id="MAC算法的简单识别"><a href="#MAC算法的简单识别" class="headerlink" title="MAC算法的简单识别"></a>MAC算法的简单识别</h3><p>找0x36和0x5c、54和92来分辨是不是HMAC算法</p><p>也可以靠猜，比如MD5、魔改的MD5、HmacMD5最后输出结果都是16字节</p><h1 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h1><ol><li>不考虑填充方式</li><li>不考虑加密模式</li><li>不考虑iv向量</li><li>输入明文为8个字节，密钥为8个字节，输出结果也为8个字节</li></ol><p>明文：0123456789ABCDEF</p><p>密钥：133457799BBCDFF1</p><p><strong>第<strong><strong>1</strong></strong>步：子密钥的生成</strong></p><p>把密钥转二进制</p><p>00010011 00110100 01010111 01111001 10011011 10111100 11011111 11110001</p><p>根据PC1表，对密钥进行重新排列</p><p>int PC1_Table[56] &#x3D; {</p><p>​    57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18,</p><p>​    10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36,</p><p>​    63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22,</p><p>​    14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4};</p><p>密钥编排后的结果</p><p>1111000 0110011 0010101 0101111 0101010 1011001 1001111 0001111</p><p>接下来将这56比特长的密钥分成左右两部分，命名为C0，D0</p><p>C0 &#x3D; 1111000 0110011 0010101 0101111</p><p>D0 &#x3D; 0101010 1011001 1001111 0001111</p><p>循环左移规定的位数，得到C1，D1到C16，D16的十六个数据</p><p>key_shift &#x3D; [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];</p><p>C1 &#x3D; 1110000 1100110 0101010 1011111</p><p>D1 &#x3D; 1010101 0110011 0011110 0011110</p><p>C2D2可以对C1D1分别左移1位来得到</p><p>C2D2也可以对C0D0分别左移2位来得到</p><p>将C1D1拼接起来，继续后续的处理</p><p>C1D1 &#x3D; 1110000 1100110 0101010 1011111 1010101 0110011 0011110 0011110</p><p>根据PC2表进行重排，56bit长的CnDn只留下48比特</p><p>int PC2_Table[48] &#x3D; {</p><p>​    14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10,</p><p>​    23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2,</p><p>​    41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48,</p><p>​    44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32};</p><p>重排后CnDn就是子密钥，命名为Kn</p><p>后续DES的十六轮运算中，第n轮就是用Kn，16个子密钥为</p><p>K1 &#x3D; 000110 110000 001011 101111 111111 000111 000001 110010</p><p>K2 &#x3D; 011110 011010 111011 011001 110110 111100 100111 100101</p><p>K3 &#x3D; 010101 011111 110010 001010 010000 101100 111110 011001</p><p>K4 &#x3D; 011100 101010 110111 010110 110110 110011 010100 011101</p><p>K5 &#x3D; 011111 001110 110000 000111 111010 110101 001110 101000</p><p>K6 &#x3D; 011000 111010 010100 111110 010100 000111 101100 101111</p><p>K7 &#x3D; 111011 001000 010010 110111 111101 100001 100010 111100</p><p>K8 &#x3D; 111101 111000 101000 111010 110000 010011 101111 111011</p><p>K9 &#x3D; 111000 001101 101111 101011 111011 011110 011110 000001</p><p>K10 &#x3D; 101100 011111 001101 000111 101110 100100 011001 001111</p><p>K11 &#x3D; 001000 010101 111111 010011 110111 101101 001110 000110</p><p>K12 &#x3D; 011101 010111 000111 110101 100101 000110 011111 101001</p><p>K13 &#x3D; 100101 111100 010111 010001 111110 101011 101001 000001</p><p>K14 &#x3D; 010111 110100 001110 110111 111100 101110 011100 111010</p><p>K15 &#x3D; 101111 111001 000110 001101 001111 010011 111100 001010</p><p>K16 &#x3D; 110010 110011 110110 001011 000011 100001 011111 110101</p><p><strong>第<strong><strong>2</strong></strong>步：明文的编排</strong></p><p>把明文转二进制</p><p>00000001 00100011 01000101 01100111 10001001 10101011 11001101 11101111</p><p>根据IP表，对明文进行初始置换</p><p>int IP_Table[64] &#x3D; {</p><p>​    58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4,</p><p>​    62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8,</p><p>​    57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3,</p><p>​    61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7};</p><p>明文重新排列后的结果</p><p>11001100 00000000 11001100 11111111 11110000 10101010 11110000 10101010</p><p><strong>第<strong><strong>3</strong></strong>步：明文的运算</strong></p><p>首先将明文分成左右两半，像上面的密钥一样</p><p>L0 和 R0</p><p>L0：11001100 00000000 11001100 11111111 </p><p>R0：11110000 10101010 11110000 10101010</p><p>16轮迭代的基本套路</p><p>Ln &#x3D; Rn-1</p><p>Rn &#x3D; Ln-1 + f(Rn-1, Kn)</p><p>以n &#x3D; 1为例:</p><p>L1 &#x3D; R0 &#x3D; 11110000 10101010 11110000 10101010</p><p>R1 &#x3D; L0 xor f(R0, K1)</p><p>f函数传入了R0与K1，即第1个子密钥</p><p>R0 &#x3D; 11110000 10101010 11110000 10101010</p><p>K1 &#x3D; 000110 110000 001011 101111 111111 000111 000001 110010</p><p>R0为32bit，K1为48bit，长度不同，没法按位异或</p><p>将32bit的R0扩展成48bit，使用到E表</p><p>E(R0) &#x3D; 011110 100001 010101 010101 011110 100001 010101 010101</p><p>int E_Table[48] &#x3D; {</p><p>​    32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9,</p><p>​    8, 9, 10, 11, 12, 13, 12, 13, 14, 15, 16, 17,</p><p>​    16, 17, 18, 19, 20, 21, 20, 21, 22, 23, 24, 25,</p><p>​    24, 25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1};</p><p>进行密钥混合 E(R0) ^ K1</p><p>E(R0) &#x3D; 011110 100001 010101 010101 011110 100001 010101 010101</p><p>K1  &#x3D; 000110 110000 001011 101111 111111 000111 000001 110010</p><p>K1+E(R0)&#x3D; 011000 010001 011110 111010 100001 100110 010100 100111</p><p>DES算法核心</p><p>将上一步的结果分成8块6bit</p><p>B1 &#x3D; 011000</p><p>B2 &#x3D; 010001</p><p>B3 &#x3D; 011110 </p><p>B4 &#x3D; 111010 </p><p>B5 &#x3D; 100001</p><p>B6 &#x3D; 100110 </p><p>B7 &#x3D; 010100 </p><p>B8 &#x3D; 100111</p><p>把B1-B8的值当成索引，在S1-S8盒中取值，规则如下：</p><p>以B1为例，值为011000，将它分成0 1100 0，得到</p><p>i &#x3D; 00 即 0</p><p>j &#x3D; 1100 即 12</p><p>在S1中查找第0行第12列的值(这里从0开始算)</p><p>int S_Box[8][4][16] &#x3D; {</p><p>​    &#x2F;&#x2F; S1</p><p>​    14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,</p><p>​    0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,</p><p>​    4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,</p><p>​    15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13,</p><p>​    &#x2F;&#x2F; S2</p><p>​    15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10,</p><p>​    3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5,</p><p>​    0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15,</p><p>​    13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9,</p><p>​    &#x2F;&#x2F; S3</p><p>​    10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8,</p><p>​    13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1,</p><p>​    13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7,</p><p>​    1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12,</p><p>​    &#x2F;&#x2F; S4</p><p>​    7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15,</p><p>​    13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9,</p><p>​    10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4,</p><p>​    3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14,</p><p>​    &#x2F;&#x2F; S5</p><p>​    2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9,</p><p>​    14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6,</p><p>​    4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14,</p><p>​    11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3,</p><p>​    &#x2F;&#x2F; S6</p><p>​    12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11,</p><p>​    10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8,</p><p>​    9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6,</p><p>​    4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13,</p><p>​    &#x2F;&#x2F; S7</p><p>​    4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1,</p><p>​    13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6,</p><p>​    1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2,</p><p>​    6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12,</p><p>​    &#x2F;&#x2F; S8</p><p>​    13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7,</p><p>​    1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2,</p><p>​    7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8,</p><p>​    2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11};</p><p>第0行第12列的值为5</p><p>B1 &#x3D; 5 &#x3D; 0101</p><p>再以B2为例</p><p>B2 &#x3D; 0 1000 1</p><p>i &#x3D; 01  &#x3D; 1</p><p>j &#x3D; 1000 &#x3D; 8</p><p>B2 &#x3D; 12 &#x3D; 1100</p><p>B1在S1中找，B2在S2中找，以此类推</p><p>最后8个6比特的值在S盒作用下变成8个4比特的值</p><p>S(K1+E(R0)) &#x3D; 0101 1100 1000 0010 1011 0101 1001 0111</p><p>得到的结果进行P表的重排</p><p>int P_Table[32] &#x3D; {</p><p>​    16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10,</p><p>​    2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25};</p><p>P(S(K1+E(R0))) &#x3D; 0010 0011 0100 1010 1010 1001 1011 1011</p><p>F函数完事，即F &#x3D; P(S(K1+E(R0)))</p><p>F的结果与L0异或</p><p>L1 &#x3D; R0 &#x3D; 11110000 10101010 11110000 10101010</p><p>R1 &#x3D; Ln-1 xor f(Rn-1,Kn) &#x3D; 11101111 01001010 01100101 01000100</p><p>一轮运算完毕，16轮运算的操作完全一致</p><p>L1: 11110000 10101010 11110000 10101010</p><p>R1: 11101111 01001010 01100101 01000100</p><p>L2: 11101111 01001010 01100101 01000100</p><p>R2: 11001100 00000001 01110111 00001001</p><p>L3: 11001100 00000001 01110111 00001001</p><p>R3: 10100010 01011100 00001011 11110100</p><p>L4: 10100010 01011100 00001011 11110100</p><p>R4: 01110111 00100010 00000000 01000101</p><p>L5: 01110111 00100010 00000000 01000101</p><p>R5: 10001010 01001111 10100110 00110111</p><p>L6: 10001010 01001111 10100110 00110111</p><p>R6: 11101001 01100111 11001101 01101001</p><p>L7: 11101001 01100111 11001101 01101001</p><p>R7: 00000110 01001010 10111010 00010000</p><p>L8: 00000110 01001010 10111010 00010000</p><p>R8: 11010101 01101001 01001011 10010000</p><p>L9: 11010101 01101001 01001011 10010000</p><p>R9: 00100100 01111100 11000110 01111010</p><p>L10:00100100 01111100 11000110 01111010</p><p>R10:10110111 11010101 11010111 10110010</p><p>L11:10110111 11010101 11010111 10110010</p><p>R11:11000101 01111000 00111100 01111000</p><p>L12:11000101 01111000 00111100 01111000</p><p>R12:01110101 10111101 00011000 01011000</p><p>L13:01110101 10111101 00011000 01011000</p><p>R13:00011000 11000011 00010101 01011010</p><p>L14:00011000 11000011 00010101 01011010</p><p>R14:11000010 10001100 10010110 00001101</p><p>L15:11000010 10001100 10010110 00001101</p><p>R15:01000011 01000010 00110010 00110100</p><p>L16:01000011 01000010 00110010 00110100</p><p>R16:00001010 01001100 11011001 10010101</p><p>L16和R16倒换，左右调一下顺序，结果为R16L16</p><p>R16L16 &#x3D; 00001010 01001100 11011001 10010101 01000011 01000010 00110010 00110100</p><p>最后一步，根据FP表进行末置换</p><p>10000101 11101000 00010011 01010100 00001111 00001010 10110100 00000101</p><p>int FP_Table[64] &#x3D; {</p><p>​    40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31,</p><p>​    38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29,</p><p>​    36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27,</p><p>​    34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25};</p><p>上述数据的十六进制形式为</p><p>85 e8 13 54 0f 0a b4 05</p><p>末置换就是初始置换的逆运算</p><p>明文经过初始置换，不做任何处理再进行末置换，值等于它自身</p><h1 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h1><h3 id="AES特点"><a href="#AES特点" class="headerlink" title="AES特点"></a>AES特点</h3><ul><li>在一个分组长度内，明文长度变化，AES的加密结果长度都一样</li><li>密钥长度128、192、256三种，如果少一个十六进制数，会在前面补0</li><li>分组长度只有128一种</li><li>密文长度与填充后的明文长度有关，一般是16字节的倍数</li><li>DES是针对bit进行操作，AES是针对字节进行操作</li></ul><h1 id="AES和DES的区别与联系"><a href="#AES和DES的区别与联系" class="headerlink" title="AES和DES的区别与联系"></a>AES和DES的区别与联系</h1><ul><li>DES和AES都是对称加密算法，加解密都是用同一个密钥</li><li>DES和AES都是分组加密算法，DES的分组长度是64比特，AES的分组长度是128比特</li><li>DES的密钥64比特，AES的密钥128比特、192比特、256比特</li><li>DES运算的基本单元是比特，AES运算的基本单元是字节</li><li>DES和AES都可以分成密钥的编排和明文的运算</li><li>DES中有非常多的置换，AES没有</li><li>DES有16轮运算，在密钥编排中生成了16组子密钥</li><li>AES有10、12、14轮运算，也生成了10、12、14组轮密钥，都是每轮用一个</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NDK开发</title>
      <link href="/2024/10/28/NDK%E5%BC%80%E5%8F%91/"/>
      <url>/2024/10/28/NDK%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="NDK介绍"><a href="#NDK介绍" class="headerlink" title="NDK介绍"></a>NDK介绍</h2><p><img src="/../image/ndkkf1.png"></p><h2 id="NDK与Java工程的区别"><a href="#NDK与Java工程的区别" class="headerlink" title="NDK与Java工程的区别"></a>NDK与Java工程的区别</h2><p><img src="/../image/ndkkf2.png"> </p><h2 id="第一个NDK工程"><a href="#第一个NDK工程" class="headerlink" title="第一个NDK工程"></a>第一个NDK工程</h2><p><img src="/../image/ndkkf3.png"></p><h2 id="so中常用的Log输出"><a href="#so中常用的Log输出" class="headerlink" title="so中常用的Log输出"></a>so中常用的Log输出</h2><p><img src="/../image/ndkkf4.png"></p><h2 id="NDK多线程简介"><a href="#NDK多线程简介" class="headerlink" title="NDK多线程简介"></a>NDK多线程简介</h2><p><img src="/../image/ndkkf5.png"></p><h2 id="JNI-OnLoad"><a href="#JNI-OnLoad" class="headerlink" title="JNI_OnLoad"></a>JNI_OnLoad</h2><p><img src="/../image/ndkkf6.png"></p><h2 id="JavaVM"><a href="#JavaVM" class="headerlink" title="JavaVM"></a>JavaVM</h2><p><img src="/../image/ndkkf7.png"></p><h2 id="JNIEnv"><a href="#JNIEnv" class="headerlink" title="JNIEnv"></a>JNIEnv</h2><p><img src="/../image/ndkkf8.png"></p><h2 id="so相关的几个概念"><a href="#so相关的几个概念" class="headerlink" title="so相关的几个概念"></a>so相关的几个概念</h2><p><img src="/../image/ndkkf9.png"></p><h2 id="so函数注册"><a href="#so函数注册" class="headerlink" title="so函数注册"></a>so函数注册</h2><p><img src="/../image/ndkkf10.png"></p><h2 id="so之间的相互调用"><a href="#so之间的相互调用" class="headerlink" title="so之间的相互调用"></a>so之间的相互调用</h2><p><img src="/../image/ndkkf11.png"></p><h2 id="so路径的动态获取"><a href="#so路径的动态获取" class="headerlink" title="so路径的动态获取"></a>so路径的动态获取</h2><p><img src="/../image/ndkkf12.png"></p><h2 id="通过jni创建Java对象"><a href="#通过jni创建Java对象" class="headerlink" title="通过jni创建Java对象"></a>通过jni创建Java对象</h2><p><img src="/../image/ndkkf13.png"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、找类</span></span><br><span class="line"><span class="comment">//2、得到方法id</span></span><br><span class="line"><span class="comment">//3、创建对象</span></span><br><span class="line">jclass clazz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;com/xiaojianbang/ndk/NDKDemo&quot;</span>);</span><br><span class="line">jmethodID methodID = env-&gt;<span class="built_in">GetMethodID</span>(clazz,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;()V&quot;</span>);</span><br><span class="line">jobject ReflectDemoOjb = env-&gt;<span class="built_in">NewObject</span>(clazz,methodID);</span><br><span class="line"><span class="built_in">LOGD</span>(<span class="string">&quot;ReflectDemoObj %p&quot;</span>,ReflectDemoObj);</span><br></pre></td></tr></table></figure><h2 id="通过jni访问Java属性"><a href="#通过jni访问Java属性" class="headerlink" title="通过jni访问Java属性"></a>通过jni访问Java属性</h2><p><img src="/../image/ndkkf14.png"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">jmethodID methodID = env-&gt;<span class="built_in">GetMethodID</span>(clazz,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;()V&quot;</span>);</span><br><span class="line"><span class="comment">//获取静态字段</span></span><br><span class="line"><span class="comment">//1、找到类</span></span><br><span class="line">jclass clazz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;com/xiaojianbang/ndk/NDKDemo&quot;</span>);</span><br><span class="line"><span class="comment">//2、获取字段id</span></span><br><span class="line">jfieldID privateStaticStringField = env-&gt;<span class="built_in">GetStaticFieldID</span>(clazz,<span class="string">&quot;privateStaticStringField&quot;</span>,<span class="string">&quot;Ljava/lang/string;&quot;</span>);</span><br><span class="line"><span class="comment">//3、获取字段内容</span></span><br><span class="line">jstring privateStaticString = <span class="built_in">static_cast</span>&lt;jstring&gt;(env-&gt;<span class="built_in">GetStaticObjectField</span>(clazz,privateStaticStringField));</span><br><span class="line"><span class="comment">//4、将jstring转换为cstring</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* privatestr = env-&gt;<span class="built_in">GetStringUTFChars</span>(privateStaticString,<span class="literal">nullptr</span>);</span><br><span class="line"><span class="comment">//5、释放</span></span><br><span class="line">env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(privateStaticString,privatestr);</span><br><span class="line"><span class="comment">//获取对象字段</span></span><br><span class="line"><span class="comment">//1、找到类</span></span><br><span class="line">jclss clazz = env-&gt;<span class="built_in">FIndClass</span>(<span class="string">&quot;com/xiaojianbang/ndk/NDKDemo&quot;</span>);</span><br><span class="line">jmethodID methodID = env-&gt;<span class="built_in">GetMethodID</span>(clazz,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;()V&quot;</span>);</span><br><span class="line">jobject ReflectDemoOjb = env-&gt;<span class="built_in">NewObject</span>(clazz,methodID);</span><br><span class="line"><span class="comment">//2、获取字段id</span></span><br><span class="line">jfieldID publicStringField = env-&gt;<span class="built_in">GetFieldID</span>(ReflectDmmoObj,<span class="string">&quot;publicStringField&quot;</span>,<span class="string">&quot;L/java/lang/String&quot;</span>);</span><br><span class="line"><span class="comment">//3、获取字段内容</span></span><br><span class="line">jstring publicString = <span class="built_in">static_cast</span>&lt;jstring&gt;(env-&gt;<span class="built_in">GetObjectField</span>(clazz,publisStringField));</span><br><span class="line"><span class="comment">//4、将jstring转换为cstring</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* publicstr = env-&gt;<span class="built_in">GetStringUTFChars</span>(publicString,<span class="literal">nullptr</span>);</span><br><span class="line"><span class="comment">//5、释放</span></span><br><span class="line">env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(publicString,publicstr);</span><br><span class="line"><span class="comment">//设置字段</span></span><br><span class="line"><span class="comment">//1、找到类</span></span><br><span class="line">jcalss clazz = <span class="built_in">FindClass</span>(<span class="string">&quot;com/xiaojianbang/ndk/NDKDemo&quot;</span>);</span><br><span class="line"><span class="comment">//2、获取字段id</span></span><br><span class="line">jfieldID publicStringField = env-&gt;<span class="built_in">GetFieldID</span>(clazz,<span class="string">&quot;publicStringField&quot;</span>,<span class="string">&quot;L/java/lang/String&quot;</span>);</span><br><span class="line">env-&gt;<span class="built_in">SetObjectField</span>(clazz,publicStringField,env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;xiaojianbang&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="通过jni访问Java数组"><a href="#通过jni访问Java数组" class="headerlink" title="通过jni访问Java数组"></a>通过jni访问Java数组</h2><p><img src="/../image/ndkkf15.png"></p><h2 id="通过jni访问Java方法"><a href="#通过jni访问Java方法" class="headerlink" title="通过jni访问Java方法"></a>通过jni访问Java方法</h2><p><img src="/../image/ndkkf16.png"></p><p><img src="/../image/ndkkf17.png"></p><p><img src="/../image/ndkkf18.png"></p><h2 id="通过jni访问Java父类方法"><a href="#通过jni访问Java父类方法" class="headerlink" title="通过jni访问Java父类方法"></a>通过jni访问Java父类方法</h2><p><img src="/../image/ndkkf19.png"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT <span class="type">void</span> JNIDCALL</span></span><br><span class="line"><span class="function"><span class="title">Java_com_comxiaojianbang_ndkdemo_MainActivity_onCreate</span><span class="params">(JNIEnv *env, jobject thiz,jobject saved_instance_state)</span></span>&#123;</span><br><span class="line">    jclass AppCompatActivityClazz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;androidx/appcompat/app/AppCompatActivity&quot;</span>);</span><br><span class="line">    jmethodid onCreateID = env-&gt;<span class="built_in">GetMethodID</span>(AppCompatActivityClazz,<span class="string">&quot;onCreate&quot;</span>,<span class="string">&quot;(Landroid/os/Bundle;)V&quot;</span>);</span><br><span class="line">    env-&gt;<span class="built_in">CallNonvirtualVoidMethod</span>(thiz,AppCompatActivityCalzz,onCreateID,saved_instance_state);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h2><p><img src="/../image/ndkkf20.png"></p><p><img src="/../image/ndkkf21.png"></p><h2 id="子线程获取Java类"><a href="#子线程获取Java类" class="headerlink" title="子线程获取Java类"></a>子线程获取Java类</h2><p><img src="/../image/ndkkf22.png"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">jclass MainActivityClazz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;com/xiaojianbang/ndkdemo/MainActivity&quot;</span>);</span><br><span class="line">jclass classClazz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;java/lang/Class&quot;</span>);</span><br><span class="line">jmethodID getClassLoaderID = env-&gt;<span class="built_in">GetMethodID</span>(classClazz,<span class="string">&quot;getClassLoader&quot;</span>,<span class="string">&quot;()Ljava/lang/ClassLoader;&quot;</span>);</span><br><span class="line">jobject tempClassLoaderObj = env-&gt;<span class="built_in">CallObjectMethod</span>(MainActivityClazz,getClassLoaderID);</span><br><span class="line">jobject ClassLoaderObj = env-&gt;<span class="built_in">NewGlobal</span>(tempClassLoaderObj);</span><br></pre></td></tr></table></figure><h2 id="init与initarray"><a href="#init与initarray" class="headerlink" title="init与initarray"></a>init与initarray</h2><p><img src="/../image/ndkkf23.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>密码学</title>
      <link href="/2024/10/24/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>/2024/10/24/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="h5App的逆向"><a href="#h5App的逆向" class="headerlink" title="h5App的逆向"></a>h5App的逆向</h1><p><img src="/../image/mima1.png"></p><h3 id="PC端的谷歌浏览器进入chrome-inspect-devices"><a href="#PC端的谷歌浏览器进入chrome-inspect-devices" class="headerlink" title="PC端的谷歌浏览器进入chrome:&#x2F;&#x2F;inspect&#x2F;#devices"></a>PC端的谷歌浏览器进入chrome:&#x2F;&#x2F;inspect&#x2F;#devices</h3><p><img src="/../image/mima2.png"></p><h3 id="hook修改WebView为可调试"><a href="#hook修改WebView为可调试" class="headerlink" title="hook修改WebView为可调试"></a>hook修改WebView为可调试</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">WebView</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;android.webkit.WebView&#x27;</span>);</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;android.util.AttributeSet&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a, b</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a, b);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;android.util.AttributeSet&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a, b, c</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a, b, c);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;android.util.AttributeSet&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;boolean&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a, b, c, d</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a, b, c, d);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;android.util.AttributeSet&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a, b, c, d</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a, b, c, d);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;android.util.AttributeSet&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;boolean&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a, b, c, d, e</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a, b, c, d, e);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;android.content.Context&#x27;</span>, <span class="string">&#x27;android.util.AttributeSet&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;boolean&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a, b, c, d, e, f</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;WebView.$init is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.$init(a, b, c, d, e, f);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">WebView</span>.<span class="property">setWebContentsDebuggingEnabled</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setWebContentsDebuggingEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setWebContentsDebuggingEnabled is called!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><h3 id="Hex编码"><a href="#Hex编码" class="headerlink" title="Hex编码"></a>Hex编码</h3><p><img src="/../image/mima4.png"></p><p> 一个十六进制字符占4个bit位，半个字节，UTF-8编码的中文一个汉字占3个字节</p><h3 id="Base64编码"><a href="#Base64编码" class="headerlink" title="Base64编码"></a>Base64编码</h3><p><img src="/../image/mima5.png"></p><p>一个65个字符，包括补位的”&#x3D;”，进行get请求时，前端发送了’+’又没有使用URL编码，后端接收到的就是’ ‘(空格)</p><p><img src="/../image/mima6.png"></p><ul><li>\n是Linux下的换行，\r\n是windows下的换行</li></ul><h2 id="消息摘要算法"><a href="#消息摘要算法" class="headerlink" title="消息摘要算法"></a>消息摘要算法</h2><p><img src="/../image/mima7.png"></p><ul><li>不停长度的输入产生固定长度的输出</li></ul><h3 id="MD5算法"><a href="#MD5算法" class="headerlink" title="MD5算法"></a>MD5算法</h3><p><img src="/../image/mima8.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">MessageDigest</span> <span class="variable">md5</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);<span class="comment">//这行代码创建了一个 MessageDigest 对象，用于生成 MD5 哈希。getInstance(&quot;MD5&quot;) 指定了使用 MD5 算法。</span></span><br><span class="line">md5.update(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());<span class="comment">//update 方法将要被哈希的字节数组（这里是字符串 &quot;xiaojianbang&quot; 的字节表示）传递给 MessageDigest 对象。getBytes() 方法将字符串转换为字节数组。</span></span><br><span class="line"><span class="comment">//update的重载函数</span></span><br><span class="line">md5.update(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes(),<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">//从下标为1的开始取(第一个字节下标为0)，长度为3</span></span><br><span class="line"><span class="type">byte</span> [] = md5.digest();<span class="comment">//digest() 方法计算并返回当前更新内容的 MD5 哈希值。调用此方法后，MessageDigest 对象将被重置，无法再用于更新数据。</span></span><br><span class="line"><span class="comment">//编译成十六进制</span></span><br><span class="line">System.out.println(HexBin.encode(result));</span><br><span class="line"><span class="comment">//Base64编码</span></span><br><span class="line">System.out.println(Base64.getEncode().encodeToString(result));</span><br><span class="line"><span class="comment">//也可以直接一行代码</span></span><br><span class="line"><span class="type">byte</span>[] result = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>).digest(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());</span><br></pre></td></tr></table></figure><h3 id="SHA"><a href="#SHA" class="headerlink" title="SHA"></a>SHA</h3><p><img src="/../image/mima9.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">MessageDigest</span> <span class="variable">sha1</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;SHA-1&quot;</span>);</span><br><span class="line">sha1.update(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());</span><br><span class="line">shaq.digest();</span><br></pre></td></tr></table></figure><h2 id="MD5、SHA算法通杀"><a href="#MD5、SHA算法通杀" class="headerlink" title="MD5、SHA算法通杀"></a>MD5、SHA算法通杀</h2><p><img src="/../image/mima10.png"></p><h3 id="工具函数的封装"><a href="#工具函数的封装" class="headerlink" title="工具函数的封装"></a>工具函数的封装</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">            .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag,data</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag+<span class="string">&quot;Base64:&quot;</span>+<span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag,data</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag+<span class="string">&quot;Hex:&quot;</span>+<span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag,data</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag+<span class="string">&quot;Utf8:&quot;</span>+<span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="通杀MD5、SHAhook代码"><a href="#通杀MD5、SHAhook代码" class="headerlink" title="通杀MD5、SHAhook代码"></a>通杀MD5、SHAhook代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">            <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">                .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                    <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Base64: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Hex: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Utf8: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// toUtf8(&quot;xiaojianbang&quot;,[48, 49, 50, 51, 52]);</span></span><br><span class="line">    <span class="comment">// toBase64(&quot;xiaojianbang&quot;,[48, 49, 50, 51, 52]);</span></span><br><span class="line">    <span class="comment">// toHex(&quot;xiaojianbang&quot;,[48, 49, 50, 51, 52]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> messageDigest = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.security.MessageDigest&quot;</span>);</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest() is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>(data);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>(data, start, length);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="MAC算法"><a href="#MAC算法" class="headerlink" title="MAC算法"></a>MAC算法</h2><p><img src="/../image/mima11.png"></p><h3 id="MAC的Java实现"><a href="#MAC的Java实现" class="headerlink" title="MAC的Java实现"></a>MAC的Java实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SecretKeySpec</span> <span class="variable">secreKeySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(<span class="string">&quot;a12345678&quot;</span>.getBytes(),<span class="string">&quot;HmacSHA1&quot;</span>);<span class="comment">//创建一个 SecretKeySpec 对象，该对象是 HMAC 的密钥。这里使用的密钥是字符串 &quot;a12345678&quot;，通过 getBytes() 方法将其转换为字节数组。</span></span><br><span class="line"><span class="comment">//指定算法为 &quot;HmacSHA1&quot;，表示使用 SHA-1 哈希算法进行 HMAC 签名。</span></span><br><span class="line"><span class="type">Mac</span> <span class="variable">mac</span> <span class="operator">=</span> Mac.getInstance(secretKeySpec.getAlgorithm());<span class="comment">//创建一个 Mac 对象，使用之前定义的算法（HmacSHA1）。</span></span><br><span class="line">mac.init(secretKeySpec);<span class="comment">//初始化 Mac 对象，使用之前创建的密钥 secreKeySpec</span></span><br><span class="line">mac.update(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());<span class="comment">//将要签名的数据（字符串 &quot;xiaojianbang&quot;）转换为字节数组并更新到 Mac 对象中。</span></span><br><span class="line">mac.doFinal();<span class="comment">//计算 HMAC 签名并返回结果。这个方法会返回一个字节数组，表示对输入数据的 HMAC 签名结果。</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MAC算法通杀hook代码"><a href="#MAC算法通杀hook代码" class="headerlink" title="MAC算法通杀hook代码"></a>MAC算法通杀hook代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">          <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">              .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                  <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">              )</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Base64: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Hex: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Utf8: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> mac = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.Mac&quot;</span>);</span><br><span class="line">   mac.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">key, AlgorithmParameterSpec</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.init(&#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(key, <span class="title class_">AlgorithmParameterSpec</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.security.Key&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.init(&#x27;java.security.Key&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">      <span class="keyword">var</span> keyBytes = key.<span class="title function_">getEncoded</span>();</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(key);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal() is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">doFinal</span>();</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, result);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal.overload(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">doFinal</span>(data);</span><br><span class="line">   &#125;</span><br><span class="line">   mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">output, outOffset</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal.overload(&#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">doFinal</span>(output, outOffset);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="对称加密算法"><a href="#对称加密算法" class="headerlink" title="对称加密算法"></a>对称加密算法</h2><p><img src="/../image/mima12.png"></p><h3 id="DES算法"><a href="#DES算法" class="headerlink" title="DES算法"></a>DES算法</h3><p><img src="/../image/mima13.png"></p><h4 id="DES的Java实现"><a href="#DES的Java实现" class="headerlink" title="DES的Java实现"></a>DES的Java实现</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SecretKeySpec</span> <span class="variable">desKey</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecrectKeySpec</span>(<span class="string">&quot;12345678&quot;</span>.getBytes(),<span class="string">&quot;DES&quot;</span>);<span class="comment">//创建一个 SecretKeySpec 对象，使用字符串 &quot;12345678&quot; 作为密钥，并指定使用 DES 加密算法。注意，DES 密钥长度必须为 8 字节。</span></span><br><span class="line"><span class="type">Cipher</span> <span class="variable">des</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;DES/ECB/PKCS5Paddin&quot;</span>);<span class="comment">//获取一个 Cipher 实例，指定算法为 DES，工作模式为 ECB（电子密码本模式），填充方式为 PKCS5（填充方式用于处理非整数倍块大小的数据）。注意，原代码中的填充方式格式不正确，应该是 PKCS5Padding。</span></span><br><span class="line">des.init(Chiper.ENCRYPT_MODE,deskey);<span class="comment">//初始化 Cipher 对象，设置为加密模式，并传入刚创建的密钥 desKey。</span></span><br><span class="line"><span class="type">byte</span>[] result = des.doFinal(<span class="string">&quot;xiaojianbang&quot;</span> .getBytes());<span class="comment">//使用 doFinal 方法对输入字符串 &quot;xiaojianbang&quot; 进行加密，返回加密结果的字节数组 result。</span></span><br><span class="line"><span class="type">String</span> <span class="variable">hexStr</span> <span class="operator">=</span> HexBin.encode(result);</span><br><span class="line">System.out.println(hexStr);</span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(result));</span><br><span class="line"><span class="comment">//解码</span></span><br><span class="line">des.init(Cipher.DECRYPT_MODE,deskey);</span><br><span class="line"><span class="type">byte</span>[] result = des.doFinal(HexBin.decode(result));</span><br></pre></td></tr></table></figure><h4 id="DES的加密模式"><a href="#DES的加密模式" class="headerlink" title="DES的加密模式"></a>DES的加密模式</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SecretKeySpec</span> <span class="variable">desKey</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecrectKeySpec</span>(<span class="string">&quot;12345678&quot;</span>.getBytes(),<span class="string">&quot;DES&quot;</span>);</span><br><span class="line"><span class="type">IvParameterSpec</span> <span class="variable">ivParameterSpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(<span class="string">&quot;12345678&quot;</span>.getBytes());<span class="comment">//长度按照对应算法的分组长度,生成一个随机的初始化向量（IV），它的长度与块大小相同（如 AES 的块大小为 16 字节，DES的块大小为8 字节）。</span></span><br><span class="line"><span class="comment">//将明文分成固定大小的块。</span></span><br><span class="line"><span class="comment">//第一个明文块与 IV 进行异或操作，然后对结果进行加密，得到第一个密文块。</span></span><br><span class="line"><span class="comment">//后续每个明文块与前一个密文块进行异或，然后加密，得到当前的密文块。</span></span><br><span class="line"></span><br><span class="line"><span class="type">Cipher</span> <span class="variable">des</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;DES/C BC/PKCS5Paddin&quot;</span>);</span><br><span class="line">des.init(Chiper.ENCRYPT_MODE,deskey,ivParameterSpec);</span><br><span class="line"><span class="type">byte</span>[] result = des.doFinal(<span class="string">&quot;xiaojianbang&quot;</span> .getBytes());</span><br><span class="line"><span class="type">String</span> <span class="variable">hexStr</span> <span class="operator">=</span> HexBin.encode(result);</span><br><span class="line">System.out.println(hexStr);</span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(result));</span><br><span class="line">des.init(Cipher.DECRYPT_MODE,deskey);</span><br><span class="line"><span class="type">byte</span>[] result = des.doFinal(HexBin.decode(result));</span><br></pre></td></tr></table></figure><h4 id="DES的填充方式"><a href="#DES的填充方式" class="headerlink" title="DES的填充方式"></a>DES的填充方式</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Cipher</span> <span class="variable">des</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;DES/CBC/NOPadding&quot;</span>);<span class="comment">//明文长度必须要和分组长度一致</span></span><br><span class="line"><span class="type">Cipher</span> <span class="variable">des</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;DES/CBC/PKCS5Paddin&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="/../image/mima14.png"></p><ul><li>有使用到的密钥长度为56bit，每个字节的最后一个bit都没使用,例如12345678和03254769的加密结果一样</li></ul><h3 id="DESede算法-3DES算法"><a href="#DESede算法-3DES算法" class="headerlink" title="DESede算法(3DES算法)"></a>DESede算法(3DES算法)</h3><ul><li>DES加密</li><li>DES解密</li><li>DES加密</li></ul><p><img src="/../image/mima15.png"></p><h4 id="DESede的加解密Java实现"><a href="#DESede的加解密Java实现" class="headerlink" title="DESede的加解密Java实现"></a>DESede的加解密Java实现</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SecretKeySpec</span> <span class="variable">secretKeySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(<span class="string">&quot;123456781234567812345678&quot;</span>.getBytes(),<span class="string">&quot;DESede&quot;</span>);</span><br><span class="line"><span class="type">IvParameterSpec</span> <span class="variable">ivParameterSpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(<span class="string">&quot;12345678&quot;</span>.getBytes());</span><br><span class="line"><span class="type">Cipher</span> <span class="variable">desede</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;DESede/CBC/PKCS5Padding&quot;</span>);</span><br><span class="line">desede.init(Cipher.ENCRYPT_MODE,secretKyeSpec,ivParameterSpec);</span><br><span class="line"><span class="type">byte</span>[] result = desede.doFinal(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());</span><br><span class="line"><span class="type">String</span> <span class="variable">hexStr</span> <span class="operator">=</span> HexBin.encode(result);</span><br></pre></td></tr></table></figure><p><img src="/../image/mima18.png"></p><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><p><img src="/../image/mima19.png"></p><h3 id="AES加解密的Java实现"><a href="#AES加解密的Java实现" class="headerlink" title="AES加解密的Java实现"></a>AES加解密的Java实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">SecretKeySpec</span> <span class="variable">key</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(<span class="string">&quot;1234567890abcdef&quot;</span>.getBytes(),<span class="string">&quot;AES&quot;</span>);</span><br><span class="line"><span class="type">AlgorithmParameterSpec</span> <span class="variable">iv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParamterSpec</span>(<span class="string">&quot;1234567890abcdef&quot;</span>.getBytes());</span><br><span class="line"><span class="type">Cipher</span> <span class="variable">aes</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCStPadding&quot;</span>);</span><br><span class="line">aes.init(Cipher.ENCRYPT_MODE,key,iv);</span><br><span class="line"><span class="type">byte</span>[] result = aes.doFinal(<span class="string">&quot;xiaojianbang1234xiaojianbang1234&quot;</span>.getBytes());</span><br><span class="line"><span class="type">String</span> <span class="variable">hexStr</span> <span class="operator">=</span> HexBin.encode(result);</span><br><span class="line">System.out.println(hexStr);</span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(result));</span><br></pre></td></tr></table></figure><h3 id="DES、DESede、AES通杀hook"><a href="#DES、DESede、AES通杀hook" class="headerlink" title="DES、DESede、AES通杀hook"></a>DES、DESede、AES通杀hook</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">          <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">              .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                  <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">              )</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Base64: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Hex: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Utf8: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> cipher = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.Cipher&quot;</span>);</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.cert.Certificate&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.cert.Certificate&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.cert.Certificate&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.cert.Certificate&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.AlgorithmParameters&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.AlgorithmParameters&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.AlgorithmParameters&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.AlgorithmParameters&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">      <span class="keyword">var</span> className = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">arguments</span>[<span class="number">1</span>]);</span><br><span class="line">      <span class="keyword">if</span>(className.<span class="title function_">indexOf</span>(<span class="string">&quot;OpenSSLRSAPrivateKey&quot;</span>) === -<span class="number">1</span>)&#123;</span><br><span class="line">         <span class="keyword">var</span> keyBytes = <span class="variable language_">arguments</span>[<span class="number">1</span>].<span class="title function_">getEncoded</span>();</span><br><span class="line">         <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">         <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">         <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">      <span class="keyword">var</span> keyBytes = <span class="variable language_">arguments</span>[<span class="number">1</span>].<span class="title function_">getEncoded</span>();</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">      <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; init iv&quot;</span>;</span><br><span class="line">      <span class="keyword">var</span> iv = <span class="title class_">Java</span>.<span class="title function_">cast</span>(<span class="variable language_">arguments</span>[<span class="number">2</span>], <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.spec.IvParameterSpec&quot;</span>));</span><br><span class="line">      <span class="keyword">var</span> ivBytes = iv.<span class="title function_">getIV</span>();</span><br><span class="line">      <span class="title function_">toUtf8</span>(tags, ivBytes);</span><br><span class="line">      <span class="title function_">toHex</span>(tags, ivBytes);</span><br><span class="line">      <span class="title function_">toBase64</span>(tags, ivBytes);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>, <span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;java.nio.ByteBuffer&#x27;, &#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;, &#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;, &#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal() is called!&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="title function_">showStacks</span>();</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal data&quot;</span>;</span><br><span class="line">      <span class="keyword">var</span> data = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">      <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">      <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">      <span class="title function_">toUtf8</span>(tags, result);</span><br><span class="line">      <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">      <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">   cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">      <span class="title function_">showStacks</span>();</span><br><span class="line">      <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">      <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal data&quot;</span>;</span><br><span class="line">      <span class="keyword">var</span> data = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">      <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">      <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">      <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">      <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">      <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">      <span class="title function_">toUtf8</span>(tags, result);</span><br><span class="line">      <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">      <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, <span class="variable language_">arguments</span>[<span class="number">1</span>], <span class="variable language_">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="非对称加密算法"><a href="#非对称加密算法" class="headerlink" title="非对称加密算法"></a>非对称加密算法</h2><p><img src="/../image/mima20.png"></p><h3 id="RSA的密钥解析"><a href="#RSA的密钥解析" class="headerlink" title="RSA的密钥解析"></a>RSA的密钥解析</h3><p><img src="/../image/mima21.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">byte</span>[] keyBytes = Base64Decoder.decodeBuffer(key);<span class="comment">//这一行使用 Base64Decoder 将一个 Base64 编码的字符串（key）解码为字节数组（keyBytes）。Base64 编码通常用于在文本格式中传输二进制数据，如公钥。</span></span><br><span class="line"><span class="type">X509EncodeKeySpec</span> <span class="variable">keySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">X509EncodedKeySpec</span>(keyBytes);<span class="comment">//这里创建了一个 X509EncodedKeySpec 对象，该对象表示通过 X.509 标准编码的公钥。这个类的构造函数接受之前解码的字节数组。</span></span><br><span class="line"><span class="type">KeyFactory</span> <span class="variable">keyFactory</span> <span class="operator">=</span> KeyFactory.getInstance(<span class="string">&quot;RSA&quot;</span>);<span class="comment">//这行代码获取一个 KeyFactory 实例，指定使用 &quot;RSA&quot; 算法。KeyFactory 用于转换密钥规格（如公钥或私钥）为相应的密钥对象</span></span><br><span class="line"><span class="type">PublicKey</span> <span class="variable">publicKey</span> <span class="operator">=</span> keyFactory.generatePublic(keySpec);<span class="comment">//最后，这行代码使用 KeyFactory 生成 PublicKey 对象，输入是之前创建的 X509EncodedKeySpec。这意味着 publicKey 现在是一个可以用来执行加密操作的 RSA 公钥。</span></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span>[] keyBytess = publicKey.geteEncoded();<span class="comment">//这一行调用 publicKey 对象的 getEncoded() 方法，这个方法返回公钥的字节数组表示。通常，这个字节数组是以 X.509 格式编码的。</span></span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(keyBytess));<span class="comment">// Base64 类的编码器将字节数组 keyBytess 转换为 Base64 编码的字符串，并将结果输出到控制台。encodeToString 方法会把字节数组转换为可读的字符串形式，方便传输或存储。</span></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span>[] keyBytes = Base64Decoder.decodeBuffere(key);</span><br><span class="line"><span class="type">PKCS8EncodedKeySpec</span> <span class="variable">keySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PKCSBEncodedKeySpec</span>(keyBytes);</span><br><span class="line"><span class="type">keyFactory</span> <span class="variable">keyFactory</span> <span class="operator">=</span> KeyFactory.getInstance(<span class="string">&quot;RSA&quot;</span>);</span><br><span class="line"><span class="type">PrivateKey</span> <span class="variable">privateKey</span> <span class="operator">=</span> keyFactory.generatePrivate(keySpec);</span><br><span class="line"><span class="type">byte</span>[] privatekeyBytess = privateKeys.getEncoded();</span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(privateKeyBytess));</span><br></pre></td></tr></table></figure><h3 id="RSA的加解密"><a href="#RSA的加解密" class="headerlink" title="RSA的加解密"></a>RSA的加解密</h3><p><img src="/../image/mima22.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;RSA/ECB/PKCS1Padding&quot;</span>);</span><br><span class="line">cipher.init(Cipher.ENCRYPT_MODE,publicKey);</span><br><span class="line"><span class="type">byte</span>[] bt_encrypted = cipher.doFinal(bt_plaintext);</span><br><span class="line"></span><br><span class="line"><span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;RSA/None/NOPadding&quot;</span>);</span><br><span class="line">cipher.init(Cipher.DECRYPT_MODE,privateKey);</span><br><span class="line"><span class="type">byte</span>[] bt_original = cipher.doFinal(bt_encrypted);</span><br></pre></td></tr></table></figure><h3 id="RSA的加密模式和填充方式"><a href="#RSA的加密模式和填充方式" class="headerlink" title="RSA的加密模式和填充方式"></a>RSA的加密模式和填充方式</h3><p><img src="/../image/mima23.png"> </p><h3 id="RSA密钥的转换"><a href="#RSA密钥的转换" class="headerlink" title="RSA密钥的转换"></a>RSA密钥的转换</h3><p><img src="/../image/mima24.png"></p><h3 id="RSA算法通杀"><a href="#RSA算法通杀" class="headerlink" title="RSA算法通杀"></a>RSA算法通杀</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">            <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">                .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                    <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Base64: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Hex: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Utf8: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// toUtf8(&quot;xiaojianbang&quot;,[48, 49, 50, 51, 52]);</span></span><br><span class="line">    <span class="comment">// toBase64(&quot;xiaojianbang&quot;,[48, 49, 50, 51, 52]);</span></span><br><span class="line">    <span class="comment">// toHex(&quot;xiaojianbang&quot;,[48, 49, 50, 51, 52]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> messageDigest = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.security.MessageDigest&quot;</span>);</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest() is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>(data);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>(data, start, length);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mac = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.Mac&quot;</span>);</span><br><span class="line">    mac.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">key, AlgorithmParameterSpec</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.init(&#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(key, <span class="title class_">AlgorithmParameterSpec</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.security.Key&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.init(&#x27;java.security.Key&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> keyBytes = key.<span class="title function_">getEncoded</span>();</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(key);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal() is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">doFinal</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal.overload(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">doFinal</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">output, outOffset</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal.overload(&#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">doFinal</span>(output, outOffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> cipher = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.Cipher&quot;</span>);</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.cert.Certificate&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.cert.Certificate&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.cert.Certificate&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.cert.Certificate&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.AlgorithmParameters&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.AlgorithmParameters&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.AlgorithmParameters&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.AlgorithmParameters&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> className = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">arguments</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span>(className.<span class="title function_">indexOf</span>(<span class="string">&quot;OpenSSLRSAPrivateKey&quot;</span>) === -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> keyBytes = <span class="variable language_">arguments</span>[<span class="number">1</span>].<span class="title function_">getEncoded</span>();</span><br><span class="line">            <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">            <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">            <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> keyBytes = <span class="variable language_">arguments</span>[<span class="number">1</span>].<span class="title function_">getEncoded</span>();</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; init iv&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> iv = <span class="title class_">Java</span>.<span class="title function_">cast</span>(<span class="variable language_">arguments</span>[<span class="number">2</span>], <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.spec.IvParameterSpec&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> ivBytes = iv.<span class="title function_">getIV</span>();</span><br><span class="line">        <span class="title function_">toUtf8</span>(tags, ivBytes);</span><br><span class="line">        <span class="title function_">toHex</span>(tags, ivBytes);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, ivBytes);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>, <span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;java.nio.ByteBuffer&#x27;, &#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;, &#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;, &#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal() is called!&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal data&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> data = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tags, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal data&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> data = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tags, result);</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, <span class="variable language_">arguments</span>[<span class="number">1</span>], <span class="variable language_">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="数字签名算法"><a href="#数字签名算法" class="headerlink" title="数字签名算法"></a>数字签名算法</h2><p><img src="/../image/mima25.png"></p><h3 id="Java实现"><a href="#Java实现" class="headerlink" title="Java实现"></a>Java实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//签名</span></span><br><span class="line"><span class="type">KeyFactory</span> <span class="variable">keyFactory</span> <span class="operator">=</span> KeyFactory.getInstance(<span class="string">&quot;RSA&quot;</span>);</span><br><span class="line"><span class="type">byte</span>[] privatekeyBytes = Base64.getDecoder().decode(privateKey);</span><br><span class="line"><span class="type">PKCS8EncodedKeySpec</span> <span class="variable">privatekeySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PKCS8EncodedKeySpec</span>(privatekeyBytes);</span><br><span class="line"><span class="type">PrivateKey</span> <span class="variable">privateKeys</span> <span class="operator">=</span> keyFactory.generatePrivate(privatekeySpec);</span><br><span class="line"></span><br><span class="line"><span class="type">Signature</span> <span class="variable">sig</span> <span class="operator">=</span>Signatute.getInstance(<span class="string">&quot;SHA356withRSA&quot;</span>);</span><br><span class="line">sig.initSign(privateKeys);</span><br><span class="line">sig.update(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());</span><br><span class="line"><span class="type">byte</span>[] signResult = sig.sign();</span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(signResult));</span><br><span class="line"><span class="comment">//验证</span></span><br><span class="line"><span class="type">byte</span>[] keyBytes = Base64.getDecoder().decode(pubkey);</span><br><span class="line"><span class="type">X509EncodedKeySpec</span> <span class="variable">keySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">X509EncodedKeySpec</span>(keyBytes);</span><br><span class="line">publicKey publicKey - keyFactory.generatePublic(keySpec);</span><br><span class="line">sig.ininVerify(publicKey);</span><br><span class="line">sig.update(<span class="string">&quot;xiaojianbang&quot;</span>.getBytes());</span><br><span class="line"><span class="type">boolean</span> <span class="variable">isTrue</span> <span class="operator">=</span> sig.verify(signResult);</span><br><span class="line">System.out.println(isTrue);</span><br></pre></td></tr></table></figure><h3 id="数字签名算法的通杀hook"><a href="#数字签名算法的通杀hook" class="headerlink" title="数字签名算法的通杀hook"></a>数字签名算法的通杀hook</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">            <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">                .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                    <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">logOutPut</span>(<span class="params">msg</span>) &#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>).<span class="title function_">d</span>(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="string">&quot;frida inject: &quot;</span> + msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="comment">//logOutPut(tag + &quot; Base64: &quot; + ByteString.of(data).base64());</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Base64: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="comment">//logOutPut(tag + &quot; Hex: &quot; + ByteString.of(data).hex());</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Hex: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="comment">//logOutPut(tag + &quot; Utf8: &quot; + ByteString.of(data).utf8());</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Utf8: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> signature = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.security.Signature&quot;</span>);</span><br><span class="line">    signature.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">sign</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.sign(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sign</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">sign</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.sign() is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">sign</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; sign result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="CryptoJS"><a href="#CryptoJS" class="headerlink" title="CryptoJS"></a>CryptoJS</h2><p><img src="/../image/mima26.png"></p><p><img src="/../image/mima27.png"></p><p><img src="/../image/mima28.png"></p><p><img src="/../image/mima29.png"></p><p><img src="/../image/mima30.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>免root使用frida</title>
      <link href="/2024/10/22/%E5%85%8Droot%E4%BD%BF%E7%94%A8frida/"/>
      <url>/2024/10/22/%E5%85%8Droot%E4%BD%BF%E7%94%A8frida/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/1.png"></p><p><img src="/../image/2.png"></p><h3 id="Frida自吐算法演示"><a href="#Frida自吐算法演示" class="headerlink" title="Frida自吐算法演示"></a>Frida自吐算法演示</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">            <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">                .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                    <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">logOutPut</span>(<span class="params">msg</span>) &#123;</span><br><span class="line">        <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>).<span class="title function_">d</span>(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="string">&quot;frida inject: &quot;</span> + msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">ByteString</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toBase64</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="comment">//logOutPut(tag + &quot; Base64: &quot; + ByteString.of(data).base64());</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Base64: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">base64</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toHex</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="comment">//logOutPut(tag + &quot; Hex: &quot; + ByteString.of(data).hex());</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Hex: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">hex</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toUtf8</span>(<span class="params">tag, data</span>) &#123;</span><br><span class="line">        <span class="comment">//logOutPut(tag + &quot; Utf8: &quot; + ByteString.of(data).utf8());</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(tag + <span class="string">&quot; Utf8: &quot;</span> + <span class="title class_">ByteString</span>.<span class="title function_">of</span>(data).<span class="title function_">utf8</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// toBase64([48,49,50,51,52]);</span></span><br><span class="line">    <span class="comment">// toHex([48,49,50,51,52]);</span></span><br><span class="line">    <span class="comment">// toUtf8([48,49,50,51,52]);</span></span><br><span class="line">    <span class="comment">//console.log(Java.enumerateLoadedClassesSync().join(&quot;\n&quot;));</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> messageDigest = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.security.MessageDigest&quot;</span>);</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest() is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>(data);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    messageDigest.<span class="property">digest</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MessageDigest.digest(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; digest data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">digest</span>(data, start, length);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; digest result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mac = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.Mac&quot;</span>);</span><br><span class="line">    mac.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">key, AlgorithmParameterSpec</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.init(&#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(key, <span class="title class_">AlgorithmParameterSpec</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.security.Key&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.init(&#x27;java.security.Key&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> keyBytes = key.<span class="title function_">getEncoded</span>();</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">init</span>(key);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line">    mac.<span class="property">doFinal</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mac.doFinal() is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">doFinal</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> cipher = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.Cipher&quot;</span>);</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.cert.Certificate&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.cert.Certificate&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.cert.Certificate&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.cert.Certificate&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.AlgorithmParameters&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.AlgorithmParameters&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>, <span class="string">&#x27;java.security.SecureRandom&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;, &#x27;java.security.SecureRandom&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.AlgorithmParameters&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.AlgorithmParameters&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> className = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">arguments</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span>(className.<span class="title function_">indexOf</span>(<span class="string">&quot;OpenSSLRSAPrivateKey&quot;</span>) === -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> keyBytes = <span class="variable language_">arguments</span>[<span class="number">1</span>].<span class="title function_">getEncoded</span>();</span><br><span class="line">            <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">            <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">            <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;java.security.Key&#x27;</span>, <span class="string">&#x27;java.security.spec.AlgorithmParameterSpec&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.init(&#x27;int&#x27;, &#x27;java.security.Key&#x27;, &#x27;java.security.spec.AlgorithmParameterSpec&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; init Key&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> keyBytes = <span class="variable language_">arguments</span>[<span class="number">1</span>].<span class="title function_">getEncoded</span>();</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, keyBytes);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, keyBytes);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; init iv&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> iv = <span class="title class_">Java</span>.<span class="title function_">cast</span>(<span class="variable language_">arguments</span>[<span class="number">2</span>], <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.spec.IvParameterSpec&quot;</span>));</span><br><span class="line">        <span class="keyword">var</span> ivBytes = iv.<span class="title function_">getIV</span>();</span><br><span class="line">        <span class="title function_">toUtf8</span>(tags, ivBytes);</span><br><span class="line">        <span class="title function_">toHex</span>(tags, ivBytes);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, ivBytes);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>, <span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;java.nio.ByteBuffer&#x27;, &#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;, &#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;, &#x27;[B&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal() is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal data&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> data = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    cipher.<span class="property">doFinal</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cipher.doFinal(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="title function_">showStacks</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; doFinal data&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> data = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="property">doFinal</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">        <span class="keyword">var</span> tags = algorithm + <span class="string">&quot; doFinal result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tags, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tags, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, <span class="variable language_">arguments</span>[<span class="number">1</span>], <span class="variable language_">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> signature = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.security.Signature&quot;</span>);</span><br><span class="line">    signature.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;byte&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.update(&#x27;byte&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.nio.ByteBuffer&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.update(&#x27;java.nio.ByteBuffer&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">update</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">data, start, length</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.update(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; update data&quot;</span>;</span><br><span class="line">        <span class="title function_">toUtf8</span>(tag, data);</span><br><span class="line">        <span class="title function_">toHex</span>(tag, data);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>, start, length);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">update</span>(data, start, length);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">sign</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.sign(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;) is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sign</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    signature.<span class="property">sign</span>.<span class="title function_">overload</span>().<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Signature.sign() is called!&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">sign</span>();</span><br><span class="line">        <span class="keyword">var</span> algorithm = <span class="variable language_">this</span>.<span class="title function_">getAlgorithm</span>();</span><br><span class="line">        <span class="keyword">var</span> tag = algorithm + <span class="string">&quot; sign result&quot;</span>;</span><br><span class="line">        <span class="title function_">toHex</span>(tag, result);</span><br><span class="line">        <span class="title function_">toBase64</span>(tag, result);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=======================================================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>objection</title>
      <link href="/2024/10/21/objection/"/>
      <url>/2024/10/21/objection/</url>
      
        <content type="html"><![CDATA[<h3 id="objection的安装"><a href="#objection的安装" class="headerlink" title="objection的安装"></a>objection的安装</h3><p><img src="/../image/objection1.png"></p><h3 id="objection的使用"><a href="#objection的使用" class="headerlink" title="objection的使用"></a>objection的使用</h3><p><img src="/../image/objection2.png"></p><p><img src="/../image/objection3.png"></p><p><img src="/../image/objection4.png"></p><p><img src="/../image/objection5.png"></p><h3 id="objection的插件"><a href="#objection的插件" class="headerlink" title="objection的插件"></a>objection的插件</h3><p><img src="/../image/objection6.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>frida</title>
      <link href="/2024/10/15/frida/"/>
      <url>/2024/10/15/frida/</url>
      
        <content type="html"><![CDATA[<h3 id="静态方法和实例方法的hook"><a href="#静态方法和实例方法的hook" class="headerlink" title="静态方法和实例方法的hook"></a>静态方法和实例方法的hook</h3><ul><li>不需要区分修饰符，也不需要区分静态和实例方法，hook代码的写法都是一样的</li></ul><p>得到Money类对象</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> money = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Money&quot;</span>);</span><br></pre></td></tr></table></figure><p>hook实例方法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">money.<span class="property">getInfo</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">getInfo</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.getInfo result:&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hook静态方法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">money.<span class="property">setFlag</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.setFlag parmm:&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">setFlag</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数参数和返回值的修改"><a href="#函数参数和返回值的修改" class="headerlink" title="函数参数和返回值的修改"></a>函数参数和返回值的修改</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> money = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.money&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> str = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">money.<span class="property">getInfo</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">getInfo</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.getInfo result:&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> str.$new(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">money.<span class="property">setFlag</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.setFlag param:&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">setFlag</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构造方法的hook"><a href="#构造方法的hook" class="headerlink" title="构造方法的hook"></a>构造方法的hook</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> money = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Money&quot;</span>);</span><br><span class="line">money.<span class="property">$init</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.$init param:&quot;</span>,a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.$init(<span class="string">&quot;美元&quot;</span>,<span class="number">200</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="对象参数的构造与修改-new"><a href="#对象参数的构造与修改-new" class="headerlink" title="对象参数的构造与修改  $new"></a>对象参数的构造与修改  $new</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> wallet = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Wallet&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> money = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Money&quot;</span>);</span><br><span class="line">wallet.<span class="property">deposit</span>.<span class="property">implementation</span> = <span class="title function_">funciton</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;wallet.deposit param:&quot;</span>,a.<span class="title function_">getInfo</span>());</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">deposit</span>(money.#<span class="title function_">new</span>(<span class="string">&quot;美元&quot;</span>,<span class="number">200</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wallet = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Wallet&quot;</span>);</span><br><span class="line">wallet.<span class="property">deposit</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    a.<span class="title function_">setAmount</span>(<span class="number">2000</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;wallet.deposit param:&quot;</span>,a.<span class="title function_">getInfo</span>());</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">deposit</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HashMap的打印"><a href="#HashMap的打印" class="headerlink" title="HashMap的打印"></a>HashMap的打印</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Utils&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> stringBuilder = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.StringBuild&quot;</span>);</span><br><span class="line">utils.<span class="property">shuufferMap</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> key = a.<span class="title function_">keySet</span>();</span><br><span class="line">    <span class="keyword">var</span> it = key.<span class="title function_">iterator</span>();</span><br><span class="line">    <span class="keyword">var</span> result = stringBuilder.$new();</span><br><span class="line">    <span class="keyword">while</span>(it.<span class="title function_">hasNext</span>())&#123;</span><br><span class="line">        <span class="keyword">var</span> keystr = it.<span class="title function_">next</span>();</span><br><span class="line">        <span class="keyword">var</span> valuestr = a.<span class="title function_">get</span>(keystr);</span><br><span class="line">        result.<span class="title function_">append</span>(valuestr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;utils.shfferMap param:&quot;</span>,result.<span class="title function_">toString</span>());</span><br><span class="line">    <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">shufferMap</span>(a);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;utils.shufferMap result:&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重载方法的hook"><a href="#重载方法的hook" class="headerlink" title="重载方法的hook"></a>重载方法的hook</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Utils&quot;</span>);</span><br><span class="line">utils.<span class="property">getCalc</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;utils.getCalc param:&quot;</span>,a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getCalc</span>(a,b);</span><br><span class="line">&#125;</span><br><span class="line">utils.<span class="property">getCalc</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a,b,c</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Utils.getCalc param:&quot;</span>,a,b,c);</span><br><span class="line">&#125;</span><br><span class="line">utils.<span class="property">getCalc</span>.<span class="title function_">overload</span>(<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>,<span class="string">&#x27;int&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params">a,b,c,d</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;utils.getCalc param:&quot;</span>,a,b,c,d);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getCalc</span>(a,b,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="hook方法的所有重载"><a href="#hook方法的所有重载" class="headerlink" title="hook方法的所有重载"></a>hook方法的所有重载</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Utils&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> overloadsArr = utils.<span class="property">getCalc</span>.<span class="property">overloads</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; overloadArr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    overloadsArr[i].<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> params = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; j++)&#123;</span><br><span class="line">            params += <span class="variable language_">arguments</span>[j] + <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;utils.getCalc is called! params is:&quot;</span>,params);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">getCalc</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>,<span class="variable language_">arguments</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主动调用"><a href="#主动调用" class="headerlink" title="主动调用"></a>主动调用</h3><ul><li><p>静态方法</p></li><li><pre><code class="javascript">var money = Java.use(&quot;com.xiaojianbang.hook.Money&quot;);money.setFlag(&quot;xiaojianbang&quot;);<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 实例方法 创建新对象</span><br><span class="line"></span><br><span class="line">- ```javascript</span><br><span class="line">  var moneyObj = money.$new(&quot;卢布&quot;,1000);</span><br><span class="line">  console.log(moneyObj.getInfo());</span><br></pre></td></tr></table></figure></code></pre></li><li><p>实例方法 获取已有对象(Java.choose)</p></li><li><pre><code class="javascript">Java.choose(&quot;com.xiaojianbang.hook.Money&quot;,&#123;    onMatch:function(obj)&#123;        console.log(obj.getInfo());    &#125;,    onComplete:function()&#123;        console.log(&quot;内存中的Money对象搜索完毕&quot;);    &#125;&#125;);<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 获取和修改类的字段</span><br><span class="line"></span><br><span class="line">- 静态字段</span><br><span class="line"></span><br><span class="line">```javascript</span><br><span class="line">var money = Java.use(&quot;com.xiaojianbang.hook.Money&quot;);</span><br><span class="line">console.log(money.flag.value);</span><br><span class="line">money.flag.value = &quot;VX:xiaojianbang8888&quot;;</span><br><span class="line">console.log(moeny.flag.value);</span><br></pre></td></tr></table></figure></code></pre></li><li><p>实例字段 创建新对象</p></li><li><pre><code class="javascript">var moneyObj = money.$new(&quot;欧元&quot;,2000);console.log(moneyObj.currency.value);moneyObj.currency.value = &quot;xiaojianbang currency&quot;;console.log(moneyObj.currency.value)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 实例字段 获取已有对象</span><br><span class="line"></span><br><span class="line">- ```javascript</span><br><span class="line">  Java.choose(&quot;com.xiaojianbang.hook.Money&quot;,&#123;</span><br><span class="line">     onMatch:function(obj)&#123;</span><br><span class="line">         console.log(&quot;Java.choose Money:&quot;,obj.currency.value);</span><br><span class="line">     &#125;, onCompelte:function()&#123;</span><br><span class="line">         </span><br><span class="line">     &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  //如果字段名和方法名一样 需要加下划线前缀</span><br><span class="line">  Java.choose(&quot;com.xiaojianbang.hook.BankCard&quot;,&#123;</span><br><span class="line">      onMatch:function(obj)&#123;</span><br><span class="line">          console.log(&quot;Java.choose BankCard:&quot;,obj._accountName.value);</span><br><span class="line">      &#125;,onComplete:function()&#123;</span><br><span class="line">          </span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></code></pre></li></ul><h3 id="hook内部类与匿名类"><a href="#hook内部类与匿名类" class="headerlink" title="hook内部类与匿名类"></a>hook内部类与匿名类</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;com.xiaojianbang.hook.Wallet$InnerStructure&quot;</span>,&#123;</span><br><span class="line">    <span class="attr">onMatch</span>:<span class="keyword">function</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">            <span class="string">&quot;Java.choose Wallet$InnerStructure:&quot;</span>,obj.<span class="property">bankCardsList</span>.<span class="property">value</span></span><br><span class="line">        );</span><br><span class="line">    &#125;,<span class="attr">onComplete</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> money$1 = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.app.MainActivity$1&quot;</span>);</span><br><span class="line">money$1.<span class="property">getInfo</span>.<span class="property">implementaton</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">getInfo</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.getInfo result:,&quot;</span>result);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jadx动态调试"><a href="#jadx动态调试" class="headerlink" title="jadx动态调试"></a>jadx动态调试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat default.prop</span><br><span class="line">要看到ro.debuggable=1</span><br><span class="line">目前水平不够，不会调</span><br></pre></td></tr></table></figure><h3 id="混淆函数的Hook方法"><a href="#混淆函数的Hook方法" class="headerlink" title="混淆函数的Hook方法"></a>混淆函数的Hook方法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> money = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Money&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> base64 = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Base64&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> str = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> funcName = str.$new(base64.<span class="title function_">decode</span>(<span class="string">&quot;Z2V0SW5mb2==&quot;</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(funcName);</span><br><span class="line">    money[funcName].<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">getInfo</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;money.getInfo result:&quot;</span>,result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="将类名进行base64加密"><a href="#将类名进行base64加密" class="headerlink" title="将类名进行base64加密"></a>将类名进行base64加密</h4><p>原因：防止乱码和空格</p><h3 id="枚举所有已加载的类"><a href="#枚举所有已加载的类" class="headerlink" title="枚举所有已加载的类"></a>枚举所有已加载的类</h3><ul><li>枚举的是已经加载的类</li><li>出现的类，也不一定能hook到，原因是类加载器的关系</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Java</span>.<span class="title function_">enumerateLoadedClassesSync</span>().<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="枚举类的所有方法"><a href="#枚举类的所有方法" class="headerlink" title="枚举类的所有方法"></a>枚举类的所有方法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> wallet = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.gook.Wallet&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> methods = wallet.<span class="property">class</span>.<span class="title function_">getDeclaredMethods</span>();</span><br><span class="line"><span class="keyword">var</span> constructors = wallet.<span class="property">class</span>.<span class="title function_">getDeclareddConstructors</span>();</span><br><span class="line"><span class="keyword">var</span> fields = wallet.<span class="property">class</span>.<span class="title function_">getDeclaredFields</span>();</span><br><span class="line"><span class="keyword">var</span> classes = wallet.<span class="property">class</span>.<span class="title function_">getDeclaredClasses</span>();</span><br></pre></td></tr></table></figure><h3 id="hook类的所有方法"><a href="#hook类的所有方法" class="headerlink" title="hook类的所有方法"></a>hook类的所有方法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hookFunc</span>(<span class="params">methodName</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(methodName);</span><br><span class="line">    <span class="keyword">var</span> overloadsArr = utils[methodName].<span class="property">overloads</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j&lt;overloadsArr.<span class="property">length</span>;j++)&#123;</span><br><span class="line">        overloadsArr[j].<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> params = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> k = <span class="number">0</span>;k&lt;<span class="variable language_">arguments</span>.<span class="property">length</span>;k++)&#123;</span><br><span class="line">                params+=<span class="variable language_">arguments</span>[k]+<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;utils.&quot;</span>+methodName+<span class="string">&quot;is called params is:&quot;</span>,params);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>[methodName].<span class="title function_">apply</span>(<span class="variable language_">this</span>.<span class="property">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Utils&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> methods = utils.<span class="property">class</span>.<span class="title function_">getDecalerdMethods</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;menthos.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> methodName = methods[i].<span class="title function_">getName</span>();</span><br><span class="line">    <span class="title function_">hookFunc</span>(methodName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Frida注入dex"><a href="#Frida注入dex" class="headerlink" title="Frida注入dex"></a>Frida注入dex</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">openClassFile</span>(<span class="string">&quot;/data/local/tmp/Testclasses.dex&quot;</span>).<span class="title function_">load</span>();</span><br><span class="line"><span class="keyword">var</span> use = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.example.myapplication.Test&quot;</span>);</span><br><span class="line">use.<span class="title function_">test</span>();</span><br></pre></td></tr></table></figure><h3 id="Frida写文件"><a href="#Frida写文件" class="headerlink" title="Frida写文件"></a>Frida写文件</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ios = <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;/data/data/com.xiaojianbang.app/xiaojianbang.txt&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">ios.<span class="title function_">write</span>(<span class="string">&quot;xiaojianbang is very good\n&quot;</span>);</span><br><span class="line">ios.<span class="title function_">flush</span>();</span><br><span class="line">ios.<span class="title function_">close</span>();</span><br></pre></td></tr></table></figure><h4 id="Java-cast"><a href="#Java-cast" class="headerlink" title="Java.cast"></a>Java.cast</h4><ul><li>向上转型的，不能用toString直接得到i结果，比如Map、List类型的打印</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Utils&quot;</span>);</span><br><span class="line">utils.<span class="property">shufferMap2</span>.<span class="property">implementation</span> = <span class="title function_">fuction</span>(<span class="params">map</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;map:&quot;</span>,map);</span><br><span class="line">    <span class="keyword">var</span> result = <span class="title class_">Java</span>.<span class="title function_">cast</span>(map.<span class="property">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.util.HashMap&quot;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;map:&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">shfferMap</span>(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组的构造"><a href="#数组的构造" class="headerlink" title="数组的构造"></a>数组的构造</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Utils</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.hook.Utils&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> strarr = <span class="title class_">Java</span>.<span class="title function_">array</span>(</span><br><span class="line">    <span class="string">&quot;Ljava.lang.String;&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;QQ:12345678&quot;</span>,<span class="string">&quot;VX:xiaojianbnang88888&quot;</span>,<span class="string">&quot;共总好：放大放大&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> retval = <span class="title class_">Utils</span>.<span class="title function_">myPring</span>(strarr);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(retval);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="hook动态加载的dex"><a href="#hook动态加载的dex" class="headerlink" title="hook动态加载的dex"></a>hook动态加载的dex</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">enumerrateClassLoaders</span>(&#123;</span><br><span class="line">   <span class="attr">onMatch</span>:<span class="keyword">function</span>(<span class="params">loader</span>)&#123;</span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(loader);</span><br><span class="line">           <span class="title class_">Java</span>.<span class="property">classFactory</span>.<span class="property">loader</span>=loader;</span><br><span class="line">           <span class="keyword">var</span> dynamic = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.xiaojianbang.app.Dynamic&quot;</span>);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;dynamic:&quot;</span>,dynamic);</span><br><span class="line">           dynamic.<span class="property">sayHello</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;gook dynamic.ayHello is run!&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">           &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(loader);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="包装"><a href="#包装" class="headerlink" title="包装"></a>包装</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Bool</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Integer&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> integer = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Integer&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> objarr <span class="title class_">Java</span>.<span class="title function_">array</span>(</span><br><span class="line"><span class="string">&quot;Ljava.lang.Object;&quot;</span>,</span><br><span class="line">    [<span class="string">&quot;xiaojianbang&quot;</span>,integer.$new(<span class="number">100</span>),<span class="title class_">Bool</span>.$new(<span class="literal">true</span>),money]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="hook定位接口的实现类"><a href="#hook定位接口的实现类" class="headerlink" title="hook定位接口的实现类"></a>hook定位接口的实现类</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> classes = <span class="title class_">Java</span>.<span class="title function_">enumerateLoadedClassesSync</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> index <span class="keyword">in</span> classes)&#123;</span><br><span class="line">        <span class="keyword">let</span> className = classes[index];</span><br><span class="line">        <span class="keyword">if</span>(className.<span class="title function_">indexOf</span>(<span class="string">&quot;com.xiaojianbang&quot;</span>)===-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">                 <span class="keyword">let</span> clazz = <span class="title class_">Java</span>.<span class="title function_">use</span>(className);</span><br><span class="line">        <span class="keyword">let</span> resultArr = clazz.<span class="property">class</span>.<span class="title function_">getInterfaces</span>();</span><br><span class="line">        <span class="keyword">if</span>(resultArr.<span class="property">length</span>===<span class="number">0</span>)&#123;</span><br><span class="line">                 <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; resultArr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(resultArr[i].<span class="title function_">toString</span>().<span class="title function_">indexof</span>(<span class="string">&quot;com.xiaojianbang.app.TestRegisterClass&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(className,resultArr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Didn`t find class:&quot;</span>+className);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关键代码快速定位</title>
      <link href="/2024/10/13/%E5%85%B3%E9%94%AE%E4%BB%A3%E7%A0%81%E5%BF%AB%E9%80%9F%E5%AE%9A%E4%BD%8D/"/>
      <url>/2024/10/13/%E5%85%B3%E9%94%AE%E4%BB%A3%E7%A0%81%E5%BF%AB%E9%80%9F%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="hook一些重要函数"><a href="#hook一些重要函数" class="headerlink" title="hook一些重要函数"></a>hook一些重要函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">showStacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">            <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Log&quot;</span>)</span><br><span class="line">                .<span class="title function_">getStackTraceString</span>(</span><br><span class="line">                    <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.lang.Throwable&quot;</span>).$new()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// var hashMap = Java.use(&quot;java.util.HashMap&quot;);</span></span><br><span class="line">    <span class="comment">// hashMap.put.implementation = function (a, b) &#123;</span></span><br><span class="line">    <span class="comment">//     if(a.equals(&quot;username&quot;))&#123;</span></span><br><span class="line">    <span class="comment">//         showStacks();</span></span><br><span class="line">    <span class="comment">//         console.log(&quot;hashMap.put: &quot;, a, b);</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     //console.log(&quot;hashMap.put: &quot;, a, b);</span></span><br><span class="line">    <span class="comment">//     return this.put(a, b);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// var arrayList = Java.use(&quot;java.util.ArrayList&quot;);</span></span><br><span class="line">    <span class="comment">// arrayList.add.overload(&#x27;java.lang.Object&#x27;).implementation = function (a) &#123;</span></span><br><span class="line">    <span class="comment">//     if (a.equals(&quot;username=15968079477&quot;)) &#123;</span></span><br><span class="line">    <span class="comment">//         showStacks();</span></span><br><span class="line">    <span class="comment">//         console.log(&quot;arrayList.add.overload(&#x27;java.lang.Object&#x27;): &quot;, a);</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     return this.add(a);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// arrayList.add.overload(&#x27;int&#x27;, &#x27;java.lang.Object&#x27;).implementation = function (a, b) &#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&quot;arrayList.add.overload(&#x27;int&#x27;, &#x27;java.lang.Object&#x27;): &quot;, a, b);</span></span><br><span class="line">    <span class="comment">//     return this.add(a, b);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// var textUtils = Java.use(&quot;android.text.TextUtils&quot;);</span></span><br><span class="line">    <span class="comment">// textUtils.isEmpty.implementation = function (a) &#123;</span></span><br><span class="line">    <span class="comment">//     if(a == &quot;2v+DC2gq7RuAC8PE5GZz5wH3/y9ZVcWhFwhDY9L19g9iEd075+Q7xwewvfIN0g0ec/NaaF43/S0=&quot;)&#123;</span></span><br><span class="line">    <span class="comment">//         showStacks();</span></span><br><span class="line">    <span class="comment">//         console.log(&quot;textUtils.isEmpty: &quot;, a);</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     //console.log(&quot;textUtils.isEmpty: &quot;, a);</span></span><br><span class="line">    <span class="comment">//     return this.isEmpty(a);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// var log = Java.use(&quot;android.util.Log&quot;);</span></span><br><span class="line">    <span class="comment">// log.w.overload(&#x27;java.lang.String&#x27;, &#x27;java.lang.String&#x27;).implementation = function (tag, message) &#123;</span></span><br><span class="line">    <span class="comment">//     showStacks();</span></span><br><span class="line">    <span class="comment">//     console.log(&quot;log.w: &quot;, tag, message);</span></span><br><span class="line">    <span class="comment">//     return this.w(tag, message);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// var collections = Java.use(&quot;java.util.Collections&quot;);</span></span><br><span class="line">    <span class="comment">// collections.sort.overload(&#x27;java.util.List&#x27;).implementation = function (a) &#123;</span></span><br><span class="line">    <span class="comment">//     try&#123;</span></span><br><span class="line">    <span class="comment">//         showStacks();</span></span><br><span class="line">    <span class="comment">//         var result = Java.cast(a, Java.use(&quot;java.util.ArrayList&quot;));</span></span><br><span class="line">    <span class="comment">//         console.log(&quot;collections.sort List: &quot;, result.toString());</span></span><br><span class="line">    <span class="comment">//     &#125;catch (e) &#123;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     return this.sort(a);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// collections.sort.overload(&#x27;java.util.List&#x27;, &#x27;java.util.Comparator&#x27;).implementation = function (a, b) &#123;</span></span><br><span class="line">    <span class="comment">//     try&#123;</span></span><br><span class="line">    <span class="comment">//         showStacks();</span></span><br><span class="line">    <span class="comment">//         var result = Java.cast(a, Java.use(&quot;java.util.ArrayList&quot;));</span></span><br><span class="line">    <span class="comment">//         console.log(&quot;collections.sort List Comparator: &quot;, result.toString());</span></span><br><span class="line">    <span class="comment">//     &#125;catch (e) &#123;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     return this.sort(a, b);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// var jSONObject = Java.use(&quot;org.json.JSONObject&quot;);</span></span><br><span class="line">    <span class="comment">// jSONObject.put.overload(&#x27;java.lang.String&#x27;, &#x27;java.lang.Object&#x27;).implementation = function (a, b) &#123;</span></span><br><span class="line">    <span class="comment">//     if (a.indexOf(&quot;Encrypt&quot;) != -1) &#123;</span></span><br><span class="line">    <span class="comment">//         showStacks();</span></span><br><span class="line">    <span class="comment">//         console.log(&quot;jSONObject.put: &quot;, a, b);</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     return this.put(a, b);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// jSONObject.getString.implementation = function (a) &#123;</span></span><br><span class="line">    <span class="comment">//     showStacks();</span></span><br><span class="line">    <span class="comment">//     console.log(&quot;jSONObject.getString: &quot;, a);</span></span><br><span class="line">    <span class="comment">//     var result = this.getString(a);</span></span><br><span class="line">    <span class="comment">//     console.log(&quot;jSONObject.getString result: &quot;, result);</span></span><br><span class="line">    <span class="comment">//     return result;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="启动注入代码"><a href="#启动注入代码" class="headerlink" title="启动注入代码"></a>启动注入代码</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">frida -U -f com.<span class="property">dodonew</span>.<span class="property">online</span> -l src\test2.<span class="property">js</span> - o log.<span class="property">txt</span></span><br><span class="line">frida -U -f com.<span class="property">dodonew</span>.<span class="property">onlice</span> -l src\test2.<span class="property">js</span> - o log.<span class="property">txt</span> --no-pause <span class="comment">//不暂停</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>嘟嘟牛算法复现</title>
      <link href="/2024/10/11/%E5%98%9F%E5%98%9F%E7%89%9B%E7%AE%97%E6%B3%95%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/10/11/%E5%98%9F%E5%98%9F%E7%89%9B%E7%AE%97%E6%B3%95%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">root, factory</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">exports</span> === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">        <span class="variable language_">module</span>.<span class="property">exports</span> = <span class="built_in">exports</span> = <span class="title function_">factory</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> define === <span class="string">&quot;function&quot;</span> &amp;&amp; define.<span class="property">amd</span>) &#123;</span><br><span class="line">        <span class="title function_">define</span>([], factory);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        root.<span class="property">CryptoJS</span> = <span class="title function_">factory</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(<span class="variable language_">this</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">CryptoJS</span> = <span class="title class_">CryptoJS</span> || (<span class="keyword">function</span> (<span class="params"><span class="built_in">Math</span>, <span class="literal">undefined</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> create = <span class="title class_">Object</span>.<span class="property">create</span> || (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">F</span>(<span class="params"></span>) &#123;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">obj</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> subtype;</span><br><span class="line">                F.<span class="property"><span class="keyword">prototype</span></span> = obj;</span><br><span class="line">                subtype = <span class="keyword">new</span> <span class="title function_">F</span>();</span><br><span class="line">                F.<span class="property"><span class="keyword">prototype</span></span> = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">return</span> subtype;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> C = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base</span> = C_lib.<span class="property">Base</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">extend</span>: <span class="keyword">function</span> (<span class="params">overrides</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> subtype = <span class="title function_">create</span>(<span class="variable language_">this</span>);</span><br><span class="line">                    <span class="keyword">if</span> (overrides) &#123;</span><br><span class="line">                        subtype.<span class="title function_">mixIn</span>(overrides);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (!subtype.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;init&#x27;</span>) || <span class="variable language_">this</span>.<span class="property">init</span> === subtype.<span class="property">init</span>) &#123;</span><br><span class="line">                        subtype.<span class="property">init</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            subtype.<span class="property">$super</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    subtype.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span> = subtype;</span><br><span class="line">                    subtype.<span class="property">$super</span> = <span class="variable language_">this</span>;</span><br><span class="line">                    <span class="keyword">return</span> subtype;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">create</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> instance = <span class="variable language_">this</span>.<span class="title function_">extend</span>();</span><br><span class="line">                    instance.<span class="property">init</span>.<span class="title function_">apply</span>(instance, <span class="variable language_">arguments</span>);</span><br><span class="line">                    <span class="keyword">return</span> instance;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">mixIn</span>: <span class="keyword">function</span> (<span class="params">properties</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> propertyName <span class="keyword">in</span> properties) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (properties.<span class="title function_">hasOwnProperty</span>(propertyName)) &#123;</span><br><span class="line">                            <span class="variable language_">this</span>[propertyName] = properties[propertyName];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (properties.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;toString&#x27;</span>)) &#123;</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">toString</span> = properties.<span class="property">toString</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">extend</span>(<span class="variable language_">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">words, sigBytes</span>) &#123;</span><br><span class="line">                words = <span class="variable language_">this</span>.<span class="property">words</span> = words || [];</span><br><span class="line">                <span class="keyword">if</span> (sigBytes != <span class="literal">undefined</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">sigBytes</span> = sigBytes;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">sigBytes</span> = words.<span class="property">length</span> * <span class="number">4</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">toString</span>: <span class="keyword">function</span> (<span class="params">encoder</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> (encoder || <span class="title class_">Hex</span>).<span class="title function_">stringify</span>(<span class="variable language_">this</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">concat</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> thisWords = <span class="variable language_">this</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> thatWords = wordArray.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> thisSigBytes = <span class="variable language_">this</span>.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> thatSigBytes = wordArray.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">clamp</span>();</span><br><span class="line">                <span class="keyword">if</span> (thisSigBytes % <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; thatSigBytes; i++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> thatByte = (thatWords[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                        thisWords[(thisSigBytes + i) &gt;&gt;&gt; <span class="number">2</span>] |= thatByte &lt;&lt; (<span class="number">24</span> - ((thisSigBytes + i) % <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; thatSigBytes; i += <span class="number">4</span>) &#123;</span><br><span class="line">                        thisWords[(thisSigBytes + i) &gt;&gt;&gt; <span class="number">2</span>] = thatWords[i &gt;&gt;&gt; <span class="number">2</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">sigBytes</span> += thatSigBytes;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clamp</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = <span class="variable language_">this</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sigBytes = <span class="variable language_">this</span>.<span class="property">sigBytes</span>;</span><br><span class="line">                words[sigBytes &gt;&gt;&gt; <span class="number">2</span>] &amp;= <span class="number">0xffffffff</span> &lt;&lt; (<span class="number">32</span> - (sigBytes % <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">                words.<span class="property">length</span> = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(sigBytes / <span class="number">4</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Base</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">words</span> = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">random</span>: <span class="keyword">function</span> (<span class="params">nBytes</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = [];</span><br><span class="line">                <span class="keyword">var</span> r = (<span class="keyword">function</span> (<span class="params">m_w</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> m_w = m_w;</span><br><span class="line">                    <span class="keyword">var</span> m_z = <span class="number">0x3ade68b1</span>;</span><br><span class="line">                    <span class="keyword">var</span> mask = <span class="number">0xffffffff</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        m_z = (<span class="number">0x9069</span> * (m_z &amp; <span class="number">0xFFFF</span>) + (m_z &gt;&gt; <span class="number">0x10</span>)) &amp; mask;</span><br><span class="line">                        m_w = (<span class="number">0x4650</span> * (m_w &amp; <span class="number">0xFFFF</span>) + (m_w &gt;&gt; <span class="number">0x10</span>)) &amp; mask;</span><br><span class="line">                        <span class="keyword">var</span> result = ((m_z &lt;&lt; <span class="number">0x10</span>) + m_w) &amp; mask;</span><br><span class="line">                        result /= <span class="number">0x100000000</span>;</span><br><span class="line">                        result += <span class="number">0.5</span>;</span><br><span class="line">                        <span class="keyword">return</span> result * (<span class="title class_">Math</span>.<span class="title function_">random</span>() &gt; <span class="number">.5</span> ? <span class="number">1</span> : -<span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, rcache; i &lt; nBytes; i += <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> _r = <span class="title function_">r</span>((rcache || <span class="title class_">Math</span>.<span class="title function_">random</span>()) * <span class="number">0x100000000</span>);</span><br><span class="line">                    rcache = <span class="title function_">_r</span>() * <span class="number">0x3ade67b7</span>;</span><br><span class="line">                    words.<span class="title function_">push</span>((<span class="title function_">_r</span>() * <span class="number">0x100000000</span>) | <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>(words, nBytes);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> C_enc = C.<span class="property">enc</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hex</span> = C_enc.<span class="property">Hex</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = wordArray.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sigBytes = wordArray.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> hexChars = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sigBytes; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> bite = (words[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                    hexChars.<span class="title function_">push</span>((bite &gt;&gt;&gt; <span class="number">4</span>).<span class="title function_">toString</span>(<span class="number">16</span>));</span><br><span class="line">                    hexChars.<span class="title function_">push</span>((bite &amp; <span class="number">0x0f</span>).<span class="title function_">toString</span>(<span class="number">16</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> hexChars.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">hexStr</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> hexStrLength = hexStr.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">var</span> words = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hexStrLength; i += <span class="number">2</span>) &#123;</span><br><span class="line">                    words[i &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(hexStr.<span class="title function_">substr</span>(i, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; (<span class="number">24</span> - (i % <span class="number">8</span>) * <span class="number">4</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>(words, hexStrLength / <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Latin1</span> = C_enc.<span class="property">Latin1</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = wordArray.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sigBytes = wordArray.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> latin1Chars = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sigBytes; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> bite = (words[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                    latin1Chars.<span class="title function_">push</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(bite));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> latin1Chars.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">latin1Str</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> latin1StrLength = latin1Str.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">var</span> words = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; latin1StrLength; i++) &#123;</span><br><span class="line">                    words[i &gt;&gt;&gt; <span class="number">2</span>] |= (latin1Str.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xff</span>) &lt;&lt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>(words, latin1StrLength);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Utf8</span> = C_enc.<span class="property">Utf8</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(<span class="title class_">Latin1</span>.<span class="title function_">stringify</span>(wordArray)));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Malformed UTF-8 data&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">utf8Str</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">Latin1</span>.<span class="title function_">parse</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(utf8Str)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">BufferedBlockAlgorithm</span> = C_lib.<span class="property">BufferedBlockAlgorithm</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_data</span> = <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>();</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_append</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> data == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">                    data = <span class="title class_">Utf8</span>.<span class="title function_">parse</span>(data);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_data</span>.<span class="title function_">concat</span>(data);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> += data.<span class="property">sigBytes</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_process</span>: <span class="keyword">function</span> (<span class="params">doFlush</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> dataSigBytes = data.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> blockSize = <span class="variable language_">this</span>.<span class="property">blockSize</span>;</span><br><span class="line">                <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">var</span> nBlocksReady = dataSigBytes / blockSizeBytes;</span><br><span class="line">                <span class="keyword">if</span> (doFlush) &#123;</span><br><span class="line">                    nBlocksReady = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(nBlocksReady);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    nBlocksReady = <span class="title class_">Math</span>.<span class="title function_">max</span>((nBlocksReady | <span class="number">0</span>) - <span class="variable language_">this</span>.<span class="property">_minBufferSize</span>, <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> nWordsReady = nBlocksReady * blockSize;</span><br><span class="line">                <span class="keyword">var</span> nBytesReady = <span class="title class_">Math</span>.<span class="title function_">min</span>(nWordsReady * <span class="number">4</span>, dataSigBytes);</span><br><span class="line">                <span class="keyword">if</span> (nWordsReady) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> offset = <span class="number">0</span>; offset &lt; nWordsReady; offset += blockSize) &#123;</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">_doProcessBlock</span>(dataWords, offset);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> processedWords = dataWords.<span class="title function_">splice</span>(<span class="number">0</span>, nWordsReady);</span><br><span class="line">                    data.<span class="property">sigBytes</span> -= nBytesReady;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>(processedWords, nBytesReady);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Base</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">_data</span> = <span class="variable language_">this</span>.<span class="property">_data</span>.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_minBufferSize</span>: <span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span> = <span class="title class_">BufferedBlockAlgorithm</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Base</span>.<span class="title function_">extend</span>(),</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">cfg</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">reset</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="title class_">BufferedBlockAlgorithm</span>.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_doReset</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params">messageUpdate</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_append</span>(messageUpdate);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">finalize</span>: <span class="keyword">function</span> (<span class="params">messageUpdate</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (messageUpdate) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">_append</span>(messageUpdate);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> hash = <span class="variable language_">this</span>.<span class="title function_">_doFinalize</span>();</span><br><span class="line">                <span class="keyword">return</span> hash;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">512</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">_createHelper</span>: <span class="keyword">function</span> (<span class="params">hasher</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">message, cfg</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> hasher.<span class="title function_">init</span>(cfg).<span class="title function_">finalize</span>(message);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_createHmacHelper</span>: <span class="keyword">function</span> (<span class="params">hasher</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">message, key</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> C_algo.<span class="property">HMAC</span>.<span class="title function_">init</span>(hasher, key).<span class="title function_">finalize</span>(message);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">    (<span class="title class_">Math</span>));</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_enc = C.<span class="property">enc</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base64</span> = C_enc.<span class="property">Base64</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = wordArray.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sigBytes = wordArray.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> map = <span class="variable language_">this</span>.<span class="property">_map</span>;</span><br><span class="line">                wordArray.<span class="title function_">clamp</span>();</span><br><span class="line">                <span class="keyword">var</span> base64Chars = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sigBytes; i += <span class="number">3</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> byte1 = (words[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                    <span class="keyword">var</span> byte2 = (words[(i + <span class="number">1</span>) &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - ((i + <span class="number">1</span>) % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                    <span class="keyword">var</span> byte3 = (words[(i + <span class="number">2</span>) &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - ((i + <span class="number">2</span>) % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                    <span class="keyword">var</span> triplet = (byte1 &lt;&lt; <span class="number">16</span>) | (byte2 &lt;&lt; <span class="number">8</span>) | byte3;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; (j &lt; <span class="number">4</span>) &amp;&amp; (i + j * <span class="number">0.75</span> &lt; sigBytes); j++) &#123;</span><br><span class="line">                        base64Chars.<span class="title function_">push</span>(map.<span class="title function_">charAt</span>((triplet &gt;&gt;&gt; (<span class="number">6</span> * (<span class="number">3</span> - j))) &amp; <span class="number">0x3f</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> paddingChar = map.<span class="title function_">charAt</span>(<span class="number">64</span>);</span><br><span class="line">                <span class="keyword">if</span> (paddingChar) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (base64Chars.<span class="property">length</span> % <span class="number">4</span>) &#123;</span><br><span class="line">                        base64Chars.<span class="title function_">push</span>(paddingChar);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> base64Chars.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">base64Str</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> base64StrLength = base64Str.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">var</span> map = <span class="variable language_">this</span>.<span class="property">_map</span>;</span><br><span class="line">                <span class="keyword">var</span> reverseMap = <span class="variable language_">this</span>.<span class="property">_reverseMap</span>;</span><br><span class="line">                <span class="keyword">if</span> (!reverseMap) &#123;</span><br><span class="line">                    reverseMap = <span class="variable language_">this</span>.<span class="property">_reverseMap</span> = [];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; map.<span class="property">length</span>; j++) &#123;</span><br><span class="line">                        reverseMap[map.<span class="title function_">charCodeAt</span>(j)] = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> paddingChar = map.<span class="title function_">charAt</span>(<span class="number">64</span>);</span><br><span class="line">                <span class="keyword">if</span> (paddingChar) &#123;</span><br><span class="line">                    <span class="keyword">var</span> paddingIndex = base64Str.<span class="title function_">indexOf</span>(paddingChar);</span><br><span class="line">                    <span class="keyword">if</span> (paddingIndex !== -<span class="number">1</span>) &#123;</span><br><span class="line">                        base64StrLength = paddingIndex;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">parseLoop</span>(base64Str, base64StrLength, reverseMap);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_map</span>: <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">parseLoop</span>(<span class="params">base64Str, base64StrLength, reverseMap</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> words = [];</span><br><span class="line">            <span class="keyword">var</span> nBytes = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; base64StrLength; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> bits1 = reverseMap[base64Str.<span class="title function_">charCodeAt</span>(i - <span class="number">1</span>)] &lt;&lt; ((i % <span class="number">4</span>) * <span class="number">2</span>);</span><br><span class="line">                    <span class="keyword">var</span> bits2 = reverseMap[base64Str.<span class="title function_">charCodeAt</span>(i)] &gt;&gt;&gt; (<span class="number">6</span> - (i % <span class="number">4</span>) * <span class="number">2</span>);</span><br><span class="line">                    words[nBytes &gt;&gt;&gt; <span class="number">2</span>] |= (bits1 | bits2) &lt;&lt; (<span class="number">24</span> - (nBytes % <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">                    nBytes++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">WordArray</span>.<span class="title function_">create</span>(words, nBytes);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"><span class="built_in">Math</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> T = [];</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++) &#123;</span><br><span class="line">                T[i] = (<span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="title class_">Math</span>.<span class="title function_">sin</span>(i + <span class="number">1</span>)) * <span class="number">0x100000000</span>) | <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">MD5</span> = C_algo.<span class="property">MD5</span> = <span class="title class_">Hasher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>([<span class="number">0x67452301</span>, <span class="number">0xefcdab89</span>, <span class="number">0x98badcfe</span>, <span class="number">0x10325476</span>]);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> offset_i = offset + i;</span><br><span class="line">                    <span class="keyword">var</span> M_offset_i = M[offset_i];</span><br><span class="line">                    M[offset_i] = ((((M_offset_i &lt;&lt; <span class="number">8</span>) | (M_offset_i &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((M_offset_i &lt;&lt; <span class="number">24</span>) | (M_offset_i &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> H = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> M_offset_0 = M[offset + <span class="number">0</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_1 = M[offset + <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_2 = M[offset + <span class="number">2</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_3 = M[offset + <span class="number">3</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_4 = M[offset + <span class="number">4</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_5 = M[offset + <span class="number">5</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_6 = M[offset + <span class="number">6</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_7 = M[offset + <span class="number">7</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_8 = M[offset + <span class="number">8</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_9 = M[offset + <span class="number">9</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_10 = M[offset + <span class="number">10</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_11 = M[offset + <span class="number">11</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_12 = M[offset + <span class="number">12</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_13 = M[offset + <span class="number">13</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_14 = M[offset + <span class="number">14</span>];</span><br><span class="line">                <span class="keyword">var</span> M_offset_15 = M[offset + <span class="number">15</span>];</span><br><span class="line">                <span class="keyword">var</span> a = H[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">var</span> b = H[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> c = H[<span class="number">2</span>];</span><br><span class="line">                <span class="keyword">var</span> d = H[<span class="number">3</span>];</span><br><span class="line">                a = <span class="title function_">FF</span>(a, b, c, d, M_offset_0, <span class="number">7</span>, T[<span class="number">0</span>]);</span><br><span class="line">                d = <span class="title function_">FF</span>(d, a, b, c, M_offset_1, <span class="number">12</span>, T[<span class="number">1</span>]);</span><br><span class="line">                c = <span class="title function_">FF</span>(c, d, a, b, M_offset_2, <span class="number">17</span>, T[<span class="number">2</span>]);</span><br><span class="line">                b = <span class="title function_">FF</span>(b, c, d, a, M_offset_3, <span class="number">22</span>, T[<span class="number">3</span>]);</span><br><span class="line">                a = <span class="title function_">FF</span>(a, b, c, d, M_offset_4, <span class="number">7</span>, T[<span class="number">4</span>]);</span><br><span class="line">                d = <span class="title function_">FF</span>(d, a, b, c, M_offset_5, <span class="number">12</span>, T[<span class="number">5</span>]);</span><br><span class="line">                c = <span class="title function_">FF</span>(c, d, a, b, M_offset_6, <span class="number">17</span>, T[<span class="number">6</span>]);</span><br><span class="line">                b = <span class="title function_">FF</span>(b, c, d, a, M_offset_7, <span class="number">22</span>, T[<span class="number">7</span>]);</span><br><span class="line">                a = <span class="title function_">FF</span>(a, b, c, d, M_offset_8, <span class="number">7</span>, T[<span class="number">8</span>]);</span><br><span class="line">                d = <span class="title function_">FF</span>(d, a, b, c, M_offset_9, <span class="number">12</span>, T[<span class="number">9</span>]);</span><br><span class="line">                c = <span class="title function_">FF</span>(c, d, a, b, M_offset_10, <span class="number">17</span>, T[<span class="number">10</span>]);</span><br><span class="line">                b = <span class="title function_">FF</span>(b, c, d, a, M_offset_11, <span class="number">22</span>, T[<span class="number">11</span>]);</span><br><span class="line">                a = <span class="title function_">FF</span>(a, b, c, d, M_offset_12, <span class="number">7</span>, T[<span class="number">12</span>]);</span><br><span class="line">                d = <span class="title function_">FF</span>(d, a, b, c, M_offset_13, <span class="number">12</span>, T[<span class="number">13</span>]);</span><br><span class="line">                c = <span class="title function_">FF</span>(c, d, a, b, M_offset_14, <span class="number">17</span>, T[<span class="number">14</span>]);</span><br><span class="line">                b = <span class="title function_">FF</span>(b, c, d, a, M_offset_15, <span class="number">22</span>, T[<span class="number">15</span>]);</span><br><span class="line">                a = <span class="title function_">GG</span>(a, b, c, d, M_offset_1, <span class="number">5</span>, T[<span class="number">16</span>]);</span><br><span class="line">                d = <span class="title function_">GG</span>(d, a, b, c, M_offset_6, <span class="number">9</span>, T[<span class="number">17</span>]);</span><br><span class="line">                c = <span class="title function_">GG</span>(c, d, a, b, M_offset_11, <span class="number">14</span>, T[<span class="number">18</span>]);</span><br><span class="line">                b = <span class="title function_">GG</span>(b, c, d, a, M_offset_0, <span class="number">20</span>, T[<span class="number">19</span>]);</span><br><span class="line">                a = <span class="title function_">GG</span>(a, b, c, d, M_offset_5, <span class="number">5</span>, T[<span class="number">20</span>]);</span><br><span class="line">                d = <span class="title function_">GG</span>(d, a, b, c, M_offset_10, <span class="number">9</span>, T[<span class="number">21</span>]);</span><br><span class="line">                c = <span class="title function_">GG</span>(c, d, a, b, M_offset_15, <span class="number">14</span>, T[<span class="number">22</span>]);</span><br><span class="line">                b = <span class="title function_">GG</span>(b, c, d, a, M_offset_4, <span class="number">20</span>, T[<span class="number">23</span>]);</span><br><span class="line">                a = <span class="title function_">GG</span>(a, b, c, d, M_offset_9, <span class="number">5</span>, T[<span class="number">24</span>]);</span><br><span class="line">                d = <span class="title function_">GG</span>(d, a, b, c, M_offset_14, <span class="number">9</span>, T[<span class="number">25</span>]);</span><br><span class="line">                c = <span class="title function_">GG</span>(c, d, a, b, M_offset_3, <span class="number">14</span>, T[<span class="number">26</span>]);</span><br><span class="line">                b = <span class="title function_">GG</span>(b, c, d, a, M_offset_8, <span class="number">20</span>, T[<span class="number">27</span>]);</span><br><span class="line">                a = <span class="title function_">GG</span>(a, b, c, d, M_offset_13, <span class="number">5</span>, T[<span class="number">28</span>]);</span><br><span class="line">                d = <span class="title function_">GG</span>(d, a, b, c, M_offset_2, <span class="number">9</span>, T[<span class="number">29</span>]);</span><br><span class="line">                c = <span class="title function_">GG</span>(c, d, a, b, M_offset_7, <span class="number">14</span>, T[<span class="number">30</span>]);</span><br><span class="line">                b = <span class="title function_">GG</span>(b, c, d, a, M_offset_12, <span class="number">20</span>, T[<span class="number">31</span>]);</span><br><span class="line">                a = <span class="title function_">HH</span>(a, b, c, d, M_offset_5, <span class="number">4</span>, T[<span class="number">32</span>]);</span><br><span class="line">                d = <span class="title function_">HH</span>(d, a, b, c, M_offset_8, <span class="number">11</span>, T[<span class="number">33</span>]);</span><br><span class="line">                c = <span class="title function_">HH</span>(c, d, a, b, M_offset_11, <span class="number">16</span>, T[<span class="number">34</span>]);</span><br><span class="line">                b = <span class="title function_">HH</span>(b, c, d, a, M_offset_14, <span class="number">23</span>, T[<span class="number">35</span>]);</span><br><span class="line">                a = <span class="title function_">HH</span>(a, b, c, d, M_offset_1, <span class="number">4</span>, T[<span class="number">36</span>]);</span><br><span class="line">                d = <span class="title function_">HH</span>(d, a, b, c, M_offset_4, <span class="number">11</span>, T[<span class="number">37</span>]);</span><br><span class="line">                c = <span class="title function_">HH</span>(c, d, a, b, M_offset_7, <span class="number">16</span>, T[<span class="number">38</span>]);</span><br><span class="line">                b = <span class="title function_">HH</span>(b, c, d, a, M_offset_10, <span class="number">23</span>, T[<span class="number">39</span>]);</span><br><span class="line">                a = <span class="title function_">HH</span>(a, b, c, d, M_offset_13, <span class="number">4</span>, T[<span class="number">40</span>]);</span><br><span class="line">                d = <span class="title function_">HH</span>(d, a, b, c, M_offset_0, <span class="number">11</span>, T[<span class="number">41</span>]);</span><br><span class="line">                c = <span class="title function_">HH</span>(c, d, a, b, M_offset_3, <span class="number">16</span>, T[<span class="number">42</span>]);</span><br><span class="line">                b = <span class="title function_">HH</span>(b, c, d, a, M_offset_6, <span class="number">23</span>, T[<span class="number">43</span>]);</span><br><span class="line">                a = <span class="title function_">HH</span>(a, b, c, d, M_offset_9, <span class="number">4</span>, T[<span class="number">44</span>]);</span><br><span class="line">                d = <span class="title function_">HH</span>(d, a, b, c, M_offset_12, <span class="number">11</span>, T[<span class="number">45</span>]);</span><br><span class="line">                c = <span class="title function_">HH</span>(c, d, a, b, M_offset_15, <span class="number">16</span>, T[<span class="number">46</span>]);</span><br><span class="line">                b = <span class="title function_">HH</span>(b, c, d, a, M_offset_2, <span class="number">23</span>, T[<span class="number">47</span>]);</span><br><span class="line">                a = <span class="title function_">II</span>(a, b, c, d, M_offset_0, <span class="number">6</span>, T[<span class="number">48</span>]);</span><br><span class="line">                d = <span class="title function_">II</span>(d, a, b, c, M_offset_7, <span class="number">10</span>, T[<span class="number">49</span>]);</span><br><span class="line">                c = <span class="title function_">II</span>(c, d, a, b, M_offset_14, <span class="number">15</span>, T[<span class="number">50</span>]);</span><br><span class="line">                b = <span class="title function_">II</span>(b, c, d, a, M_offset_5, <span class="number">21</span>, T[<span class="number">51</span>]);</span><br><span class="line">                a = <span class="title function_">II</span>(a, b, c, d, M_offset_12, <span class="number">6</span>, T[<span class="number">52</span>]);</span><br><span class="line">                d = <span class="title function_">II</span>(d, a, b, c, M_offset_3, <span class="number">10</span>, T[<span class="number">53</span>]);</span><br><span class="line">                c = <span class="title function_">II</span>(c, d, a, b, M_offset_10, <span class="number">15</span>, T[<span class="number">54</span>]);</span><br><span class="line">                b = <span class="title function_">II</span>(b, c, d, a, M_offset_1, <span class="number">21</span>, T[<span class="number">55</span>]);</span><br><span class="line">                a = <span class="title function_">II</span>(a, b, c, d, M_offset_8, <span class="number">6</span>, T[<span class="number">56</span>]);</span><br><span class="line">                d = <span class="title function_">II</span>(d, a, b, c, M_offset_15, <span class="number">10</span>, T[<span class="number">57</span>]);</span><br><span class="line">                c = <span class="title function_">II</span>(c, d, a, b, M_offset_6, <span class="number">15</span>, T[<span class="number">58</span>]);</span><br><span class="line">                b = <span class="title function_">II</span>(b, c, d, a, M_offset_13, <span class="number">21</span>, T[<span class="number">59</span>]);</span><br><span class="line">                a = <span class="title function_">II</span>(a, b, c, d, M_offset_4, <span class="number">6</span>, T[<span class="number">60</span>]);</span><br><span class="line">                d = <span class="title function_">II</span>(d, a, b, c, M_offset_11, <span class="number">10</span>, T[<span class="number">61</span>]);</span><br><span class="line">                c = <span class="title function_">II</span>(c, d, a, b, M_offset_2, <span class="number">15</span>, T[<span class="number">62</span>]);</span><br><span class="line">                b = <span class="title function_">II</span>(b, c, d, a, M_offset_9, <span class="number">21</span>, T[<span class="number">63</span>]);</span><br><span class="line">                H[<span class="number">0</span>] = (H[<span class="number">0</span>] + a) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">1</span>] = (H[<span class="number">1</span>] + b) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">2</span>] = (H[<span class="number">2</span>] + c) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">3</span>] = (H[<span class="number">3</span>] + d) | <span class="number">0</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsTotal = <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsLeft = data.<span class="property">sigBytes</span> * <span class="number">8</span>;</span><br><span class="line">                dataWords[nBitsLeft &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - nBitsLeft % <span class="number">32</span>);</span><br><span class="line">                <span class="keyword">var</span> nBitsTotalH = <span class="title class_">Math</span>.<span class="title function_">floor</span>(nBitsTotal / <span class="number">0x100000000</span>);</span><br><span class="line">                <span class="keyword">var</span> nBitsTotalL = nBitsTotal;</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = ((((nBitsTotalH &lt;&lt; <span class="number">8</span>) | (nBitsTotalH &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((nBitsTotalH &lt;&lt; <span class="number">24</span>) | (nBitsTotalH &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = ((((nBitsTotalL &lt;&lt; <span class="number">8</span>) | (nBitsTotalL &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((nBitsTotalL &lt;&lt; <span class="number">24</span>) | (nBitsTotalL &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                data.<span class="property">sigBytes</span> = (dataWords.<span class="property">length</span> + <span class="number">1</span>) * <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">var</span> hash = <span class="variable language_">this</span>.<span class="property">_hash</span>;</span><br><span class="line">                <span class="keyword">var</span> H = hash.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> H_i = H[i];</span><br><span class="line">                    H[i] = (((H_i &lt;&lt; <span class="number">8</span>) | (H_i &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((H_i &lt;&lt; <span class="number">24</span>) | (H_i &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> hash;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Hasher</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">FF</span>(<span class="params">a, b, c, d, x, s, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = a + ((b &amp; c) | (~b &amp; d)) + x + t;</span><br><span class="line">            <span class="keyword">return</span> ((n &lt;&lt; s) | (n &gt;&gt;&gt; (<span class="number">32</span> - s))) + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">GG</span>(<span class="params">a, b, c, d, x, s, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = a + ((b &amp; d) | (c &amp; ~d)) + x + t;</span><br><span class="line">            <span class="keyword">return</span> ((n &lt;&lt; s) | (n &gt;&gt;&gt; (<span class="number">32</span> - s))) + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">HH</span>(<span class="params">a, b, c, d, x, s, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = a + (b ^ c ^ d) + x + t;</span><br><span class="line">            <span class="keyword">return</span> ((n &lt;&lt; s) | (n &gt;&gt;&gt; (<span class="number">32</span> - s))) + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">II</span>(<span class="params">a, b, c, d, x, s, t</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = a + (c ^ (b | ~d)) + x + t;</span><br><span class="line">            <span class="keyword">return</span> ((n &lt;&lt; s) | (n &gt;&gt;&gt; (<span class="number">32</span> - s))) + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        C.<span class="property">MD5</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">MD5</span>);</span><br><span class="line">        C.<span class="property">HmacMD5</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">MD5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    (<span class="title class_">Math</span>));</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> W = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA1</span> = C_algo.<span class="property">SHA1</span> = <span class="title class_">Hasher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>([<span class="number">0x67452301</span>, <span class="number">0xefcdab89</span>, <span class="number">0x98badcfe</span>, <span class="number">0x10325476</span>, <span class="number">0xc3d2e1f0</span>]);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> H = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> a = H[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">var</span> b = H[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> c = H[<span class="number">2</span>];</span><br><span class="line">                <span class="keyword">var</span> d = H[<span class="number">3</span>];</span><br><span class="line">                <span class="keyword">var</span> e = H[<span class="number">4</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">80</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                        W[i] = M[offset + i] | <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> n = W[i - <span class="number">3</span>] ^ W[i - <span class="number">8</span>] ^ W[i - <span class="number">14</span>] ^ W[i - <span class="number">16</span>];</span><br><span class="line">                        W[i] = (n &lt;&lt; <span class="number">1</span>) | (n &gt;&gt;&gt; <span class="number">31</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> t = ((a &lt;&lt; <span class="number">5</span>) | (a &gt;&gt;&gt; <span class="number">27</span>)) + e + W[i];</span><br><span class="line">                    <span class="keyword">if</span> (i &lt; <span class="number">20</span>) &#123;</span><br><span class="line">                        t += ((b &amp; c) | (~b &amp; d)) + <span class="number">0x5a827999</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">40</span>) &#123;</span><br><span class="line">                        t += (b ^ c ^ d) + <span class="number">0x6ed9eba1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">60</span>) &#123;</span><br><span class="line">                        t += ((b &amp; c) | (b &amp; d) | (c &amp; d)) - <span class="number">0x70e44324</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        t += (b ^ c ^ d) - <span class="number">0x359d3e2a</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    e = d;</span><br><span class="line">                    d = c;</span><br><span class="line">                    c = (b &lt;&lt; <span class="number">30</span>) | (b &gt;&gt;&gt; <span class="number">2</span>);</span><br><span class="line">                    b = a;</span><br><span class="line">                    a = t;</span><br><span class="line">                &#125;</span><br><span class="line">                H[<span class="number">0</span>] = (H[<span class="number">0</span>] + a) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">1</span>] = (H[<span class="number">1</span>] + b) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">2</span>] = (H[<span class="number">2</span>] + c) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">3</span>] = (H[<span class="number">3</span>] + d) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">4</span>] = (H[<span class="number">4</span>] + e) | <span class="number">0</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsTotal = <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsLeft = data.<span class="property">sigBytes</span> * <span class="number">8</span>;</span><br><span class="line">                dataWords[nBitsLeft &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - nBitsLeft % <span class="number">32</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = <span class="title class_">Math</span>.<span class="title function_">floor</span>(nBitsTotal / <span class="number">0x100000000</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = nBitsTotal;</span><br><span class="line">                data.<span class="property">sigBytes</span> = dataWords.<span class="property">length</span> * <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_hash</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Hasher</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">SHA1</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">SHA1</span>);</span><br><span class="line">        C.<span class="property">HmacSHA1</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">SHA1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"><span class="built_in">Math</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> H = [];</span><br><span class="line">        <span class="keyword">var</span> K = [];</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">isPrime</span>(<span class="params">n</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> sqrtN = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(n);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> factor = <span class="number">2</span>; factor &lt;= sqrtN; factor++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!(n % factor)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">getFractionalBits</span>(<span class="params">n</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((n - (n | <span class="number">0</span>)) * <span class="number">0x100000000</span>) | <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> n = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> nPrime = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (nPrime &lt; <span class="number">64</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_">isPrime</span>(n)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (nPrime &lt; <span class="number">8</span>) &#123;</span><br><span class="line">                        H[nPrime] = <span class="title function_">getFractionalBits</span>(<span class="title class_">Math</span>.<span class="title function_">pow</span>(n, <span class="number">1</span> / <span class="number">2</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                    K[nPrime] = <span class="title function_">getFractionalBits</span>(<span class="title class_">Math</span>.<span class="title function_">pow</span>(n, <span class="number">1</span> / <span class="number">3</span>));</span><br><span class="line">                    nPrime++;</span><br><span class="line">                &#125;</span><br><span class="line">                n++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> W = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA256</span> = C_algo.<span class="property">SHA256</span> = <span class="title class_">Hasher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>(H.<span class="title function_">slice</span>(<span class="number">0</span>));</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> H = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> a = H[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">var</span> b = H[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> c = H[<span class="number">2</span>];</span><br><span class="line">                <span class="keyword">var</span> d = H[<span class="number">3</span>];</span><br><span class="line">                <span class="keyword">var</span> e = H[<span class="number">4</span>];</span><br><span class="line">                <span class="keyword">var</span> f = H[<span class="number">5</span>];</span><br><span class="line">                <span class="keyword">var</span> g = H[<span class="number">6</span>];</span><br><span class="line">                <span class="keyword">var</span> h = H[<span class="number">7</span>];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                        W[i] = M[offset + i] | <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> gamma0x = W[i - <span class="number">15</span>];</span><br><span class="line">                        <span class="keyword">var</span> gamma0 = ((gamma0x &lt;&lt; <span class="number">25</span>) | (gamma0x &gt;&gt;&gt; <span class="number">7</span>)) ^ ((gamma0x &lt;&lt; <span class="number">14</span>) | (gamma0x &gt;&gt;&gt; <span class="number">18</span>)) ^ (gamma0x &gt;&gt;&gt; <span class="number">3</span>);</span><br><span class="line">                        <span class="keyword">var</span> gamma1x = W[i - <span class="number">2</span>];</span><br><span class="line">                        <span class="keyword">var</span> gamma1 = ((gamma1x &lt;&lt; <span class="number">15</span>) | (gamma1x &gt;&gt;&gt; <span class="number">17</span>)) ^ ((gamma1x &lt;&lt; <span class="number">13</span>) | (gamma1x &gt;&gt;&gt; <span class="number">19</span>)) ^ (gamma1x &gt;&gt;&gt; <span class="number">10</span>);</span><br><span class="line">                        W[i] = gamma0 + W[i - <span class="number">7</span>] + gamma1 + W[i - <span class="number">16</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> ch = (e &amp; f) ^ (~e &amp; g);</span><br><span class="line">                    <span class="keyword">var</span> maj = (a &amp; b) ^ (a &amp; c) ^ (b &amp; c);</span><br><span class="line">                    <span class="keyword">var</span> sigma0 = ((a &lt;&lt; <span class="number">30</span>) | (a &gt;&gt;&gt; <span class="number">2</span>)) ^ ((a &lt;&lt; <span class="number">19</span>) | (a &gt;&gt;&gt; <span class="number">13</span>)) ^ ((a &lt;&lt; <span class="number">10</span>) | (a &gt;&gt;&gt; <span class="number">22</span>));</span><br><span class="line">                    <span class="keyword">var</span> sigma1 = ((e &lt;&lt; <span class="number">26</span>) | (e &gt;&gt;&gt; <span class="number">6</span>)) ^ ((e &lt;&lt; <span class="number">21</span>) | (e &gt;&gt;&gt; <span class="number">11</span>)) ^ ((e &lt;&lt; <span class="number">7</span>) | (e &gt;&gt;&gt; <span class="number">25</span>));</span><br><span class="line">                    <span class="keyword">var</span> t1 = h + sigma1 + ch + K[i] + W[i];</span><br><span class="line">                    <span class="keyword">var</span> t2 = sigma0 + maj;</span><br><span class="line">                    h = g;</span><br><span class="line">                    g = f;</span><br><span class="line">                    f = e;</span><br><span class="line">                    e = (d + t1) | <span class="number">0</span>;</span><br><span class="line">                    d = c;</span><br><span class="line">                    c = b;</span><br><span class="line">                    b = a;</span><br><span class="line">                    a = (t1 + t2) | <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                H[<span class="number">0</span>] = (H[<span class="number">0</span>] + a) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">1</span>] = (H[<span class="number">1</span>] + b) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">2</span>] = (H[<span class="number">2</span>] + c) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">3</span>] = (H[<span class="number">3</span>] + d) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">4</span>] = (H[<span class="number">4</span>] + e) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">5</span>] = (H[<span class="number">5</span>] + f) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">6</span>] = (H[<span class="number">6</span>] + g) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">7</span>] = (H[<span class="number">7</span>] + h) | <span class="number">0</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsTotal = <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsLeft = data.<span class="property">sigBytes</span> * <span class="number">8</span>;</span><br><span class="line">                dataWords[nBitsLeft &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - nBitsLeft % <span class="number">32</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = <span class="title class_">Math</span>.<span class="title function_">floor</span>(nBitsTotal / <span class="number">0x100000000</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = nBitsTotal;</span><br><span class="line">                data.<span class="property">sigBytes</span> = dataWords.<span class="property">length</span> * <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_hash</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Hasher</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">SHA256</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">SHA256</span>);</span><br><span class="line">        C.<span class="property">HmacSHA256</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">SHA256</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    (<span class="title class_">Math</span>));</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_enc = C.<span class="property">enc</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Utf16BE</span> = C_enc.<span class="property">Utf16</span> = C_enc.<span class="property">Utf16BE</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = wordArray.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sigBytes = wordArray.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> utf16Chars = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sigBytes; i += <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> codePoint = (words[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">16</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xffff</span>;</span><br><span class="line">                    utf16Chars.<span class="title function_">push</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(codePoint));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> utf16Chars.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">utf16Str</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> utf16StrLength = utf16Str.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">var</span> words = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; utf16StrLength; i++) &#123;</span><br><span class="line">                    words[i &gt;&gt;&gt; <span class="number">1</span>] |= utf16Str.<span class="title function_">charCodeAt</span>(i) &lt;&lt; (<span class="number">16</span> - (i % <span class="number">2</span>) * <span class="number">16</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">WordArray</span>.<span class="title function_">create</span>(words, utf16StrLength * <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        C_enc.<span class="property">Utf16LE</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">wordArray</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> words = wordArray.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sigBytes = wordArray.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> utf16Chars = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sigBytes; i += <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> codePoint = <span class="title function_">swapEndian</span>((words[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">16</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xffff</span>);</span><br><span class="line">                    utf16Chars.<span class="title function_">push</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(codePoint));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> utf16Chars.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">utf16Str</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> utf16StrLength = utf16Str.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">var</span> words = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; utf16StrLength; i++) &#123;</span><br><span class="line">                    words[i &gt;&gt;&gt; <span class="number">1</span>] |= <span class="title function_">swapEndian</span>(utf16Str.<span class="title function_">charCodeAt</span>(i) &lt;&lt; (<span class="number">16</span> - (i % <span class="number">2</span>) * <span class="number">16</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">WordArray</span>.<span class="title function_">create</span>(words, utf16StrLength * <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">swapEndian</span>(<span class="params">word</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((word &lt;&lt; <span class="number">8</span>) &amp; <span class="number">0xff00ff00</span>) | ((word &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0x00ff00ff</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">ArrayBuffer</span> != <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> superInit = <span class="title class_">WordArray</span>.<span class="property">init</span>;</span><br><span class="line">        <span class="keyword">var</span> subInit = <span class="title class_">WordArray</span>.<span class="property">init</span> = <span class="keyword">function</span> (<span class="params">typedArray</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (typedArray <span class="keyword">instanceof</span> <span class="title class_">ArrayBuffer</span>) &#123;</span><br><span class="line">                typedArray = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(typedArray);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (typedArray <span class="keyword">instanceof</span> <span class="title class_">Int8Array</span> || (<span class="keyword">typeof</span> <span class="title class_">Uint8ClampedArray</span> !== <span class="string">&quot;undefined&quot;</span> &amp;&amp; typedArray <span class="keyword">instanceof</span> <span class="title class_">Uint8ClampedArray</span>) || typedArray <span class="keyword">instanceof</span> <span class="title class_">Int16Array</span> || typedArray <span class="keyword">instanceof</span> <span class="title class_">Uint16Array</span> || typedArray <span class="keyword">instanceof</span> <span class="title class_">Int32Array</span> || typedArray <span class="keyword">instanceof</span> <span class="title class_">Uint32Array</span> || typedArray <span class="keyword">instanceof</span> <span class="title class_">Float32Array</span> || typedArray <span class="keyword">instanceof</span> <span class="title class_">Float64Array</span>) &#123;</span><br><span class="line">                typedArray = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(typedArray.<span class="property">buffer</span>, typedArray.<span class="property">byteOffset</span>, typedArray.<span class="property">byteLength</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (typedArray <span class="keyword">instanceof</span> <span class="title class_">Uint8Array</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> typedArrayByteLength = typedArray.<span class="property">byteLength</span>;</span><br><span class="line">                <span class="keyword">var</span> words = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; typedArrayByteLength; i++) &#123;</span><br><span class="line">                    words[i &gt;&gt;&gt; <span class="number">2</span>] |= typedArray[i] &lt;&lt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                superInit.<span class="title function_">call</span>(<span class="variable language_">this</span>, words, typedArrayByteLength);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                superInit.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        subInit.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">WordArray</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"><span class="built_in">Math</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> _zl = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">13</span>]);</span><br><span class="line">        <span class="keyword">var</span> _zr = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">5</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>]);</span><br><span class="line">        <span class="keyword">var</span> _sl = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">11</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">6</span>]);</span><br><span class="line">        <span class="keyword">var</span> _sr = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">11</span>]);</span><br><span class="line">        <span class="keyword">var</span> _hl = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">0x00000000</span>, <span class="number">0x5A827999</span>, <span class="number">0x6ED9EBA1</span>, <span class="number">0x8F1BBCDC</span>, <span class="number">0xA953FD4E</span>]);</span><br><span class="line">        <span class="keyword">var</span> _hr = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">0x50A28BE6</span>, <span class="number">0x5C4DD124</span>, <span class="number">0x6D703EF3</span>, <span class="number">0x7A6D76E9</span>, <span class="number">0x00000000</span>]);</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">RIPEMD160</span> = C_algo.<span class="property">RIPEMD160</span> = <span class="title class_">Hasher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">0x67452301</span>, <span class="number">0xEFCDAB89</span>, <span class="number">0x98BADCFE</span>, <span class="number">0x10325476</span>, <span class="number">0xC3D2E1F0</span>]);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> offset_i = offset + i;</span><br><span class="line">                    <span class="keyword">var</span> M_offset_i = M[offset_i];</span><br><span class="line">                    M[offset_i] = ((((M_offset_i &lt;&lt; <span class="number">8</span>) | (M_offset_i &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((M_offset_i &lt;&lt; <span class="number">24</span>) | (M_offset_i &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> H = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> hl = _hl.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> hr = _hr.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> zl = _zl.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> zr = _zr.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sl = _sl.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> sr = _sr.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> al,</span><br><span class="line">                    bl,</span><br><span class="line">                    cl,</span><br><span class="line">                    dl,</span><br><span class="line">                    el;</span><br><span class="line">                <span class="keyword">var</span> ar,</span><br><span class="line">                    br,</span><br><span class="line">                    cr,</span><br><span class="line">                    dr,</span><br><span class="line">                    er;</span><br><span class="line">                ar = al = H[<span class="number">0</span>];</span><br><span class="line">                br = bl = H[<span class="number">1</span>];</span><br><span class="line">                cr = cl = H[<span class="number">2</span>];</span><br><span class="line">                dr = dl = H[<span class="number">3</span>];</span><br><span class="line">                er = el = H[<span class="number">4</span>];</span><br><span class="line">                <span class="keyword">var</span> t;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">80</span>; i += <span class="number">1</span>) &#123;</span><br><span class="line">                    t = (al + M[offset + zl[i]]) | <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (i &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f1</span>(bl, cl, dl) + hl[<span class="number">0</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">32</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f2</span>(bl, cl, dl) + hl[<span class="number">1</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">48</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f3</span>(bl, cl, dl) + hl[<span class="number">2</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">64</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f4</span>(bl, cl, dl) + hl[<span class="number">3</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        t += <span class="title function_">f5</span>(bl, cl, dl) + hl[<span class="number">4</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    t = t | <span class="number">0</span>;</span><br><span class="line">                    t = <span class="title function_">rotl</span>(t, sl[i]);</span><br><span class="line">                    t = (t + el) | <span class="number">0</span>;</span><br><span class="line">                    al = el;</span><br><span class="line">                    el = dl;</span><br><span class="line">                    dl = <span class="title function_">rotl</span>(cl, <span class="number">10</span>);</span><br><span class="line">                    cl = bl;</span><br><span class="line">                    bl = t;</span><br><span class="line">                    t = (ar + M[offset + zr[i]]) | <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (i &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f5</span>(br, cr, dr) + hr[<span class="number">0</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">32</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f4</span>(br, cr, dr) + hr[<span class="number">1</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">48</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f3</span>(br, cr, dr) + hr[<span class="number">2</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">64</span>) &#123;</span><br><span class="line">                        t += <span class="title function_">f2</span>(br, cr, dr) + hr[<span class="number">3</span>];</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        t += <span class="title function_">f1</span>(br, cr, dr) + hr[<span class="number">4</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    t = t | <span class="number">0</span>;</span><br><span class="line">                    t = <span class="title function_">rotl</span>(t, sr[i]);</span><br><span class="line">                    t = (t + er) | <span class="number">0</span>;</span><br><span class="line">                    ar = er;</span><br><span class="line">                    er = dr;</span><br><span class="line">                    dr = <span class="title function_">rotl</span>(cr, <span class="number">10</span>);</span><br><span class="line">                    cr = br;</span><br><span class="line">                    br = t;</span><br><span class="line">                &#125;</span><br><span class="line">                t = (H[<span class="number">1</span>] + cl + dr) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">1</span>] = (H[<span class="number">2</span>] + dl + er) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">2</span>] = (H[<span class="number">3</span>] + el + ar) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">3</span>] = (H[<span class="number">4</span>] + al + br) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">4</span>] = (H[<span class="number">0</span>] + bl + cr) | <span class="number">0</span>;</span><br><span class="line">                H[<span class="number">0</span>] = t;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsTotal = <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsLeft = data.<span class="property">sigBytes</span> * <span class="number">8</span>;</span><br><span class="line">                dataWords[nBitsLeft &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - nBitsLeft % <span class="number">32</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = ((((nBitsTotal &lt;&lt; <span class="number">8</span>) | (nBitsTotal &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((nBitsTotal &lt;&lt; <span class="number">24</span>) | (nBitsTotal &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                data.<span class="property">sigBytes</span> = (dataWords.<span class="property">length</span> + <span class="number">1</span>) * <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">var</span> hash = <span class="variable language_">this</span>.<span class="property">_hash</span>;</span><br><span class="line">                <span class="keyword">var</span> H = hash.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> H_i = H[i];</span><br><span class="line">                    H[i] = (((H_i &lt;&lt; <span class="number">8</span>) | (H_i &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((H_i &lt;&lt; <span class="number">24</span>) | (H_i &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> hash;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Hasher</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params">x, y, z</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((x) ^ (y) ^ (z));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params">x, y, z</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (((x) &amp; (y)) | ((~x) &amp; (z)));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f3</span>(<span class="params">x, y, z</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (((x) | (~(y))) ^ (z));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f4</span>(<span class="params">x, y, z</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (((x) &amp; (z)) | ((y) &amp; (~(z))));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f5</span>(<span class="params">x, y, z</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((x) ^ ((y) | (~(z))));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">rotl</span>(<span class="params">x, n</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (x &lt;&lt; n) | (x &gt;&gt;&gt; (<span class="number">32</span> - n));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        C.<span class="property">RIPEMD160</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">RIPEMD160</span>);</span><br><span class="line">        C.<span class="property">HmacRIPEMD160</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">RIPEMD160</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    (<span class="title class_">Math</span>));</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base</span> = C_lib.<span class="property">Base</span>;</span><br><span class="line">        <span class="keyword">var</span> C_enc = C.<span class="property">enc</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Utf8</span> = C_enc.<span class="property">Utf8</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">HMAC</span> = C_algo.<span class="property">HMAC</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">hasher, key</span>) &#123;</span><br><span class="line">                hasher = <span class="variable language_">this</span>.<span class="property">_hasher</span> = <span class="keyword">new</span> hasher.<span class="title function_">init</span>();</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> key == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">                    key = <span class="title class_">Utf8</span>.<span class="title function_">parse</span>(key);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> hasherBlockSize = hasher.<span class="property">blockSize</span>;</span><br><span class="line">                <span class="keyword">var</span> hasherBlockSizeBytes = hasherBlockSize * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">if</span> (key.<span class="property">sigBytes</span> &gt; hasherBlockSizeBytes) &#123;</span><br><span class="line">                    key = hasher.<span class="title function_">finalize</span>(key);</span><br><span class="line">                &#125;</span><br><span class="line">                key.<span class="title function_">clamp</span>();</span><br><span class="line">                <span class="keyword">var</span> oKey = <span class="variable language_">this</span>.<span class="property">_oKey</span> = key.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">var</span> iKey = <span class="variable language_">this</span>.<span class="property">_iKey</span> = key.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">var</span> oKeyWords = oKey.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> iKeyWords = iKey.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hasherBlockSize; i++) &#123;</span><br><span class="line">                    oKeyWords[i] ^= <span class="number">0x5c5c5c5c</span>;</span><br><span class="line">                    iKeyWords[i] ^= <span class="number">0x36363636</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                oKey.<span class="property">sigBytes</span> = iKey.<span class="property">sigBytes</span> = hasherBlockSizeBytes;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">reset</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> hasher = <span class="variable language_">this</span>.<span class="property">_hasher</span>;</span><br><span class="line">                hasher.<span class="title function_">reset</span>();</span><br><span class="line">                hasher.<span class="title function_">update</span>(<span class="variable language_">this</span>.<span class="property">_iKey</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params">messageUpdate</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hasher</span>.<span class="title function_">update</span>(messageUpdate);</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">finalize</span>: <span class="keyword">function</span> (<span class="params">messageUpdate</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> hasher = <span class="variable language_">this</span>.<span class="property">_hasher</span>;</span><br><span class="line">                <span class="keyword">var</span> innerHash = hasher.<span class="title function_">finalize</span>(messageUpdate);</span><br><span class="line">                hasher.<span class="title function_">reset</span>();</span><br><span class="line">                <span class="keyword">var</span> hmac = hasher.<span class="title function_">finalize</span>(<span class="variable language_">this</span>.<span class="property">_oKey</span>.<span class="title function_">clone</span>().<span class="title function_">concat</span>(innerHash));</span><br><span class="line">                <span class="keyword">return</span> hmac;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base</span> = C_lib.<span class="property">Base</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA1</span> = C_algo.<span class="property">SHA1</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">HMAC</span> = C_algo.<span class="property">HMAC</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">PBKDF2</span> = C_algo.<span class="property">PBKDF2</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">128</span> / <span class="number">32</span>,</span><br><span class="line">                <span class="attr">hasher</span>: <span class="title class_">SHA1</span>,</span><br><span class="line">                <span class="attr">iterations</span>: <span class="number">1</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">cfg</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">compute</span>: <span class="keyword">function</span> (<span class="params">password, salt</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>;</span><br><span class="line">                <span class="keyword">var</span> hmac = <span class="variable constant_">HMAC</span>.<span class="title function_">create</span>(cfg.<span class="property">hasher</span>, password);</span><br><span class="line">                <span class="keyword">var</span> derivedKey = <span class="title class_">WordArray</span>.<span class="title function_">create</span>();</span><br><span class="line">                <span class="keyword">var</span> blockIndex = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">0x00000001</span>]);</span><br><span class="line">                <span class="keyword">var</span> derivedKeyWords = derivedKey.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> blockIndexWords = blockIndex.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> keySize = cfg.<span class="property">keySize</span>;</span><br><span class="line">                <span class="keyword">var</span> iterations = cfg.<span class="property">iterations</span>;</span><br><span class="line">                <span class="keyword">while</span> (derivedKeyWords.<span class="property">length</span> &lt; keySize) &#123;</span><br><span class="line">                    <span class="keyword">var</span> block = hmac.<span class="title function_">update</span>(salt).<span class="title function_">finalize</span>(blockIndex);</span><br><span class="line">                    hmac.<span class="title function_">reset</span>();</span><br><span class="line">                    <span class="keyword">var</span> blockWords = block.<span class="property">words</span>;</span><br><span class="line">                    <span class="keyword">var</span> blockWordsLength = blockWords.<span class="property">length</span>;</span><br><span class="line">                    <span class="keyword">var</span> intermediate = block;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; iterations; i++) &#123;</span><br><span class="line">                        intermediate = hmac.<span class="title function_">finalize</span>(intermediate);</span><br><span class="line">                        hmac.<span class="title function_">reset</span>();</span><br><span class="line">                        <span class="keyword">var</span> intermediateWords = intermediate.<span class="property">words</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; blockWordsLength; j++) &#123;</span><br><span class="line">                            blockWords[j] ^= intermediateWords[j];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    derivedKey.<span class="title function_">concat</span>(block);</span><br><span class="line">                    blockIndexWords[<span class="number">0</span>]++;</span><br><span class="line">                &#125;</span><br><span class="line">                derivedKey.<span class="property">sigBytes</span> = keySize * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">return</span> derivedKey;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">PBKDF2</span> = <span class="keyword">function</span> (<span class="params">password, salt, cfg</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">PBKDF2</span>.<span class="title function_">create</span>(cfg).<span class="title function_">compute</span>(password, salt);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base</span> = C_lib.<span class="property">Base</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">MD5</span> = C_algo.<span class="property">MD5</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">EvpKDF</span> = C_algo.<span class="property">EvpKDF</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">128</span> / <span class="number">32</span>,</span><br><span class="line">                <span class="attr">hasher</span>: <span class="title class_">MD5</span>,</span><br><span class="line">                <span class="attr">iterations</span>: <span class="number">1</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">cfg</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">compute</span>: <span class="keyword">function</span> (<span class="params">password, salt</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>;</span><br><span class="line">                <span class="keyword">var</span> hasher = cfg.<span class="property">hasher</span>.<span class="title function_">create</span>();</span><br><span class="line">                <span class="keyword">var</span> derivedKey = <span class="title class_">WordArray</span>.<span class="title function_">create</span>();</span><br><span class="line">                <span class="keyword">var</span> derivedKeyWords = derivedKey.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> keySize = cfg.<span class="property">keySize</span>;</span><br><span class="line">                <span class="keyword">var</span> iterations = cfg.<span class="property">iterations</span>;</span><br><span class="line">                <span class="keyword">while</span> (derivedKeyWords.<span class="property">length</span> &lt; keySize) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (block) &#123;</span><br><span class="line">                        hasher.<span class="title function_">update</span>(block);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> block = hasher.<span class="title function_">update</span>(password).<span class="title function_">finalize</span>(salt);</span><br><span class="line">                    hasher.<span class="title function_">reset</span>();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; iterations; i++) &#123;</span><br><span class="line">                        block = hasher.<span class="title function_">finalize</span>(block);</span><br><span class="line">                        hasher.<span class="title function_">reset</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                    derivedKey.<span class="title function_">concat</span>(block);</span><br><span class="line">                &#125;</span><br><span class="line">                derivedKey.<span class="property">sigBytes</span> = keySize * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">return</span> derivedKey;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">EvpKDF</span> = <span class="keyword">function</span> (<span class="params">password, salt, cfg</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">EvpKDF</span>.<span class="title function_">create</span>(cfg).<span class="title function_">compute</span>(password, salt);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA256</span> = C_algo.<span class="property">SHA256</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA224</span> = C_algo.<span class="property">SHA224</span> = <span class="title class_">SHA256</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>([<span class="number">0xc1059ed8</span>, <span class="number">0x367cd507</span>, <span class="number">0x3070dd17</span>, <span class="number">0xf70e5939</span>, <span class="number">0xffc00b31</span>, <span class="number">0x68581511</span>, <span class="number">0x64f98fa7</span>, <span class="number">0xbefa4fa4</span>]);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> hash = <span class="title class_">SHA256</span>.<span class="property">_doFinalize</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                hash.<span class="property">sigBytes</span> -= <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">return</span> hash;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">SHA224</span> = <span class="title class_">SHA256</span>.<span class="title function_">_createHelper</span>(<span class="title class_">SHA224</span>);</span><br><span class="line">        C.<span class="property">HmacSHA224</span> = <span class="title class_">SHA256</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">SHA224</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"><span class="literal">undefined</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base</span> = C_lib.<span class="property">Base</span>;</span><br><span class="line">        <span class="keyword">var</span> X32WordArray = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_x64 = C.<span class="property">x64</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> X64Word = C_x64.<span class="property">Word</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">high, low</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">high</span> = high;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">low</span> = low;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> X64WordArray = C_x64.<span class="property">WordArray</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">words, sigBytes</span>) &#123;</span><br><span class="line">                words = <span class="variable language_">this</span>.<span class="property">words</span> = words || [];</span><br><span class="line">                <span class="keyword">if</span> (sigBytes != <span class="literal">undefined</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">sigBytes</span> = sigBytes;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">sigBytes</span> = words.<span class="property">length</span> * <span class="number">8</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">toX32</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> x64Words = <span class="variable language_">this</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> x64WordsLength = x64Words.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">var</span> x32Words = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x64WordsLength; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> x64Word = x64Words[i];</span><br><span class="line">                    x32Words.<span class="title function_">push</span>(x64Word.<span class="property">high</span>);</span><br><span class="line">                    x32Words.<span class="title function_">push</span>(x64Word.<span class="property">low</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> X32WordArray.<span class="title function_">create</span>(x32Words, <span class="variable language_">this</span>.<span class="property">sigBytes</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Base</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="keyword">var</span> words = clone.<span class="property">words</span> = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">var</span> wordsLength = words.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; wordsLength; i++) &#123;</span><br><span class="line">                    words[i] = words[i].<span class="title function_">clone</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"><span class="built_in">Math</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_x64 = C.<span class="property">x64</span>;</span><br><span class="line">        <span class="keyword">var</span> X64Word = C_x64.<span class="property">Word</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">RHO_OFFSETS</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">PI_INDEXES</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">ROUND_CONSTANTS</span> = [];</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">1</span>,</span><br><span class="line">                y = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; <span class="number">24</span>; t++) &#123;</span><br><span class="line">                <span class="variable constant_">RHO_OFFSETS</span>[x + <span class="number">5</span> * y] = ((t + <span class="number">1</span>) * (t + <span class="number">2</span>) / <span class="number">2</span>) % <span class="number">64</span>;</span><br><span class="line">                <span class="keyword">var</span> newX = y % <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">var</span> newY = (<span class="number">2</span> * x + <span class="number">3</span> * y) % <span class="number">5</span>;</span><br><span class="line">                x = newX;</span><br><span class="line">                y = newY;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>; x &lt; <span class="number">5</span>; x++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> y = <span class="number">0</span>; y &lt; <span class="number">5</span>; y++) &#123;</span><br><span class="line">                    <span class="variable constant_">PI_INDEXES</span>[x + <span class="number">5</span> * y] = y + ((<span class="number">2</span> * x + <span class="number">3</span> * y) % <span class="number">5</span>) * <span class="number">5</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> <span class="variable constant_">LFSR</span> = <span class="number">0x01</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> roundConstantMsw = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">var</span> roundConstantLsw = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">7</span>; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable constant_">LFSR</span> &amp; <span class="number">0x01</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> bitPosition = (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (bitPosition &lt; <span class="number">32</span>) &#123;</span><br><span class="line">                            roundConstantLsw ^= <span class="number">1</span> &lt;&lt; bitPosition;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            roundConstantMsw ^= <span class="number">1</span> &lt;&lt; (bitPosition - <span class="number">32</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable constant_">LFSR</span> &amp; <span class="number">0x80</span>) &#123;</span><br><span class="line">                        <span class="variable constant_">LFSR</span> = (<span class="variable constant_">LFSR</span> &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x71</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable constant_">LFSR</span> &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable constant_">ROUND_CONSTANTS</span>[i] = X64Word.<span class="title function_">create</span>(roundConstantMsw, roundConstantLsw);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> T = [];</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++) &#123;</span><br><span class="line">                T[i] = X64Word.<span class="title function_">create</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA3</span> = C_algo.<span class="property">SHA3</span> = <span class="title class_">Hasher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Hasher</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">outputLength</span>: <span class="number">512</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> state = <span class="variable language_">this</span>.<span class="property">_state</span> = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++) &#123;</span><br><span class="line">                    state[i] = <span class="keyword">new</span> X64Word.<span class="title function_">init</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">blockSize</span> = (<span class="number">1600</span> - <span class="number">2</span> * <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">outputLength</span>) / <span class="number">32</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> state = <span class="variable language_">this</span>.<span class="property">_state</span>;</span><br><span class="line">                <span class="keyword">var</span> nBlockSizeLanes = <span class="variable language_">this</span>.<span class="property">blockSize</span> / <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nBlockSizeLanes; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> M2i = M[offset + <span class="number">2</span> * i];</span><br><span class="line">                    <span class="keyword">var</span> M2i1 = M[offset + <span class="number">2</span> * i + <span class="number">1</span>];</span><br><span class="line">                    M2i = ((((M2i &lt;&lt; <span class="number">8</span>) | (M2i &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((M2i &lt;&lt; <span class="number">24</span>) | (M2i &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                    M2i1 = ((((M2i1 &lt;&lt; <span class="number">8</span>) | (M2i1 &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((M2i1 &lt;&lt; <span class="number">24</span>) | (M2i1 &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                    <span class="keyword">var</span> lane = state[i];</span><br><span class="line">                    lane.<span class="property">high</span> ^= M2i1;</span><br><span class="line">                    lane.<span class="property">low</span> ^= M2i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> round = <span class="number">0</span>; round &lt; <span class="number">24</span>; round++) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>; x &lt; <span class="number">5</span>; x++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> tMsw = <span class="number">0</span>,</span><br><span class="line">                            tLsw = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> y = <span class="number">0</span>; y &lt; <span class="number">5</span>; y++) &#123;</span><br><span class="line">                            <span class="keyword">var</span> lane = state[x + <span class="number">5</span> * y];</span><br><span class="line">                            tMsw ^= lane.<span class="property">high</span>;</span><br><span class="line">                            tLsw ^= lane.<span class="property">low</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Tx</span> = T[x];</span><br><span class="line">                        <span class="title class_">Tx</span>.<span class="property">high</span> = tMsw;</span><br><span class="line">                        <span class="title class_">Tx</span>.<span class="property">low</span> = tLsw;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>; x &lt; <span class="number">5</span>; x++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Tx4</span> = T[(x + <span class="number">4</span>) % <span class="number">5</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Tx1</span> = T[(x + <span class="number">1</span>) % <span class="number">5</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Tx1Msw</span> = <span class="title class_">Tx1</span>.<span class="property">high</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Tx1Lsw</span> = <span class="title class_">Tx1</span>.<span class="property">low</span>;</span><br><span class="line">                        <span class="keyword">var</span> tMsw = <span class="title class_">Tx4</span>.<span class="property">high</span> ^ ((<span class="title class_">Tx1Msw</span> &lt;&lt; <span class="number">1</span>) | (<span class="title class_">Tx1Lsw</span> &gt;&gt;&gt; <span class="number">31</span>));</span><br><span class="line">                        <span class="keyword">var</span> tLsw = <span class="title class_">Tx4</span>.<span class="property">low</span> ^ ((<span class="title class_">Tx1Lsw</span> &lt;&lt; <span class="number">1</span>) | (<span class="title class_">Tx1Msw</span> &gt;&gt;&gt; <span class="number">31</span>));</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> y = <span class="number">0</span>; y &lt; <span class="number">5</span>; y++) &#123;</span><br><span class="line">                            <span class="keyword">var</span> lane = state[x + <span class="number">5</span> * y];</span><br><span class="line">                            lane.<span class="property">high</span> ^= tMsw;</span><br><span class="line">                            lane.<span class="property">low</span> ^= tLsw;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> laneIndex = <span class="number">1</span>; laneIndex &lt; <span class="number">25</span>; laneIndex++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> lane = state[laneIndex];</span><br><span class="line">                        <span class="keyword">var</span> laneMsw = lane.<span class="property">high</span>;</span><br><span class="line">                        <span class="keyword">var</span> laneLsw = lane.<span class="property">low</span>;</span><br><span class="line">                        <span class="keyword">var</span> rhoOffset = <span class="variable constant_">RHO_OFFSETS</span>[laneIndex];</span><br><span class="line">                        <span class="keyword">if</span> (rhoOffset &lt; <span class="number">32</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> tMsw = (laneMsw &lt;&lt; rhoOffset) | (laneLsw &gt;&gt;&gt; (<span class="number">32</span> - rhoOffset));</span><br><span class="line">                            <span class="keyword">var</span> tLsw = (laneLsw &lt;&lt; rhoOffset) | (laneMsw &gt;&gt;&gt; (<span class="number">32</span> - rhoOffset));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">var</span> tMsw = (laneLsw &lt;&lt; (rhoOffset - <span class="number">32</span>)) | (laneMsw &gt;&gt;&gt; (<span class="number">64</span> - rhoOffset));</span><br><span class="line">                            <span class="keyword">var</span> tLsw = (laneMsw &lt;&lt; (rhoOffset - <span class="number">32</span>)) | (laneLsw &gt;&gt;&gt; (<span class="number">64</span> - rhoOffset));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">TPiLane</span> = T[<span class="variable constant_">PI_INDEXES</span>[laneIndex]];</span><br><span class="line">                        <span class="title class_">TPiLane</span>.<span class="property">high</span> = tMsw;</span><br><span class="line">                        <span class="title class_">TPiLane</span>.<span class="property">low</span> = tLsw;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">T0</span> = T[<span class="number">0</span>];</span><br><span class="line">                    <span class="keyword">var</span> state0 = state[<span class="number">0</span>];</span><br><span class="line">                    <span class="variable constant_">T0</span>.<span class="property">high</span> = state0.<span class="property">high</span>;</span><br><span class="line">                    <span class="variable constant_">T0</span>.<span class="property">low</span> = state0.<span class="property">low</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>; x &lt; <span class="number">5</span>; x++) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> y = <span class="number">0</span>; y &lt; <span class="number">5</span>; y++) &#123;</span><br><span class="line">                            <span class="keyword">var</span> laneIndex = x + <span class="number">5</span> * y;</span><br><span class="line">                            <span class="keyword">var</span> lane = state[laneIndex];</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">TLane</span> = T[laneIndex];</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Tx1Lane</span> = T[((x + <span class="number">1</span>) % <span class="number">5</span>) + <span class="number">5</span> * y];</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Tx2Lane</span> = T[((x + <span class="number">2</span>) % <span class="number">5</span>) + <span class="number">5</span> * y];</span><br><span class="line">                            lane.<span class="property">high</span> = <span class="title class_">TLane</span>.<span class="property">high</span> ^ (~<span class="title class_">Tx1Lane</span>.<span class="property">high</span> &amp; <span class="title class_">Tx2Lane</span>.<span class="property">high</span>);</span><br><span class="line">                            lane.<span class="property">low</span> = <span class="title class_">TLane</span>.<span class="property">low</span> ^ (~<span class="title class_">Tx1Lane</span>.<span class="property">low</span> &amp; <span class="title class_">Tx2Lane</span>.<span class="property">low</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> lane = state[<span class="number">0</span>];</span><br><span class="line">                    <span class="keyword">var</span> roundConstant = <span class="variable constant_">ROUND_CONSTANTS</span>[round];</span><br><span class="line">                    lane.<span class="property">high</span> ^= roundConstant.<span class="property">high</span>;</span><br><span class="line">                    lane.<span class="property">low</span> ^= roundConstant.<span class="property">low</span>;</span><br><span class="line">                    ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsTotal = <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsLeft = data.<span class="property">sigBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> blockSizeBits = <span class="variable language_">this</span>.<span class="property">blockSize</span> * <span class="number">32</span>;</span><br><span class="line">                dataWords[nBitsLeft &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">0x1</span> &lt;&lt; (<span class="number">24</span> - nBitsLeft % <span class="number">32</span>);</span><br><span class="line">                dataWords[((<span class="title class_">Math</span>.<span class="title function_">ceil</span>((nBitsLeft + <span class="number">1</span>) / blockSizeBits) * blockSizeBits) &gt;&gt;&gt; <span class="number">5</span>) - <span class="number">1</span>] |= <span class="number">0x80</span>;</span><br><span class="line">                data.<span class="property">sigBytes</span> = dataWords.<span class="property">length</span> * <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">var</span> state = <span class="variable language_">this</span>.<span class="property">_state</span>;</span><br><span class="line">                <span class="keyword">var</span> outputLengthBytes = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">outputLength</span> / <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> outputLengthLanes = outputLengthBytes / <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> hashWords = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; outputLengthLanes; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> lane = state[i];</span><br><span class="line">                    <span class="keyword">var</span> laneMsw = lane.<span class="property">high</span>;</span><br><span class="line">                    <span class="keyword">var</span> laneLsw = lane.<span class="property">low</span>;</span><br><span class="line">                    laneMsw = ((((laneMsw &lt;&lt; <span class="number">8</span>) | (laneMsw &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((laneMsw &lt;&lt; <span class="number">24</span>) | (laneMsw &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                    laneLsw = ((((laneLsw &lt;&lt; <span class="number">8</span>) | (laneLsw &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((laneLsw &lt;&lt; <span class="number">24</span>) | (laneLsw &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>));</span><br><span class="line">                    hashWords.<span class="title function_">push</span>(laneLsw);</span><br><span class="line">                    hashWords.<span class="title function_">push</span>(laneMsw);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WordArray</span>.<span class="title function_">init</span>(hashWords, outputLengthBytes);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Hasher</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="keyword">var</span> state = clone.<span class="property">_state</span> = <span class="variable language_">this</span>.<span class="property">_state</span>.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++) &#123;</span><br><span class="line">                    state[i] = state[i].<span class="title function_">clone</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">SHA3</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">SHA3</span>);</span><br><span class="line">        C.<span class="property">HmacSHA3</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">SHA3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    (<span class="title class_">Math</span>));</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hasher</span> = C_lib.<span class="property">Hasher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_x64 = C.<span class="property">x64</span>;</span><br><span class="line">        <span class="keyword">var</span> X64Word = C_x64.<span class="property">Word</span>;</span><br><span class="line">        <span class="keyword">var</span> X64WordArray = C_x64.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">X64Word_create</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> X64Word.<span class="property">create</span>.<span class="title function_">apply</span>(X64Word, <span class="variable language_">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> K = [<span class="title function_">X64Word_create</span>(<span class="number">0x428a2f98</span>, <span class="number">0xd728ae22</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x71374491</span>, <span class="number">0x23ef65cd</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xb5c0fbcf</span>, <span class="number">0xec4d3b2f</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xe9b5dba5</span>, <span class="number">0x8189dbbc</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x3956c25b</span>, <span class="number">0xf348b538</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x59f111f1</span>, <span class="number">0xb605d019</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x923f82a4</span>, <span class="number">0xaf194f9b</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xab1c5ed5</span>, <span class="number">0xda6d8118</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xd807aa98</span>, <span class="number">0xa3030242</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x12835b01</span>, <span class="number">0x45706fbe</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x243185be</span>, <span class="number">0x4ee4b28c</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x550c7dc3</span>, <span class="number">0xd5ffb4e2</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x72be5d74</span>, <span class="number">0xf27b896f</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x80deb1fe</span>, <span class="number">0x3b1696b1</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x9bdc06a7</span>, <span class="number">0x25c71235</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xc19bf174</span>, <span class="number">0xcf692694</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xe49b69c1</span>, <span class="number">0x9ef14ad2</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xefbe4786</span>, <span class="number">0x384f25e3</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x0fc19dc6</span>, <span class="number">0x8b8cd5b5</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x240ca1cc</span>, <span class="number">0x77ac9c65</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x2de92c6f</span>, <span class="number">0x592b0275</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x4a7484aa</span>, <span class="number">0x6ea6e483</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x5cb0a9dc</span>, <span class="number">0xbd41fbd4</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x76f988da</span>, <span class="number">0x831153b5</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x983e5152</span>, <span class="number">0xee66dfab</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xa831c66d</span>, <span class="number">0x2db43210</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xb00327c8</span>, <span class="number">0x98fb213f</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xbf597fc7</span>, <span class="number">0xbeef0ee4</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xc6e00bf3</span>, <span class="number">0x3da88fc2</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xd5a79147</span>, <span class="number">0x930aa725</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x06ca6351</span>, <span class="number">0xe003826f</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x14292967</span>, <span class="number">0x0a0e6e70</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x27b70a85</span>, <span class="number">0x46d22ffc</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x2e1b2138</span>, <span class="number">0x5c26c926</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x4d2c6dfc</span>, <span class="number">0x5ac42aed</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x53380d13</span>, <span class="number">0x9d95b3df</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x650a7354</span>, <span class="number">0x8baf63de</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x766a0abb</span>, <span class="number">0x3c77b2a8</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x81c2c92e</span>, <span class="number">0x47edaee6</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x92722c85</span>, <span class="number">0x1482353b</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xa2bfe8a1</span>, <span class="number">0x4cf10364</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xa81a664b</span>, <span class="number">0xbc423001</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xc24b8b70</span>, <span class="number">0xd0f89791</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xc76c51a3</span>, <span class="number">0x0654be30</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xd192e819</span>, <span class="number">0xd6ef5218</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xd6990624</span>, <span class="number">0x5565a910</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xf40e3585</span>, <span class="number">0x5771202a</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x106aa070</span>, <span class="number">0x32bbd1b8</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x19a4c116</span>, <span class="number">0xb8d2d0c8</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x1e376c08</span>, <span class="number">0x5141ab53</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x2748774c</span>, <span class="number">0xdf8eeb99</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x34b0bcb5</span>, <span class="number">0xe19b48a8</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x391c0cb3</span>, <span class="number">0xc5c95a63</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x4ed8aa4a</span>, <span class="number">0xe3418acb</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x5b9cca4f</span>, <span class="number">0x7763e373</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x682e6ff3</span>, <span class="number">0xd6b2b8a3</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x748f82ee</span>, <span class="number">0x5defb2fc</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x78a5636f</span>, <span class="number">0x43172f60</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x84c87814</span>, <span class="number">0xa1f0ab72</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x8cc70208</span>, <span class="number">0x1a6439ec</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x90befffa</span>, <span class="number">0x23631e28</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xa4506ceb</span>, <span class="number">0xde82bde9</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xbef9a3f7</span>, <span class="number">0xb2c67915</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xc67178f2</span>, <span class="number">0xe372532b</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xca273ece</span>, <span class="number">0xea26619c</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xd186b8c7</span>, <span class="number">0x21c0c207</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xeada7dd6</span>, <span class="number">0xcde0eb1e</span>), <span class="title function_">X64Word_create</span>(<span class="number">0xf57d4f7f</span>, <span class="number">0xee6ed178</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x06f067aa</span>, <span class="number">0x72176fba</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x0a637dc5</span>, <span class="number">0xa2c898a6</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x113f9804</span>, <span class="number">0xbef90dae</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x1b710b35</span>, <span class="number">0x131c471b</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x28db77f5</span>, <span class="number">0x23047d84</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x32caab7b</span>, <span class="number">0x40c72493</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x3c9ebe0a</span>, <span class="number">0x15c9bebc</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x431d67c4</span>, <span class="number">0x9c100d4c</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x4cc5d4be</span>, <span class="number">0xcb3e42b6</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x597f299c</span>, <span class="number">0xfc657e2a</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x5fcb6fab</span>, <span class="number">0x3ad6faec</span>), <span class="title function_">X64Word_create</span>(<span class="number">0x6c44198c</span>, <span class="number">0x4a475817</span>)];</span><br><span class="line">        <span class="keyword">var</span> W = [];</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">80</span>; i++) &#123;</span><br><span class="line">                W[i] = <span class="title function_">X64Word_create</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA512</span> = C_algo.<span class="property">SHA512</span> = <span class="title class_">Hasher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> X64WordArray.<span class="title function_">init</span>([<span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x6a09e667</span>, <span class="number">0xf3bcc908</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0xbb67ae85</span>, <span class="number">0x84caa73b</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x3c6ef372</span>, <span class="number">0xfe94f82b</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0xa54ff53a</span>, <span class="number">0x5f1d36f1</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x510e527f</span>, <span class="number">0xade682d1</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x9b05688c</span>, <span class="number">0x2b3e6c1f</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x1f83d9ab</span>, <span class="number">0xfb41bd6b</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x5be0cd19</span>, <span class="number">0x137e2179</span>)]);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> H = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H0</span> = H[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H1</span> = H[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H2</span> = H[<span class="number">2</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H3</span> = H[<span class="number">3</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H4</span> = H[<span class="number">4</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H5</span> = H[<span class="number">5</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H6</span> = H[<span class="number">6</span>];</span><br><span class="line">                <span class="keyword">var</span> <span class="variable constant_">H7</span> = H[<span class="number">7</span>];</span><br><span class="line">                <span class="keyword">var</span> H0h = <span class="variable constant_">H0</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H0l = <span class="variable constant_">H0</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H1h = <span class="variable constant_">H1</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H1l = <span class="variable constant_">H1</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H2h = <span class="variable constant_">H2</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H2l = <span class="variable constant_">H2</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H3h = <span class="variable constant_">H3</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H3l = <span class="variable constant_">H3</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H4h = <span class="variable constant_">H4</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H4l = <span class="variable constant_">H4</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H5h = <span class="variable constant_">H5</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H5l = <span class="variable constant_">H5</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H6h = <span class="variable constant_">H6</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H6l = <span class="variable constant_">H6</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> H7h = <span class="variable constant_">H7</span>.<span class="property">high</span>;</span><br><span class="line">                <span class="keyword">var</span> H7l = <span class="variable constant_">H7</span>.<span class="property">low</span>;</span><br><span class="line">                <span class="keyword">var</span> ah = H0h;</span><br><span class="line">                <span class="keyword">var</span> al = H0l;</span><br><span class="line">                <span class="keyword">var</span> bh = H1h;</span><br><span class="line">                <span class="keyword">var</span> bl = H1l;</span><br><span class="line">                <span class="keyword">var</span> ch = H2h;</span><br><span class="line">                <span class="keyword">var</span> cl = H2l;</span><br><span class="line">                <span class="keyword">var</span> dh = H3h;</span><br><span class="line">                <span class="keyword">var</span> dl = H3l;</span><br><span class="line">                <span class="keyword">var</span> eh = H4h;</span><br><span class="line">                <span class="keyword">var</span> el = H4l;</span><br><span class="line">                <span class="keyword">var</span> fh = H5h;</span><br><span class="line">                <span class="keyword">var</span> fl = H5l;</span><br><span class="line">                <span class="keyword">var</span> gh = H6h;</span><br><span class="line">                <span class="keyword">var</span> gl = H6l;</span><br><span class="line">                <span class="keyword">var</span> hh = H7h;</span><br><span class="line">                <span class="keyword">var</span> hl = H7l;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">80</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> <span class="title class_">Wi</span> = W[i];</span><br><span class="line">                    <span class="keyword">if</span> (i &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wih</span> = <span class="title class_">Wi</span>.<span class="property">high</span> = M[offset + i * <span class="number">2</span>] | <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wil</span> = <span class="title class_">Wi</span>.<span class="property">low</span> = M[offset + i * <span class="number">2</span> + <span class="number">1</span>] | <span class="number">0</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> gamma0x = W[i - <span class="number">15</span>];</span><br><span class="line">                        <span class="keyword">var</span> gamma0xh = gamma0x.<span class="property">high</span>;</span><br><span class="line">                        <span class="keyword">var</span> gamma0xl = gamma0x.<span class="property">low</span>;</span><br><span class="line">                        <span class="keyword">var</span> gamma0h = ((gamma0xh &gt;&gt;&gt; <span class="number">1</span>) | (gamma0xl &lt;&lt; <span class="number">31</span>)) ^ ((gamma0xh &gt;&gt;&gt; <span class="number">8</span>) | (gamma0xl &lt;&lt; <span class="number">24</span>)) ^ (gamma0xh &gt;&gt;&gt; <span class="number">7</span>);</span><br><span class="line">                        <span class="keyword">var</span> gamma0l = ((gamma0xl &gt;&gt;&gt; <span class="number">1</span>) | (gamma0xh &lt;&lt; <span class="number">31</span>)) ^ ((gamma0xl &gt;&gt;&gt; <span class="number">8</span>) | (gamma0xh &lt;&lt; <span class="number">24</span>)) ^ ((gamma0xl &gt;&gt;&gt; <span class="number">7</span>) | (gamma0xh &lt;&lt; <span class="number">25</span>));</span><br><span class="line">                        <span class="keyword">var</span> gamma1x = W[i - <span class="number">2</span>];</span><br><span class="line">                        <span class="keyword">var</span> gamma1xh = gamma1x.<span class="property">high</span>;</span><br><span class="line">                        <span class="keyword">var</span> gamma1xl = gamma1x.<span class="property">low</span>;</span><br><span class="line">                        <span class="keyword">var</span> gamma1h = ((gamma1xh &gt;&gt;&gt; <span class="number">19</span>) | (gamma1xl &lt;&lt; <span class="number">13</span>)) ^ ((gamma1xh &lt;&lt; <span class="number">3</span>) | (gamma1xl &gt;&gt;&gt; <span class="number">29</span>)) ^ (gamma1xh &gt;&gt;&gt; <span class="number">6</span>);</span><br><span class="line">                        <span class="keyword">var</span> gamma1l = ((gamma1xl &gt;&gt;&gt; <span class="number">19</span>) | (gamma1xh &lt;&lt; <span class="number">13</span>)) ^ ((gamma1xl &lt;&lt; <span class="number">3</span>) | (gamma1xh &gt;&gt;&gt; <span class="number">29</span>)) ^ ((gamma1xl &gt;&gt;&gt; <span class="number">6</span>) | (gamma1xh &lt;&lt; <span class="number">26</span>));</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wi7</span> = W[i - <span class="number">7</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wi7</span>h = <span class="title class_">Wi7</span>.<span class="property">high</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wi7</span>l = <span class="title class_">Wi7</span>.<span class="property">low</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wi16</span> = W[i - <span class="number">16</span>];</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wi16</span>h = <span class="title class_">Wi16</span>.<span class="property">high</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wi16</span>l = <span class="title class_">Wi16</span>.<span class="property">low</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wil</span> = gamma0l + <span class="title class_">Wi7</span>l;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wih</span> = gamma0h + <span class="title class_">Wi7</span>h + ((<span class="title class_">Wil</span> &gt;&gt;&gt; <span class="number">0</span>) &lt; (gamma0l &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wil</span> = <span class="title class_">Wil</span> + gamma1l;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wih</span> = <span class="title class_">Wih</span> + gamma1h + ((<span class="title class_">Wil</span> &gt;&gt;&gt; <span class="number">0</span>) &lt; (gamma1l &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wil</span> = <span class="title class_">Wil</span> + <span class="title class_">Wi16</span>l;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Wih</span> = <span class="title class_">Wih</span> + <span class="title class_">Wi16</span>h + ((<span class="title class_">Wil</span> &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="title class_">Wi16</span>l &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                        <span class="title class_">Wi</span>.<span class="property">high</span> = <span class="title class_">Wih</span>;</span><br><span class="line">                        <span class="title class_">Wi</span>.<span class="property">low</span> = <span class="title class_">Wil</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> chh = (eh &amp; fh) ^ (~eh &amp; gh);</span><br><span class="line">                    <span class="keyword">var</span> chl = (el &amp; fl) ^ (~el &amp; gl);</span><br><span class="line">                    <span class="keyword">var</span> majh = (ah &amp; bh) ^ (ah &amp; ch) ^ (bh &amp; ch);</span><br><span class="line">                    <span class="keyword">var</span> majl = (al &amp; bl) ^ (al &amp; cl) ^ (bl &amp; cl);</span><br><span class="line">                    <span class="keyword">var</span> sigma0h = ((ah &gt;&gt;&gt; <span class="number">28</span>) | (al &lt;&lt; <span class="number">4</span>)) ^ ((ah &lt;&lt; <span class="number">30</span>) | (al &gt;&gt;&gt; <span class="number">2</span>)) ^ ((ah &lt;&lt; <span class="number">25</span>) | (al &gt;&gt;&gt; <span class="number">7</span>));</span><br><span class="line">                    <span class="keyword">var</span> sigma0l = ((al &gt;&gt;&gt; <span class="number">28</span>) | (ah &lt;&lt; <span class="number">4</span>)) ^ ((al &lt;&lt; <span class="number">30</span>) | (ah &gt;&gt;&gt; <span class="number">2</span>)) ^ ((al &lt;&lt; <span class="number">25</span>) | (ah &gt;&gt;&gt; <span class="number">7</span>));</span><br><span class="line">                    <span class="keyword">var</span> sigma1h = ((eh &gt;&gt;&gt; <span class="number">14</span>) | (el &lt;&lt; <span class="number">18</span>)) ^ ((eh &gt;&gt;&gt; <span class="number">18</span>) | (el &lt;&lt; <span class="number">14</span>)) ^ ((eh &lt;&lt; <span class="number">23</span>) | (el &gt;&gt;&gt; <span class="number">9</span>));</span><br><span class="line">                    <span class="keyword">var</span> sigma1l = ((el &gt;&gt;&gt; <span class="number">14</span>) | (eh &lt;&lt; <span class="number">18</span>)) ^ ((el &gt;&gt;&gt; <span class="number">18</span>) | (eh &lt;&lt; <span class="number">14</span>)) ^ ((el &lt;&lt; <span class="number">23</span>) | (eh &gt;&gt;&gt; <span class="number">9</span>));</span><br><span class="line">                    <span class="keyword">var</span> <span class="title class_">Ki</span> = K[i];</span><br><span class="line">                    <span class="keyword">var</span> <span class="title class_">Kih</span> = <span class="title class_">Ki</span>.<span class="property">high</span>;</span><br><span class="line">                    <span class="keyword">var</span> <span class="title class_">Kil</span> = <span class="title class_">Ki</span>.<span class="property">low</span>;</span><br><span class="line">                    <span class="keyword">var</span> t1l = hl + sigma1l;</span><br><span class="line">                    <span class="keyword">var</span> t1h = hh + sigma1h + ((t1l &gt;&gt;&gt; <span class="number">0</span>) &lt; (hl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">var</span> t1l = t1l + chl;</span><br><span class="line">                    <span class="keyword">var</span> t1h = t1h + chh + ((t1l &gt;&gt;&gt; <span class="number">0</span>) &lt; (chl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">var</span> t1l = t1l + <span class="title class_">Kil</span>;</span><br><span class="line">                    <span class="keyword">var</span> t1h = t1h + <span class="title class_">Kih</span> + ((t1l &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="title class_">Kil</span> &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">var</span> t1l = t1l + <span class="title class_">Wil</span>;</span><br><span class="line">                    <span class="keyword">var</span> t1h = t1h + <span class="title class_">Wih</span> + ((t1l &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="title class_">Wil</span> &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">var</span> t2l = sigma0l + majl;</span><br><span class="line">                    <span class="keyword">var</span> t2h = sigma0h + majh + ((t2l &gt;&gt;&gt; <span class="number">0</span>) &lt; (sigma0l &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">                    hh = gh;</span><br><span class="line">                    hl = gl;</span><br><span class="line">                    gh = fh;</span><br><span class="line">                    gl = fl;</span><br><span class="line">                    fh = eh;</span><br><span class="line">                    fl = el;</span><br><span class="line">                    el = (dl + t1l) | <span class="number">0</span>;</span><br><span class="line">                    eh = (dh + t1h + ((el &gt;&gt;&gt; <span class="number">0</span>) &lt; (dl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">                    dh = ch;</span><br><span class="line">                    dl = cl;</span><br><span class="line">                    ch = bh;</span><br><span class="line">                    cl = bl;</span><br><span class="line">                    bh = ah;</span><br><span class="line">                    bl = al;</span><br><span class="line">                    al = (t1l + t2l) | <span class="number">0</span>;</span><br><span class="line">                    ah = (t1h + t2h + ((al &gt;&gt;&gt; <span class="number">0</span>) &lt; (t1l &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                H0l = <span class="variable constant_">H0</span>.<span class="property">low</span> = (H0l + al);</span><br><span class="line">                <span class="variable constant_">H0</span>.<span class="property">high</span> = (H0h + ah + ((H0l &gt;&gt;&gt; <span class="number">0</span>) &lt; (al &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H1l = <span class="variable constant_">H1</span>.<span class="property">low</span> = (H1l + bl);</span><br><span class="line">                <span class="variable constant_">H1</span>.<span class="property">high</span> = (H1h + bh + ((H1l &gt;&gt;&gt; <span class="number">0</span>) &lt; (bl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H2l = <span class="variable constant_">H2</span>.<span class="property">low</span> = (H2l + cl);</span><br><span class="line">                <span class="variable constant_">H2</span>.<span class="property">high</span> = (H2h + ch + ((H2l &gt;&gt;&gt; <span class="number">0</span>) &lt; (cl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H3l = <span class="variable constant_">H3</span>.<span class="property">low</span> = (H3l + dl);</span><br><span class="line">                <span class="variable constant_">H3</span>.<span class="property">high</span> = (H3h + dh + ((H3l &gt;&gt;&gt; <span class="number">0</span>) &lt; (dl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H4l = <span class="variable constant_">H4</span>.<span class="property">low</span> = (H4l + el);</span><br><span class="line">                <span class="variable constant_">H4</span>.<span class="property">high</span> = (H4h + eh + ((H4l &gt;&gt;&gt; <span class="number">0</span>) &lt; (el &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H5l = <span class="variable constant_">H5</span>.<span class="property">low</span> = (H5l + fl);</span><br><span class="line">                <span class="variable constant_">H5</span>.<span class="property">high</span> = (H5h + fh + ((H5l &gt;&gt;&gt; <span class="number">0</span>) &lt; (fl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H6l = <span class="variable constant_">H6</span>.<span class="property">low</span> = (H6l + gl);</span><br><span class="line">                <span class="variable constant_">H6</span>.<span class="property">high</span> = (H6h + gh + ((H6l &gt;&gt;&gt; <span class="number">0</span>) &lt; (gl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">                H7l = <span class="variable constant_">H7</span>.<span class="property">low</span> = (H7l + hl);</span><br><span class="line">                <span class="variable constant_">H7</span>.<span class="property">high</span> = (H7h + hh + ((H7l &gt;&gt;&gt; <span class="number">0</span>) &lt; (hl &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>));</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="variable language_">this</span>.<span class="property">_data</span>;</span><br><span class="line">                <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsTotal = <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> * <span class="number">8</span>;</span><br><span class="line">                <span class="keyword">var</span> nBitsLeft = data.<span class="property">sigBytes</span> * <span class="number">8</span>;</span><br><span class="line">                dataWords[nBitsLeft &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - nBitsLeft % <span class="number">32</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">128</span>) &gt;&gt;&gt; <span class="number">10</span>) &lt;&lt; <span class="number">5</span>) + <span class="number">30</span>] = <span class="title class_">Math</span>.<span class="title function_">floor</span>(nBitsTotal / <span class="number">0x100000000</span>);</span><br><span class="line">                dataWords[(((nBitsLeft + <span class="number">128</span>) &gt;&gt;&gt; <span class="number">10</span>) &lt;&lt; <span class="number">5</span>) + <span class="number">31</span>] = nBitsTotal;</span><br><span class="line">                data.<span class="property">sigBytes</span> = dataWords.<span class="property">length</span> * <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">                <span class="keyword">var</span> hash = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">toX32</span>();</span><br><span class="line">                <span class="keyword">return</span> hash;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clone = <span class="title class_">Hasher</span>.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                clone.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>();</span><br><span class="line">                <span class="keyword">return</span> clone;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">1024</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">SHA512</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">SHA512</span>);</span><br><span class="line">        C.<span class="property">HmacSHA512</span> = <span class="title class_">Hasher</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">SHA512</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_x64 = C.<span class="property">x64</span>;</span><br><span class="line">        <span class="keyword">var</span> X64Word = C_x64.<span class="property">Word</span>;</span><br><span class="line">        <span class="keyword">var</span> X64WordArray = C_x64.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA512</span> = C_algo.<span class="property">SHA512</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SHA384</span> = C_algo.<span class="property">SHA384</span> = <span class="title class_">SHA512</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> X64WordArray.<span class="title function_">init</span>([<span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0xcbbb9d5d</span>, <span class="number">0xc1059ed8</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x629a292a</span>, <span class="number">0x367cd507</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x9159015a</span>, <span class="number">0x3070dd17</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x152fecd8</span>, <span class="number">0xf70e5939</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x67332667</span>, <span class="number">0xffc00b31</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x8eb44a87</span>, <span class="number">0x68581511</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0xdb0c2e0d</span>, <span class="number">0x64f98fa7</span>), <span class="keyword">new</span> X64Word.<span class="title function_">init</span>(<span class="number">0x47b5481d</span>, <span class="number">0xbefa4fa4</span>)]);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> hash = <span class="title class_">SHA512</span>.<span class="property">_doFinalize</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                hash.<span class="property">sigBytes</span> -= <span class="number">16</span>;</span><br><span class="line">                <span class="keyword">return</span> hash;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">SHA384</span> = <span class="title class_">SHA512</span>.<span class="title function_">_createHelper</span>(<span class="title class_">SHA384</span>);</span><br><span class="line">        C.<span class="property">HmacSHA384</span> = <span class="title class_">SHA512</span>.<span class="title function_">_createHmacHelper</span>(<span class="title class_">SHA384</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">Cipher</span> || (<span class="keyword">function</span> (<span class="params"><span class="literal">undefined</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base</span> = C_lib.<span class="property">Base</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">BufferedBlockAlgorithm</span> = C_lib.<span class="property">BufferedBlockAlgorithm</span>;</span><br><span class="line">        <span class="keyword">var</span> C_enc = C.<span class="property">enc</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Utf8</span> = C_enc.<span class="property">Utf8</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Base64</span> = C_enc.<span class="property">Base64</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">EvpKDF</span> = C_algo.<span class="property">EvpKDF</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Cipher</span> = C_lib.<span class="property">Cipher</span> = <span class="title class_">BufferedBlockAlgorithm</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Base</span>.<span class="title function_">extend</span>(),</span><br><span class="line">            <span class="attr">createEncryptor</span>: <span class="keyword">function</span> (<span class="params">key, cfg</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">create</span>(<span class="variable language_">this</span>.<span class="property">_ENC_XFORM_MODE</span>, key, cfg);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">createDecryptor</span>: <span class="keyword">function</span> (<span class="params">key, cfg</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">create</span>(<span class="variable language_">this</span>.<span class="property">_DEC_XFORM_MODE</span>, key, cfg);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">xformMode, key, cfg</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_xformMode</span> = xformMode;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_key</span> = key;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">reset</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="title class_">BufferedBlockAlgorithm</span>.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_doReset</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">process</span>: <span class="keyword">function</span> (<span class="params">dataUpdate</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_append</span>(dataUpdate);</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_process</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">finalize</span>: <span class="keyword">function</span> (<span class="params">dataUpdate</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dataUpdate) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">_append</span>(dataUpdate);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> finalProcessedData = <span class="variable language_">this</span>.<span class="title function_">_doFinalize</span>();</span><br><span class="line">                <span class="keyword">return</span> finalProcessedData;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">keySize</span>: <span class="number">128</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">128</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">_ENC_XFORM_MODE</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">_DEC_XFORM_MODE</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">_createHelper</span>: (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">function</span> <span class="title function_">selectCipherStrategy</span>(<span class="params">key</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">typeof</span> key == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="title class_">PasswordBasedCipher</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="title class_">SerializableCipher</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">cipher</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> &#123;</span><br><span class="line">                        <span class="attr">encrypt</span>: <span class="keyword">function</span> (<span class="params">message, key, cfg</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title function_">selectCipherStrategy</span>(key).<span class="title function_">encrypt</span>(cipher, message, key, cfg);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">decrypt</span>: <span class="keyword">function</span> (<span class="params">ciphertext, key, cfg</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title function_">selectCipherStrategy</span>(key).<span class="title function_">decrypt</span>(cipher, ciphertext, key, cfg);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            ())</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">StreamCipher</span> = C_lib.<span class="property">StreamCipher</span> = <span class="title class_">Cipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> finalProcessedBlocks = <span class="variable language_">this</span>.<span class="title function_">_process</span>(!!<span class="string">&#x27;flush&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> finalProcessedBlocks;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">1</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> C_mode = C.<span class="property">mode</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">BlockCipherMode</span> = C_lib.<span class="property">BlockCipherMode</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">createEncryptor</span>: <span class="keyword">function</span> (<span class="params">cipher, iv</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">Encryptor</span>.<span class="title function_">create</span>(cipher, iv);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">createDecryptor</span>: <span class="keyword">function</span> (<span class="params">cipher, iv</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">Decryptor</span>.<span class="title function_">create</span>(cipher, iv);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">cipher, iv</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_cipher</span> = cipher;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_iv</span> = iv;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">CBC</span> = C_mode.<span class="property">CBC</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> <span class="variable constant_">CBC</span> = <span class="title class_">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line">            <span class="variable constant_">CBC</span>.<span class="property">Encryptor</span> = <span class="variable constant_">CBC</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span>;</span><br><span class="line">                    <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                    xorBlock.<span class="title function_">call</span>(<span class="variable language_">this</span>, words, offset, blockSize);</span><br><span class="line">                    cipher.<span class="title function_">encryptBlock</span>(words, offset);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_prevBlock</span> = words.<span class="title function_">slice</span>(offset, offset + blockSize);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable constant_">CBC</span>.<span class="property">Decryptor</span> = <span class="variable constant_">CBC</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span>;</span><br><span class="line">                    <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                    <span class="keyword">var</span> thisBlock = words.<span class="title function_">slice</span>(offset, offset + blockSize);</span><br><span class="line">                    cipher.<span class="title function_">decryptBlock</span>(words, offset);</span><br><span class="line">                    xorBlock.<span class="title function_">call</span>(<span class="variable language_">this</span>, words, offset, blockSize);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_prevBlock</span> = thisBlock;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">xorBlock</span>(<span class="params">words, offset, blockSize</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">_iv</span>;</span><br><span class="line">                <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                    <span class="keyword">var</span> block = iv;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_iv</span> = <span class="literal">undefined</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> block = <span class="variable language_">this</span>.<span class="property">_prevBlock</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; blockSize; i++) &#123;</span><br><span class="line">                    words[offset + i] ^= block[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable constant_">CBC</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> C_pad = C.<span class="property">pad</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Pkcs7</span> = C_pad.<span class="property">Pkcs7</span> = &#123;</span><br><span class="line">            <span class="attr">pad</span>: <span class="keyword">function</span> (<span class="params">data, blockSize</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">var</span> nPaddingBytes = blockSizeBytes - data.<span class="property">sigBytes</span> % blockSizeBytes;</span><br><span class="line">                <span class="keyword">var</span> paddingWord = (nPaddingBytes &lt;&lt; <span class="number">24</span>) | (nPaddingBytes &lt;&lt; <span class="number">16</span>) | (nPaddingBytes &lt;&lt; <span class="number">8</span>) | nPaddingBytes;</span><br><span class="line">                <span class="keyword">var</span> paddingWords = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nPaddingBytes; i += <span class="number">4</span>) &#123;</span><br><span class="line">                    paddingWords.<span class="title function_">push</span>(paddingWord);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> padding = <span class="title class_">WordArray</span>.<span class="title function_">create</span>(paddingWords, nPaddingBytes);</span><br><span class="line">                data.<span class="title function_">concat</span>(padding);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">unpad</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> nPaddingBytes = data.<span class="property">words</span>[(data.<span class="property">sigBytes</span> - <span class="number">1</span>) &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">                data.<span class="property">sigBytes</span> -= nPaddingBytes;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">BlockCipher</span> = C_lib.<span class="property">BlockCipher</span> = <span class="title class_">Cipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Cipher</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">mode</span>: <span class="variable constant_">CBC</span>,</span><br><span class="line">                <span class="attr">padding</span>: <span class="title class_">Pkcs7</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="title class_">Cipher</span>.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="keyword">var</span> cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>;</span><br><span class="line">                <span class="keyword">var</span> iv = cfg.<span class="property">iv</span>;</span><br><span class="line">                <span class="keyword">var</span> mode = cfg.<span class="property">mode</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_xformMode</span> == <span class="variable language_">this</span>.<span class="property">_ENC_XFORM_MODE</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> modeCreator = mode.<span class="property">createEncryptor</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> modeCreator = mode.<span class="property">createDecryptor</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_minBufferSize</span> = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_mode</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_mode</span>.<span class="property">__creator</span> == modeCreator) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_mode</span>.<span class="title function_">init</span>(<span class="variable language_">this</span>, iv &amp;&amp; iv.<span class="property">words</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_mode</span> = modeCreator.<span class="title function_">call</span>(mode, <span class="variable language_">this</span>, iv &amp;&amp; iv.<span class="property">words</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_mode</span>.<span class="property">__creator</span> = modeCreator;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_mode</span>.<span class="title function_">processBlock</span>(words, offset);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> padding = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">padding</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_xformMode</span> == <span class="variable language_">this</span>.<span class="property">_ENC_XFORM_MODE</span>) &#123;</span><br><span class="line">                    padding.<span class="title function_">pad</span>(<span class="variable language_">this</span>.<span class="property">_data</span>, <span class="variable language_">this</span>.<span class="property">blockSize</span>);</span><br><span class="line">                    <span class="keyword">var</span> finalProcessedBlocks = <span class="variable language_">this</span>.<span class="title function_">_process</span>(!!<span class="string">&#x27;flush&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> finalProcessedBlocks = <span class="variable language_">this</span>.<span class="title function_">_process</span>(!!<span class="string">&#x27;flush&#x27;</span>);</span><br><span class="line">                    padding.<span class="title function_">unpad</span>(finalProcessedBlocks);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> finalProcessedBlocks;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">128</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">CipherParams</span> = C_lib.<span class="property">CipherParams</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">cipherParams</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">mixIn</span>(cipherParams);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">toString</span>: <span class="keyword">function</span> (<span class="params">formatter</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> (formatter || <span class="variable language_">this</span>.<span class="property">formatter</span>).<span class="title function_">stringify</span>(<span class="variable language_">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> C_format = C.<span class="property">format</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">OpenSSLFormatter</span> = C_format.<span class="property">OpenSSL</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">cipherParams</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> ciphertext = cipherParams.<span class="property">ciphertext</span>;</span><br><span class="line">                <span class="keyword">var</span> salt = cipherParams.<span class="property">salt</span>;</span><br><span class="line">                <span class="keyword">if</span> (salt) &#123;</span><br><span class="line">                    <span class="keyword">var</span> wordArray = <span class="title class_">WordArray</span>.<span class="title function_">create</span>([<span class="number">0x53616c74</span>, <span class="number">0x65645f5f</span>]).<span class="title function_">concat</span>(salt).<span class="title function_">concat</span>(ciphertext);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> wordArray = ciphertext;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> wordArray.<span class="title function_">toString</span>(<span class="title class_">Base64</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">openSSLStr</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> ciphertext = <span class="title class_">Base64</span>.<span class="title function_">parse</span>(openSSLStr);</span><br><span class="line">                <span class="keyword">var</span> ciphertextWords = ciphertext.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">if</span> (ciphertextWords[<span class="number">0</span>] == <span class="number">0x53616c74</span> &amp;&amp; ciphertextWords[<span class="number">1</span>] == <span class="number">0x65645f5f</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> salt = <span class="title class_">WordArray</span>.<span class="title function_">create</span>(ciphertextWords.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">                    ciphertextWords.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">                    ciphertext.<span class="property">sigBytes</span> -= <span class="number">16</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">CipherParams</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">                    <span class="attr">ciphertext</span>: ciphertext,</span><br><span class="line">                    <span class="attr">salt</span>: salt</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">SerializableCipher</span> = C_lib.<span class="property">SerializableCipher</span> = <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">Base</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">format</span>: <span class="title class_">OpenSSLFormatter</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">encrypt</span>: <span class="keyword">function</span> (<span class="params">cipher, message, key, cfg</span>) &#123;</span><br><span class="line">                cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">                <span class="keyword">var</span> encryptor = cipher.<span class="title function_">createEncryptor</span>(key, cfg);</span><br><span class="line">                <span class="keyword">var</span> ciphertext = encryptor.<span class="title function_">finalize</span>(message);</span><br><span class="line">                <span class="keyword">var</span> cipherCfg = encryptor.<span class="property">cfg</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">CipherParams</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">                    <span class="attr">ciphertext</span>: ciphertext,</span><br><span class="line">                    <span class="attr">key</span>: key,</span><br><span class="line">                    <span class="attr">iv</span>: cipherCfg.<span class="property">iv</span>,</span><br><span class="line">                    <span class="attr">algorithm</span>: cipher,</span><br><span class="line">                    <span class="attr">mode</span>: cipherCfg.<span class="property">mode</span>,</span><br><span class="line">                    <span class="attr">padding</span>: cipherCfg.<span class="property">padding</span>,</span><br><span class="line">                    <span class="attr">blockSize</span>: cipher.<span class="property">blockSize</span>,</span><br><span class="line">                    <span class="attr">formatter</span>: cfg.<span class="property">format</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">decrypt</span>: <span class="keyword">function</span> (<span class="params">cipher, ciphertext, key, cfg</span>) &#123;</span><br><span class="line">                cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">                ciphertext = <span class="variable language_">this</span>.<span class="title function_">_parse</span>(ciphertext, cfg.<span class="property">format</span>);</span><br><span class="line">                <span class="keyword">var</span> plaintext = cipher.<span class="title function_">createDecryptor</span>(key, cfg).<span class="title function_">finalize</span>(ciphertext.<span class="property">ciphertext</span>);</span><br><span class="line">                <span class="keyword">return</span> plaintext;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_parse</span>: <span class="keyword">function</span> (<span class="params">ciphertext, format</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> ciphertext == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> format.<span class="title function_">parse</span>(ciphertext, <span class="variable language_">this</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> ciphertext;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> C_kdf = C.<span class="property">kdf</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">OpenSSLKdf</span> = C_kdf.<span class="property">OpenSSL</span> = &#123;</span><br><span class="line">            <span class="attr">execute</span>: <span class="keyword">function</span> (<span class="params">password, keySize, ivSize, salt</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!salt) &#123;</span><br><span class="line">                    salt = <span class="title class_">WordArray</span>.<span class="title function_">random</span>(<span class="number">64</span> / <span class="number">8</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> key = <span class="title class_">EvpKDF</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">                    <span class="attr">keySize</span>: keySize + ivSize</span><br><span class="line">                &#125;).<span class="title function_">compute</span>(password, salt);</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="title class_">WordArray</span>.<span class="title function_">create</span>(key.<span class="property">words</span>.<span class="title function_">slice</span>(keySize), ivSize * <span class="number">4</span>);</span><br><span class="line">                key.<span class="property">sigBytes</span> = keySize * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">CipherParams</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">                    <span class="attr">key</span>: key,</span><br><span class="line">                    <span class="attr">iv</span>: iv,</span><br><span class="line">                    <span class="attr">salt</span>: salt</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">PasswordBasedCipher</span> = C_lib.<span class="property">PasswordBasedCipher</span> = <span class="title class_">SerializableCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">SerializableCipher</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">kdf</span>: <span class="title class_">OpenSSLKdf</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">encrypt</span>: <span class="keyword">function</span> (<span class="params">cipher, message, password, cfg</span>) &#123;</span><br><span class="line">                cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">                <span class="keyword">var</span> derivedParams = cfg.<span class="property">kdf</span>.<span class="title function_">execute</span>(password, cipher.<span class="property">keySize</span>, cipher.<span class="property">ivSize</span>);</span><br><span class="line">                cfg.<span class="property">iv</span> = derivedParams.<span class="property">iv</span>;</span><br><span class="line">                <span class="keyword">var</span> ciphertext = <span class="title class_">SerializableCipher</span>.<span class="property">encrypt</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, cipher, message, derivedParams.<span class="property">key</span>, cfg);</span><br><span class="line">                ciphertext.<span class="title function_">mixIn</span>(derivedParams);</span><br><span class="line">                <span class="keyword">return</span> ciphertext;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">decrypt</span>: <span class="keyword">function</span> (<span class="params">cipher, ciphertext, password, cfg</span>) &#123;</span><br><span class="line">                cfg = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(cfg);</span><br><span class="line">                ciphertext = <span class="variable language_">this</span>.<span class="title function_">_parse</span>(ciphertext, cfg.<span class="property">format</span>);</span><br><span class="line">                <span class="keyword">var</span> derivedParams = cfg.<span class="property">kdf</span>.<span class="title function_">execute</span>(password, cipher.<span class="property">keySize</span>, cipher.<span class="property">ivSize</span>, ciphertext.<span class="property">salt</span>);</span><br><span class="line">                cfg.<span class="property">iv</span> = derivedParams.<span class="property">iv</span>;</span><br><span class="line">                <span class="keyword">var</span> plaintext = <span class="title class_">SerializableCipher</span>.<span class="property">decrypt</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, cipher, ciphertext, derivedParams.<span class="property">key</span>, cfg);</span><br><span class="line">                <span class="keyword">return</span> plaintext;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CFB</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">CFB</span> = <span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line">        <span class="variable constant_">CFB</span>.<span class="property">Encryptor</span> = <span class="variable constant_">CFB</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span>;</span><br><span class="line">                <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                generateKeystreamAndEncrypt.<span class="title function_">call</span>(<span class="variable language_">this</span>, words, offset, blockSize, cipher);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_prevBlock</span> = words.<span class="title function_">slice</span>(offset, offset + blockSize);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable constant_">CFB</span>.<span class="property">Decryptor</span> = <span class="variable constant_">CFB</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span>;</span><br><span class="line">                <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                <span class="keyword">var</span> thisBlock = words.<span class="title function_">slice</span>(offset, offset + blockSize);</span><br><span class="line">                generateKeystreamAndEncrypt.<span class="title function_">call</span>(<span class="variable language_">this</span>, words, offset, blockSize, cipher);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_prevBlock</span> = thisBlock;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">generateKeystreamAndEncrypt</span>(<span class="params">words, offset, blockSize, cipher</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">_iv</span>;</span><br><span class="line">            <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                <span class="keyword">var</span> keystream = iv.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_iv</span> = <span class="literal">undefined</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> keystream = <span class="variable language_">this</span>.<span class="property">_prevBlock</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cipher.<span class="title function_">encryptBlock</span>(keystream, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; blockSize; i++) &#123;</span><br><span class="line">                words[offset + i] ^= keystream[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">CFB</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">ECB</span> = <span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line">        <span class="variable constant_">ECB</span>.<span class="property">Encryptor</span> = <span class="variable constant_">ECB</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_cipher</span>.<span class="title function_">encryptBlock</span>(words, offset);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable constant_">ECB</span>.<span class="property">Decryptor</span> = <span class="variable constant_">ECB</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_cipher</span>.<span class="title function_">decryptBlock</span>(words, offset);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">ECB</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">AnsiX923</span> = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="keyword">function</span> (<span class="params">data, blockSize</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> dataSigBytes = data.<span class="property">sigBytes</span>;</span><br><span class="line">            <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">var</span> nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;</span><br><span class="line">            <span class="keyword">var</span> lastBytePos = dataSigBytes + nPaddingBytes - <span class="number">1</span>;</span><br><span class="line">            data.<span class="title function_">clamp</span>();</span><br><span class="line">            data.<span class="property">words</span>[lastBytePos &gt;&gt;&gt; <span class="number">2</span>] |= nPaddingBytes &lt;&lt; (<span class="number">24</span> - (lastBytePos % <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            data.<span class="property">sigBytes</span> += nPaddingBytes;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">unpad</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> nPaddingBytes = data.<span class="property">words</span>[(data.<span class="property">sigBytes</span> - <span class="number">1</span>) &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">            data.<span class="property">sigBytes</span> -= nPaddingBytes;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Iso10126</span> = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="keyword">function</span> (<span class="params">data, blockSize</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">var</span> nPaddingBytes = blockSizeBytes - data.<span class="property">sigBytes</span> % blockSizeBytes;</span><br><span class="line">            data.<span class="title function_">concat</span>(<span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">WordArray</span>.<span class="title function_">random</span>(nPaddingBytes - <span class="number">1</span>)).<span class="title function_">concat</span>(<span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">WordArray</span>.<span class="title function_">create</span>([nPaddingBytes &lt;&lt; <span class="number">24</span>], <span class="number">1</span>));</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">unpad</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> nPaddingBytes = data.<span class="property">words</span>[(data.<span class="property">sigBytes</span> - <span class="number">1</span>) &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">0xff</span>;</span><br><span class="line">            data.<span class="property">sigBytes</span> -= nPaddingBytes;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Iso97971</span> = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="keyword">function</span> (<span class="params">data, blockSize</span>) &#123;</span><br><span class="line">            data.<span class="title function_">concat</span>(<span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">WordArray</span>.<span class="title function_">create</span>([<span class="number">0x80000000</span>], <span class="number">1</span>));</span><br><span class="line">            <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">ZeroPadding</span>.<span class="title function_">pad</span>(data, blockSize);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">unpad</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">ZeroPadding</span>.<span class="title function_">unpad</span>(data);</span><br><span class="line">            data.<span class="property">sigBytes</span>--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">OFB</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">OFB</span> = <span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Encryptor</span> = <span class="variable constant_">OFB</span>.<span class="property">Encryptor</span> = <span class="variable constant_">OFB</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span></span><br><span class="line">                <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">_iv</span>;</span><br><span class="line">                <span class="keyword">var</span> keystream = <span class="variable language_">this</span>.<span class="property">_keystream</span>;</span><br><span class="line">                <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                    keystream = <span class="variable language_">this</span>.<span class="property">_keystream</span> = iv.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_iv</span> = <span class="literal">undefined</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cipher.<span class="title function_">encryptBlock</span>(keystream, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; blockSize; i++) &#123;</span><br><span class="line">                    words[offset + i] ^= keystream[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable constant_">OFB</span>.<span class="property">Decryptor</span> = <span class="title class_">Encryptor</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">OFB</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">NoPadding</span> = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">unpad</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"><span class="literal">undefined</span></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">CipherParams</span> = C_lib.<span class="property">CipherParams</span>;</span><br><span class="line">        <span class="keyword">var</span> C_enc = C.<span class="property">enc</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Hex</span> = C_enc.<span class="property">Hex</span>;</span><br><span class="line">        <span class="keyword">var</span> C_format = C.<span class="property">format</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">HexFormatter</span> = C_format.<span class="property">Hex</span> = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">cipherParams</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> cipherParams.<span class="property">ciphertext</span>.<span class="title function_">toString</span>(<span class="title class_">Hex</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">input</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> ciphertext = <span class="title class_">Hex</span>.<span class="title function_">parse</span>(input);</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">CipherParams</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">                    <span class="attr">ciphertext</span>: ciphertext</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">BlockCipher</span> = C_lib.<span class="property">BlockCipher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SBOX</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">INV_SBOX</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SUB_MIX_0</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SUB_MIX_1</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SUB_MIX_2</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SUB_MIX_3</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">INV_SUB_MIX_0</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">INV_SUB_MIX_1</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">INV_SUB_MIX_2</span> = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">INV_SUB_MIX_3</span> = [];</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> d = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">128</span>) &#123;</span><br><span class="line">                    d[i] = i &lt;&lt; <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    d[i] = (i &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x11b</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> xi = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> sx = xi ^ (xi &lt;&lt; <span class="number">1</span>) ^ (xi &lt;&lt; <span class="number">2</span>) ^ (xi &lt;&lt; <span class="number">3</span>) ^ (xi &lt;&lt; <span class="number">4</span>);</span><br><span class="line">                sx = (sx &gt;&gt;&gt; <span class="number">8</span>) ^ (sx &amp; <span class="number">0xff</span>) ^ <span class="number">0x63</span>;</span><br><span class="line">                <span class="variable constant_">SBOX</span>[x] = sx;</span><br><span class="line">                <span class="variable constant_">INV_SBOX</span>[sx] = x;</span><br><span class="line">                <span class="keyword">var</span> x2 = d[x];</span><br><span class="line">                <span class="keyword">var</span> x4 = d[x2];</span><br><span class="line">                <span class="keyword">var</span> x8 = d[x4];</span><br><span class="line">                <span class="keyword">var</span> t = (d[sx] * <span class="number">0x101</span>) ^ (sx * <span class="number">0x1010100</span>);</span><br><span class="line">                <span class="variable constant_">SUB_MIX_0</span>[x] = (t &lt;&lt; <span class="number">24</span>) | (t &gt;&gt;&gt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable constant_">SUB_MIX_1</span>[x] = (t &lt;&lt; <span class="number">16</span>) | (t &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable constant_">SUB_MIX_2</span>[x] = (t &lt;&lt; <span class="number">8</span>) | (t &gt;&gt;&gt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable constant_">SUB_MIX_3</span>[x] = t;</span><br><span class="line">                <span class="keyword">var</span> t = (x8 * <span class="number">0x1010101</span>) ^ (x4 * <span class="number">0x10001</span>) ^ (x2 * <span class="number">0x101</span>) ^ (x * <span class="number">0x1010100</span>);</span><br><span class="line">                <span class="variable constant_">INV_SUB_MIX_0</span>[sx] = (t &lt;&lt; <span class="number">24</span>) | (t &gt;&gt;&gt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable constant_">INV_SUB_MIX_1</span>[sx] = (t &lt;&lt; <span class="number">16</span>) | (t &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable constant_">INV_SUB_MIX_2</span>[sx] = (t &lt;&lt; <span class="number">8</span>) | (t &gt;&gt;&gt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable constant_">INV_SUB_MIX_3</span>[sx] = t;</span><br><span class="line">                <span class="keyword">if</span> (!x) &#123;</span><br><span class="line">                    x = xi = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    x = x2 ^ d[d[d[x8 ^ x2]]];</span><br><span class="line">                    xi ^= d[d[xi]];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ());</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">RCON</span> = [<span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">AES</span> = C_algo.<span class="property">AES</span> = <span class="title class_">BlockCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_nRounds</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_keyPriorReset</span> === <span class="variable language_">this</span>.<span class="property">_key</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> key = <span class="variable language_">this</span>.<span class="property">_keyPriorReset</span> = <span class="variable language_">this</span>.<span class="property">_key</span>;</span><br><span class="line">                <span class="keyword">var</span> keyWords = key.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> keySize = key.<span class="property">sigBytes</span> / <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">var</span> nRounds = <span class="variable language_">this</span>.<span class="property">_nRounds</span> = keySize + <span class="number">6</span>;</span><br><span class="line">                <span class="keyword">var</span> ksRows = (nRounds + <span class="number">1</span>) * <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">var</span> keySchedule = <span class="variable language_">this</span>.<span class="property">_keySchedule</span> = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> ksRow = <span class="number">0</span>; ksRow &lt; ksRows; ksRow++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (ksRow &lt; keySize) &#123;</span><br><span class="line">                        keySchedule[ksRow] = keyWords[ksRow];</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> t = keySchedule[ksRow - <span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">if</span> (!(ksRow % keySize)) &#123;</span><br><span class="line">                            t = (t &lt;&lt; <span class="number">8</span>) | (t &gt;&gt;&gt; <span class="number">24</span>);</span><br><span class="line">                            t = (<span class="variable constant_">SBOX</span>[t &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">SBOX</span>[(t &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">16</span>) | (<span class="variable constant_">SBOX</span>[(t &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">8</span>) | <span class="variable constant_">SBOX</span>[t &amp; <span class="number">0xff</span>];</span><br><span class="line">                            t ^= <span class="variable constant_">RCON</span>[(ksRow / keySize) | <span class="number">0</span>] &lt;&lt; <span class="number">24</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (keySize &gt; <span class="number">6</span> &amp;&amp; ksRow % keySize == <span class="number">4</span>) &#123;</span><br><span class="line">                            t = (<span class="variable constant_">SBOX</span>[t &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">SBOX</span>[(t &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">16</span>) | (<span class="variable constant_">SBOX</span>[(t &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">8</span>) | <span class="variable constant_">SBOX</span>[t &amp; <span class="number">0xff</span>];</span><br><span class="line">                        &#125;</span><br><span class="line">                        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> invKeySchedule = <span class="variable language_">this</span>.<span class="property">_invKeySchedule</span> = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> invKsRow = <span class="number">0</span>; invKsRow &lt; ksRows; invKsRow++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> ksRow = ksRows - invKsRow;</span><br><span class="line">                    <span class="keyword">if</span> (invKsRow % <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> t = keySchedule[ksRow];</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> t = keySchedule[ksRow - <span class="number">4</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (invKsRow &lt; <span class="number">4</span> || ksRow &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">                        invKeySchedule[invKsRow] = t;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        invKeySchedule[invKsRow] = <span class="variable constant_">INV_SUB_MIX_0</span>[<span class="variable constant_">SBOX</span>[t &gt;&gt;&gt; <span class="number">24</span>]] ^ <span class="variable constant_">INV_SUB_MIX_1</span>[<span class="variable constant_">SBOX</span>[(t &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>]] ^ <span class="variable constant_">INV_SUB_MIX_2</span>[<span class="variable constant_">SBOX</span>[(t &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>]] ^ <span class="variable constant_">INV_SUB_MIX_3</span>[<span class="variable constant_">SBOX</span>[t &amp; <span class="number">0xff</span>]];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">encryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(M, offset, <span class="variable language_">this</span>.<span class="property">_keySchedule</span>, <span class="variable constant_">SUB_MIX_0</span>, <span class="variable constant_">SUB_MIX_1</span>, <span class="variable constant_">SUB_MIX_2</span>, <span class="variable constant_">SUB_MIX_3</span>, <span class="variable constant_">SBOX</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">decryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> t = M[offset + <span class="number">1</span>];</span><br><span class="line">                M[offset + <span class="number">1</span>] = M[offset + <span class="number">3</span>];</span><br><span class="line">                M[offset + <span class="number">3</span>] = t;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(M, offset, <span class="variable language_">this</span>.<span class="property">_invKeySchedule</span>, <span class="variable constant_">INV_SUB_MIX_0</span>, <span class="variable constant_">INV_SUB_MIX_1</span>, <span class="variable constant_">INV_SUB_MIX_2</span>, <span class="variable constant_">INV_SUB_MIX_3</span>, <span class="variable constant_">INV_SBOX</span>);</span><br><span class="line">                <span class="keyword">var</span> t = M[offset + <span class="number">1</span>];</span><br><span class="line">                M[offset + <span class="number">1</span>] = M[offset + <span class="number">3</span>];</span><br><span class="line">                M[offset + <span class="number">3</span>] = t;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doCryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> nRounds = <span class="variable language_">this</span>.<span class="property">_nRounds</span>;</span><br><span class="line">                <span class="keyword">var</span> s0 = M[offset] ^ keySchedule[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">var</span> s1 = M[offset + <span class="number">1</span>] ^ keySchedule[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> s2 = M[offset + <span class="number">2</span>] ^ keySchedule[<span class="number">2</span>];</span><br><span class="line">                <span class="keyword">var</span> s3 = M[offset + <span class="number">3</span>] ^ keySchedule[<span class="number">3</span>];</span><br><span class="line">                <span class="keyword">var</span> ksRow = <span class="number">4</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> round = <span class="number">1</span>; round &lt; nRounds; round++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> t0 = <span class="variable constant_">SUB_MIX_0</span>[s0 &gt;&gt;&gt; <span class="number">24</span>] ^ <span class="variable constant_">SUB_MIX_1</span>[(s1 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_2</span>[(s2 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_3</span>[s3 &amp; <span class="number">0xff</span>] ^ keySchedule[ksRow++];</span><br><span class="line">                    <span class="keyword">var</span> t1 = <span class="variable constant_">SUB_MIX_0</span>[s1 &gt;&gt;&gt; <span class="number">24</span>] ^ <span class="variable constant_">SUB_MIX_1</span>[(s2 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_2</span>[(s3 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_3</span>[s0 &amp; <span class="number">0xff</span>] ^ keySchedule[ksRow++];</span><br><span class="line">                    <span class="keyword">var</span> t2 = <span class="variable constant_">SUB_MIX_0</span>[s2 &gt;&gt;&gt; <span class="number">24</span>] ^ <span class="variable constant_">SUB_MIX_1</span>[(s3 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_2</span>[(s0 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_3</span>[s1 &amp; <span class="number">0xff</span>] ^ keySchedule[ksRow++];</span><br><span class="line">                    <span class="keyword">var</span> t3 = <span class="variable constant_">SUB_MIX_0</span>[s3 &gt;&gt;&gt; <span class="number">24</span>] ^ <span class="variable constant_">SUB_MIX_1</span>[(s0 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_2</span>[(s1 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ <span class="variable constant_">SUB_MIX_3</span>[s2 &amp; <span class="number">0xff</span>] ^ keySchedule[ksRow++];</span><br><span class="line">                    s0 = t0;</span><br><span class="line">                    s1 = t1;</span><br><span class="line">                    s2 = t2;</span><br><span class="line">                    s3 = t3;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> t0 = ((<span class="variable constant_">SBOX</span>[s0 &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">SBOX</span>[(s1 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">16</span>) | (<span class="variable constant_">SBOX</span>[(s2 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">8</span>) | <span class="variable constant_">SBOX</span>[s3 &amp; <span class="number">0xff</span>]) ^ keySchedule[ksRow++];</span><br><span class="line">                <span class="keyword">var</span> t1 = ((<span class="variable constant_">SBOX</span>[s1 &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">SBOX</span>[(s2 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">16</span>) | (<span class="variable constant_">SBOX</span>[(s3 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">8</span>) | <span class="variable constant_">SBOX</span>[s0 &amp; <span class="number">0xff</span>]) ^ keySchedule[ksRow++];</span><br><span class="line">                <span class="keyword">var</span> t2 = ((<span class="variable constant_">SBOX</span>[s2 &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">SBOX</span>[(s3 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">16</span>) | (<span class="variable constant_">SBOX</span>[(s0 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">8</span>) | <span class="variable constant_">SBOX</span>[s1 &amp; <span class="number">0xff</span>]) ^ keySchedule[ksRow++];</span><br><span class="line">                <span class="keyword">var</span> t3 = ((<span class="variable constant_">SBOX</span>[s3 &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">SBOX</span>[(s0 &gt;&gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">16</span>) | (<span class="variable constant_">SBOX</span>[(s1 &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>] &lt;&lt; <span class="number">8</span>) | <span class="variable constant_">SBOX</span>[s2 &amp; <span class="number">0xff</span>]) ^ keySchedule[ksRow++];</span><br><span class="line">                M[offset] = t0;</span><br><span class="line">                M[offset + <span class="number">1</span>] = t1;</span><br><span class="line">                M[offset + <span class="number">2</span>] = t2;</span><br><span class="line">                M[offset + <span class="number">3</span>] = t3;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">keySize</span>: <span class="number">256</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">AES</span> = <span class="title class_">BlockCipher</span>.<span class="title function_">_createHelper</span>(<span class="variable constant_">AES</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">WordArray</span> = C_lib.<span class="property">WordArray</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">BlockCipher</span> = C_lib.<span class="property">BlockCipher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">PC1</span> = [<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>];</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">PC2</span> = [<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">28</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">26</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>, <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">BIT_SHIFTS</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">27</span>, <span class="number">28</span>];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SBOX_P</span> = [&#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x808200</span>,</span><br><span class="line">            <span class="number">0x10000000</span>: <span class="number">0x8000</span>,</span><br><span class="line">            <span class="number">0x20000000</span>: <span class="number">0x808002</span>,</span><br><span class="line">            <span class="number">0x30000000</span>: <span class="number">0x2</span>,</span><br><span class="line">            <span class="number">0x40000000</span>: <span class="number">0x200</span>,</span><br><span class="line">            <span class="number">0x50000000</span>: <span class="number">0x808202</span>,</span><br><span class="line">            <span class="number">0x60000000</span>: <span class="number">0x800202</span>,</span><br><span class="line">            <span class="number">0x70000000</span>: <span class="number">0x800000</span>,</span><br><span class="line">            <span class="number">0x80000000</span>: <span class="number">0x202</span>,</span><br><span class="line">            <span class="number">0x90000000</span>: <span class="number">0x800200</span>,</span><br><span class="line">            <span class="number">0xa0000000</span>: <span class="number">0x8200</span>,</span><br><span class="line">            <span class="number">0xb0000000</span>: <span class="number">0x808000</span>,</span><br><span class="line">            <span class="number">0xc0000000</span>: <span class="number">0x8002</span>,</span><br><span class="line">            <span class="number">0xd0000000</span>: <span class="number">0x800002</span>,</span><br><span class="line">            <span class="number">0xe0000000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xf0000000</span>: <span class="number">0x8202</span>,</span><br><span class="line">            <span class="number">0x8000000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x18000000</span>: <span class="number">0x808202</span>,</span><br><span class="line">            <span class="number">0x28000000</span>: <span class="number">0x8202</span>,</span><br><span class="line">            <span class="number">0x38000000</span>: <span class="number">0x8000</span>,</span><br><span class="line">            <span class="number">0x48000000</span>: <span class="number">0x808200</span>,</span><br><span class="line">            <span class="number">0x58000000</span>: <span class="number">0x200</span>,</span><br><span class="line">            <span class="number">0x68000000</span>: <span class="number">0x808002</span>,</span><br><span class="line">            <span class="number">0x78000000</span>: <span class="number">0x2</span>,</span><br><span class="line">            <span class="number">0x88000000</span>: <span class="number">0x800200</span>,</span><br><span class="line">            <span class="number">0x98000000</span>: <span class="number">0x8200</span>,</span><br><span class="line">            <span class="number">0xa8000000</span>: <span class="number">0x808000</span>,</span><br><span class="line">            <span class="number">0xb8000000</span>: <span class="number">0x800202</span>,</span><br><span class="line">            <span class="number">0xc8000000</span>: <span class="number">0x800002</span>,</span><br><span class="line">            <span class="number">0xd8000000</span>: <span class="number">0x8002</span>,</span><br><span class="line">            <span class="number">0xe8000000</span>: <span class="number">0x202</span>,</span><br><span class="line">            <span class="number">0xf8000000</span>: <span class="number">0x800000</span>,</span><br><span class="line">            <span class="number">0x1</span>: <span class="number">0x8000</span>,</span><br><span class="line">            <span class="number">0x10000001</span>: <span class="number">0x2</span>,</span><br><span class="line">            <span class="number">0x20000001</span>: <span class="number">0x808200</span>,</span><br><span class="line">            <span class="number">0x30000001</span>: <span class="number">0x800000</span>,</span><br><span class="line">            <span class="number">0x40000001</span>: <span class="number">0x808002</span>,</span><br><span class="line">            <span class="number">0x50000001</span>: <span class="number">0x8200</span>,</span><br><span class="line">            <span class="number">0x60000001</span>: <span class="number">0x200</span>,</span><br><span class="line">            <span class="number">0x70000001</span>: <span class="number">0x800202</span>,</span><br><span class="line">            <span class="number">0x80000001</span>: <span class="number">0x808202</span>,</span><br><span class="line">            <span class="number">0x90000001</span>: <span class="number">0x808000</span>,</span><br><span class="line">            <span class="number">0xa0000001</span>: <span class="number">0x800002</span>,</span><br><span class="line">            <span class="number">0xb0000001</span>: <span class="number">0x8202</span>,</span><br><span class="line">            <span class="number">0xc0000001</span>: <span class="number">0x202</span>,</span><br><span class="line">            <span class="number">0xd0000001</span>: <span class="number">0x800200</span>,</span><br><span class="line">            <span class="number">0xe0000001</span>: <span class="number">0x8002</span>,</span><br><span class="line">            <span class="number">0xf0000001</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x8000001</span>: <span class="number">0x808202</span>,</span><br><span class="line">            <span class="number">0x18000001</span>: <span class="number">0x808000</span>,</span><br><span class="line">            <span class="number">0x28000001</span>: <span class="number">0x800000</span>,</span><br><span class="line">            <span class="number">0x38000001</span>: <span class="number">0x200</span>,</span><br><span class="line">            <span class="number">0x48000001</span>: <span class="number">0x8000</span>,</span><br><span class="line">            <span class="number">0x58000001</span>: <span class="number">0x800002</span>,</span><br><span class="line">            <span class="number">0x68000001</span>: <span class="number">0x2</span>,</span><br><span class="line">            <span class="number">0x78000001</span>: <span class="number">0x8202</span>,</span><br><span class="line">            <span class="number">0x88000001</span>: <span class="number">0x8002</span>,</span><br><span class="line">            <span class="number">0x98000001</span>: <span class="number">0x800202</span>,</span><br><span class="line">            <span class="number">0xa8000001</span>: <span class="number">0x202</span>,</span><br><span class="line">            <span class="number">0xb8000001</span>: <span class="number">0x808200</span>,</span><br><span class="line">            <span class="number">0xc8000001</span>: <span class="number">0x800200</span>,</span><br><span class="line">            <span class="number">0xd8000001</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xe8000001</span>: <span class="number">0x8200</span>,</span><br><span class="line">            <span class="number">0xf8000001</span>: <span class="number">0x808002</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x40084010</span>,</span><br><span class="line">            <span class="number">0x1000000</span>: <span class="number">0x4000</span>,</span><br><span class="line">            <span class="number">0x2000000</span>: <span class="number">0x80000</span>,</span><br><span class="line">            <span class="number">0x3000000</span>: <span class="number">0x40080010</span>,</span><br><span class="line">            <span class="number">0x4000000</span>: <span class="number">0x40000010</span>,</span><br><span class="line">            <span class="number">0x5000000</span>: <span class="number">0x40084000</span>,</span><br><span class="line">            <span class="number">0x6000000</span>: <span class="number">0x40004000</span>,</span><br><span class="line">            <span class="number">0x7000000</span>: <span class="number">0x10</span>,</span><br><span class="line">            <span class="number">0x8000000</span>: <span class="number">0x84000</span>,</span><br><span class="line">            <span class="number">0x9000000</span>: <span class="number">0x40004010</span>,</span><br><span class="line">            <span class="number">0xa000000</span>: <span class="number">0x40000000</span>,</span><br><span class="line">            <span class="number">0xb000000</span>: <span class="number">0x84010</span>,</span><br><span class="line">            <span class="number">0xc000000</span>: <span class="number">0x80010</span>,</span><br><span class="line">            <span class="number">0xd000000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xe000000</span>: <span class="number">0x4010</span>,</span><br><span class="line">            <span class="number">0xf000000</span>: <span class="number">0x40080000</span>,</span><br><span class="line">            <span class="number">0x800000</span>: <span class="number">0x40004000</span>,</span><br><span class="line">            <span class="number">0x1800000</span>: <span class="number">0x84010</span>,</span><br><span class="line">            <span class="number">0x2800000</span>: <span class="number">0x10</span>,</span><br><span class="line">            <span class="number">0x3800000</span>: <span class="number">0x40004010</span>,</span><br><span class="line">            <span class="number">0x4800000</span>: <span class="number">0x40084010</span>,</span><br><span class="line">            <span class="number">0x5800000</span>: <span class="number">0x40000000</span>,</span><br><span class="line">            <span class="number">0x6800000</span>: <span class="number">0x80000</span>,</span><br><span class="line">            <span class="number">0x7800000</span>: <span class="number">0x40080010</span>,</span><br><span class="line">            <span class="number">0x8800000</span>: <span class="number">0x80010</span>,</span><br><span class="line">            <span class="number">0x9800000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xa800000</span>: <span class="number">0x4000</span>,</span><br><span class="line">            <span class="number">0xb800000</span>: <span class="number">0x40080000</span>,</span><br><span class="line">            <span class="number">0xc800000</span>: <span class="number">0x40000010</span>,</span><br><span class="line">            <span class="number">0xd800000</span>: <span class="number">0x84000</span>,</span><br><span class="line">            <span class="number">0xe800000</span>: <span class="number">0x40084000</span>,</span><br><span class="line">            <span class="number">0xf800000</span>: <span class="number">0x4010</span>,</span><br><span class="line">            <span class="number">0x10000000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x11000000</span>: <span class="number">0x40080010</span>,</span><br><span class="line">            <span class="number">0x12000000</span>: <span class="number">0x40004010</span>,</span><br><span class="line">            <span class="number">0x13000000</span>: <span class="number">0x40084000</span>,</span><br><span class="line">            <span class="number">0x14000000</span>: <span class="number">0x40080000</span>,</span><br><span class="line">            <span class="number">0x15000000</span>: <span class="number">0x10</span>,</span><br><span class="line">            <span class="number">0x16000000</span>: <span class="number">0x84010</span>,</span><br><span class="line">            <span class="number">0x17000000</span>: <span class="number">0x4000</span>,</span><br><span class="line">            <span class="number">0x18000000</span>: <span class="number">0x4010</span>,</span><br><span class="line">            <span class="number">0x19000000</span>: <span class="number">0x80000</span>,</span><br><span class="line">            <span class="number">0x1a000000</span>: <span class="number">0x80010</span>,</span><br><span class="line">            <span class="number">0x1b000000</span>: <span class="number">0x40000010</span>,</span><br><span class="line">            <span class="number">0x1c000000</span>: <span class="number">0x84000</span>,</span><br><span class="line">            <span class="number">0x1d000000</span>: <span class="number">0x40004000</span>,</span><br><span class="line">            <span class="number">0x1e000000</span>: <span class="number">0x40000000</span>,</span><br><span class="line">            <span class="number">0x1f000000</span>: <span class="number">0x40084010</span>,</span><br><span class="line">            <span class="number">0x10800000</span>: <span class="number">0x84010</span>,</span><br><span class="line">            <span class="number">0x11800000</span>: <span class="number">0x80000</span>,</span><br><span class="line">            <span class="number">0x12800000</span>: <span class="number">0x40080000</span>,</span><br><span class="line">            <span class="number">0x13800000</span>: <span class="number">0x4000</span>,</span><br><span class="line">            <span class="number">0x14800000</span>: <span class="number">0x40004000</span>,</span><br><span class="line">            <span class="number">0x15800000</span>: <span class="number">0x40084010</span>,</span><br><span class="line">            <span class="number">0x16800000</span>: <span class="number">0x10</span>,</span><br><span class="line">            <span class="number">0x17800000</span>: <span class="number">0x40000000</span>,</span><br><span class="line">            <span class="number">0x18800000</span>: <span class="number">0x40084000</span>,</span><br><span class="line">            <span class="number">0x19800000</span>: <span class="number">0x40000010</span>,</span><br><span class="line">            <span class="number">0x1a800000</span>: <span class="number">0x40004010</span>,</span><br><span class="line">            <span class="number">0x1b800000</span>: <span class="number">0x80010</span>,</span><br><span class="line">            <span class="number">0x1c800000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1d800000</span>: <span class="number">0x4010</span>,</span><br><span class="line">            <span class="number">0x1e800000</span>: <span class="number">0x40080010</span>,</span><br><span class="line">            <span class="number">0x1f800000</span>: <span class="number">0x84000</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x104</span>,</span><br><span class="line">            <span class="number">0x100000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x200000</span>: <span class="number">0x4000100</span>,</span><br><span class="line">            <span class="number">0x300000</span>: <span class="number">0x10104</span>,</span><br><span class="line">            <span class="number">0x400000</span>: <span class="number">0x10004</span>,</span><br><span class="line">            <span class="number">0x500000</span>: <span class="number">0x4000004</span>,</span><br><span class="line">            <span class="number">0x600000</span>: <span class="number">0x4010104</span>,</span><br><span class="line">            <span class="number">0x700000</span>: <span class="number">0x4010000</span>,</span><br><span class="line">            <span class="number">0x800000</span>: <span class="number">0x4000000</span>,</span><br><span class="line">            <span class="number">0x900000</span>: <span class="number">0x4010100</span>,</span><br><span class="line">            <span class="number">0xa00000</span>: <span class="number">0x10100</span>,</span><br><span class="line">            <span class="number">0xb00000</span>: <span class="number">0x4010004</span>,</span><br><span class="line">            <span class="number">0xc00000</span>: <span class="number">0x4000104</span>,</span><br><span class="line">            <span class="number">0xd00000</span>: <span class="number">0x10000</span>,</span><br><span class="line">            <span class="number">0xe00000</span>: <span class="number">0x4</span>,</span><br><span class="line">            <span class="number">0xf00000</span>: <span class="number">0x100</span>,</span><br><span class="line">            <span class="number">0x80000</span>: <span class="number">0x4010100</span>,</span><br><span class="line">            <span class="number">0x180000</span>: <span class="number">0x4010004</span>,</span><br><span class="line">            <span class="number">0x280000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x380000</span>: <span class="number">0x4000100</span>,</span><br><span class="line">            <span class="number">0x480000</span>: <span class="number">0x4000004</span>,</span><br><span class="line">            <span class="number">0x580000</span>: <span class="number">0x10000</span>,</span><br><span class="line">            <span class="number">0x680000</span>: <span class="number">0x10004</span>,</span><br><span class="line">            <span class="number">0x780000</span>: <span class="number">0x104</span>,</span><br><span class="line">            <span class="number">0x880000</span>: <span class="number">0x4</span>,</span><br><span class="line">            <span class="number">0x980000</span>: <span class="number">0x100</span>,</span><br><span class="line">            <span class="number">0xa80000</span>: <span class="number">0x4010000</span>,</span><br><span class="line">            <span class="number">0xb80000</span>: <span class="number">0x10104</span>,</span><br><span class="line">            <span class="number">0xc80000</span>: <span class="number">0x10100</span>,</span><br><span class="line">            <span class="number">0xd80000</span>: <span class="number">0x4000104</span>,</span><br><span class="line">            <span class="number">0xe80000</span>: <span class="number">0x4010104</span>,</span><br><span class="line">            <span class="number">0xf80000</span>: <span class="number">0x4000000</span>,</span><br><span class="line">            <span class="number">0x1000000</span>: <span class="number">0x4010100</span>,</span><br><span class="line">            <span class="number">0x1100000</span>: <span class="number">0x10004</span>,</span><br><span class="line">            <span class="number">0x1200000</span>: <span class="number">0x10000</span>,</span><br><span class="line">            <span class="number">0x1300000</span>: <span class="number">0x4000100</span>,</span><br><span class="line">            <span class="number">0x1400000</span>: <span class="number">0x100</span>,</span><br><span class="line">            <span class="number">0x1500000</span>: <span class="number">0x4010104</span>,</span><br><span class="line">            <span class="number">0x1600000</span>: <span class="number">0x4000004</span>,</span><br><span class="line">            <span class="number">0x1700000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1800000</span>: <span class="number">0x4000104</span>,</span><br><span class="line">            <span class="number">0x1900000</span>: <span class="number">0x4000000</span>,</span><br><span class="line">            <span class="number">0x1a00000</span>: <span class="number">0x4</span>,</span><br><span class="line">            <span class="number">0x1b00000</span>: <span class="number">0x10100</span>,</span><br><span class="line">            <span class="number">0x1c00000</span>: <span class="number">0x4010000</span>,</span><br><span class="line">            <span class="number">0x1d00000</span>: <span class="number">0x104</span>,</span><br><span class="line">            <span class="number">0x1e00000</span>: <span class="number">0x10104</span>,</span><br><span class="line">            <span class="number">0x1f00000</span>: <span class="number">0x4010004</span>,</span><br><span class="line">            <span class="number">0x1080000</span>: <span class="number">0x4000000</span>,</span><br><span class="line">            <span class="number">0x1180000</span>: <span class="number">0x104</span>,</span><br><span class="line">            <span class="number">0x1280000</span>: <span class="number">0x4010100</span>,</span><br><span class="line">            <span class="number">0x1380000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1480000</span>: <span class="number">0x10004</span>,</span><br><span class="line">            <span class="number">0x1580000</span>: <span class="number">0x4000100</span>,</span><br><span class="line">            <span class="number">0x1680000</span>: <span class="number">0x100</span>,</span><br><span class="line">            <span class="number">0x1780000</span>: <span class="number">0x4010004</span>,</span><br><span class="line">            <span class="number">0x1880000</span>: <span class="number">0x10000</span>,</span><br><span class="line">            <span class="number">0x1980000</span>: <span class="number">0x4010104</span>,</span><br><span class="line">            <span class="number">0x1a80000</span>: <span class="number">0x10104</span>,</span><br><span class="line">            <span class="number">0x1b80000</span>: <span class="number">0x4000004</span>,</span><br><span class="line">            <span class="number">0x1c80000</span>: <span class="number">0x4000104</span>,</span><br><span class="line">            <span class="number">0x1d80000</span>: <span class="number">0x4010000</span>,</span><br><span class="line">            <span class="number">0x1e80000</span>: <span class="number">0x4</span>,</span><br><span class="line">            <span class="number">0x1f80000</span>: <span class="number">0x10100</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x80401000</span>,</span><br><span class="line">            <span class="number">0x10000</span>: <span class="number">0x80001040</span>,</span><br><span class="line">            <span class="number">0x20000</span>: <span class="number">0x401040</span>,</span><br><span class="line">            <span class="number">0x30000</span>: <span class="number">0x80400000</span>,</span><br><span class="line">            <span class="number">0x40000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x50000</span>: <span class="number">0x401000</span>,</span><br><span class="line">            <span class="number">0x60000</span>: <span class="number">0x80000040</span>,</span><br><span class="line">            <span class="number">0x70000</span>: <span class="number">0x400040</span>,</span><br><span class="line">            <span class="number">0x80000</span>: <span class="number">0x80000000</span>,</span><br><span class="line">            <span class="number">0x90000</span>: <span class="number">0x400000</span>,</span><br><span class="line">            <span class="number">0xa0000</span>: <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0xb0000</span>: <span class="number">0x80001000</span>,</span><br><span class="line">            <span class="number">0xc0000</span>: <span class="number">0x80400040</span>,</span><br><span class="line">            <span class="number">0xd0000</span>: <span class="number">0x1040</span>,</span><br><span class="line">            <span class="number">0xe0000</span>: <span class="number">0x1000</span>,</span><br><span class="line">            <span class="number">0xf0000</span>: <span class="number">0x80401040</span>,</span><br><span class="line">            <span class="number">0x8000</span>: <span class="number">0x80001040</span>,</span><br><span class="line">            <span class="number">0x18000</span>: <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x28000</span>: <span class="number">0x80400040</span>,</span><br><span class="line">            <span class="number">0x38000</span>: <span class="number">0x80001000</span>,</span><br><span class="line">            <span class="number">0x48000</span>: <span class="number">0x401000</span>,</span><br><span class="line">            <span class="number">0x58000</span>: <span class="number">0x80401040</span>,</span><br><span class="line">            <span class="number">0x68000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x78000</span>: <span class="number">0x80400000</span>,</span><br><span class="line">            <span class="number">0x88000</span>: <span class="number">0x1000</span>,</span><br><span class="line">            <span class="number">0x98000</span>: <span class="number">0x80401000</span>,</span><br><span class="line">            <span class="number">0xa8000</span>: <span class="number">0x400000</span>,</span><br><span class="line">            <span class="number">0xb8000</span>: <span class="number">0x1040</span>,</span><br><span class="line">            <span class="number">0xc8000</span>: <span class="number">0x80000000</span>,</span><br><span class="line">            <span class="number">0xd8000</span>: <span class="number">0x400040</span>,</span><br><span class="line">            <span class="number">0xe8000</span>: <span class="number">0x401040</span>,</span><br><span class="line">            <span class="number">0xf8000</span>: <span class="number">0x80000040</span>,</span><br><span class="line">            <span class="number">0x100000</span>: <span class="number">0x400040</span>,</span><br><span class="line">            <span class="number">0x110000</span>: <span class="number">0x401000</span>,</span><br><span class="line">            <span class="number">0x120000</span>: <span class="number">0x80000040</span>,</span><br><span class="line">            <span class="number">0x130000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x140000</span>: <span class="number">0x1040</span>,</span><br><span class="line">            <span class="number">0x150000</span>: <span class="number">0x80400040</span>,</span><br><span class="line">            <span class="number">0x160000</span>: <span class="number">0x80401000</span>,</span><br><span class="line">            <span class="number">0x170000</span>: <span class="number">0x80001040</span>,</span><br><span class="line">            <span class="number">0x180000</span>: <span class="number">0x80401040</span>,</span><br><span class="line">            <span class="number">0x190000</span>: <span class="number">0x80000000</span>,</span><br><span class="line">            <span class="number">0x1a0000</span>: <span class="number">0x80400000</span>,</span><br><span class="line">            <span class="number">0x1b0000</span>: <span class="number">0x401040</span>,</span><br><span class="line">            <span class="number">0x1c0000</span>: <span class="number">0x80001000</span>,</span><br><span class="line">            <span class="number">0x1d0000</span>: <span class="number">0x400000</span>,</span><br><span class="line">            <span class="number">0x1e0000</span>: <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x1f0000</span>: <span class="number">0x1000</span>,</span><br><span class="line">            <span class="number">0x108000</span>: <span class="number">0x80400000</span>,</span><br><span class="line">            <span class="number">0x118000</span>: <span class="number">0x80401040</span>,</span><br><span class="line">            <span class="number">0x128000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x138000</span>: <span class="number">0x401000</span>,</span><br><span class="line">            <span class="number">0x148000</span>: <span class="number">0x400040</span>,</span><br><span class="line">            <span class="number">0x158000</span>: <span class="number">0x80000000</span>,</span><br><span class="line">            <span class="number">0x168000</span>: <span class="number">0x80001040</span>,</span><br><span class="line">            <span class="number">0x178000</span>: <span class="number">0x40</span>,</span><br><span class="line">            <span class="number">0x188000</span>: <span class="number">0x80000040</span>,</span><br><span class="line">            <span class="number">0x198000</span>: <span class="number">0x1000</span>,</span><br><span class="line">            <span class="number">0x1a8000</span>: <span class="number">0x80001000</span>,</span><br><span class="line">            <span class="number">0x1b8000</span>: <span class="number">0x80400040</span>,</span><br><span class="line">            <span class="number">0x1c8000</span>: <span class="number">0x1040</span>,</span><br><span class="line">            <span class="number">0x1d8000</span>: <span class="number">0x80401000</span>,</span><br><span class="line">            <span class="number">0x1e8000</span>: <span class="number">0x400000</span>,</span><br><span class="line">            <span class="number">0x1f8000</span>: <span class="number">0x401040</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x80</span>,</span><br><span class="line">            <span class="number">0x1000</span>: <span class="number">0x1040000</span>,</span><br><span class="line">            <span class="number">0x2000</span>: <span class="number">0x40000</span>,</span><br><span class="line">            <span class="number">0x3000</span>: <span class="number">0x20000000</span>,</span><br><span class="line">            <span class="number">0x4000</span>: <span class="number">0x20040080</span>,</span><br><span class="line">            <span class="number">0x5000</span>: <span class="number">0x1000080</span>,</span><br><span class="line">            <span class="number">0x6000</span>: <span class="number">0x21000080</span>,</span><br><span class="line">            <span class="number">0x7000</span>: <span class="number">0x40080</span>,</span><br><span class="line">            <span class="number">0x8000</span>: <span class="number">0x1000000</span>,</span><br><span class="line">            <span class="number">0x9000</span>: <span class="number">0x20040000</span>,</span><br><span class="line">            <span class="number">0xa000</span>: <span class="number">0x20000080</span>,</span><br><span class="line">            <span class="number">0xb000</span>: <span class="number">0x21040080</span>,</span><br><span class="line">            <span class="number">0xc000</span>: <span class="number">0x21040000</span>,</span><br><span class="line">            <span class="number">0xd000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xe000</span>: <span class="number">0x1040080</span>,</span><br><span class="line">            <span class="number">0xf000</span>: <span class="number">0x21000000</span>,</span><br><span class="line">            <span class="number">0x800</span>: <span class="number">0x1040080</span>,</span><br><span class="line">            <span class="number">0x1800</span>: <span class="number">0x21000080</span>,</span><br><span class="line">            <span class="number">0x2800</span>: <span class="number">0x80</span>,</span><br><span class="line">            <span class="number">0x3800</span>: <span class="number">0x1040000</span>,</span><br><span class="line">            <span class="number">0x4800</span>: <span class="number">0x40000</span>,</span><br><span class="line">            <span class="number">0x5800</span>: <span class="number">0x20040080</span>,</span><br><span class="line">            <span class="number">0x6800</span>: <span class="number">0x21040000</span>,</span><br><span class="line">            <span class="number">0x7800</span>: <span class="number">0x20000000</span>,</span><br><span class="line">            <span class="number">0x8800</span>: <span class="number">0x20040000</span>,</span><br><span class="line">            <span class="number">0x9800</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xa800</span>: <span class="number">0x21040080</span>,</span><br><span class="line">            <span class="number">0xb800</span>: <span class="number">0x1000080</span>,</span><br><span class="line">            <span class="number">0xc800</span>: <span class="number">0x20000080</span>,</span><br><span class="line">            <span class="number">0xd800</span>: <span class="number">0x21000000</span>,</span><br><span class="line">            <span class="number">0xe800</span>: <span class="number">0x1000000</span>,</span><br><span class="line">            <span class="number">0xf800</span>: <span class="number">0x40080</span>,</span><br><span class="line">            <span class="number">0x10000</span>: <span class="number">0x40000</span>,</span><br><span class="line">            <span class="number">0x11000</span>: <span class="number">0x80</span>,</span><br><span class="line">            <span class="number">0x12000</span>: <span class="number">0x20000000</span>,</span><br><span class="line">            <span class="number">0x13000</span>: <span class="number">0x21000080</span>,</span><br><span class="line">            <span class="number">0x14000</span>: <span class="number">0x1000080</span>,</span><br><span class="line">            <span class="number">0x15000</span>: <span class="number">0x21040000</span>,</span><br><span class="line">            <span class="number">0x16000</span>: <span class="number">0x20040080</span>,</span><br><span class="line">            <span class="number">0x17000</span>: <span class="number">0x1000000</span>,</span><br><span class="line">            <span class="number">0x18000</span>: <span class="number">0x21040080</span>,</span><br><span class="line">            <span class="number">0x19000</span>: <span class="number">0x21000000</span>,</span><br><span class="line">            <span class="number">0x1a000</span>: <span class="number">0x1040000</span>,</span><br><span class="line">            <span class="number">0x1b000</span>: <span class="number">0x20040000</span>,</span><br><span class="line">            <span class="number">0x1c000</span>: <span class="number">0x40080</span>,</span><br><span class="line">            <span class="number">0x1d000</span>: <span class="number">0x20000080</span>,</span><br><span class="line">            <span class="number">0x1e000</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1f000</span>: <span class="number">0x1040080</span>,</span><br><span class="line">            <span class="number">0x10800</span>: <span class="number">0x21000080</span>,</span><br><span class="line">            <span class="number">0x11800</span>: <span class="number">0x1000000</span>,</span><br><span class="line">            <span class="number">0x12800</span>: <span class="number">0x1040000</span>,</span><br><span class="line">            <span class="number">0x13800</span>: <span class="number">0x20040080</span>,</span><br><span class="line">            <span class="number">0x14800</span>: <span class="number">0x20000000</span>,</span><br><span class="line">            <span class="number">0x15800</span>: <span class="number">0x1040080</span>,</span><br><span class="line">            <span class="number">0x16800</span>: <span class="number">0x80</span>,</span><br><span class="line">            <span class="number">0x17800</span>: <span class="number">0x21040000</span>,</span><br><span class="line">            <span class="number">0x18800</span>: <span class="number">0x40080</span>,</span><br><span class="line">            <span class="number">0x19800</span>: <span class="number">0x21040080</span>,</span><br><span class="line">            <span class="number">0x1a800</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1b800</span>: <span class="number">0x21000000</span>,</span><br><span class="line">            <span class="number">0x1c800</span>: <span class="number">0x1000080</span>,</span><br><span class="line">            <span class="number">0x1d800</span>: <span class="number">0x40000</span>,</span><br><span class="line">            <span class="number">0x1e800</span>: <span class="number">0x20040000</span>,</span><br><span class="line">            <span class="number">0x1f800</span>: <span class="number">0x20000080</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x10000008</span>,</span><br><span class="line">            <span class="number">0x100</span>: <span class="number">0x2000</span>,</span><br><span class="line">            <span class="number">0x200</span>: <span class="number">0x10200000</span>,</span><br><span class="line">            <span class="number">0x300</span>: <span class="number">0x10202008</span>,</span><br><span class="line">            <span class="number">0x400</span>: <span class="number">0x10002000</span>,</span><br><span class="line">            <span class="number">0x500</span>: <span class="number">0x200000</span>,</span><br><span class="line">            <span class="number">0x600</span>: <span class="number">0x200008</span>,</span><br><span class="line">            <span class="number">0x700</span>: <span class="number">0x10000000</span>,</span><br><span class="line">            <span class="number">0x800</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x900</span>: <span class="number">0x10002008</span>,</span><br><span class="line">            <span class="number">0xa00</span>: <span class="number">0x202000</span>,</span><br><span class="line">            <span class="number">0xb00</span>: <span class="number">0x8</span>,</span><br><span class="line">            <span class="number">0xc00</span>: <span class="number">0x10200008</span>,</span><br><span class="line">            <span class="number">0xd00</span>: <span class="number">0x202008</span>,</span><br><span class="line">            <span class="number">0xe00</span>: <span class="number">0x2008</span>,</span><br><span class="line">            <span class="number">0xf00</span>: <span class="number">0x10202000</span>,</span><br><span class="line">            <span class="number">0x80</span>: <span class="number">0x10200000</span>,</span><br><span class="line">            <span class="number">0x180</span>: <span class="number">0x10202008</span>,</span><br><span class="line">            <span class="number">0x280</span>: <span class="number">0x8</span>,</span><br><span class="line">            <span class="number">0x380</span>: <span class="number">0x200000</span>,</span><br><span class="line">            <span class="number">0x480</span>: <span class="number">0x202008</span>,</span><br><span class="line">            <span class="number">0x580</span>: <span class="number">0x10000008</span>,</span><br><span class="line">            <span class="number">0x680</span>: <span class="number">0x10002000</span>,</span><br><span class="line">            <span class="number">0x780</span>: <span class="number">0x2008</span>,</span><br><span class="line">            <span class="number">0x880</span>: <span class="number">0x200008</span>,</span><br><span class="line">            <span class="number">0x980</span>: <span class="number">0x2000</span>,</span><br><span class="line">            <span class="number">0xa80</span>: <span class="number">0x10002008</span>,</span><br><span class="line">            <span class="number">0xb80</span>: <span class="number">0x10200008</span>,</span><br><span class="line">            <span class="number">0xc80</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xd80</span>: <span class="number">0x10202000</span>,</span><br><span class="line">            <span class="number">0xe80</span>: <span class="number">0x202000</span>,</span><br><span class="line">            <span class="number">0xf80</span>: <span class="number">0x10000000</span>,</span><br><span class="line">            <span class="number">0x1000</span>: <span class="number">0x10002000</span>,</span><br><span class="line">            <span class="number">0x1100</span>: <span class="number">0x10200008</span>,</span><br><span class="line">            <span class="number">0x1200</span>: <span class="number">0x10202008</span>,</span><br><span class="line">            <span class="number">0x1300</span>: <span class="number">0x2008</span>,</span><br><span class="line">            <span class="number">0x1400</span>: <span class="number">0x200000</span>,</span><br><span class="line">            <span class="number">0x1500</span>: <span class="number">0x10000000</span>,</span><br><span class="line">            <span class="number">0x1600</span>: <span class="number">0x10000008</span>,</span><br><span class="line">            <span class="number">0x1700</span>: <span class="number">0x202000</span>,</span><br><span class="line">            <span class="number">0x1800</span>: <span class="number">0x202008</span>,</span><br><span class="line">            <span class="number">0x1900</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1a00</span>: <span class="number">0x8</span>,</span><br><span class="line">            <span class="number">0x1b00</span>: <span class="number">0x10200000</span>,</span><br><span class="line">            <span class="number">0x1c00</span>: <span class="number">0x2000</span>,</span><br><span class="line">            <span class="number">0x1d00</span>: <span class="number">0x10002008</span>,</span><br><span class="line">            <span class="number">0x1e00</span>: <span class="number">0x10202000</span>,</span><br><span class="line">            <span class="number">0x1f00</span>: <span class="number">0x200008</span>,</span><br><span class="line">            <span class="number">0x1080</span>: <span class="number">0x8</span>,</span><br><span class="line">            <span class="number">0x1180</span>: <span class="number">0x202000</span>,</span><br><span class="line">            <span class="number">0x1280</span>: <span class="number">0x200000</span>,</span><br><span class="line">            <span class="number">0x1380</span>: <span class="number">0x10000008</span>,</span><br><span class="line">            <span class="number">0x1480</span>: <span class="number">0x10002000</span>,</span><br><span class="line">            <span class="number">0x1580</span>: <span class="number">0x2008</span>,</span><br><span class="line">            <span class="number">0x1680</span>: <span class="number">0x10202008</span>,</span><br><span class="line">            <span class="number">0x1780</span>: <span class="number">0x10200000</span>,</span><br><span class="line">            <span class="number">0x1880</span>: <span class="number">0x10202000</span>,</span><br><span class="line">            <span class="number">0x1980</span>: <span class="number">0x10200008</span>,</span><br><span class="line">            <span class="number">0x1a80</span>: <span class="number">0x2000</span>,</span><br><span class="line">            <span class="number">0x1b80</span>: <span class="number">0x202008</span>,</span><br><span class="line">            <span class="number">0x1c80</span>: <span class="number">0x200008</span>,</span><br><span class="line">            <span class="number">0x1d80</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1e80</span>: <span class="number">0x10000000</span>,</span><br><span class="line">            <span class="number">0x1f80</span>: <span class="number">0x10002008</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x100000</span>,</span><br><span class="line">            <span class="number">0x10</span>: <span class="number">0x2000401</span>,</span><br><span class="line">            <span class="number">0x20</span>: <span class="number">0x400</span>,</span><br><span class="line">            <span class="number">0x30</span>: <span class="number">0x100401</span>,</span><br><span class="line">            <span class="number">0x40</span>: <span class="number">0x2100401</span>,</span><br><span class="line">            <span class="number">0x50</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x60</span>: <span class="number">0x1</span>,</span><br><span class="line">            <span class="number">0x70</span>: <span class="number">0x2100001</span>,</span><br><span class="line">            <span class="number">0x80</span>: <span class="number">0x2000400</span>,</span><br><span class="line">            <span class="number">0x90</span>: <span class="number">0x100001</span>,</span><br><span class="line">            <span class="number">0xa0</span>: <span class="number">0x2000001</span>,</span><br><span class="line">            <span class="number">0xb0</span>: <span class="number">0x2100400</span>,</span><br><span class="line">            <span class="number">0xc0</span>: <span class="number">0x2100000</span>,</span><br><span class="line">            <span class="number">0xd0</span>: <span class="number">0x401</span>,</span><br><span class="line">            <span class="number">0xe0</span>: <span class="number">0x100400</span>,</span><br><span class="line">            <span class="number">0xf0</span>: <span class="number">0x2000000</span>,</span><br><span class="line">            <span class="number">0x8</span>: <span class="number">0x2100001</span>,</span><br><span class="line">            <span class="number">0x18</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x28</span>: <span class="number">0x2000401</span>,</span><br><span class="line">            <span class="number">0x38</span>: <span class="number">0x2100400</span>,</span><br><span class="line">            <span class="number">0x48</span>: <span class="number">0x100000</span>,</span><br><span class="line">            <span class="number">0x58</span>: <span class="number">0x2000001</span>,</span><br><span class="line">            <span class="number">0x68</span>: <span class="number">0x2000000</span>,</span><br><span class="line">            <span class="number">0x78</span>: <span class="number">0x401</span>,</span><br><span class="line">            <span class="number">0x88</span>: <span class="number">0x100401</span>,</span><br><span class="line">            <span class="number">0x98</span>: <span class="number">0x2000400</span>,</span><br><span class="line">            <span class="number">0xa8</span>: <span class="number">0x2100000</span>,</span><br><span class="line">            <span class="number">0xb8</span>: <span class="number">0x100001</span>,</span><br><span class="line">            <span class="number">0xc8</span>: <span class="number">0x400</span>,</span><br><span class="line">            <span class="number">0xd8</span>: <span class="number">0x2100401</span>,</span><br><span class="line">            <span class="number">0xe8</span>: <span class="number">0x1</span>,</span><br><span class="line">            <span class="number">0xf8</span>: <span class="number">0x100400</span>,</span><br><span class="line">            <span class="number">0x100</span>: <span class="number">0x2000000</span>,</span><br><span class="line">            <span class="number">0x110</span>: <span class="number">0x100000</span>,</span><br><span class="line">            <span class="number">0x120</span>: <span class="number">0x2000401</span>,</span><br><span class="line">            <span class="number">0x130</span>: <span class="number">0x2100001</span>,</span><br><span class="line">            <span class="number">0x140</span>: <span class="number">0x100001</span>,</span><br><span class="line">            <span class="number">0x150</span>: <span class="number">0x2000400</span>,</span><br><span class="line">            <span class="number">0x160</span>: <span class="number">0x2100400</span>,</span><br><span class="line">            <span class="number">0x170</span>: <span class="number">0x100401</span>,</span><br><span class="line">            <span class="number">0x180</span>: <span class="number">0x401</span>,</span><br><span class="line">            <span class="number">0x190</span>: <span class="number">0x2100401</span>,</span><br><span class="line">            <span class="number">0x1a0</span>: <span class="number">0x100400</span>,</span><br><span class="line">            <span class="number">0x1b0</span>: <span class="number">0x1</span>,</span><br><span class="line">            <span class="number">0x1c0</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1d0</span>: <span class="number">0x2100000</span>,</span><br><span class="line">            <span class="number">0x1e0</span>: <span class="number">0x2000001</span>,</span><br><span class="line">            <span class="number">0x1f0</span>: <span class="number">0x400</span>,</span><br><span class="line">            <span class="number">0x108</span>: <span class="number">0x100400</span>,</span><br><span class="line">            <span class="number">0x118</span>: <span class="number">0x2000401</span>,</span><br><span class="line">            <span class="number">0x128</span>: <span class="number">0x2100001</span>,</span><br><span class="line">            <span class="number">0x138</span>: <span class="number">0x1</span>,</span><br><span class="line">            <span class="number">0x148</span>: <span class="number">0x2000000</span>,</span><br><span class="line">            <span class="number">0x158</span>: <span class="number">0x100000</span>,</span><br><span class="line">            <span class="number">0x168</span>: <span class="number">0x401</span>,</span><br><span class="line">            <span class="number">0x178</span>: <span class="number">0x2100400</span>,</span><br><span class="line">            <span class="number">0x188</span>: <span class="number">0x2000001</span>,</span><br><span class="line">            <span class="number">0x198</span>: <span class="number">0x2100000</span>,</span><br><span class="line">            <span class="number">0x1a8</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x1b8</span>: <span class="number">0x2100401</span>,</span><br><span class="line">            <span class="number">0x1c8</span>: <span class="number">0x100401</span>,</span><br><span class="line">            <span class="number">0x1d8</span>: <span class="number">0x400</span>,</span><br><span class="line">            <span class="number">0x1e8</span>: <span class="number">0x2000400</span>,</span><br><span class="line">            <span class="number">0x1f8</span>: <span class="number">0x100001</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="number">0x0</span>: <span class="number">0x8000820</span>,</span><br><span class="line">            <span class="number">0x1</span>: <span class="number">0x20000</span>,</span><br><span class="line">            <span class="number">0x2</span>: <span class="number">0x8000000</span>,</span><br><span class="line">            <span class="number">0x3</span>: <span class="number">0x20</span>,</span><br><span class="line">            <span class="number">0x4</span>: <span class="number">0x20020</span>,</span><br><span class="line">            <span class="number">0x5</span>: <span class="number">0x8020820</span>,</span><br><span class="line">            <span class="number">0x6</span>: <span class="number">0x8020800</span>,</span><br><span class="line">            <span class="number">0x7</span>: <span class="number">0x800</span>,</span><br><span class="line">            <span class="number">0x8</span>: <span class="number">0x8020000</span>,</span><br><span class="line">            <span class="number">0x9</span>: <span class="number">0x8000800</span>,</span><br><span class="line">            <span class="number">0xa</span>: <span class="number">0x20800</span>,</span><br><span class="line">            <span class="number">0xb</span>: <span class="number">0x8020020</span>,</span><br><span class="line">            <span class="number">0xc</span>: <span class="number">0x820</span>,</span><br><span class="line">            <span class="number">0xd</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0xe</span>: <span class="number">0x8000020</span>,</span><br><span class="line">            <span class="number">0xf</span>: <span class="number">0x20820</span>,</span><br><span class="line">            <span class="number">0x80000000</span>: <span class="number">0x800</span>,</span><br><span class="line">            <span class="number">0x80000001</span>: <span class="number">0x8020820</span>,</span><br><span class="line">            <span class="number">0x80000002</span>: <span class="number">0x8000820</span>,</span><br><span class="line">            <span class="number">0x80000003</span>: <span class="number">0x8000000</span>,</span><br><span class="line">            <span class="number">0x80000004</span>: <span class="number">0x8020000</span>,</span><br><span class="line">            <span class="number">0x80000005</span>: <span class="number">0x20800</span>,</span><br><span class="line">            <span class="number">0x80000006</span>: <span class="number">0x20820</span>,</span><br><span class="line">            <span class="number">0x80000007</span>: <span class="number">0x20</span>,</span><br><span class="line">            <span class="number">0x80000008</span>: <span class="number">0x8000020</span>,</span><br><span class="line">            <span class="number">0x80000009</span>: <span class="number">0x820</span>,</span><br><span class="line">            <span class="number">0x8000000a</span>: <span class="number">0x20020</span>,</span><br><span class="line">            <span class="number">0x8000000b</span>: <span class="number">0x8020800</span>,</span><br><span class="line">            <span class="number">0x8000000c</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x8000000d</span>: <span class="number">0x8020020</span>,</span><br><span class="line">            <span class="number">0x8000000e</span>: <span class="number">0x8000800</span>,</span><br><span class="line">            <span class="number">0x8000000f</span>: <span class="number">0x20000</span>,</span><br><span class="line">            <span class="number">0x10</span>: <span class="number">0x20820</span>,</span><br><span class="line">            <span class="number">0x11</span>: <span class="number">0x8020800</span>,</span><br><span class="line">            <span class="number">0x12</span>: <span class="number">0x20</span>,</span><br><span class="line">            <span class="number">0x13</span>: <span class="number">0x800</span>,</span><br><span class="line">            <span class="number">0x14</span>: <span class="number">0x8000800</span>,</span><br><span class="line">            <span class="number">0x15</span>: <span class="number">0x8000020</span>,</span><br><span class="line">            <span class="number">0x16</span>: <span class="number">0x8020020</span>,</span><br><span class="line">            <span class="number">0x17</span>: <span class="number">0x20000</span>,</span><br><span class="line">            <span class="number">0x18</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x19</span>: <span class="number">0x20020</span>,</span><br><span class="line">            <span class="number">0x1a</span>: <span class="number">0x8020000</span>,</span><br><span class="line">            <span class="number">0x1b</span>: <span class="number">0x8000820</span>,</span><br><span class="line">            <span class="number">0x1c</span>: <span class="number">0x8020820</span>,</span><br><span class="line">            <span class="number">0x1d</span>: <span class="number">0x20800</span>,</span><br><span class="line">            <span class="number">0x1e</span>: <span class="number">0x820</span>,</span><br><span class="line">            <span class="number">0x1f</span>: <span class="number">0x8000000</span>,</span><br><span class="line">            <span class="number">0x80000010</span>: <span class="number">0x20000</span>,</span><br><span class="line">            <span class="number">0x80000011</span>: <span class="number">0x800</span>,</span><br><span class="line">            <span class="number">0x80000012</span>: <span class="number">0x8020020</span>,</span><br><span class="line">            <span class="number">0x80000013</span>: <span class="number">0x20820</span>,</span><br><span class="line">            <span class="number">0x80000014</span>: <span class="number">0x20</span>,</span><br><span class="line">            <span class="number">0x80000015</span>: <span class="number">0x8020000</span>,</span><br><span class="line">            <span class="number">0x80000016</span>: <span class="number">0x8000000</span>,</span><br><span class="line">            <span class="number">0x80000017</span>: <span class="number">0x8000820</span>,</span><br><span class="line">            <span class="number">0x80000018</span>: <span class="number">0x8020820</span>,</span><br><span class="line">            <span class="number">0x80000019</span>: <span class="number">0x8000020</span>,</span><br><span class="line">            <span class="number">0x8000001a</span>: <span class="number">0x8000800</span>,</span><br><span class="line">            <span class="number">0x8000001b</span>: <span class="number">0x0</span>,</span><br><span class="line">            <span class="number">0x8000001c</span>: <span class="number">0x20800</span>,</span><br><span class="line">            <span class="number">0x8000001d</span>: <span class="number">0x820</span>,</span><br><span class="line">            <span class="number">0x8000001e</span>: <span class="number">0x20020</span>,</span><br><span class="line">            <span class="number">0x8000001f</span>: <span class="number">0x8020800</span></span><br><span class="line">        &#125;</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">SBOX_MASK</span> = [<span class="number">0xf8000001</span>, <span class="number">0x1f800000</span>, <span class="number">0x01f80000</span>, <span class="number">0x001f8000</span>, <span class="number">0x0001f800</span>, <span class="number">0x00001f80</span>, <span class="number">0x000001f8</span>, <span class="number">0x8000001f</span>];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">DES</span> = C_algo.<span class="property">DES</span> = <span class="title class_">BlockCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> key = <span class="variable language_">this</span>.<span class="property">_key</span>;</span><br><span class="line">                <span class="keyword">var</span> keyWords = key.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> keyBits = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">56</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> keyBitPos = <span class="title class_">PC1</span>[i] - <span class="number">1</span>;</span><br><span class="line">                    keyBits[i] = (keyWords[keyBitPos &gt;&gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; (<span class="number">31</span> - keyBitPos % <span class="number">32</span>)) &amp; <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> subKeys = <span class="variable language_">this</span>.<span class="property">_subKeys</span> = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> nSubKey = <span class="number">0</span>; nSubKey &lt; <span class="number">16</span>; nSubKey++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> subKey = subKeys[nSubKey] = [];</span><br><span class="line">                    <span class="keyword">var</span> bitShift = <span class="variable constant_">BIT_SHIFTS</span>[nSubKey];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++) &#123;</span><br><span class="line">                        subKey[(i / <span class="number">6</span>) | <span class="number">0</span>] |= keyBits[((<span class="title class_">PC2</span>[i] - <span class="number">1</span>) + bitShift) % <span class="number">28</span>] &lt;&lt; (<span class="number">31</span> - i % <span class="number">6</span>);</span><br><span class="line">                        subKey[<span class="number">4</span> + ((i / <span class="number">6</span>) | <span class="number">0</span>)] |= keyBits[<span class="number">28</span> + (((<span class="title class_">PC2</span>[i + <span class="number">24</span>] - <span class="number">1</span>) + bitShift) % <span class="number">28</span>)] &lt;&lt; (<span class="number">31</span> - i % <span class="number">6</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    subKey[<span class="number">0</span>] = (subKey[<span class="number">0</span>] &lt;&lt; <span class="number">1</span>) | (subKey[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">31</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">                        subKey[i] = subKey[i] &gt;&gt;&gt; ((i - <span class="number">1</span>) * <span class="number">4</span> + <span class="number">3</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    subKey[<span class="number">7</span>] = (subKey[<span class="number">7</span>] &lt;&lt; <span class="number">5</span>) | (subKey[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">27</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> invSubKeys = <span class="variable language_">this</span>.<span class="property">_invSubKeys</span> = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">                    invSubKeys[i] = subKeys[<span class="number">15</span> - i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">encryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(M, offset, <span class="variable language_">this</span>.<span class="property">_subKeys</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">decryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">_doCryptBlock</span>(M, offset, <span class="variable language_">this</span>.<span class="property">_invSubKeys</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doCryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset, subKeys</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_lBlock</span> = M[offset];</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_rBlock</span> = M[offset + <span class="number">1</span>];</span><br><span class="line">                exchangeLR.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">4</span>, <span class="number">0x0f0f0f0f</span>);</span><br><span class="line">                exchangeLR.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">16</span>, <span class="number">0x0000ffff</span>);</span><br><span class="line">                exchangeRL.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">2</span>, <span class="number">0x33333333</span>);</span><br><span class="line">                exchangeRL.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">8</span>, <span class="number">0x00ff00ff</span>);</span><br><span class="line">                exchangeLR.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">1</span>, <span class="number">0x55555555</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> round = <span class="number">0</span>; round &lt; <span class="number">16</span>; round++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> subKey = subKeys[round];</span><br><span class="line">                    <span class="keyword">var</span> lBlock = <span class="variable language_">this</span>.<span class="property">_lBlock</span>;</span><br><span class="line">                    <span class="keyword">var</span> rBlock = <span class="variable language_">this</span>.<span class="property">_rBlock</span>;</span><br><span class="line">                    <span class="keyword">var</span> f = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                        f |= <span class="variable constant_">SBOX_P</span>[i][((rBlock ^ subKey[i]) &amp; <span class="variable constant_">SBOX_MASK</span>[i]) &gt;&gt;&gt; <span class="number">0</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_lBlock</span> = rBlock;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_rBlock</span> = lBlock ^ f;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">_lBlock</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_lBlock</span> = <span class="variable language_">this</span>.<span class="property">_rBlock</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_rBlock</span> = t;</span><br><span class="line">                exchangeLR.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">1</span>, <span class="number">0x55555555</span>);</span><br><span class="line">                exchangeRL.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">8</span>, <span class="number">0x00ff00ff</span>);</span><br><span class="line">                exchangeRL.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">2</span>, <span class="number">0x33333333</span>);</span><br><span class="line">                exchangeLR.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">16</span>, <span class="number">0x0000ffff</span>);</span><br><span class="line">                exchangeLR.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="number">4</span>, <span class="number">0x0f0f0f0f</span>);</span><br><span class="line">                M[offset] = <span class="variable language_">this</span>.<span class="property">_lBlock</span>;</span><br><span class="line">                M[offset + <span class="number">1</span>] = <span class="variable language_">this</span>.<span class="property">_rBlock</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">keySize</span>: <span class="number">64</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">64</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">64</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">exchangeLR</span>(<span class="params">offset, mask</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = ((<span class="variable language_">this</span>.<span class="property">_lBlock</span> &gt;&gt;&gt; offset) ^ <span class="variable language_">this</span>.<span class="property">_rBlock</span>) &amp; mask;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_rBlock</span> ^= t;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_lBlock</span> ^= t &lt;&lt; offset;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">exchangeRL</span>(<span class="params">offset, mask</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = ((<span class="variable language_">this</span>.<span class="property">_rBlock</span> &gt;&gt;&gt; offset) ^ <span class="variable language_">this</span>.<span class="property">_lBlock</span>) &amp; mask;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_lBlock</span> ^= t;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_rBlock</span> ^= t &lt;&lt; offset;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        C.<span class="property">DES</span> = <span class="title class_">BlockCipher</span>.<span class="title function_">_createHelper</span>(<span class="variable constant_">DES</span>);</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">TripleDES</span> = C_algo.<span class="property">TripleDES</span> = <span class="title class_">BlockCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> key = <span class="variable language_">this</span>.<span class="property">_key</span>;</span><br><span class="line">                <span class="keyword">var</span> keyWords = key.<span class="property">words</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des1</span> = <span class="variable constant_">DES</span>.<span class="title function_">createEncryptor</span>(<span class="title class_">WordArray</span>.<span class="title function_">create</span>(keyWords.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">2</span>)));</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des2</span> = <span class="variable constant_">DES</span>.<span class="title function_">createEncryptor</span>(<span class="title class_">WordArray</span>.<span class="title function_">create</span>(keyWords.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>)));</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des3</span> = <span class="variable constant_">DES</span>.<span class="title function_">createEncryptor</span>(<span class="title class_">WordArray</span>.<span class="title function_">create</span>(keyWords.<span class="title function_">slice</span>(<span class="number">4</span>, <span class="number">6</span>)));</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">encryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des1</span>.<span class="title function_">encryptBlock</span>(M, offset);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des2</span>.<span class="title function_">decryptBlock</span>(M, offset);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des3</span>.<span class="title function_">encryptBlock</span>(M, offset);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">decryptBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des3</span>.<span class="title function_">decryptBlock</span>(M, offset);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des2</span>.<span class="title function_">encryptBlock</span>(M, offset);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_des1</span>.<span class="title function_">decryptBlock</span>(M, offset);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">keySize</span>: <span class="number">192</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">64</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">64</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">TripleDES</span> = <span class="title class_">BlockCipher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">TripleDES</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">StreamCipher</span> = C_lib.<span class="property">StreamCipher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">RC4</span> = C_algo.<span class="property">RC4</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> key = <span class="variable language_">this</span>.<span class="property">_key</span>;</span><br><span class="line">                <span class="keyword">var</span> keyWords = key.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> keySigBytes = key.<span class="property">sigBytes</span>;</span><br><span class="line">                <span class="keyword">var</span> S = <span class="variable language_">this</span>.<span class="property">_S</span> = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">                    S[i] = i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> keyByteIndex = i % keySigBytes;</span><br><span class="line">                    <span class="keyword">var</span> keyByte = (keyWords[keyByteIndex &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - (keyByteIndex % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">                    j = (j + S[i] + keyByte) % <span class="number">256</span>;</span><br><span class="line">                    <span class="keyword">var</span> t = S[i];</span><br><span class="line">                    S[i] = S[j];</span><br><span class="line">                    S[j] = t;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_i</span> = <span class="variable language_">this</span>.<span class="property">_j</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                M[offset] ^= generateKeystreamWord.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">keySize</span>: <span class="number">256</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">generateKeystreamWord</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> S = <span class="variable language_">this</span>.<span class="property">_S</span>;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="variable language_">this</span>.<span class="property">_i</span>;</span><br><span class="line">            <span class="keyword">var</span> j = <span class="variable language_">this</span>.<span class="property">_j</span>;</span><br><span class="line">            <span class="keyword">var</span> keystreamWord = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; <span class="number">4</span>; n++) &#123;</span><br><span class="line">                i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">                j = (j + S[i]) % <span class="number">256</span>;</span><br><span class="line">                <span class="keyword">var</span> t = S[i];</span><br><span class="line">                S[i] = S[j];</span><br><span class="line">                S[j] = t;</span><br><span class="line">                keystreamWord |= S[(S[i] + S[j]) % <span class="number">256</span>] &lt;&lt; (<span class="number">24</span> - n * <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_i</span> = i;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_j</span> = j;</span><br><span class="line">            <span class="keyword">return</span> keystreamWord;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        C.<span class="property">RC4</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">RC4</span>);</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">RC4Drop</span> = C_algo.<span class="property">RC4Drop</span> = <span class="title class_">RC4</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: <span class="title class_">RC4</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">drop</span>: <span class="number">192</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="title class_">RC4</span>.<span class="property">_doReset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">drop</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                    generateKeystreamWord.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        C.<span class="property">RC4Drop</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">RC4Drop</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CTRGladman</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">CTRGladman</span> = <span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">incWord</span>(<span class="params">word</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (((word &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xff</span>) === <span class="number">0xff</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> b1 = (word &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">                <span class="keyword">var</span> b2 = (word &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">                <span class="keyword">var</span> b3 = word &amp; <span class="number">0xff</span>;</span><br><span class="line">                <span class="keyword">if</span> (b1 === <span class="number">0xff</span>) &#123;</span><br><span class="line">                    b1 = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (b2 === <span class="number">0xff</span>) &#123;</span><br><span class="line">                        b2 = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">if</span> (b3 === <span class="number">0xff</span>) &#123;</span><br><span class="line">                            b3 = <span class="number">0</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            ++b3;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        ++b2;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ++b1;</span><br><span class="line">                &#125;</span><br><span class="line">                word = <span class="number">0</span>;</span><br><span class="line">                word += (b1 &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                word += (b2 &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                word += b3;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                word += (<span class="number">0x01</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> word;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">incCounter</span>(<span class="params">counter</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((counter[<span class="number">0</span>] = <span class="title function_">incWord</span>(counter[<span class="number">0</span>])) === <span class="number">0</span>) &#123;</span><br><span class="line">                counter[<span class="number">1</span>] = <span class="title function_">incWord</span>(counter[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> counter;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Encryptor</span> = <span class="title class_">CTRGladman</span>.<span class="property">Encryptor</span> = <span class="title class_">CTRGladman</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span></span><br><span class="line">                <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">_iv</span>;</span><br><span class="line">                <span class="keyword">var</span> counter = <span class="variable language_">this</span>.<span class="property">_counter</span>;</span><br><span class="line">                <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                    counter = <span class="variable language_">this</span>.<span class="property">_counter</span> = iv.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_iv</span> = <span class="literal">undefined</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">incCounter</span>(counter);</span><br><span class="line">                <span class="keyword">var</span> keystream = counter.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                cipher.<span class="title function_">encryptBlock</span>(keystream, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; blockSize; i++) &#123;</span><br><span class="line">                    words[offset + i] ^= keystream[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="title class_">CTRGladman</span>.<span class="property">Decryptor</span> = <span class="title class_">Encryptor</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">CTRGladman</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">StreamCipher</span> = C_lib.<span class="property">StreamCipher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> S = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">C_</span> = [];</span><br><span class="line">        <span class="keyword">var</span> G = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Rabbit</span> = C_algo.<span class="property">Rabbit</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> K = <span class="variable language_">this</span>.<span class="property">_key</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">iv</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    K[i] = (((K[i] &lt;&lt; <span class="number">8</span>) | (K[i] &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((K[i] &lt;&lt; <span class="number">24</span>) | (K[i] &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> X = <span class="variable language_">this</span>.<span class="property">_X</span> = [K[<span class="number">0</span>], (K[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">16</span>), K[<span class="number">1</span>], (K[<span class="number">0</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>), K[<span class="number">2</span>], (K[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">16</span>), K[<span class="number">3</span>], (K[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>)];</span><br><span class="line">                <span class="keyword">var</span> C = <span class="variable language_">this</span>.<span class="property">_C</span> = [(K[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">0</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">1</span>] &amp; <span class="number">0x0000ffff</span>), (K[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">1</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">2</span>] &amp; <span class="number">0x0000ffff</span>), (K[<span class="number">0</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">2</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">3</span>] &amp; <span class="number">0x0000ffff</span>), (K[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">3</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">0</span>] &amp; <span class="number">0x0000ffff</span>)];</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_b</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    nextState.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                    C[i] ^= X[(i + <span class="number">4</span>) &amp; <span class="number">7</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">IV</span> = iv.<span class="property">words</span>;</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">IV_0</span> = <span class="variable constant_">IV</span>[<span class="number">0</span>];</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">IV_1</span> = <span class="variable constant_">IV</span>[<span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">var</span> i0 = (((<span class="variable constant_">IV_0</span> &lt;&lt; <span class="number">8</span>) | (<span class="variable constant_">IV_0</span> &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((<span class="variable constant_">IV_0</span> &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">IV_0</span> &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                    <span class="keyword">var</span> i2 = (((<span class="variable constant_">IV_1</span> &lt;&lt; <span class="number">8</span>) | (<span class="variable constant_">IV_1</span> &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((<span class="variable constant_">IV_1</span> &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">IV_1</span> &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                    <span class="keyword">var</span> i1 = (i0 &gt;&gt;&gt; <span class="number">16</span>) | (i2 &amp; <span class="number">0xffff0000</span>);</span><br><span class="line">                    <span class="keyword">var</span> i3 = (i2 &lt;&lt; <span class="number">16</span>) | (i0 &amp; <span class="number">0x0000ffff</span>);</span><br><span class="line">                    C[<span class="number">0</span>] ^= i0;</span><br><span class="line">                    C[<span class="number">1</span>] ^= i1;</span><br><span class="line">                    C[<span class="number">2</span>] ^= i2;</span><br><span class="line">                    C[<span class="number">3</span>] ^= i3;</span><br><span class="line">                    C[<span class="number">4</span>] ^= i0;</span><br><span class="line">                    C[<span class="number">5</span>] ^= i1;</span><br><span class="line">                    C[<span class="number">6</span>] ^= i2;</span><br><span class="line">                    C[<span class="number">7</span>] ^= i3;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                        nextState.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> X = <span class="variable language_">this</span>.<span class="property">_X</span>;</span><br><span class="line">                nextState.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                S[<span class="number">0</span>] = X[<span class="number">0</span>] ^ (X[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                S[<span class="number">1</span>] = X[<span class="number">2</span>] ^ (X[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">5</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                S[<span class="number">2</span>] = X[<span class="number">4</span>] ^ (X[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">7</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                S[<span class="number">3</span>] = X[<span class="number">6</span>] ^ (X[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    S[i] = (((S[i] &lt;&lt; <span class="number">8</span>) | (S[i] &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((S[i] &lt;&lt; <span class="number">24</span>) | (S[i] &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                    M[offset + i] ^= S[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">128</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">64</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">nextState</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> X = <span class="variable language_">this</span>.<span class="property">_X</span>;</span><br><span class="line">            <span class="keyword">var</span> C = <span class="variable language_">this</span>.<span class="property">_C</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                <span class="variable constant_">C_</span>[i] = C[i];</span><br><span class="line">            &#125;</span><br><span class="line">            C[<span class="number">0</span>] = (C[<span class="number">0</span>] + <span class="number">0x4d34d34d</span> + <span class="variable language_">this</span>.<span class="property">_b</span>) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">1</span>] = (C[<span class="number">1</span>] + <span class="number">0xd34d34d3</span> + ((C[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">2</span>] = (C[<span class="number">2</span>] + <span class="number">0x34d34d34</span> + ((C[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">3</span>] = (C[<span class="number">3</span>] + <span class="number">0x4d34d34d</span> + ((C[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">4</span>] = (C[<span class="number">4</span>] + <span class="number">0xd34d34d3</span> + ((C[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">5</span>] = (C[<span class="number">5</span>] + <span class="number">0x34d34d34</span> + ((C[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">6</span>] = (C[<span class="number">6</span>] + <span class="number">0x4d34d34d</span> + ((C[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">7</span>] = (C[<span class="number">7</span>] + <span class="number">0xd34d34d3</span> + ((C[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_b</span> = (C[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> gx = X[i] + C[i];</span><br><span class="line">                <span class="keyword">var</span> ga = gx &amp; <span class="number">0xffff</span>;</span><br><span class="line">                <span class="keyword">var</span> gb = gx &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">                <span class="keyword">var</span> gh = ((((ga * ga) &gt;&gt;&gt; <span class="number">17</span>) + ga * gb) &gt;&gt;&gt; <span class="number">15</span>) + gb * gb;</span><br><span class="line">                <span class="keyword">var</span> gl = (((gx &amp; <span class="number">0xffff0000</span>) * gx) | <span class="number">0</span>) + (((gx &amp; <span class="number">0x0000ffff</span>) * gx) | <span class="number">0</span>);</span><br><span class="line">                G[i] = gh ^ gl;</span><br><span class="line">            &#125;</span><br><span class="line">            X[<span class="number">0</span>] = (G[<span class="number">0</span>] + ((G[<span class="number">7</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">6</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">1</span>] = (G[<span class="number">1</span>] + ((G[<span class="number">0</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">7</span>]) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">2</span>] = (G[<span class="number">2</span>] + ((G[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">0</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">3</span>] = (G[<span class="number">3</span>] + ((G[<span class="number">2</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">1</span>]) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">4</span>] = (G[<span class="number">4</span>] + ((G[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">5</span>] = (G[<span class="number">5</span>] + ((G[<span class="number">4</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">3</span>]) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">6</span>] = (G[<span class="number">6</span>] + ((G[<span class="number">5</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">4</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">7</span>] = (G[<span class="number">7</span>] + ((G[<span class="number">6</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">5</span>]) | <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        C.<span class="property">Rabbit</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">Rabbit</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CTR</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">CTR</span> = <span class="title class_">CryptoJS</span>.<span class="property">lib</span>.<span class="property">BlockCipherMode</span>.<span class="title function_">extend</span>();</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">Encryptor</span> = <span class="variable constant_">CTR</span>.<span class="property">Encryptor</span> = <span class="variable constant_">CTR</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">processBlock</span>: <span class="keyword">function</span> (<span class="params">words, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> cipher = <span class="variable language_">this</span>.<span class="property">_cipher</span></span><br><span class="line">                <span class="keyword">var</span> blockSize = cipher.<span class="property">blockSize</span>;</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">_iv</span>;</span><br><span class="line">                <span class="keyword">var</span> counter = <span class="variable language_">this</span>.<span class="property">_counter</span>;</span><br><span class="line">                <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                    counter = <span class="variable language_">this</span>.<span class="property">_counter</span> = iv.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_iv</span> = <span class="literal">undefined</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> keystream = counter.<span class="title function_">slice</span>(<span class="number">0</span>);</span><br><span class="line">                cipher.<span class="title function_">encryptBlock</span>(keystream, <span class="number">0</span>);</span><br><span class="line">                counter[blockSize - <span class="number">1</span>] = (counter[blockSize - <span class="number">1</span>] + <span class="number">1</span>) | <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; blockSize; i++) &#123;</span><br><span class="line">                    words[offset + i] ^= keystream[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable constant_">CTR</span>.<span class="property">Decryptor</span> = <span class="title class_">Encryptor</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">CTR</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> C = <span class="title class_">CryptoJS</span>;</span><br><span class="line">        <span class="keyword">var</span> C_lib = C.<span class="property">lib</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">StreamCipher</span> = C_lib.<span class="property">StreamCipher</span>;</span><br><span class="line">        <span class="keyword">var</span> C_algo = C.<span class="property">algo</span>;</span><br><span class="line">        <span class="keyword">var</span> S = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">C_</span> = [];</span><br><span class="line">        <span class="keyword">var</span> G = [];</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">RabbitLegacy</span> = C_algo.<span class="property">RabbitLegacy</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> K = <span class="variable language_">this</span>.<span class="property">_key</span>.<span class="property">words</span>;</span><br><span class="line">                <span class="keyword">var</span> iv = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="property">iv</span>;</span><br><span class="line">                <span class="keyword">var</span> X = <span class="variable language_">this</span>.<span class="property">_X</span> = [K[<span class="number">0</span>], (K[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">16</span>), K[<span class="number">1</span>], (K[<span class="number">0</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>), K[<span class="number">2</span>], (K[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">16</span>), K[<span class="number">3</span>], (K[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>)];</span><br><span class="line">                <span class="keyword">var</span> C = <span class="variable language_">this</span>.<span class="property">_C</span> = [(K[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">0</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">1</span>] &amp; <span class="number">0x0000ffff</span>), (K[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">1</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">2</span>] &amp; <span class="number">0x0000ffff</span>), (K[<span class="number">0</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">2</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">3</span>] &amp; <span class="number">0x0000ffff</span>), (K[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (K[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>), (K[<span class="number">3</span>] &amp; <span class="number">0xffff0000</span>) | (K[<span class="number">0</span>] &amp; <span class="number">0x0000ffff</span>)];</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_b</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    nextState.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                    C[i] ^= X[(i + <span class="number">4</span>) &amp; <span class="number">7</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (iv) &#123;</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">IV</span> = iv.<span class="property">words</span>;</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">IV_0</span> = <span class="variable constant_">IV</span>[<span class="number">0</span>];</span><br><span class="line">                    <span class="keyword">var</span> <span class="variable constant_">IV_1</span> = <span class="variable constant_">IV</span>[<span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">var</span> i0 = (((<span class="variable constant_">IV_0</span> &lt;&lt; <span class="number">8</span>) | (<span class="variable constant_">IV_0</span> &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((<span class="variable constant_">IV_0</span> &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">IV_0</span> &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                    <span class="keyword">var</span> i2 = (((<span class="variable constant_">IV_1</span> &lt;&lt; <span class="number">8</span>) | (<span class="variable constant_">IV_1</span> &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((<span class="variable constant_">IV_1</span> &lt;&lt; <span class="number">24</span>) | (<span class="variable constant_">IV_1</span> &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                    <span class="keyword">var</span> i1 = (i0 &gt;&gt;&gt; <span class="number">16</span>) | (i2 &amp; <span class="number">0xffff0000</span>);</span><br><span class="line">                    <span class="keyword">var</span> i3 = (i2 &lt;&lt; <span class="number">16</span>) | (i0 &amp; <span class="number">0x0000ffff</span>);</span><br><span class="line">                    C[<span class="number">0</span>] ^= i0;</span><br><span class="line">                    C[<span class="number">1</span>] ^= i1;</span><br><span class="line">                    C[<span class="number">2</span>] ^= i2;</span><br><span class="line">                    C[<span class="number">3</span>] ^= i3;</span><br><span class="line">                    C[<span class="number">4</span>] ^= i0;</span><br><span class="line">                    C[<span class="number">5</span>] ^= i1;</span><br><span class="line">                    C[<span class="number">6</span>] ^= i2;</span><br><span class="line">                    C[<span class="number">7</span>] ^= i3;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                        nextState.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">M, offset</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> X = <span class="variable language_">this</span>.<span class="property">_X</span>;</span><br><span class="line">                nextState.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                S[<span class="number">0</span>] = X[<span class="number">0</span>] ^ (X[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                S[<span class="number">1</span>] = X[<span class="number">2</span>] ^ (X[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">5</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                S[<span class="number">2</span>] = X[<span class="number">4</span>] ^ (X[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">7</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                S[<span class="number">3</span>] = X[<span class="number">6</span>] ^ (X[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>) ^ (X[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    S[i] = (((S[i] &lt;&lt; <span class="number">8</span>) | (S[i] &gt;&gt;&gt; <span class="number">24</span>)) &amp; <span class="number">0x00ff00ff</span>) | (((S[i] &lt;&lt; <span class="number">24</span>) | (S[i] &gt;&gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xff00ff00</span>);</span><br><span class="line">                    M[offset + i] ^= S[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">128</span> / <span class="number">32</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">64</span> / <span class="number">32</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">nextState</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> X = <span class="variable language_">this</span>.<span class="property">_X</span>;</span><br><span class="line">            <span class="keyword">var</span> C = <span class="variable language_">this</span>.<span class="property">_C</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                <span class="variable constant_">C_</span>[i] = C[i];</span><br><span class="line">            &#125;</span><br><span class="line">            C[<span class="number">0</span>] = (C[<span class="number">0</span>] + <span class="number">0x4d34d34d</span> + <span class="variable language_">this</span>.<span class="property">_b</span>) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">1</span>] = (C[<span class="number">1</span>] + <span class="number">0xd34d34d3</span> + ((C[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">2</span>] = (C[<span class="number">2</span>] + <span class="number">0x34d34d34</span> + ((C[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">3</span>] = (C[<span class="number">3</span>] + <span class="number">0x4d34d34d</span> + ((C[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">4</span>] = (C[<span class="number">4</span>] + <span class="number">0xd34d34d3</span> + ((C[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">5</span>] = (C[<span class="number">5</span>] + <span class="number">0x34d34d34</span> + ((C[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">6</span>] = (C[<span class="number">6</span>] + <span class="number">0x4d34d34d</span> + ((C[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            C[<span class="number">7</span>] = (C[<span class="number">7</span>] + <span class="number">0xd34d34d3</span> + ((C[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>)) | <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_b</span> = (C[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">0</span>) &lt; (<span class="variable constant_">C_</span>[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> gx = X[i] + C[i];</span><br><span class="line">                <span class="keyword">var</span> ga = gx &amp; <span class="number">0xffff</span>;</span><br><span class="line">                <span class="keyword">var</span> gb = gx &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">                <span class="keyword">var</span> gh = ((((ga * ga) &gt;&gt;&gt; <span class="number">17</span>) + ga * gb) &gt;&gt;&gt; <span class="number">15</span>) + gb * gb;</span><br><span class="line">                <span class="keyword">var</span> gl = (((gx &amp; <span class="number">0xffff0000</span>) * gx) | <span class="number">0</span>) + (((gx &amp; <span class="number">0x0000ffff</span>) * gx) | <span class="number">0</span>);</span><br><span class="line">                G[i] = gh ^ gl;</span><br><span class="line">            &#125;</span><br><span class="line">            X[<span class="number">0</span>] = (G[<span class="number">0</span>] + ((G[<span class="number">7</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">7</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">6</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">1</span>] = (G[<span class="number">1</span>] + ((G[<span class="number">0</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">7</span>]) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">2</span>] = (G[<span class="number">2</span>] + ((G[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">1</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">0</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">0</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">3</span>] = (G[<span class="number">3</span>] + ((G[<span class="number">2</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">1</span>]) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">4</span>] = (G[<span class="number">4</span>] + ((G[<span class="number">3</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">3</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">2</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">2</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">5</span>] = (G[<span class="number">5</span>] + ((G[<span class="number">4</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">3</span>]) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">6</span>] = (G[<span class="number">6</span>] + ((G[<span class="number">5</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">5</span>] &gt;&gt;&gt; <span class="number">16</span>)) + ((G[<span class="number">4</span>] &lt;&lt; <span class="number">16</span>) | (G[<span class="number">4</span>] &gt;&gt;&gt; <span class="number">16</span>))) | <span class="number">0</span>;</span><br><span class="line">            X[<span class="number">7</span>] = (G[<span class="number">7</span>] + ((G[<span class="number">6</span>] &lt;&lt; <span class="number">8</span>) | (G[<span class="number">6</span>] &gt;&gt;&gt; <span class="number">24</span>)) + G[<span class="number">5</span>]) | <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        C.<span class="property">RabbitLegacy</span> = <span class="title class_">StreamCipher</span>.<span class="title function_">_createHelper</span>(<span class="title class_">RabbitLegacy</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ());</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">ZeroPadding</span> = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="keyword">function</span> (<span class="params">data, blockSize</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> blockSizeBytes = blockSize * <span class="number">4</span>;</span><br><span class="line">            data.<span class="title function_">clamp</span>();</span><br><span class="line">            data.<span class="property">sigBytes</span> += blockSizeBytes - ((data.<span class="property">sigBytes</span> % blockSizeBytes) || blockSizeBytes);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">unpad</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> dataWords = data.<span class="property">words</span>;</span><br><span class="line">            <span class="keyword">var</span> i = data.<span class="property">sigBytes</span> - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (!((dataWords[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; (<span class="number">24</span> - (i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xff</span>)) &#123;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            data.<span class="property">sigBytes</span> = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">CryptoJS</span>;</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">CryptoJS</span> = <span class="variable language_">module</span>.<span class="property">exports</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// md5 params:  equtype=ANDROID&amp;loginImei=Androidnull&amp;timeStamp=1646833932226&amp;userPwd=a12345678&amp;username=15968079477&amp;key=sdlkjsdljf0j2fsjk</span></span><br><span class="line"><span class="comment">// md5 retval:  c8df94531f9a5450e16ef03568307f30</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSign</span>(<span class="params">user, pwd, time</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> data = <span class="string">&quot;equtype=ANDROID&amp;loginImei=Androidnull&amp;timeStamp=&quot;</span> + time + <span class="string">&quot;&amp;userPwd=&quot;</span> + pwd + <span class="string">&quot;&amp;username=&quot;</span> + user + <span class="string">&quot;&amp;key=sdlkjsdljf0j2fsjk&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="title class_">MD5</span>(data).<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params">user, pwd</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="comment">//time = &quot;1646833932226&quot;;</span></span><br><span class="line">    <span class="keyword">var</span> sign = <span class="title function_">getSign</span>(user, pwd, time).<span class="title function_">toUpperCase</span>();</span><br><span class="line">    <span class="keyword">var</span> _plainText = <span class="string">&#x27;&#123;&quot;equtype&quot;:&quot;ANDROID&quot;,&quot;loginImei&quot;:&quot;Androidnull&quot;,&quot;sign&quot;:&quot;&#x27;</span> + sign + <span class="string">&#x27;&quot;,&quot;timeStamp&quot;:&quot;&#x27;</span> + time + <span class="string">&#x27;&quot;,&quot;userPwd&quot;:&quot;&#x27;</span> + pwd +<span class="string">&#x27;&quot;,&quot;username&quot;:&quot;&#x27;</span> + user + <span class="string">&#x27;&quot;&#125;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(_plainText);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> keyMD5 = <span class="title class_">CryptoJS</span>.<span class="title class_">MD5</span>(<span class="string">&quot;65102933&quot;</span>).<span class="title function_">toString</span>();</span><br><span class="line">    <span class="keyword">var</span> _key = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Hex</span>.<span class="title function_">parse</span>(keyMD5);</span><br><span class="line">    <span class="keyword">var</span> _iv = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;32028092&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="property">DES</span>.<span class="title function_">encrypt</span>(_plainText, _key, &#123;</span><br><span class="line">        <span class="attr">iv</span>: _iv,</span><br><span class="line">        <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span><br><span class="line">    &#125;).<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Base64</span>.<span class="title function_">parse</span>(<span class="string">&quot;eGlhb2ppYW5iYW5n&quot;</span>).<span class="title function_">toString</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(CryptoJS.enc.Hex);</span></span><br><span class="line"><span class="comment">// console.log(CryptoJS.enc.Utf8);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getData</span>(<span class="string">&quot;15968079478&quot;</span>, <span class="string">&quot;a12345677a12345677&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>frida hook的使用</title>
      <link href="/2024/10/02/frida-hook%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/10/02/frida-hook%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="使用frida-hook分析嘟嘟牛加密方法"><a href="#使用frida-hook分析嘟嘟牛加密方法" class="headerlink" title="使用frida-hook分析嘟嘟牛加密方法"></a>使用frida-hook分析嘟嘟牛加密方法</h1><p>首先使用PKiD查壳，发现没有加壳</p><p><img src="/../image/fk1.png"></p><p>查找加密方法时，发现有两个加密函数，使用frida-hook分析走了哪一个加密函数</p><p><img src="/../image/fk2.png"></p><p>frida-hook脚本</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如果是Java hook代码都放到Java.perform中</span></span><br><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">JsonRequest</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.JsonRequest&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;JsonRequest:&quot;</span>,<span class="title class_">JsonRequest</span>);</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">paraMap</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;paraMap&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">paraMap</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">addRequestMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).</span><br><span class="line">    implementation = <span class="keyword">function</span> (<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap&quot;</span>,a,b);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addRequestMap</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注入JS脚本，U表示USB设备，F表示注入到最前端的app，l表示脚本路径，可以使用frida –help查看</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">frida -<span class="variable constant_">UF</span> -l test1.<span class="property">js</span></span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">addRequestMap [object Object] 0</span><br></pre></td></tr></table></figure><ul><li>发现走的是第二个函数</li></ul><p>使用frida-hook获取参数名，向下转型</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">JsonRequest</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.JsonRequest&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;JsonRequest:&quot;</span>,<span class="title class_">JsonRequest</span>);</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">paraMap</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;paraMap&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">paraMap</span>(a);</span><br><span class="line">    &#125;<span class="comment">//implementation不要拼错了</span></span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">addRequestMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).</span><br><span class="line">        implementation = <span class="keyword">function</span> (<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap&quot;</span>,a,b);</span><br><span class="line">        <span class="keyword">var</span> bb = <span class="title class_">Java</span>.<span class="title function_">cast</span>(a,<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.util.HashMap&quot;</span>));</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap:&quot;</span>,bb.<span class="title function_">toString</span>());</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addRequestMap</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>输出如下，发现此处还是没有加密，继续往下分析</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">addRequestMap: &#123;loginImei=Androidnull, equtype=ANDROID, userPwd=gydgyhrrf, username=13859396229&#125;</span><br></pre></td></tr></table></figure><p>发现此处进行了加密</p><p><img src="/../image/fk3.png"></p><p>进入paraMap函数，查看code的值</p><p><img src="/../image/fk4.png"></p><p>hook md5函数，查看传入的参数的值，以及返回值</p><p><img src="/../image/fk5.png"></p><p>hook代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">JsonRequest</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.JsonRequest&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;JsonRequest:&quot;</span>,<span class="title class_">JsonRequest</span>);</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">paraMap</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;paraMap&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">paraMap</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">addRequestMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).</span><br><span class="line">        implementation = <span class="keyword">function</span> (<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap&quot;</span>,a,b);</span><br><span class="line">        <span class="keyword">var</span> bb = <span class="title class_">Java</span>.<span class="title function_">cast</span>(a,<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.util.HashMap&quot;</span>));</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap:&quot;</span>,bb.<span class="title function_">toString</span>());</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addRequestMap</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.util.Utils&quot;</span>);</span><br><span class="line">    utils.<span class="property">md5</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;md5 params:&quot;</span>,a);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.<span class="title function_">md5</span>(a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;md5 retval:&quot;</span>,retval);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Pixel XL::嘟嘟牛在线]-&gt; addRequestMap [object Object] 0</span><br><span class="line">addRequestMap: &#123;loginImei=Androidnull, equtype=ANDROID, userPwd=gydgyhrrf, username=13859396229&#125;                                      </span><br><span class="line">md5 params: equtype=ANDROID&amp;loginImei=Androidnull&amp;timeStamp=1728599809711&amp;userPwd=gydgyhrrf&amp;username=13859396229&amp;key=sdlkjsdljf0j2fsjk</span><br><span class="line">md5 retval: 02c804895cd29c929988b7997a7bb436             </span><br></pre></td></tr></table></figure><p>hook encodeDesMap查看code，desKey，desIV的值</p><p>hook代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">JsonRequest</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.JsonRequest&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;JsonRequest:&quot;</span>,<span class="title class_">JsonRequest</span>);</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">paraMap</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;paraMap&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">paraMap</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">addRequestMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).</span><br><span class="line">        implementation = <span class="keyword">function</span> (<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap&quot;</span>,a,b);</span><br><span class="line">        <span class="keyword">var</span> bb = <span class="title class_">Java</span>.<span class="title function_">cast</span>(a,<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.util.HashMap&quot;</span>));</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap:&quot;</span>,bb.<span class="title function_">toString</span>());</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addRequestMap</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.util.Utils&quot;</span>);</span><br><span class="line">    utils.<span class="property">md5</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;md5 params:&quot;</span>,a);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.<span class="title function_">md5</span>(a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;md5 retval:&quot;</span>,retval);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> requestUtil = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.RequestUtil&quot;</span>);</span><br><span class="line">    requestUtil.<span class="property">encodeDesMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.lang.String&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a,b,c</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encdeDesMap params:&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap key:&quot;</span>,b);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap iv&quot;</span>,c);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.<span class="title function_">encodeDesMap</span>(a,b,c);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap retval:&quot;</span>,retval);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JsonRequest: &lt;class: com.dodonew.online.http.JsonRequest&gt;</span><br><span class="line">JsonRequest: &lt;class: com.dodonew.online.http.JsonRequest&gt;</span><br><span class="line">addRequestMap [object Object] 0</span><br><span class="line">addRequestMap: &#123;loginImei=Androidnull, equtype=ANDROID, userPwd=gydgyhrrf, username=13859396229&#125;</span><br><span class="line">md5 params: equtype=ANDROID&amp;loginImei=Androidnull&amp;timeStamp=1728601481789&amp;userPwd=gydgyhrrf&amp;username=13859396229&amp;key=sdlkjsdljf0j2fsjk</span><br><span class="line">md5 retval: 57c217fe319182be95d896a5e2502854</span><br><span class="line">encdeDesMap params: &#123;&quot;equtype&quot;:&quot;ANDROID&quot;,&quot;loginImei&quot;:&quot;Androidnull&quot;,&quot;sign&quot;:&quot;57C217FE319182BE95D896A5E2502854&quot;,&quot;timeStamp&quot;:&quot;1728601481789&quot;,&quot;userPwd&quot;:&quot;gydgyhrrf&quot;,&quot;username</span><br><span class="line">&quot;:&quot;13859396229&quot;&#125;</span><br><span class="line">encodeDesMap key: 65102933</span><br><span class="line">encodeDesMap iv 32028092</span><br><span class="line">encodeDesMap retval: NIszaqFPos1vd0pFqKlB42Np5itPxaNH//FDsRnlBfgL4lcVxjXii/UNcdXYMk0Er+dH33DGoDYP</span><br><span class="line">hXPheB+HJlbk+UQlndpOERxWUpVEH5lR+rYkg4GVFatSq54cC2sLmRnM1tLb+nq8t7I/YCJyPvXA</span><br><span class="line">NgfCzdVQgEs8ynCP/+0W/6bJTIcUl1kJGmZfCLCF2cTBay+b/HIjQFwIBJmx1Sjljg8+wUZk</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="hook构造函数"><a href="#hook构造函数" class="headerlink" title="hook构造函数"></a>hook构造函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">JsonRequest</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.JsonRequest&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;JsonRequest:&quot;</span>,<span class="title class_">JsonRequest</span>);</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">paraMap</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;paraMap&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">paraMap</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">JsonRequest</span>.<span class="property">addRequestMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.util.Map&#x27;</span>, <span class="string">&#x27;int&#x27;</span>).</span><br><span class="line">        implementation = <span class="keyword">function</span> (<span class="params">a,b</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap&quot;</span>,a,b);</span><br><span class="line">        <span class="keyword">var</span> bb = <span class="title class_">Java</span>.<span class="title function_">cast</span>(a,<span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;java.util.HashMap&quot;</span>));</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;addRequestMap:&quot;</span>,bb.<span class="title function_">toString</span>());</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addRequestMap</span>(a,b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> utils = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.util.Utils&quot;</span>);</span><br><span class="line">    utils.<span class="property">md5</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;md5 params:&quot;</span>,a);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.<span class="title function_">md5</span>(a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;md5 retval:&quot;</span>,retval);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> requestUtil = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.dodonew.online.http.RequestUtil&quot;</span>);</span><br><span class="line">    requestUtil.<span class="property">encodeDesMap</span>.<span class="title function_">overload</span>(<span class="string">&#x27;java.lang.String&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>, <span class="string">&#x27;java.lang.String&#x27;</span>).<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a,b,c</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encdeDesMap params:&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap key:&quot;</span>,b);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap iv&quot;</span>,c);</span><br><span class="line">        <span class="keyword">var</span> retval = <span class="variable language_">this</span>.<span class="title function_">encodeDesMap</span>(a,b,c);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap retval:&quot;</span>,retval);</span><br><span class="line">        <span class="keyword">return</span> retval;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> dEsKeySpec = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.spec.DESKeySpec&quot;</span>);</span><br><span class="line">    dEsKeySpec.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>)</span><br><span class="line">        .<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;encodeDesMap params:&quot;</span>,a);</span><br><span class="line">        <span class="variable language_">this</span>.$init(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="主动调用app中的静态函数"><a href="#主动调用app中的静态函数" class="headerlink" title="主动调用app中的静态函数"></a>主动调用app中的静态函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> base64 = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;android.util.Base64&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dEsKeySpec = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;javax.crypto.spec.DESKeySpec&quot;</span>);</span><br><span class="line">dEsKeySpec.<span class="property">$init</span>.<span class="title function_">overload</span>(<span class="string">&#x27;[B&#x27;</span>)</span><br><span class="line">    .<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;DESKeySpec params:&quot;</span>,base64.<span class="title function_">encodeToString</span>(a,<span class="number">0</span>));</span><br><span class="line">    <span class="variable language_">this</span>.$init(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS快速入门</title>
      <link href="/2024/09/30/JS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/2024/09/30/JS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript介绍"><a href="#JavaScript介绍" class="headerlink" title="JavaScript介绍"></a>JavaScript介绍</h2><p>JavaScript是一种轻量级的脚本语言。所谓”脚本语言”，指的是它不具备开发操作系统的能力，而是用来编写其他大型应用程序的”脚本”。</p><h2 id="JS的语句标识符"><a href="#JS的语句标识符" class="headerlink" title="JS的语句标识符"></a>JS的语句标识符</h2><h3 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h3><p>JavaScript程序的单位是行(line)，也就是一行一行的执行。一般情况下，每一行就是一个语句</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> num = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> username = <span class="string">&quot;iwen&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> age = <span class="number">20</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> people_zhangsan = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> $Zzhangsan = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> _zhangsan = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> $_zhangsan = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> zhangsan1 = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> lzhangsan = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> 张三 = <span class="string">&quot;张三&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>语句以分号结尾，一个封号就代表语句结束</p><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>标识符指的是用来标识各种值的合法名称。最常见的标识符就是变量名</p><p>标识符是由：字母、美元($)、下划线(_)、和数字组成，其中数字不能开头</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h4 id="变量的重新赋值"><a href="#变量的重新赋值" class="headerlink" title="变量的重新赋值"></a>变量的重新赋值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">num = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h4 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h4><p>JavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。这早晨地结果，就是所有地变量地声明语句，都会被提升到代码地头部，这就叫做变量提升(hoisting)。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//输出undefined</span></span><br></pre></td></tr></table></figure><h2 id="JS引入文件"><a href="#JS引入文件" class="headerlink" title="JS引入文件"></a>JS引入文件</h2><h3 id="嵌入到HTML文件中"><a href="#嵌入到HTML文件中" class="headerlink" title="嵌入到HTML文件中"></a>嵌入到HTML文件中</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> age = <span class="number">20</span>;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引入本地独立JS文件"><a href="#引入本地独立JS文件" class="headerlink" title="引入本地独立JS文件"></a>引入本地独立JS文件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./itbaizhan.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引入网络来源文件"><a href="#引入网络来源文件" class="headerlink" title="引入网络来源文件"></a>引入网络来源文件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;http://code.jquery.com/jquery1.2.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JS注释与输出方式"><a href="#JS注释与输出方式" class="headerlink" title="JS注释与输出方式"></a>JS注释与输出方式</h2><h3 id="JS注释"><a href="#JS注释" class="headerlink" title="JS注释"></a>JS注释</h3><p>源码中的注释是不被引擎所解释地，它的作用是对代码进行解释。JS提供两种注释的写法：一种是单行注释，用&#x2F;&#x2F;起头；另一种是多行注释，放在&#x2F;和&#x2F;之间。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这是单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="嵌入在HTML文件中的注释"><a href="#嵌入在HTML文件中的注释" class="headerlink" title="嵌入在HTML文件中的注释"></a>嵌入在HTML文件中的注释</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是HTML中的注释--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>快捷方式：Ctrl + &#x2F;</li></ul><h3 id="JS的输出方式"><a href="#JS的输出方式" class="headerlink" title="JS的输出方式"></a>JS的输出方式</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;要输出的内容&quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;要删除的内容&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;要输出的内容&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><h4 id="数值-数字类型"><a href="#数值-数字类型" class="headerlink" title="数值&#x2F;数字类型"></a>数值&#x2F;数字类型</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h4 id="字符串类型：被双引号或单引号包裹的类型就是字符串类型"><a href="#字符串类型：被双引号或单引号包裹的类型就是字符串类型" class="headerlink" title="字符串类型：被双引号或单引号包裹的类型就是字符串类型"></a>字符串类型：被双引号或单引号包裹的类型就是字符串类型</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;iwen&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> name2 = <span class="string">&quot;乐乐&quot;</span></span><br></pre></td></tr></table></figure><h4 id="布尔类型：计算机是由0和1组成-0：false-1：true"><a href="#布尔类型：计算机是由0和1组成-0：false-1：true" class="headerlink" title="布尔类型：计算机是由0和1组成 0：false  1：true"></a>布尔类型：计算机是由0和1组成 0：false  1：true</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h3 id="合成类型-复活节类型"><a href="#合成类型-复活节类型" class="headerlink" title="合成类型(复活节类型)"></a>合成类型(复活节类型)</h3><h4 id="对象：因为对象往往是多个原始类型的值合成，可以看作是一个存放各种数值的容器"><a href="#对象：因为对象往往是多个原始类型的值合成，可以看作是一个存放各种数值的容器" class="headerlink" title="对象：因为对象往往是多个原始类型的值合成，可以看作是一个存放各种数值的容器"></a>对象：因为对象往往是多个原始类型的值合成，可以看作是一个存放各种数值的容器</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;乐乐&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">20</span>,</span><br><span class="line">    <span class="attr">hunyin</span>:<span class="literal">false</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="typeof运算符-判断基本数据类型使用"><a href="#typeof运算符-判断基本数据类型使用" class="headerlink" title="typeof运算符(判断基本数据类型使用)"></a>typeof运算符(判断基本数据类型使用)</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> age);<span class="comment">//number</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;lele&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> name);<span class="comment">//string</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> flag);<span class="comment">//boolean</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> user = &#123;&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> user)<span class="comment">//object</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> []);<span class="comment">//object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">null</span>);<span class="comment">//object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">undefined</span>);<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure><ul><li>null一般代表对象为”没有”</li><li>undefined一般代表数值为”没有”</li></ul><h2 id="运算符之算数运算符"><a href="#运算符之算数运算符" class="headerlink" title="运算符之算数运算符"></a>运算符之算数运算符</h2><h3 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + num2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1 - num2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1 * num2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1 / num2);</span><br></pre></td></tr></table></figure><h3 id="取余"><a href="#取余" class="headerlink" title="取余"></a>取余</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">console</span>(num1 % num2);</span><br></pre></td></tr></table></figure><h3 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1++);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num1--);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(++num1);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(--num1);</span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(1&gt;2);</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li><p>不能双引号中嵌套双引号，或者单引号中嵌套单引号</p></li><li><p>如果要在单引号字符串的内部使用单引号，就必须在内部的单引号前面加上反斜杠，用来转义。双引号内部使用双引号也是如此</p></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;我真的\&quot;好哦哦\&quot;&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str7.<span class="property">length</span>);<span class="comment">//输出字符串长度</span></span><br></pre></td></tr></table></figure><h2 id="字符串常用方法"><a href="#字符串常用方法" class="headerlink" title="字符串常用方法"></a>字符串常用方法</h2><h3 id="charAt：返回指定位置的字符，参数是从0开始编号的"><a href="#charAt：返回指定位置的字符，参数是从0开始编号的" class="headerlink" title="charAt：返回指定位置的字符，参数是从0开始编号的"></a>charAt：返回指定位置的字符，参数是从0开始编号的</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&#x27;itbaizhan&#x27;</span>);</span><br><span class="line">s.<span class="title function_">charAt</span>(<span class="number">1</span>);</span><br><span class="line">s.<span class="title function_">charAt</span>(s.<span class="property">length</span>-<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="concat-：用于连接两个字符串，返回一个新字符串，不改变原字符串"><a href="#concat-：用于连接两个字符串，返回一个新字符串，不改变原字符串" class="headerlink" title="concat()：用于连接两个字符串，返回一个新字符串，不改变原字符串"></a>concat()：用于连接两个字符串，返回一个新字符串，不改变原字符串</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s1 = <span class="string">&quot;lll&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">&quot;eee&quot;</span>;</span><br><span class="line">s1.<span class="title function_">concat</span>(s2);</span><br></pre></td></tr></table></figure><h3 id="substring-：用于从原字符串取出子字符串并返回，不改变远字符串。它的第一个参数表示子字符串的开始的位置，第二个位置表示结束的位置-返回结果不含该位置"><a href="#substring-：用于从原字符串取出子字符串并返回，不改变远字符串。它的第一个参数表示子字符串的开始的位置，第二个位置表示结束的位置-返回结果不含该位置" class="headerlink" title="substring()：用于从原字符串取出子字符串并返回，不改变远字符串。它的第一个参数表示子字符串的开始的位置，第二个位置表示结束的位置(返回结果不含该位置)"></a>substring()：用于从原字符串取出子字符串并返回，不改变远字符串。它的第一个参数表示子字符串的开始的位置，第二个位置表示结束的位置(返回结果不含该位置)</h3><h3 id="substr-：用于从原字符串取出子字符串并返回，不改变源字符串，跟substring方法的作用相同，第一个参数是子字符串的开始位置-从0开始计算-，第二个参数是子字符串的长度"><a href="#substr-：用于从原字符串取出子字符串并返回，不改变源字符串，跟substring方法的作用相同，第一个参数是子字符串的开始位置-从0开始计算-，第二个参数是子字符串的长度" class="headerlink" title="substr()：用于从原字符串取出子字符串并返回，不改变源字符串，跟substring方法的作用相同，第一个参数是子字符串的开始位置(从0开始计算)，第二个参数是子字符串的长度"></a>substr()：用于从原字符串取出子字符串并返回，不改变源字符串，跟substring方法的作用相同，第一个参数是子字符串的开始位置(从0开始计算)，第二个参数是子字符串的长度</h3><h3 id="indexOf-：用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回-1，就表示不匹配"><a href="#indexOf-：用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回-1，就表示不匹配" class="headerlink" title="indexOf()：用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回-1，就表示不匹配"></a>indexOf()：用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回-1，就表示不匹配</h3><h3 id="trim-：用于取出字符串两端的空格，返回一个新的字符串，不改变原字符串"><a href="#trim-：用于取出字符串两端的空格，返回一个新的字符串，不改变原字符串" class="headerlink" title="trim()：用于取出字符串两端的空格，返回一个新的字符串，不改变原字符串"></a>trim()：用于取出字符串两端的空格，返回一个新的字符串，不改变原字符串</h3><h3 id="split-：按照给定规则分割字符串，返回一个由分割出来的字符串组成的数组"><a href="#split-：按照给定规则分割字符串，返回一个由分割出来的字符串组成的数组" class="headerlink" title="split()：按照给定规则分割字符串，返回一个由分割出来的字符串组成的数组"></a>split()：按照给定规则分割字符串，返回一个由分割出来的字符串组成的数组</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;it|sxt|baizhan&#x27;</span>.<span class="title function_">split</span>(<span class="string">&#x27;|&#x27;</span>)<span class="comment">//[&quot;it&quot;,&quot;sxt&quot;,&quot;baizhan&quot;]</span></span><br></pre></td></tr></table></figure><h2 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h2><h3 id="Array-isArray-：用于判断是否是数组"><a href="#Array-isArray-：用于判断是否是数组" class="headerlink" title="Array.isArray()：用于判断是否是数组"></a>Array.isArray()：用于判断是否是数组</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var arr = [10,20,30];</span><br><span class="line">console.log(Array.isArray(arr));</span><br></pre></td></tr></table></figure><h3 id="push-：用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组"><a href="#push-：用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组" class="headerlink" title="push()：用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组"></a>push()：用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度。注意，该方法会改变原数组</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="string">&quot;尚学堂&quot;</span>);</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="string">&quot;itbaizhan&quot;</span>);</span><br><span class="line">arr.<span class="title function_">push</span>(trur,&#123;&#125;);</span><br></pre></td></tr></table></figure><h3 id="pop-：用于删除数组的最后一个元素，并返回该数组。注意，该方法会改变原数组"><a href="#pop-：用于删除数组的最后一个元素，并返回该数组。注意，该方法会改变原数组" class="headerlink" title="pop()：用于删除数组的最后一个元素，并返回该数组。注意，该方法会改变原数组()"></a>pop()：用于删除数组的最后一个元素，并返回该数组。注意，该方法会改变原数组()</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;尚学堂&#x27;</span>,<span class="string">&#x27;itbaizhan&#x27;</span>,<span class="string">&#x27;WEB前端&#x27;</span>];</span><br><span class="line">arr.<span class="title function_">pop</span>()</span><br></pre></td></tr></table></figure><h3 id="shift-：用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组"><a href="#shift-：用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组" class="headerlink" title="shift()：用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组"></a>shift()：用于删除数组的第一个元素，并返回该元素。注意，该方法会改变原数组</h3><h3 id="join-：方法用以指定参数作为分割符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔"><a href="#join-：方法用以指定参数作为分割符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔" class="headerlink" title="join()：方法用以指定参数作为分割符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔"></a>join()：方法用以指定参数作为分割符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">join</span>());<span class="comment">//10,20,30,40</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>));<span class="comment">//10|20|30|40</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>));<span class="comment">//10203040</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>));<span class="comment">//10 20 30 40</span></span><br></pre></td></tr></table></figure><p>如果数组成员是undefiend或空位，会被转成字符串</p><h3 id="concat-：用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变"><a href="#concat-：用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变" class="headerlink" title="concat()：用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变"></a>concat()：用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变</h3><h3 id="reverse-：用于颠倒排列数组元素，返回改变后的数组。注意，该方法将改变原数组"><a href="#reverse-：用于颠倒排列数组元素，返回改变后的数组。注意，该方法将改变原数组" class="headerlink" title="reverse()：用于颠倒排列数组元素，返回改变后的数组。注意，该方法将改变原数组"></a>reverse()：用于颠倒排列数组元素，返回改变后的数组。注意，该方法将改变原数组</h3><h3 id="indexOf：用于返回给定元素在数组中第一次出现的位置，如果没有则返回-1"><a href="#indexOf：用于返回给定元素在数组中第一次出现的位置，如果没有则返回-1" class="headerlink" title="indexOf：用于返回给定元素在数组中第一次出现的位置，如果没有则返回-1"></a>indexOf：用于返回给定元素在数组中第一次出现的位置，如果没有则返回-1</h3><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h3><p>function命令：function命令声明的代码区块，就是一个函数。function命令后面是函数名，函数名后面是是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">print</span>(<span class="params">s</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数名的提升"><a href="#函数名的提升" class="headerlink" title="函数名的提升"></a>函数名的提升</h3><p>JavaScript引擎将函数名视同变量名，所以采用funtion命名声明函数时，整个函数会像变量一样，被提升到代码头部</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">add</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;itbaizhan&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="string">&#x27;13&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FridaHook环境搭建</title>
      <link href="/2024/09/29/FridaHook%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/09/29/FridaHook%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="frida的卸载"><a href="#frida的卸载" class="headerlink" title="frida的卸载"></a>frida的卸载</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip uninstall frida;</span><br><span class="line">pip uninstall frida-tools;</span><br></pre></td></tr></table></figure><h3 id="frida的安装"><a href="#frida的安装" class="headerlink" title="frida的安装"></a>frida的安装</h3><p>这里有个一直报错的点，需要下载对应的egg文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==14.2.18</span><br><span class="line">pip install frida-tools==9.2.5</span><br></pre></td></tr></table></figure><h3 id="检验frida是否安装成功"><a href="#检验frida是否安装成功" class="headerlink" title="检验frida是否安装成功"></a>检验frida是否安装成功</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida --version，出来版本号说明frida-tools安装成功</span><br><span class="line">python</span><br><span class="line">import frida，如果没有任何报错，代表安装的没有问题</span><br></pre></td></tr></table></figure><h3 id="安装frida-server"><a href="#安装frida-server" class="headerlink" title="安装frida-server"></a>安装frida-server</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push frida-server-14.2.18-android-arm64 /data/local/tmp/</span><br></pre></td></tr></table></figure><h3 id="手机端启动frida-server"><a href="#手机端启动frida-server" class="headerlink" title="手机端启动frida-server"></a>手机端启动frida-server</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 777 /data/local/tmp/frida-server-14.2.18-android-arm64</span><br><span class="line">/data/local/tmp/frida-server-14.2.18-android-arm64 &amp;</span><br><span class="line">//启动成功后会显示</span><br><span class="line">[1] 21228</span><br></pre></td></tr></table></figure><h3 id="结束frida-server的方法"><a href="#结束frida-server的方法" class="headerlink" title="结束frida-server的方法"></a>结束frida-server的方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkill frida-server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>app界面控件查看-通过控件定位代码</title>
      <link href="/2024/09/29/app%E7%95%8C%E9%9D%A2%E6%8E%A7%E4%BB%B6%E6%9F%A5%E7%9C%8B-%E9%80%9A%E8%BF%87%E6%8E%A7%E4%BB%B6%E5%AE%9A%E4%BD%8D%E4%BB%A3%E7%A0%81/"/>
      <url>/2024/09/29/app%E7%95%8C%E9%9D%A2%E6%8E%A7%E4%BB%B6%E6%9F%A5%E7%9C%8B-%E9%80%9A%E8%BF%87%E6%8E%A7%E4%BB%B6%E5%AE%9A%E4%BD%8D%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="app界面控件的查看"><a href="#app界面控件的查看" class="headerlink" title="app界面控件的查看"></a>app界面控件的查看</h1><p><img src="/../image/six1.png"></p><p><img src="/../image/six2.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>抓包环境配置</title>
      <link href="/2024/09/26/%E6%8A%93%E5%8C%85%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/09/26/%E6%8A%93%E5%8C%85%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h2><p><img src="/../image/zb1.png"></p><p><img src="/../image/zb2.png"></p><ul><li><p>虚拟机桥接模式不能使用校园网</p></li><li><p>public.xml中显示硬编码和name的关系，string.xml中显示name和字符串的关系</p></li></ul><p><img src="/../image/zb3.png"></p><h3 id="r0capture的使用方法"><a href="#r0capture的使用方法" class="headerlink" title="r0capture的使用方法"></a>r0capture的使用方法</h3><p>1、配置python环境</p><p>2、安装frida和frida-tools</p><p>这里指定版本会出问题，默认用最新的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida</span><br><span class="line">pip install frida-tools</span><br></pre></td></tr></table></figure><p>3、将frida-server推送进手机端</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push frida-server-14.2.18-android-arm64 /data/local/tmp/</span><br></pre></td></tr></table></figure><p>4、手机端启动frida-server</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 777 /data/local/tmp/frida-server-14.2.18-android-arm64//提升权限</span><br><span class="line">/data/local/tmp/frida-server-14.2.18-android-arm64 &amp;</span><br><span class="line">[1] 21228</span><br></pre></td></tr></table></figure><p>5、PC端</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">attach模式，抓包内容可以保存成pcap文件供后续分析</span><br><span class="line">python r0capture.py -U com.qiyi.video -v -p iqiyi.pcap</span><br><span class="line">spawn模式</span><br><span class="line">python r0capture.py -U -f com.qiyi.video -v</span><br></pre></td></tr></table></figure><h3 id="查看手机端进程"><a href="#查看手机端进程" class="headerlink" title="查看手机端进程"></a>查看手机端进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell ps 所有进程</span><br><span class="line">adb shell ps | findstr com.qiyi.video 查找具体进程</span><br></pre></td></tr></table></figure><h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><p><img src="/../image/http1.png"></p><p><img src="/../image/http2.png"></p><p><img src="/../image/http3.png"></p><p><img src="/../image/http4.png"></p><p><img src="/../image/http5.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AS基本使用</title>
      <link href="/2024/09/25/AS%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/09/25/AS%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Android开发入门"><a href="#Android开发入门" class="headerlink" title="Android开发入门"></a>Android开发入门</h2><p><img src="/../image/third6.png"></p><p><img src="/../image/third7.png"></p><h1 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">35</span></span><br><span class="line">    buildToolsVersion <span class="string">&quot;35.0.0&quot;</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;com.example.demo&quot;</span></span><br><span class="line">        minSdkVersion <span class="number">16</span></span><br><span class="line">        targetSdkVersion <span class="number">35</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">&quot;1.0&quot;</span></span><br><span class="line"></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">        externalNativeBuild &#123;</span><br><span class="line">            cmake &#123;</span><br><span class="line">                cppFlags <span class="string">&#x27;-std=c++11&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles <span class="title function_">getDefaultProguardFile</span><span class="params">(<span class="string">&#x27;proguard-android-optimize.txt&#x27;</span>)</span>, <span class="string">&#x27;proguard-rules.pro&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">    externalNativeBuild &#123;</span><br><span class="line">        cmake &#123;</span><br><span class="line">            path <span class="title function_">file</span><span class="params">(<span class="string">&#x27;src/main/cpp/CMakeLists.txt&#x27;</span>)</span></span><br><span class="line">            version <span class="string">&#x27;3.10.2&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildFeatures &#123;</span><br><span class="line">        viewBinding <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    </span><br><span class="line">    implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.2.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.android.material:material:1.2.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.0.1&#x27;</span></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.+&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.ext:junit:1.1.2&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.espresso:espresso-core:3.3.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.demo&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Demo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/third8.png"></p><h1 id="安卓程序执行路口"><a href="#安卓程序执行路口" class="headerlink" title="安卓程序执行路口"></a>安卓程序执行路口</h1><p><img src="/../image/third9.png"></p><p>如果app带有application的话，执行入口就在application中的android:name所指向的类中，一般的app里面都没有application，加固的app中一般都有application</p><p>application指向的类程序员能控制的最早的类</p><h1 id="基本控件的使用"><a href="#基本控件的使用" class="headerlink" title="基本控件的使用"></a>基本控件的使用</h1><p><img src="/../image/third10.png"></p><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="使用android-onClick-进行绑定点击事件"><a href="#使用android-onClick-进行绑定点击事件" class="headerlink" title="使用android:onClick 进行绑定点击事件"></a>使用android:onClick 进行绑定点击事件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;283dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;71dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.345&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:onClick</span>=<span class="string">&quot;test&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">public void test(View view) &#123;</span><br><span class="line">    Log.d(&quot;xiaojianbang&quot;,&quot;test test&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用id进行绑定"><a href="#使用id进行绑定" class="headerlink" title="使用id进行绑定"></a>使用id进行绑定</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;283dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;71dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.345&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">Button button = binding.button;</span><br><span class="line">button.setOnClickListener(new View.onCLickListener(</span><br><span class="line">@Override</span><br><span class="line">public void onCick(View view)&#123;</span><br><span class="line">Lod.d(&quot;xiaojianbang&quot;,&quot;onClick&quot;);</span><br><span class="line">&#125;</span><br><span class="line">));</span><br></pre></td></tr></table></figure><h3 id="使用多态的方式进行绑定"><a href="#使用多态的方式进行绑定" class="headerlink" title="使用多态的方式进行绑定"></a>使用多态的方式进行绑定</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;283dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;71dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.345&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">Button button = binding.button;</span><br><span class="line">button.newOnClickListener(new MyClick());</span><br><span class="line"></span><br><span class="line">class MyClick implements View.OnClickListener&#123;</span><br><span class="line">@Override</span><br><span class="line">public void onClick(View view)&#123;</span><br><span class="line">Log.d(&quot;xiaojianbang&quot;,onClickMyClick);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="直接让MainActivity实现接口"><a href="#直接让MainActivity实现接口" class="headerlink" title="直接让MainActivity实现接口"></a>直接让MainActivity实现接口</h3><h4 id="有多种按钮时采用这个方法"><a href="#有多种按钮时采用这个方法" class="headerlink" title="有多种按钮时采用这个方法"></a>有多种按钮时采用这个方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity implements </span><br><span class="line"></span><br><span class="line">button.setOnClickListerner(this);</span><br><span class="line"></span><br><span class="line">有多个按钮时，采用view.getId()进行区分</span><br></pre></td></tr></table></figure><h3 id="sdk-tools-bin-uiautomatorviewer-bat可以看到控件id"><a href="#sdk-tools-bin-uiautomatorviewer-bat可以看到控件id" class="headerlink" title="sdk&#x2F;tools&#x2F;bin&#x2F;uiautomatorviewer.bat可以看到控件id"></a>sdk&#x2F;tools&#x2F;bin&#x2F;uiautomatorviewer.bat可以看到控件id</h3><p><img src="/../image/third11.png"></p><p><img src="/../image/third12.png"></p><h2 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a>Toast</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Overrid</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.button:</span><br><span class="line">            Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;onClick&quot;</span>);</span><br><span class="line">            Toast.makeText(Main.<span class="built_in">this</span>,<span class="string">&quot;xiaojianbang&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> binding.textVeiw;</span><br><span class="line"><span class="meta">@Override</span> vodi <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.button:</span><br><span class="line">            Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,MainOnClick);</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>,<span class="string">&quot;xiaojianbang&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">            textView.setText(<span class="string">&quot;lelelele&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在开发的时候，都是采用String.xml来操作字符串</p></li><li><p>在xml文件中，使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:text=&quot;@string/xiao&quot;;</span><br></pre></td></tr></table></figure></li><li><p>在java代码中使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">textView.setText(R.string.xiao)</span><br></pre></td></tr></table></figure></li></ul><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.button():</span><br><span class="line">            Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;onClck&quot;</span>);</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>,<span class="string">&quot;xiaojianbang&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">            textView.setText(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> editText.getText().toString().trim();</span><br><span class="line">            <span class="keyword">if</span>(TextUtile.isEmpty(username))&#123;</span><br><span class="line">                Log.d(<span class="string">&quot;xiaojiambang&quot;</span>,<span class="string">&quot;username is null&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,username);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android常见目录及权限</title>
      <link href="/2024/09/25/android%E5%B8%B8%E8%A7%81%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%9D%83%E9%99%90/"/>
      <url>/2024/09/25/android%E5%B8%B8%E8%A7%81%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Android常用目录"><a href="#Android常用目录" class="headerlink" title="Android常用目录"></a>Android常用目录</h1><p><img src="/../image/third1.png"></p><p><img src="/../image/third2.png"></p><h1 id="Linux权限"><a href="#Linux权限" class="headerlink" title="Linux权限"></a>Linux权限</h1><p><img src="/../image/third3.png"></p><p><img src="/../image/third4.png"></p><p><img src="/../image/third5.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2024/09/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/09/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/Linux1.png"></p><p><img src="/../image/Linux2.png"></p><p><img src="/../image/Linux3.png"></p><p><img src="/../image/Linux4.png"></p><p><img src="/../image/Linux5.png"></p><p><img src="/../image/Linux6.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xjbAndroid</title>
      <link href="/2024/09/22/xjbAndroid/"/>
      <url>/2024/09/22/xjbAndroid/</url>
      
        <content type="html"><![CDATA[<h1 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h1><h2 id="adb工作原理"><a href="#adb工作原理" class="headerlink" title="adb工作原理"></a>adb工作原理</h2><p><img src="/../image/xjbAndroid1.png"></p><h2 id="adb常用命令"><a href="#adb常用命令" class="headerlink" title="adb常用命令"></a>adb常用命令</h2><p><img src="/../image/xjbAndroid2.png"></p><h1 id="真机环境配置"><a href="#真机环境配置" class="headerlink" title="真机环境配置"></a>真机环境配置</h1><p><img src="/../image/xjbAndroid3.png"></p><p><img src="/../image/xjbAndroid4.png"></p><h2 id="谷歌手机工厂镜像"><a href="#谷歌手机工厂镜像" class="headerlink" title="谷歌手机工厂镜像"></a>谷歌手机工厂镜像</h2><p><a href="https://developers.google.com/android/images">https://developers.google.com/android/images</a></p><h2 id="刷机步骤"><a href="#刷机步骤" class="headerlink" title="刷机步骤"></a>刷机步骤</h2><p>1、Bootloader解锁</p><p><img src="/../image/xjbAndroid5.png"></p><p>2、开启开发者选项</p><p><img src="/../image/xjbAndroid6.png"></p><p>3、输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb reboot bootloader;</span><br><span class="line">用fastboot devices进行验证</span><br></pre></td></tr></table></figure><p>4、双击刷机包中的flash_all.bat文件</p><p>5、安装Magsik</p><p>6、使用Magsik修复镜像</p><p>7、将新生成的镜像刷入boot分区</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastboot flash boot C:\Users\Administrator\Desktop\bootnew.img</span><br></pre></td></tr></table></figure><h2 id="root完了之后的步骤"><a href="#root完了之后的步骤" class="headerlink" title="root完了之后的步骤"></a>root完了之后的步骤</h2><p><img src="/../image/xjbAndroid7.png"></p><h1 id="logcat的使用"><a href="#logcat的使用" class="headerlink" title="logcat的使用"></a>logcat的使用</h1><p><img src="/../image/xjbAndroid8.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xjbjava</title>
      <link href="/2024/09/15/xjbjava/"/>
      <url>/2024/09/15/xjbjava/</url>
      
        <content type="html"><![CDATA[<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>\t制表符\n换行符\ \一个\\ “一个”\ ‘一个’</p><h2 id="八大基本数据类型"><a href="#八大基本数据类型" class="headerlink" title="八大基本数据类型"></a>八大基本数据类型</h2><p>数值型：整数类型(byte，short，int，long)、浮点类型(float,double)</p><p>字符型：(char)  char类型为2个字节，本质就是一个数值</p><p>布尔型：(boolean)</p><h3 id="整数型"><a href="#整数型" class="headerlink" title="整数型"></a>整数型</h3><p>byte  1字节 -128~127</p><p>short  2字节</p><p>int  4字节</p><p>long 长整型 8字节 </p><p>出现在代码中的整数，默认为int。声明long常量需后面加L或l</p><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p>float  4字节</p><p>double  8字节</p><p>出现在代码中的小数，默认为double。声明float常量需后面加F或f</p><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><p>char  2字节，可以用来存汉字，char的本质是一个整数，输出的是unicode码对应的字符。如果非要输出一个整数，需要强制转换(int)</p><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h3><p>boolean 1字节</p><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><h3 id="数据类型按精度大小排序"><a href="#数据类型按精度大小排序" class="headerlink" title="数据类型按精度大小排序"></a>数据类型按精度大小排序</h3><p>char -&gt; int -&gt; long -&gt; float -&gt; double</p><p>byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>boolean不转换</p><p>char和short、char和byte之间不进行自动转换</p><p>byte、short、char计算时转换为int类型</p><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><p>包名  全小写</p><p>类名  大驼峰</p><p>变量名、方法名 小驼峰</p><p>常量名 全大写，多个单词用下划线连接</p><h2 id="自增运算"><a href="#自增运算" class="headerlink" title="自增运算"></a>自增运算</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> y++;</span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">y = <span class="number">1</span>;</span><br><span class="line">temp = y;</span><br><span class="line">y = y+<span class="number">1</span>;</span><br><span class="line">c = temp;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">i = i++;</span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">temp = i;</span><br><span class="line">i = i + <span class="number">1</span>;</span><br><span class="line">i = temp;</span><br></pre></td></tr></table></figure><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><p>A  instance  of B 表示A是否是B这个类的对象</p><h3 id="逻辑与短路运算符"><a href="#逻辑与短路运算符" class="headerlink" title="逻辑与短路运算符"></a>逻辑与短路运算符</h3><p>短路&amp;&amp;断路||取反！</p><p>逻辑&amp;逻辑或||逻辑异或^</p><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><p>&amp;不管真假两边都运算</p><p>&amp;&amp;左边为假，右边就不运算</p><p>|不管真假两边都运算</p><p>||左边为真右边就不运算</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//静态初始化</span></span><br><span class="line"><span class="type">char</span>[] chars1 = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span>[] chars2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span> chars3[] = <span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span>[] chars4[] = <span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="comment">//动态初始化</span></span><br><span class="line"><span class="type">char</span>[] chars5 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>];</span><br><span class="line">chars5[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">chars5[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">chars5[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="type">char</span> chars5[] = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>];</span><br><span class="line">chars5[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">chars5[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">chars5[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="type">char</span> chars6[];  <span class="comment">//声明数组</span></span><br><span class="line">chars6 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>]; <span class="comment">//开辟空间</span></span><br><span class="line">chars6[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">chars6[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">chars6[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取数组长度</span></span><br><span class="line"><span class="type">char</span>[] chars7 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> chars7.length;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> [][]arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][];</span><br><span class="line">arr2[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">arr2[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[][] arr3 = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//获取数组长度</span></span><br><span class="line"><span class="type">int</span> <span class="variable">length1</span> <span class="operator">=</span> arr.length;</span><br><span class="line"><span class="type">int</span> <span class="variable">length2</span> <span class="operator">=</span> arr[<span class="number">0</span>].length;</span><br><span class="line"><span class="type">int</span> <span class="variable">length2</span> <span class="operator">=</span> arr[<span class="number">1</span>].length;</span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="type">int</span>[][] arr3 = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;arr3.length;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j&lt;arr3[i].length;j++)&#123;</span><br><span class="line">        System.out.println(arr3[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="十进制转十六进制"><a href="#十进制转十六进制" class="headerlink" title="十进制转十六进制"></a>十进制转十六进制</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">31</span>;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">char</span>[] chars = &#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>&#125;;</span><br><span class="line">        <span class="keyword">while</span>(a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> a%<span class="number">16</span>;</span><br><span class="line">            <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> chars[index];</span><br><span class="line">            stringBuilder.append(temp);</span><br><span class="line">            a/=<span class="number">16</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(stringBuilder.reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java-API中文文档"><a href="#Java-API中文文档" class="headerlink" title="Java API中文文档"></a>Java API中文文档</h3><p><a href="https://www.matools.com/">https://www.matools.com/</a></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><h3 id="静态属性-类属性-与实例属性-对象属性"><a href="#静态属性-类属性-与实例属性-对象属性" class="headerlink" title="静态属性(类属性)与实例属性(对象属性)"></a>静态属性(类属性)与实例属性(对象属性)</h3><p>静态属性，只有一份，可以通过 类名.属性名&#x2F;对象，属性名  来赋值和访问; 实例属性，每个对象都有一份，只能通过对象.属性名来赋值和访问</p><h3 id="静态方法与实例方法-对象方法"><a href="#静态方法与实例方法-对象方法" class="headerlink" title="静态方法与实例方法(对象方法)"></a>静态方法与实例方法(对象方法)</h3><p>静态方法中只能调用静态方法，不能访问实例属性</p><p>实例方法中可以调用静态方法和实例方法，也可以访问静态属性和实例属性</p><h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><p>int sum(int… nums){}</p><p>可变参数，可以当作数组处理</p><p>可变参数的实参可以为0个或任意多个</p><p>可变参数的实参可以为数组</p><p>可变参数的本质就是数组</p><p>可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后一个形参列表中只能出现一个可变参数</p><p><code>@SuppressWarnings(&quot;all&quot;)</code> 是一个 Java 注解，用于抑制编译器在代码中发现的所有警告信息。这个注解通常用于类、方法、字段或局部变量上，目的是阻止编译器显示警告，以便在代码中处理潜在问题时不受警告的干扰。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(sum(<span class="number">5</span>,<span class="number">6</span>));</span><br><span class="line">        <span class="comment">//以数组的方式</span></span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        System.out.println(sum(a));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>... a)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            result += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><h3 id="对象创建流程"><a href="#对象创建流程" class="headerlink" title="对象创建流程"></a>对象创建流程</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">90</span>;</span><br><span class="line">    String name;</span><br><span class="line">    Person(String n,<span class="type">int</span> a)&#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">31</span>);</span><br></pre></td></tr></table></figure><p>加载Person类信息，只会加载一次</p><p>在堆中分配空间(地址)</p><p>完成对象初始化</p><p>​默认初始化  age&#x3D;0 name&#x3D;null</p><p>​显示初始化  age&#x3D;90  name&#x3D;null</p><p>​构造器显示化  age&#x3D;20  name&#x3D;null</p><p>在对象在堆中的地址，返回给p(p是对象名，也可以理解成是对象的引用)</p><h2 id="this-方法"><a href="#this-方法" class="headerlink" title="this(方法)"></a>this(方法)</h2><p>this(实参列表)</p><p>用于构造方法之间的访问，必须是构造器中的第一个语句</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String name)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>(name,<span class="number">30</span>);</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    System.out.println(<span class="built_in">this</span>.name);</span><br><span class="line">    System.out.println(<span class="built_in">this</span>.hashCode());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String dnamem,<span class="type">int</span> age)</span>&#123;</span><br><span class="line">    Cat.age = age;</span><br><span class="line">    System.out.println(<span class="string">&quot;Cat&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><p><img src="/../image/xjbjava1.png"></p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">balance</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Strng <span class="title function_">getPassword</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(password == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;密码设置不能为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(password.length() == <span class="number">6</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.password = password;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;密码必须等于6位&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBalance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> balance;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBalance</span><span class="params">(<span class="type">double</span> balance)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(balance&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;余额必须大于20&quot;</span>);       </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.balance = balance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String naem)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(name == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;名字不能为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.name != <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;名字只能修改一次&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(name.length()&lt;<span class="number">2</span>||name.length()&gt;<span class="number">4</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;名字长度需要在2-4位&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.name = name;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>Java是单继承机制，子类只能直接继承一个父类，所有类都是Object类的一个子类，Ctrl + h 可查看继承关系</p><h4 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojiangbang.java;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">shenghuofei</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getShenghuofei</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shenghuofei;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShenghuofei</span><span class="params">(<span class="type">double</span> shenghuofei)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.shenghuofei = shenghuofei</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java"><a href="#Teacher-java" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">gongzi</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getGongzi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gongzi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGongzi</span><span class="params">(<span class="type">double</span> gongzi)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gongzi = gongzi;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>()&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.setName(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        student.setAge(<span class="number">20</span>);</span><br><span class="line">        student.setShenghuofei(<span class="number">100</span>);</span><br><span class="line">        System.out.println(student.getName())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="父类构造器"><a href="#父类构造器" class="headerlink" title="父类构造器"></a>父类构造器</h2><p>当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器super();</p><p>如果父类没有提供无参的构造器，则须在子类的构造器中用super去指定使用父类的哪个构造器super(参数列表)</p><p>父类构造器的调用不限于直接父类，一直往上追溯到Object类(顶级父类)</p><h4 id="注意：super-和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法"><a href="#注意：super-和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法" class="headerlink" title="注意：super()和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法"></a>注意：super()和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法</h4><h4 id="Main-java-1"><a href="#Main-java-1" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojiangbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(Stirng[] args)</span>&#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;umr&quot;</span>,<span class="number">30</span>,<span class="literal">true</span>,<span class="number">100</span>);</span><br><span class="line">        System.out.println(student.getName());</span><br><span class="line">        </span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>,<span class="literal">true</span>,<span class="number">200</span>);</span><br><span class="line">        System.out.println(teacher.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Person-java-1"><a href="#Person-java-1" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">boolean</span> sex)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person 有参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person 无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java-1"><a href="#Teacher-java-1" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">gongzi</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Teacher 无参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">boolean</span> sex,<span class="type">double</span> gongzi)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.gongzi = gongzi;</span><br><span class="line">        System.out.println(<span class="string">&quot;Teacher 有参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getGongzi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gongzi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGongzi</span><span class="params">(<span class="type">double</span> gongzi)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gongzi = gongzi;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Student-java-1"><a href="#Student-java-1" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">shenghuofei</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">boolean</span> sex,<span class="type">double</span> shenghuofei)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.shenghuofei = shenghuofei;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student 有参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Studnet 无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getShenghuofei</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shenghuofei;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShenghuofei</span><span class="params">(<span class="type">double</span> shenghuofei)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.shenghuofei = shenghuofei;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="super"><a href="#super" class="headerlink" title="super"></a>super</h2><h3 id="super的作用"><a href="#super的作用" class="headerlink" title="super的作用"></a>super的作用</h3><ul><li>子类和父类具有同名属性和方法时，默认使用子类的同名属性和方法。为了访问父类的属性或方法，必须通过super来调用</li><li>super代表父类对象的引用，用于访问父类对象的属性、方法、构造器、</li></ul><h3 id="访问父类的属性-收访问修饰符影响"><a href="#访问父类的属性-收访问修饰符影响" class="headerlink" title="访问父类的属性(收访问修饰符影响)"></a>访问父类的属性(收访问修饰符影响)</h3><ul><li>super.属性名</li></ul><h3 id="访问父类的方法-受访问修饰符的影响"><a href="#访问父类的方法-受访问修饰符的影响" class="headerlink" title="访问父类的方法(受访问修饰符的影响)"></a>访问父类的方法(受访问修饰符的影响)</h3><ul><li>super.方法名(参数列表)</li></ul><h3 id="访问父类的构造器"><a href="#访问父类的构造器" class="headerlink" title="访问父类的构造器"></a>访问父类的构造器</h3><ul><li>super(参数列表)</li></ul><h2 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h2><h3 id="方法重写的特点"><a href="#方法重写的特点" class="headerlink" title="方法重写的特点"></a>方法重写的特点</h3><ul><li>方法重写也叫方法覆盖</li><li>子类方法的名称、参数，与父类完全相同</li><li>子类方法的返回类型和父类方法的返回类型一样，或者父类返回类型的子类，比如父类返回类型时Object，子类方法返回类型是String</li><li>子类方法不能缩小父类方法的访问权限，可以扩大</li></ul><h3 id="重载与重写的区别"><a href="#重载与重写的区别" class="headerlink" title="重载与重写的区别"></a>重载与重写的区别</h3><p>重载：同一个类中，方法名相同，但参数类型、个数或顺序不同，与返回值无关，与修饰符无关</p><p>重写：父类和子类中，方法名相同，参数相同，子类返回类型与父类返回类型一样或者是其子类，子类不能缩小父类的访问范围</p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h4 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h4><p>可以定义多个，与静态属性初始化优先级一样，按定义顺序执行</p><p>随着类加载而执行，只执行一次，执行时机比普通代码块早</p><h3 id="普通代码块"><a href="#普通代码块" class="headerlink" title="普通代码块"></a>普通代码块</h3><p>可以定义多个，与实例属性初始化优先级一样，按定义顺序执行</p><p>随着对象创建而执行，提高构造器代码复用性，每次创建对象都会执行</p><p>先调用父类构造器，接着调用普通代码块，再调用本类构造器</p><h3 id="创建对象时的调用顺序"><a href="#创建对象时的调用顺序" class="headerlink" title="创建对象时的调用顺序"></a>创建对象时的调用顺序</h3><p>1、父类的静态代码块和静态属性</p><p>2、子类的静态代码块和静态属性</p><p>3、父类的普通代码块和普通属性初始化</p><p>4、父类的构造方法</p><p>5、子类的普通代码块和普通属性初始化</p><p>6、子类的构造方法</p><h4 id="静态代码块只能调用静态成员，普通代码块可以调用任意成员"><a href="#静态代码块只能调用静态成员，普通代码块可以调用任意成员" class="headerlink" title="静态代码块只能调用静态成员，普通代码块可以调用任意成员"></a>静态代码块只能调用静态成员，普通代码块可以调用任意成员</h4><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><h4 id="Person-java-2"><a href="#Person-java-2" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java-2"><a href="#Teacher-java-2" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Person-java-3"><a href="#Person-java-3" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java-2"><a href="#Main-java-2" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        test(person);</span><br><span class="line">        test(teacher);</span><br><span class="line">        test(student);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Person p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Person p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Student p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Student p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Teacher p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Teacher p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多态参数"><a href="#多态参数" class="headerlink" title="多态参数"></a>多态参数</h3><p>参数定义成父类类型，就可以传任意子类类型进去</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        test(person);</span><br><span class="line">        test(teacher);</span><br><span class="line">        test(student);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Person p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Person p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="向上转型"><a href="#向上转型" class="headerlink" title="向上转型"></a>向上转型</h3><ul><li>语法：父类类型  引用名 &#x3D; new 子类类型()；</li><li>父类应用指向子类对象</li><li>编译类型看左边，运行类型看右边</li><li>可以调用父类中的所有成员(受访问修饰符影响)</li><li>调用的时候，子类有就用子类的成员，子类没有就找父类的成员(就近原则)</li><li>不能调用子类中的特有成员</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        test(person1);</span><br><span class="line">        test(person2);</span><br><span class="line">        test(person3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Person p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Person p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>多态的前提：两个对象(类)存在继承关系</li><li>属性的值看编译类型</li><li>只要编译能通过，方法都是看运行类型，属性看编译类型</li><li>instanceOf 比较操作符，用于判断对象的运行类型是否为xx类型或是xx类型的子类型</li><li>要调用子类中特有成员，还需要向下转型(其实就是强转)，转回实际类型，瞎转会报错</li></ul><h3 id="多态数组"><a href="#多态数组" class="headerlink" title="多态数组"></a>多态数组</h3><p>数组的定义类型位父类类型，里面保存的实际元素类型为子类类型</p><p>创建1个Person、Student、Teacher对象，都放到一个数组中，遍历该数组成员，调用callPlay方法遍历过程中调用Student、Teacher对象，都放到一个数组中，遍历该数组成员，调用callPlay方法</p><h4 id="Person-java-4"><a href="#Person-java-4" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Student-java-2"><a href="#Student-java-2" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;study&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java-3"><a href="#Teacher-java-3" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">teach</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;teach&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java-3"><a href="#Main-java-3" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    </span><br><span class="line">    Person[] p = <span class="keyword">new</span> <span class="title class_">Person</span>[]&#123;person1,person2,person3&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;p.length;i++)&#123;</span><br><span class="line">        System.out.println(p[i].callPlay());</span><br><span class="line">        <span class="keyword">if</span>(p[i] <span class="keyword">instanceof</span> Student)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> (Student) p[i];</span><br><span class="line">            s.study();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p[i] <span class="keyword">instanceof</span> Teacher)&#123;</span><br><span class="line">            <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> (Teacher) p[i];</span><br><span class="line">            t.teach();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p[i] <span class="keyword">instanceof</span> Person)&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态绑定机制"><a href="#动态绑定机制" class="headerlink" title="动态绑定机制"></a>动态绑定机制</h2><ul><li>当调用对象方法的时候，该方法会和该对象的内存地址&#x2F;运行类型绑定</li><li>当调用对象属性时，没有动态绑定机制，以就近原则为准</li></ul><h2 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h2><ul><li>&#x3D;&#x3D; 既可以判断基本类型，也可以判断引用类型，基本类型判断值，应用类型判断地址</li><li>equals是Object类中的方法，只能判断引用类型，默认判断的是地址是否相等，子类一般会重写equals方法，用于判断内容是否相等，比如Integer、String</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        System.out.println(a==b);</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(student==student1);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">        System.out.println(aa.equals(<span class="string">&quot;xiaojianbang&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">aaa</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">bbb</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        System.out.println(aaa.equals(bbb));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意：字符串都放在字符串常量池中"><a href="#注意：字符串都放在字符串常量池中" class="headerlink" title="注意：字符串都放在字符串常量池中"></a>注意：字符串都放在字符串常量池中</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">p1.name=<span class="string">&quot;xiaojiangbang&quot;</span>;</span><br><span class="line">p2.name=<span class="string">&quot;xiaojiangbang&quot;</span>;</span><br><span class="line">p1.name==p2.name;为真</span><br></pre></td></tr></table></figure><h2 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString"></a>toString</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">tostring</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getClass().getName()+<span class="string">&quot;@&quot;</span>+Integer.toHexString(hashCode());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>默认返回：全类名+@+哈希值的十六进制</li><li>子类往往重写toString方法，用于返回对象的属性信息</li><li>当直接输出一个对象时，toString方法会被默认的调用</li></ul><h2 id="finalize"><a href="#finalize" class="headerlink" title="finalize"></a>finalize</h2><ul><li>子类可以重写该方法，做一些释放资源的操作</li><li>某个对象没有任何引用时，垃圾回收机制就会销毁该对象，销毁前先调用finalize方法</li><li>垃圾回收机制什么时候调用，由系统来决定</li><li>也可以通过System.gc()主动触发垃圾回收机制，但不一定是立马回收</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.gc();</span><br></pre></td></tr></table></figure><h2 id="final"><a href="#final" class="headerlink" title="final"></a>final</h2><h3 id="final应用场景"><a href="#final应用场景" class="headerlink" title="final应用场景"></a>final应用场景</h3><ul><li>不希望类被继承</li><li>不希望类的属性值被修改(常量)</li><li>不希望父类的方法被子类覆盖&#x2F;重写(override)</li><li>不希望局部变量(参数)被修改(局部常量)</li></ul><h4 id="final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值"><a href="#final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值" class="headerlink" title="final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值"></a>final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值</h4><h4 id="final修饰静态属性，可以在定义时、静态代码块中赋初值"><a href="#final修饰静态属性，可以在定义时、静态代码块中赋初值" class="headerlink" title="final修饰静态属性，可以在定义时、静态代码块中赋初值"></a>final修饰静态属性，可以在定义时、静态代码块中赋初值</h4><h3 id="final注意事项"><a href="#final注意事项" class="headerlink" title="final注意事项"></a>final注意事项</h3><ul><li>final修饰属性，必须赋值，并且不能再次修改</li><li>final可以修饰类、属性、方法和局部变量(参数)，不能修饰构造器</li><li>包装类(Integer、Double、Float、Boolean)和String都是final类</li><li>final修饰类，不能被继承，但是可以实例化对象</li><li>final和static搭配使用，不会加载类</li></ul><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>abstract只能修饰类和方法</li><li>用abstract关键字来修饰一个类时，这个类就叫抽象类</li><li>用abstract关键字来修饰一个方法时，这个方法就是抽象方法</li></ul><h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>抽象类可以有任意成员，可以被继承，可以没有抽象方法</li><li>抽象类不能被实例化</li><li>有了抽象方法，则这个类必须声明为abstract</li><li>继承了抽象类，则必须实现抽象类的所有抽象方法，除非它们自己也声明为abstract类</li><li>抽象方法是不能用private、final、static来修饰</li></ul><h4 id="C-java"><a href="#C-java" class="headerlink" title="C.java"></a>C.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">C</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">job</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">calc</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始计算...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        job();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;计算结束...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="A-java"><a href="#A-java" class="headerlink" title="A.java"></a>A.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">job</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">            result+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="B-java"><a href="#B-java" class="headerlink" title="B.java"></a>B.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">job</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                result += i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">interface 接口名&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">&#125;</span><br><span class="line">class 类名 implements 接口名&#123;</span><br><span class="line">    必须实现接口的所有抽象方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jdk7.0前接口里的所有方法都是抽象方法，jdk8.0后接口可以有静态方法(static)、默认方法(default)，可以有具体实现</p><h4 id="USB接口"><a href="#USB接口" class="headerlink" title="USB接口"></a>USB接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">USB</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">default</span> <span class="keyword">void</span> <span class="title function_">moren</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;USB接口的默认方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">jingtai</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;USB接口的静态方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Mouse-java"><a href="#Mouse-java" class="headerlink" title="Mouse.java"></a>Mouse.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mouse</span> <span class="keyword">implements</span> <span class="title class_">USB</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;鼠标开始工作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘停止工作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Keyboard-java"><a href="#Keyboard-java" class="headerlink" title="Keyboard.java"></a>Keyboard.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Keyboard</span> <span class="keyword">implements</span> <span class="title class_">USB</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘开始工作了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘结束工作了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Main-java-4"><a href="#Main-java-4" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Computer.work(<span class="keyword">new</span> <span class="title class_">Mouse</span>());</span><br><span class="line">        Computer.work(<span class="keyword">new</span> <span class="title class_">Keyboard</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(USB usb)</span>&#123;</span><br><span class="line">        usb.start();</span><br><span class="line">        usb.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(USB usb)</span>&#123;</span><br><span class="line">        usb.start();</span><br><span class="line">        usb.stop();</span><br><span class="line">        usb.moren();</span><br><span class="line">        USB.jingtai();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接口注意事项"><a href="#接口注意事项" class="headerlink" title="接口注意事项"></a>接口注意事项</h3><ul><li>接口不能被实例化</li><li>接口的修饰符只能是public和默认，这点和类的修饰符是一样的</li><li>一个接口不能继承其它的类，但是可以继承多个别的接口，用” ,” 隔开</li><li>接口中的方法都是public方法，抽象方法可以不用abstract修饰</li><li>一个普通类实现接口，就必须将接口的所有方法都实现</li><li>抽象类实现接口，可以不用实现接口的方法</li><li>一个类同时可以实现多个接口</li><li>接口中的属性都是public static final 修饰符int a &#x3D; 1;实际上是public static final int a &#x3D; 1;(必须初始化)接口中属性的访问形式：接口名.属性名</li></ul><h3 id="接口的多态传递"><a href="#接口的多态传递" class="headerlink" title="接口的多态传递"></a>接口的多态传递</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">B</span>&#123;&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">implements</span> <span class="title class_">A</span>&#123;&#125;</span><br><span class="line"><span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C</span>();</span><br><span class="line"><span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C</span>();</span><br></pre></td></tr></table></figure><h2 id="IDEA快捷键"><a href="#IDEA快捷键" class="headerlink" title="IDEA快捷键"></a>IDEA快捷键</h2><p><img src="/../image/xjbjava2.jpg"></p><p><img src="/../image/xjbjava3.jpg"></p><h2 id="成员内部类"><a href="#成员内部类" class="headerlink" title="成员内部类"></a>成员内部类</h2><p><img src="/../image/xjbjava4.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">void</span> main(String[] args)&#123;</span><br><span class="line">        <span class="comment">//外部其他类访问内部类</span></span><br><span class="line">        <span class="comment">//第一种方式,通过类的函数返回值</span></span><br><span class="line">        <span class="type">OuterClass</span> <span class="variable">outerclass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> outerClass.test();</span><br><span class="line">        System.out.println(innerClass.getClass().getName());</span><br><span class="line">        <span class="comment">//第二种方式</span></span><br><span class="line">        <span class="type">OuterClass</span> <span class="variable">outClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> outerClass.<span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;PHP&quot;</span>);</span><br><span class="line">        System.out.pringln(innerClass.getClass.getName());</span><br><span class="line"></span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        innerClass.abc();</span><br><span class="line">        System.out.println(outerClass.getClass());</span><br><span class="line">        System.out.println(outerClass.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> InnerClass <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">InnerClass</span> <span class="variable">innnerClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;python&quot;</span>);</span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        <span class="keyword">return</span> innerClass;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass static block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OuterClass</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">InnerClass</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">abc</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="comment">//访问外部类的name</span></span><br><span class="line">            System.out.println(OuterClass.<span class="built_in">this</span>.name);</span><br><span class="line">            <span class="comment">//默认为内部类的name</span></span><br><span class="line">            System.out.println(name);</span><br><span class="line">            System.out.println(sex);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;InnerClass block&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">InnerClass</span><span class="params">(String language)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.language = language;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h2><p><img src="/../image/xjbjava5.png"></p><ul><li>静态内部类不能访问外部类的非静态成员，非静态方法可以调用静态方法和非静态方法，静态方法只能调用静态方法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//外部其他类访问静态内部类</span></span><br><span class="line">        <span class="comment">//第一种方式，通过函数</span></span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> OuterClass.getInnerClass();</span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        </span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">php</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>.InnerClass(<span class="string">&quot;PHP&quot;</span>);</span><br><span class="line">        System.out.println(OuterClass.sex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> InnerClass <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;python&quot;</span>);</span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        <span class="keyword">return</span> innerClass;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass static block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OuterClass</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> InnerClass <span class="title function_">getInnerClass</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">abc</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;InnerClass block&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">InnerClass</span><span class="params">(String language)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.language = language;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="局部内部类"><a href="#局部内部类" class="headerlink" title="局部内部类"></a>局部内部类</h2><p><img src="/../image/xjbjava6.png"></p><p>  局部内部类不能定义静态成员</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojiangbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="type">OuterClass</span> <span class="variable">xiaojianbang</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">    xiaojianbang.getInnerClass();</span><br><span class="line">    xiaojianbang.getInnerClass1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass static block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OuterClass</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getInnerClass</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">InnerClass</span>&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">abc</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                System.out.println(sex);</span><br><span class="line">                <span class="comment">//访问外部成员</span></span><br><span class="line">                System.out.println(OuterClass.<span class="built_in">this</span>.name);</span><br><span class="line">                System.out.println(OuterCLass.sex);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;InnerClass block&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">InnerClass</span><span class="params">(String language)</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.language = language;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">InnerClass</span> <span class="variable">php</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;PHP&quot;</span>);</span><br><span class="line">        php.abc();</span><br><span class="line">        System.out.prinln(php.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h2><p><img src="/../image/xjbjava7.png"></p><p>内部匿名类不能定义静态成员，只有当匿名类别类处于外部类里面的时候，才能使用外部类.this.xxx访问外部类的示例成员</p><h4 id="接口USB-java"><a href="#接口USB-java" class="headerlink" title="接口USB.java"></a>接口USB.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">USB</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽象类USB2-java"><a href="#抽象类USB2-java" class="headerlink" title="抽象类USB2.java"></a>抽象类USB2.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">USB2</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java-5"><a href="#Main-java-5" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">computer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        computer.work(<span class="keyword">new</span> <span class="title class_">USB</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;键盘开始工作了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;键盘停止工作了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        computer.work(<span class="keyword">new</span> <span class="title class_">USB</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;鼠标开始工作了&quot;</span>);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;鼠标结束工作&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="type">USB2</span> <span class="variable">usb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">USB2</span>()&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                System.out.println(USB2.name);</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部类start&quot;</span>);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部类stop&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        usb2.start();</span><br><span class="line">        usb2.stop();</span><br><span class="line">        System.out.println(usb2.getClass().getName());</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">USB2</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部类start2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部了stop2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(USB usb)</span>&#123;</span><br><span class="line">        ubs.start();</span><br><span class="line">        usb.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举类"><a href="#枚举类" class="headerlink" title="枚举类"></a>枚举类</h2><p><img src="/../image/xjbjava8.png"></p><h3 id="自定义枚举类"><a href="#自定义枚举类" class="headerlink" title="自定义枚举类"></a>自定义枚举类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>()&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(StandardCharset.UTF_8);</span><br><span class="line">        System.out.println(Season.SPRING);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Season</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">desc</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SPRING1</span> <span class="operator">=</span> <span class="string">&quot;春天&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">SPRING</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;春天&quot;</span>,<span class="string">&quot;暖和&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">SUMMER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;夏天&quot;</span>,<span class="string">&quot;很热&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">AUTUMN</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;秋天&quot;</span>,<span class="string">&quot;凉爽&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">WINTER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;冬天&quot;</span>,<span class="string">&quot;很冷&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Season&#123;&quot;</span> + <span class="string">&quot;name=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&quot;, desc=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="系统提供的枚举类（枚举对象必须放在枚举类的第一行）"><a href="#系统提供的枚举类（枚举对象必须放在枚举类的第一行）" class="headerlink" title="系统提供的枚举类（枚举对象必须放在枚举类的第一行）"></a>系统提供的枚举类（枚举对象必须放在枚举类的第一行）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(Season.SPRING);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Season</span>&#123;</span><br><span class="line">    <span class="comment">//使用无参构造器创建枚举对象，则小括号可以省略</span></span><br><span class="line">    xxxx,SPRING(<span class="string">&quot;春天&quot;</span>，<span class="string">&quot;暖和&quot;</span>),SUMMER(<span class="string">&quot;夏天&quot;</span>，<span class="string">&quot;很热&quot;</span>)，AUTUMN(<span class="string">&quot;秋天&quot;</span>,<span class="string">&quot;凉爽&quot;</span>),WINTER(<span class="string">&quot;冬天&quot;</span>,<span class="string">&quot;很冷&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">desc</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">(String name, String desc)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Season&#123;&quot;</span> + <span class="string">&quot;name=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&quot;, desc=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="enum相关方法"><a href="#enum相关方法" class="headerlink" title="enum相关方法"></a>enum相关方法</h3><p><img src="/../image/xjbjava9.png"></p><h4 id="使用Javap反编译Season-class"><a href="#使用Javap反编译Season-class" class="headerlink" title="使用Javap反编译Season.class"></a>使用Javap反编译Season.class</h4><p><img src="/../image/xjbjava10.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Season</span> <span class="variable">autumn</span> <span class="operator">=</span> Season.AUTUMN;</span><br><span class="line">        <span class="comment">// name()返回枚举对象的名字</span></span><br><span class="line">        System.out.println(autumn);</span><br><span class="line">        System.out.println(autumn.name());</span><br><span class="line">        <span class="comment">//ordinal()返回枚举对象的次序/编号，从0开始编号</span></span><br><span class="line">        System.out.println(autumn.ordinal());</span><br><span class="line">        <span class="comment">//values()返回定义的所有枚举对象</span></span><br><span class="line">        Season[] seasons = Season.values();</span><br><span class="line">        <span class="comment">//valueOf()将字符串转换成枚举对象，字符串必须为已有枚举对象名，否则报异常</span></span><br><span class="line">        <span class="type">Season</span> <span class="variable">autumn1</span> <span class="operator">=</span> Season.valueOf(<span class="string">&quot;AUTUMN&quot;</span>);</span><br><span class="line">        System.out.println(Season.SUMMER.compareTo(Season.AUTUMN));<span class="comment">//SUMMER的位置减去AUTUMN的位置</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Season</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SPRING(<span class="string">&quot;春天&quot;</span>,<span class="string">&quot;暖和&quot;</span>),SUMMER(<span class="string">&quot;夏天&quot;</span>,<span class="string">&quot;很热&quot;</span>),AUTUMN(<span class="string">&quot;秋天&quot;</span>,<span class="string">&quot;凉爽&quot;</span>),WINTER(<span class="string">&quot;冬天&quot;</span>,<span class="string">&quot;很冷&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">desc</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">(String name,String desc)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Season&#123;&quot;</span> + <span class="string">&quot;name=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&quot;, desc=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p><img src="/../image/xjbjava11.png"></p><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p><img src="/../image/xjbjava12.png">  </p><p><img src="/../image/xjbjava13.png"></p><h2 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h2><p><img src="/../image/xjbjava14.png"></p><p><img src="/../image/xjbjava15.png"></p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p><img src="/../image/xjbjava16.png" alt=" "></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">char</span>[] chars = a.toCharArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> Arrays.toString(chars);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串编码"><a href="#字符串编码" class="headerlink" title="字符串编码"></a>字符串编码</h2><p><img src="/../image/xjbjava17.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xerces.internal.impl.dv.util.HexBin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小肩膀8888&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(name.getBytes(StandardCharsets.UTF_8),StandardCharsets.ISO_8859_1);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] bytes = name.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> Arrays.toString(bytes);</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(bytes.length);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] ISO_bytes = name.getBytes(StandardCharsets.ISO_8859_1);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ISO_s1</span> <span class="operator">=</span> Arrays.toString(ISO_bytes);</span><br><span class="line">        System.out.println(ISO_s1);</span><br><span class="line">        System.out.println(ISO_bytes.length);</span><br><span class="line"></span><br><span class="line">       <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小肩膀8888&quot;</span>;</span><br><span class="line">        <span class="type">char</span>[] chars = name.toCharArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> Arrays.toString(chars);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小肩膀8888&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ISO_s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(name.getBytes(StandardCharsets.UTF_8), StandardCharsets.ISO_8859_1);</span><br><span class="line">        System.out.println(ISO_s);</span><br><span class="line">        String UTF8_s= <span class="keyword">new</span> <span class="title class_">String</span>(ISO_s.getBytes(StandardCharsets.ISO_8859_1), StandardCharsets.UTF_8);</span><br><span class="line">        System.out.println(UTF8_s);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] str_iso_bytes = ISO_s.getBytes(StandardCharsets.ISO_8859_1);</span><br><span class="line">        <span class="type">byte</span>[] str_utf8_bytes = UTF8_s.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        System.out.println(Arrays.toString(str_iso_bytes));</span><br><span class="line">        System.out.println(Arrays.toString(str_utf8_bytes));</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">HexEncodeStr</span> <span class="operator">=</span> HexBin.encode(str_utf8_bytes);</span><br><span class="line">        System.out.println(HexEncodeStr);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] decode = HexBin.decode(HexEncodeStr);</span><br><span class="line">        System.out.println(Arrays.toString(decode));    </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="StringBuffer"><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h2><p><img src="/../image/xjbjava18.png"></p><h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p><img src="/../image/xjbjava19.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] aa = <span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">1</span>,<span class="number">2000</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">99</span>,<span class="number">95</span>,<span class="number">65</span>,<span class="number">33</span>,<span class="number">65</span>,<span class="number">200</span>,<span class="number">900</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(aa));</span><br><span class="line"></span><br><span class="line">        Arrays.sort(aa);</span><br><span class="line">        System.out.println(Arrays.toString(aa));</span><br><span class="line"></span><br><span class="line">        Arrays.sort(aa ,<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="type">int</span>)o1 -(<span class="type">int</span>)o2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BigInteger"><a href="#BigInteger" class="headerlink" title="BigInteger"></a>BigInteger</h2><p><img src="/../image/xjbjava20.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">bigInteger1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;1234567895243532452345341242341234213&quot;</span>);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">bigInteger2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">add</span> <span class="operator">=</span> bigInteger1.add(bigInteger2);</span><br><span class="line">        System.out.println(add);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">sub</span> <span class="operator">=</span> bigInteger1.subtract(bigInteger2);</span><br><span class="line">        System.out.println(sub);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">mul</span> <span class="operator">=</span> bigInteger1.multiply(bigInteger2);</span><br><span class="line">        System.out.println(mul);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">div</span> <span class="operator">=</span> bigInteger1.divide(bigInteger2);</span><br><span class="line">        System.out.println(div);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><p><img src="/../image/xjbjava21.png"></p><h2 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h2><p><img src="/../image/xjbjava22.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Collection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"></span><br><span class="line">        collection.add(<span class="number">100</span>);</span><br><span class="line">        collection.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        collection.add(<span class="literal">false</span>);</span><br><span class="line">        collection.add(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        collection.remove(<span class="literal">null</span>);</span><br><span class="line">        System.out.println(collection);</span><br><span class="line">        collection.remove(<span class="number">1</span>);</span><br><span class="line">        System.out.println(collection);</span><br><span class="line"></span><br><span class="line">        System.out.println(collection.contains(<span class="literal">null</span>));</span><br><span class="line">        System.out.println(collection.size());</span><br><span class="line">        System.out.println(collection.isEmpty());</span><br><span class="line"></span><br><span class="line">        collection.clear();</span><br><span class="line">        <span class="type">Collection</span> <span class="variable">collection2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        collection2.add(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        collection2.add(<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        collection2.add(<span class="string">&quot;xiaojianbang3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        collection.addAll(collection2);</span><br><span class="line">        System.out.println(collection);</span><br><span class="line"></span><br><span class="line">        System.out.println(collection.containsAll(collection2));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p><img src="/../image/xjbjava23.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.add(<span class="number">2</span>,<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">        <span class="type">List</span> <span class="variable">list2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list2.add(<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        list2.add(<span class="string">&quot;umr2&quot;</span>);</span><br><span class="line">        list2.add(<span class="string">&quot;rw2&quot;</span>);</span><br><span class="line">        list2.add(<span class="number">2</span>,<span class="string">&quot;umr2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list2.addAll(<span class="number">0</span>,list);</span><br><span class="line">        System.out.println(list2);</span><br><span class="line"></span><br><span class="line">        System.out.println(list.get(<span class="number">2</span>));</span><br><span class="line">        System.out.println(list2.indexOf(<span class="string">&quot;umr&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(list2.lastIndexOf(<span class="string">&quot;umr2&quot;</span>));</span><br><span class="line"></span><br><span class="line">        list.remove(<span class="string">&quot;umr2&quot;</span>);</span><br><span class="line">        list2.set(<span class="number">1</span>,<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        list2.subList(<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//包含左边不包含右边</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="List的遍历"><a href="#List的遍历" class="headerlink" title="List的遍历"></a>List的遍历</h2><p><img src="/../image/xjbjava24.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator</span> <span class="operator">=</span> list.iterator();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">next</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">        System.out.println(next);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">next2</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">        System.out.println(next2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">nexted</span> <span class="operator">=</span>  iterator.next();</span><br><span class="line">            System.out.println(nexted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Object o : list) &#123;</span><br><span class="line">            System.out.println(o);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;list.size(); i++) &#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h2><p><img src="/../image/xjbjava25.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">arrayList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        arrayList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;<span class="number">11</span>;i++)&#123;</span><br><span class="line">            arrayList.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h2><p><img src="/../image/xjbjava26.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Vector</span> <span class="variable">vector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector</span>(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;<span class="number">11</span>;i++)&#123;</span><br><span class="line">            vector.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(vector);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h2><p><img src="/../image/xjbjava27.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">xiaojianbang</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Node</span> <span class="variable">rw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        <span class="type">Node</span> <span class="variable">umr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        xiaojianbang.next = rw;</span><br><span class="line">        rw.next = umr;</span><br><span class="line">        umr.prev = rw;</span><br><span class="line">        rw.prev = xiaojianbang;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">first</span> <span class="operator">=</span> xiaojianbang;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">last</span> <span class="operator">=</span> umr;</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">temp</span> <span class="operator">=</span> first;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        temp = last;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.prev;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">java</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        java.prev = rw;</span><br><span class="line">        java.next = umr;</span><br><span class="line">        umr.prev = java;</span><br><span class="line">        rw.next = java;</span><br><span class="line"></span><br><span class="line">        temp = first;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        temp = last;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.prev;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Node prev;</span><br><span class="line">    <span class="keyword">public</span> Node next;</span><br><span class="line">    <span class="keyword">public</span> Object item;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Node</span><span class="params">(Object item)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.item = item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Node&#123;&quot;</span> + <span class="string">&quot;item=&quot;</span> + item + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LinkedList-1"><a href="#LinkedList-1" class="headerlink" title="LinkedList"></a>LinkedList</h2><p><img src="/../image/xjbjava28.png"></p><h2 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h2><p><img src="/../image/xjbjava29.png"></p><p><img src="/../image/xjbjava30.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br><span class="line">        hashSet.add(<span class="number">1</span>);</span><br><span class="line">        hashSet.add(<span class="number">2</span>);</span><br><span class="line">        hashSet.add(<span class="number">3</span>);</span><br><span class="line">        hashSet.add(<span class="number">4</span>);</span><br><span class="line">        hashSet.add(<span class="number">5</span>);</span><br><span class="line">        hashSet.add(<span class="number">6</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiao&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaoxiao&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">            System.out.println(hashSet);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator</span> <span class="operator">=</span> hashSet.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">next</span> <span class="operator">=</span>  iterator.next();</span><br><span class="line">            System.out.println(next);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Object o : hashSet)&#123;</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组链表"><a href="#数组链表" class="headerlink" title="数组链表"></a>数组链表</h2><p><img src="/../image/xjbjava31.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Node[] nodes = <span class="keyword">new</span> <span class="title class_">Node</span>[<span class="number">16</span>];</span><br><span class="line">        <span class="type">Node</span> <span class="variable">xiaojianbang</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        nodes[<span class="number">2</span>] = xiaojianbang;</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">umr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        xiaojianbang.next = umr;</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">rw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        umr.next = rw;</span><br><span class="line"></span><br><span class="line">        System.out.println(nodes);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Object item;</span><br><span class="line">    <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Node</span><span class="params">(Object tiem)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.item = tiem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Node&#123;&quot;</span> +<span class="string">&quot;item&quot;</span> + item + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HashSet练习题"><a href="#HashSet练习题" class="headerlink" title="HashSet练习题"></a>HashSet练习题</h2><p><img src="/../image/xjbjava32.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">31</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">31</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;rw&quot;</span>,<span class="number">30</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;rw&quot;</span>,<span class="number">30</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;umr&quot;</span>,<span class="number">29</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;umr&quot;</span>,<span class="number">29</span>));</span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == o) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="literal">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> (A) o;</span><br><span class="line">        <span class="keyword">return</span> age == a.age &amp;&amp; Objects.equals(name, a.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(name, age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;A&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h2><p><img src="/../image/xjbjava33.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>() ;</span><br><span class="line"></span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojianban&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojian&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojia&quot;</span>);</span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Map接口特点"><a href="#Map接口特点" class="headerlink" title="Map接口特点"></a>Map接口特点</h2><p><img src="/../image/xjbjava34.png"></p><h2 id="Map接口常用方法"><a href="#Map接口常用方法" class="headerlink" title="Map接口常用方法"></a>Map接口常用方法</h2><p><img src="/../image/xjbjava35.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        hashMap.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        hashMap.put(integer,<span class="literal">null</span>);</span><br><span class="line">        hashMap.remove(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        hashMap.get(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">        System.out.println(hashMap.get(<span class="string">&quot;pass&quot;</span>));</span><br><span class="line">        System.out.println(hashMap.size());</span><br><span class="line">        System.out.println(hashMap.isEmpty());</span><br><span class="line">        hashMap.clear();</span><br><span class="line">        System.out.println(hashMap);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HaspMap的遍历"><a href="#HaspMap的遍历" class="headerlink" title="HaspMap的遍历"></a>HaspMap的遍历</h2><p><img src="/../image/xjbjava36.png"></p><p><img src="/../image/xjbjava37.png"></p><p><img src="/../image/xjbjava38.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        hashMap.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        hashMap.put(integer,<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="type">Set</span> <span class="variable">set</span> <span class="operator">=</span> hashMap.keySet();</span><br><span class="line">        System.out.println(set.getClass());</span><br><span class="line">        set.forEach(<span class="keyword">new</span> <span class="title class_">Consumer</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">accept</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">                System.out.println(key + <span class="string">&quot;-&quot;</span> + hashMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;000000000000000000000000000000000000000&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Object key : set) &#123;</span><br><span class="line">            System.out.println(key + <span class="string">&quot;-&quot;</span> + hashMap.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator1</span> <span class="operator">=</span> set.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator1.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">key</span> <span class="operator">=</span>  iterator1.next();</span><br><span class="line">            System.out.println(key + <span class="string">&quot;-&quot;</span> + hashMap.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line">        <span class="comment">//valuse用Collection，因为可能会有重复</span></span><br><span class="line">        <span class="type">Collection</span> <span class="variable">values</span> <span class="operator">=</span> hashMap.values();</span><br><span class="line">        <span class="keyword">for</span>(Object value : values) &#123;</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator2</span> <span class="operator">=</span> values.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator2.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span>  iterator2.next();</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Set</span> <span class="variable">set1</span> <span class="operator">=</span> hashMap.entrySet();</span><br><span class="line">        <span class="keyword">for</span>(Object o : set1)&#123;</span><br><span class="line">            Map.<span class="type">Entry</span> <span class="variable">entry</span> <span class="operator">=</span> (Map.Entry) o;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;-&quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h2><p><img src="/../image/xjbjava39.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>();</span><br><span class="line">        hashtable.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashtable.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        hashtable.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        hashtable.put(integer,<span class="number">2</span>);</span><br><span class="line">        System.out.println(hashtable);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p><img src="/../image/xjbjava40.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        prop.put(integer,<span class="number">2</span>);</span><br><span class="line">        System.out.println(prop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h2><p><img src="/../image/xjbjava41.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TreeSet</span> <span class="variable">treeSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeSet</span>(<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (((String)o1).length()-((String)o2).length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        treeSet.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;xxxxxx&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;rbe&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;uad&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(treeSet);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h2><p><img src="/../image/xjbjava42.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TreeMap</span> <span class="variable">treeMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeMap</span>(<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (((String)o1).length()-((String)o2).length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        treeMap.put(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;xxxxxx&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;rw&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;rbe&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;uad&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;umr&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        System.out.println(treeMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Collections工具类"><a href="#Collections工具类" class="headerlink" title="Collections工具类"></a>Collections工具类</h2><p><img src="/../image/xjbjava43.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">arrayList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>(<span class="number">9</span>);</span><br><span class="line">        arrayList.add(<span class="number">100</span>);</span><br><span class="line">        arrayList.add(<span class="number">200</span>);</span><br><span class="line">        arrayList.add(<span class="number">300</span>);</span><br><span class="line">        arrayList.add(<span class="number">400</span>);</span><br><span class="line">        arrayList.add(<span class="number">500</span>);</span><br><span class="line">        arrayList.add(<span class="number">600</span>);</span><br><span class="line">        arrayList.add(<span class="number">700</span>);</span><br><span class="line">        arrayList.add(<span class="number">800</span>);</span><br><span class="line">        arrayList.add(<span class="number">900</span>);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        Collections.reverse(arrayList);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">            Collections.shuffle(arrayList);</span><br><span class="line">            System.out.println(arrayList);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.sort(arrayList);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.sort(arrayList, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Object&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (Integer)o1 - ((Integer)o2);<span class="comment">//从小到大</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.swap(arrayList, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">max</span> <span class="operator">=</span> Collections.max(arrayList);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">max2</span> <span class="operator">=</span> Collections.max(arrayList,<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="type">int</span>)o2 - ((<span class="type">int</span>)o1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">frequency</span> <span class="operator">=</span> Collections.frequency(arrayList,<span class="number">900</span>);</span><br><span class="line">        System.out.println(frequency);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">new_arrayList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>(arrayList.size());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrayList.size(); i++)&#123;</span><br><span class="line">            new_arrayList.add(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Collections.copy(new_arrayList, arrayList);</span><br><span class="line">        System.out.println(new_arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.replaceAll(new_arrayList, <span class="number">1000</span>,<span class="number">200</span>);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;100&quot;</span>));</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="集合使用的选择"><a href="#集合使用的选择" class="headerlink" title="集合使用的选择"></a>集合使用的选择</h2><p><img src="/../image/xjbjava44.png"></p><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><p><img src="/../image/xjbjava45.png"></p><p><img src="/../image/xjbjava46.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;( );</span><br><span class="line">        arrayList.add(<span class="number">1334</span>);</span><br><span class="line">        arrayList.add(<span class="number">100</span>);</span><br><span class="line">        arrayList.add(<span class="number">200</span>);</span><br><span class="line">        arrayList.add(<span class="number">300</span>);</span><br><span class="line">        arrayList.add(<span class="number">400</span>);</span><br><span class="line">        arrayList.add(<span class="number">500</span>);</span><br><span class="line">        arrayList.add(<span class="number">600</span>);</span><br><span class="line">        arrayList.add(<span class="number">700</span>);</span><br><span class="line">        arrayList.add(<span class="number">800</span>);</span><br><span class="line">        arrayList.add(<span class="number">900</span>);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Collections.sort(arrayList, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Integer o1, Integer o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o1 -o2;<span class="comment">//从小到大</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        People&lt;String&gt; stringPeople = <span class="keyword">new</span> <span class="title class_">People</span>&lt;String&gt;( );<span class="comment">//右边的String可以省略</span></span><br><span class="line">        System.out.println(stringPeople.test(<span class="string">&quot;xiaojianbang&quot;</span>));</span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;( );</span><br><span class="line">        hashMap.put(<span class="string">&quot;user1&quot;</span>, <span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;user2&quot;</span>, <span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;user3&quot;</span>, <span class="string">&quot;xiaojianbang3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;Map.Entry&lt;String, String&gt;&gt; set = hashMap.entrySet( );</span><br><span class="line">        Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = set.iterator( );</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            Map.Entry&lt;String, String&gt; next =  iterator.next();</span><br><span class="line">            System.out.println(next.getKey() + <span class="string">&quot; &quot;</span> + next.getValue( ));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>&lt;X&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> X name;</span><br><span class="line">    <span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义泛型类"><a href="#自定义泛型类" class="headerlink" title="自定义泛型类"></a>自定义泛型类</h3><p><img src="/../image/xjbjava48.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;&#123;all&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        People&lt;String,Integer,Boolean&gt; people = <span class="keyword">new</span> <span class="title class_">People</span>&lt;&gt;();</span><br><span class="line">        System.out.println(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        people.names = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xxxx&quot;</span>,<span class="string">&quot;yyyy&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>&lt;X,R,W&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> X name;</span><br><span class="line">    <span class="keyword">public</span> R age;</span><br><span class="line">    <span class="keyword">public</span> W sex;</span><br><span class="line">    <span class="keyword">public</span> X[] names;</span><br><span class="line">    <span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义泛型接口"><a href="#自定义泛型接口" class="headerlink" title="自定义泛型接口"></a>自定义泛型接口</h3><p><img src="/../image/xjbjava49.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        People&lt;String,Integer,Boolean&gt; people = <span class="keyword">new</span> <span class="title class_">People</span>&lt;&gt;();</span><br><span class="line">        System.out.println(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        people.names = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xxxx&quot;</span>,<span class="string">&quot;yyyy&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>&lt;X,R,W&gt; <span class="keyword">implements</span> <span class="title class_">IUSB</span>&lt;String,Integer,Boolean&gt;&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> X name;</span><br><span class="line">    <span class="keyword">public</span> R age;</span><br><span class="line">    <span class="keyword">public</span> W sex;</span><br><span class="line">    <span class="keyword">public</span> X[] names;</span><br><span class="line">    <span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">(String a, Integer b, Boolean c)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(String a, Integer b, Boolean c)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> IUSB.<span class="built_in">super</span>.test2(a, b, c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">IUSB</span>&lt;X,R,W&gt;&#123;</span><br><span class="line">    <span class="comment">//接口中定义的属性默认是静态</span></span><br><span class="line">    X <span class="title function_">test1</span><span class="params">(X a,R b,W c)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span> X <span class="title function_">test2</span><span class="params">(X a,R b,W c)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义泛型方法"><a href="#自定义泛型方法" class="headerlink" title="自定义泛型方法"></a>自定义泛型方法</h3><p><img src="/../image/xjbjava50.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//泛型方法</span></span><br><span class="line"><span class="keyword">public</span>&lt;T,S&gt; T <span class="title function_">test</span><span class="params">(T a, S b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*泛型类型参数：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;T, S&gt; 是方法的泛型类型参数，表示这个方法可以使用类型 T 和 S。在方法内部，你可以使用这两个类型，但在这个方法的实现中并没有用到它们。</span></span><br><span class="line"><span class="comment">方法参数：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">X a 和 R b 是方法的参数，类型分别是 X 和 R。这意味着你需要传入 X 类型的对象和 R 类型的对象。</span></span><br><span class="line"><span class="comment">返回值：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">方法的返回值类型是 X，所以它将返回一个 X 类型的对象。在这个例子中，它返回了参数 a。</span></span><br><span class="line"><span class="comment">可能的错误：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果 X 和 R 是类或接口，那么这个方法的参数和返回类型是可以的。但是泛型类型 T 和 S 在这个方法体内并没有实际使用，这可能是个设计上的疏忽。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用了泛型的方法</span></span><br><span class="line"><span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a,R b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>泛型方法可以是静态，但是如果用了类声明的方法，就不能静态了</li></ul><h3 id="泛型通配符"><a href="#泛型通配符" class="headerlink" title="泛型通配符"></a>泛型通配符</h3><p><img src="/../image/xjbjava51.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>()&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> throwsClassNotFoundException&#123;</span><br><span class="line">        test1(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;());</span><br><span class="line">        test1(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;());</span><br><span class="line">        </span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        test2(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;A&gt;());</span><br><span class="line">        test2(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;B&gt;());</span><br><span class="line">        test2(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;C&gt;());</span><br><span class="line">        </span><br><span class="line">        test3(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;A&gt;());</span><br><span class="line">        test3(<span class="keyword">new</span> <span class="title class_">ArrayLIst</span>&lt;Object&gt;());</span><br><span class="line">        test3(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;?&gt; test1(List&lt;?&gt; a)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;?&gt; test2(List&lt;? <span class="keyword">extends</span> <span class="title class_">A</span>&gt; a)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    publci <span class="keyword">static</span> List&lt;?&gt; test3(List&lt;? <span class="built_in">super</span> A&gt; a)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Properties读配置文件"><a href="#Properties读配置文件" class="headerlink" title="Properties读配置文件"></a>Properties读配置文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath(); <span class="comment">//这行代码的作用是获取当前工作目录的规范路径。</span></span><br><span class="line"><span class="comment">/*解析代码</span></span><br><span class="line"><span class="comment">new File(&quot;&quot;):</span></span><br><span class="line"><span class="comment">创建一个 File 对象，表示当前工作目录。传入空字符串 &quot;&quot; 时，File 构造函数会默认指向当前工作目录。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">getCanonicalPath():</span></span><br><span class="line"><span class="comment">调用 getCanonicalPath() 方法会返回该文件的规范路径，这个路径是绝对的，并且经过解析，去掉了任何冗余部分（例如 . 和 ..）。</span></span><br><span class="line"><span class="comment">最终效果*/</span></span><br></pre></td></tr></table></figure><h4 id="新建一个demo-properties"><a href="#新建一个demo-properties" class="headerlink" title="新建一个demo.properties"></a>新建一个demo.properties</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">class = <span class="type">Xiaojianbang</span></span><br><span class="line"><span class="variable">method</span> <span class="operator">=</span> printInfo</span><br></pre></td></tr></table></figure><h4 id="Hello-java"><a href="#Hello-java" class="headerlink" title="Hello.java"></a>Hello.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.Util.Porperties;</span><br><span class="line"><span class="keyword">import</span> java.util.Porperties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Flie</span>(<span class="string">&quot;&quot;</span>).getCanoncalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStrem</span>(filePath));</span><br><span class="line">        String <span class="keyword">class</span> <span class="title class_">Name</span> = (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><p><img src="/../image/xjbjava52.png"></p><p><img src="/../image/xjbjava53.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMEthod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    pubilc <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23346534&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 1234534&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Class的获取"><a href="#Class的获取" class="headerlink" title="Class的获取"></a>Class的获取</h2><p><img src="/../image/xjbjava54.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="哪些有Class对象"><a href="#哪些有Class对象" class="headerlink" title="哪些有Class对象"></a>哪些有Class对象</h2><p><img src="/../image/xjbjava55.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FIle</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        propertie.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaoijanbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">         System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line">        </span><br><span class="line">         System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射创建对象"><a href="#反射创建对象" class="headerlink" title="反射创建对象"></a>反射创建对象</h2><p><img src="/../image/xjbjava56.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span>constructor.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredConstructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        System.out.println(o3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射操作属性"><a href="#反射操作属性" class="headerlink" title="反射操作属性"></a>反射操作属性</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span>constructor.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredConstructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        System.out.println(o3);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> xiaojianbang.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        nameField.set(o3,<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        name = (String) nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">sexField</span> <span class="operator">=</span> xiaojianbang.getDeclaredField(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        sexField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        sexField.set(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">        sex = (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射操作方法"><a href="#反射操作方法" class="headerlink" title="反射操作方法"></a>反射操作方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span>constructor.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredConstructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        System.out.println(o3);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> xiaojianbang.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        nameField.set(o3,<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        name = (String) nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">sexField</span> <span class="operator">=</span> xiaojianbang.getDeclaredField(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        sexField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        sexField.set(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">        sex = (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo2</span> <span class="operator">=</span> xiaojianbang.getMethod(<span class="string">&quot;printInfo2&quot;</span>, String.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> (String) printInfo2.invoke(o3,<span class="string">&quot;这是传入的参数&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo1</span> <span class="operator">=</span> xiaojianbang.getDeclaredMethod(<span class="string">&quot;printInfo1&quot;</span>);</span><br><span class="line">        printInfo1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        printInfo1.invoke(<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printInfo2</span><span class="params">(String a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这是返回值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Class类对象的其他方法"><a href="#Class类对象的其他方法" class="headerlink" title="Class类对象的其他方法"></a>Class类对象的其他方法</h2><p><img src="/../image/xjbjava57.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">        </span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojiangbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4  <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line">        </span><br><span class="line">        Constructor&lt;?&gt; consrtuctor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span> constructor.newInstance(<span class="string">&quot;xiaojainbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line">        </span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredCostructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        System.out.prinln(o3);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> xiaojianbang.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        nameField.set(o3,<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        name = (String) nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Field</span> <span class="variable">sexField</span> <span class="operator">=</span> xiaojianbang.getDeclaedField(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        sexField.etAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        sexField.set(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">        sex = (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo2</span> <span class="operator">=</span> xiaojianbang.getMethod(<span class="string">&quot;printInfo2&quot;</span>,String.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> (String) printInfo.invoke(o3,<span class="string">&quot;这是传入的参数&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo1</span> <span class="operator">=</span> xiaojianbang.getDeclaredMethod(<span class="string">&quot;printInfo10&quot;</span>);</span><br><span class="line">        printInfo1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        printFinf1.invoke(<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(xiaojianbang.getSuperclass());</span><br><span class="line">        System.out.println(DemoI.class.getInterfaces());</span><br><span class="line">        Class&lt;?&gt; []interfaces = xiaojianbang.getInterfaces();</span><br><span class="line">        System.out.println(interfaces.length);</span><br><span class="line">        System.out.println(interfaces[<span class="number">0</span>]);</span><br><span class="line">        Class&lt;?&gt; [] classes = xiaojianbang.getDeclaredClasses();</span><br><span class="line">        System.out.println(classes.length);        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span> <span class="keyword">implements</span> <span class="title class_">DemoI</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo10</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printInfo2</span><span class="params">(String a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这是返回值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打印类的结构信息"><a href="#打印类的结构信息" class="headerlink" title="打印类的结构信息"></a>打印类的结构信息</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuprressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        Field[] declaredFields = xiaojianbang.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span>(Field declaredField:declaredFields)&#123;</span><br><span class="line">            System.out.println(declaredField.getName());</span><br><span class="line">            System.out.println(declaredField.getModifiers());</span><br><span class="line">            System.out.println(declaredField.getType());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Modifier.isPrivate(<span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Method[] declaredMethods = xiaojianbang.getDeclaredMethod();</span><br><span class="line">        <span class="keyword">for</span>(Method declaredMethod : declaredMehtods)&#123;</span><br><span class="line">            System.out.println(declaredMethod.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Constructor&lt;?&gt;[] declaredConstructor = xiaojianbang.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span>(Constructor deeclaredConstructor : declaredCOnstructors)&#123;</span><br><span class="line">            System.out.prinln(declaredConstructor.getName());</span><br><span class="line">        &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;==================================&quot;</span>);</span><br><span class="line">        Class&lt;?&gt; superclass = xiaojianbang.getSuperclass();</span><br><span class="line">        superclass.getDeclaredFields();</span><br><span class="line">        superclass.getDeclaredMethods();</span><br><span class="line">        superclass.getDeclaredConstructors();</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt;[] interfaces = xiaojianbang.getInterfaces();</span><br><span class="line">        Class&lt;?&gt;[] declaredClasses = xiaojianbang.getDeclaredClasses();</span><br><span class="line">        declaredClasses[<span class="number">0</span>].getDeclaredFields();</span><br><span class="line">        declaredClasses[<span class="number">0</span>].getDeclaredMethods();</span><br><span class="line">        declaredClasses[<span class="number">0</span>].getDeclaredConstructors();</span><br><span class="line">        Class&lt;?&gt;[] declaredClasses1 = declaredClasses[<span class="number">0</span>].getDeclaredClasses();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span> <span class="keyword">implements</span> <span class="title class_">DemoI</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo10</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printInfo2</span><span class="params">(String a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这是返回值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Fragment</title>
      <link href="/2024/09/05/Fragment/"/>
      <url>/2024/09/05/Fragment/</url>
      
        <content type="html"><![CDATA[<h2 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h2><h3 id="Fragment的产生"><a href="#Fragment的产生" class="headerlink" title="Fragment的产生"></a>Fragment的产生</h3><p><img src="/../image/Fragment1.png"></p><h3 id="什么是Fragment"><a href="#什么是Fragment" class="headerlink" title="什么是Fragment"></a>什么是Fragment</h3><p><img src="/../image/Fragment2.png"></p><h3 id="Fragment的使用方法"><a href="#Fragment的使用方法" class="headerlink" title="Fragment的使用方法"></a>Fragment的使用方法</h3><h4 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentbase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentbase.BlankFragment1&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/fragment1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="BlankFragment1-java"><a href="#BlankFragment1-java" class="headerlink" title="BlankFragment1.java"></a>BlankFragment1.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentbase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> View root;</span><br><span class="line">    <span class="keyword">private</span> TextView textView;</span><br><span class="line">    <span class="keyword">private</span> Button button;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)&#123;</span><br><span class="line">            root = inflater.inflate(R.layout.fragment_blank1, container, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        textView = root.findViewById(R.id.btn);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">                textView.setText(<span class="string">&quot;Yes, I am, and you?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fragment-blank1-xml"><a href="#fragment-blank1-xml" class="headerlink" title="fragment_blank1.xml"></a>fragment_blank1.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textview&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;How are you?&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在activity中简单的添加两个fragment"><a href="#在activity中简单的添加两个fragment" class="headerlink" title="在activity中简单的添加两个fragment"></a>在activity中简单的添加两个fragment</h3><h4 id="activity-main-xml-1"><a href="#activity-main-xml-1" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentbase.BlankFragment1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentbase.BlankFragment2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragment的产生-1"><a href="#Fragment的产生-1" class="headerlink" title="Fragment的产生"></a>Fragment的产生</h3><h4 id="动态添加Fragment"><a href="#动态添加Fragment" class="headerlink" title="动态添加Fragment"></a>动态添加Fragment</h4><p>JDK17以上版本无法使用switch的解决方法：</p><p><img src="/../image/Fragment3.png"></p><h4 id="MainActivity-java-1"><a href="#MainActivity-java-1" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentTransaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener &#123;</span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> Button btn2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        btn = findViewById(R.id.btn); <span class="comment">// 使用正确的 ID</span></span><br><span class="line">        btn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        btn2 = findViewById(R.id.btn_2); <span class="comment">// 处理其他按钮</span></span><br><span class="line">        btn2.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> <span class="title class_">BlankFragment1</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> R.id.btn_2:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> <span class="title class_">ItemFragment</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">replaceFragment</span><span class="params">(Fragment fragment)</span> &#123;</span><br><span class="line">        <span class="type">FragmentManager</span> <span class="variable">fragmentManager</span> <span class="operator">=</span> getSupportFragmentManager();</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">transaction</span> <span class="operator">=</span> fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.framelayout,fragment);</span><br><span class="line">        transaction.addToBackStack(<span class="literal">null</span>);<span class="comment">//添加到同一个栈中，这样用户可以按返回键时回到之前的状态。</span></span><br><span class="line">        <span class="comment">/*replace(int containerViewId, Fragment fragment) 是 FragmentTransaction 类中的一个方法，用于将一个 Fragment 替换到指定的容器中。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">containerViewId: 这是一个 int 类型的参数，表示容器的资源 ID。这个容器通常是一个 FrameLayout 或者其他可以承载 Fragment 的视图组件。你在布局文件中定义这个容器时会为它分配一个 ID（在这个例子中是 R.id.framelayout）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">fragment: 这是你希望替换到容器中的新的 Fragment 实例。这个 Fragment 对象是你要显示的新内容或界面。*/</span></span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="BlankFragment1"><a href="#BlankFragment1" class="headerlink" title="BlankFragment1"></a>BlankFragment1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A simple &#123;<span class="doctag">@link</span> Fragment&#125; subclass.</span></span><br><span class="line"><span class="comment"> * Use the &#123;<span class="doctag">@link</span> BlankFragment1#newInstance&#125; factory method to</span></span><br><span class="line"><span class="comment"> * create an instance of this fragment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></span><br><span class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM1</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM2</span> <span class="operator">=</span> <span class="string">&quot;param2&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></span><br><span class="line">    <span class="keyword">private</span> String mParam1;</span><br><span class="line">    <span class="keyword">private</span> String mParam2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use this factory method to create a new instance of</span></span><br><span class="line"><span class="comment">     * this fragment using the provided parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment BlankFragment1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlankFragment1 <span class="title function_">newInstance</span><span class="params">(String param1, String param2)</span> &#123;</span><br><span class="line">        <span class="type">BlankFragment1</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_PARAM1, param1);</span><br><span class="line">        args.putString(ARG_PARAM2, param2);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_blank1, container, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ItemFragment"><a href="#ItemFragment" class="headerlink" title="ItemFragment"></a>ItemFragment</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.fragmentmangers.placeholder.PlaceholderContent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A fragment representing a list of Items.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemFragment</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Customize parameter argument names</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_COLUMN_COUNT</span> <span class="operator">=</span> <span class="string">&quot;column-count&quot;</span>;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Customize parameters</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mColumnCount</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Mandatory empty constructor for the fragment manager to instantiate the</span></span><br><span class="line"><span class="comment">     * fragment (e.g. upon screen orientation changes).</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ItemFragment</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Customize parameter initialization</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unused&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ItemFragment <span class="title function_">newInstance</span><span class="params">(<span class="type">int</span> columnCount)</span> &#123;</span><br><span class="line">        <span class="type">ItemFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemFragment</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putInt(ARG_COLUMN_COUNT, columnCount);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mColumnCount = getArguments().getInt(ARG_COLUMN_COUNT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> inflater.inflate(R.layout.fragment_item_list, container, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the adapter</span></span><br><span class="line">        <span class="keyword">if</span> (view <span class="keyword">instanceof</span> RecyclerView) &#123;</span><br><span class="line">            <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> view.getContext();</span><br><span class="line">            <span class="type">RecyclerView</span> <span class="variable">recyclerView</span> <span class="operator">=</span> (RecyclerView) view;</span><br><span class="line">            <span class="keyword">if</span> (mColumnCount &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">                recyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(context));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                recyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>(context, mColumnCount));</span><br><span class="line">            &#125;</span><br><span class="line">            recyclerView.setAdapter(<span class="keyword">new</span> <span class="title class_">MyItemRecyclerViewAdapter</span>(PlaceholderContent.ITEMS));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MyItemRecyclerViewAdapter-java"><a href="#MyItemRecyclerViewAdapter-java" class="headerlink" title="MyItemRecyclerViewAdapter.java"></a>MyItemRecyclerViewAdapter.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.fragmentmangers.placeholder.PlaceholderContent.PlaceholderItem;</span><br><span class="line"><span class="keyword">import</span> a.b.c.fragmentmangers.databinding.FragmentItemBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> RecyclerView.Adapter&#125; that can display a &#123;<span class="doctag">@link</span> PlaceholderItem&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">TODO:</span> Replace the implementation with code for your data type.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyItemRecyclerViewAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;MyItemRecyclerViewAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;PlaceholderItem&gt; mValues;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyItemRecyclerViewAdapter</span><span class="params">(List&lt;PlaceholderItem&gt; items)</span> &#123;</span><br><span class="line">        mValues = items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(FragmentItemBinding.inflate(LayoutInflater.from(parent.getContext()), parent, <span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        holder.mItem = mValues.get(position);</span><br><span class="line">        holder.mIdView.setText(mValues.get(position).id);</span><br><span class="line">        holder.mContentView.setText(mValues.get(position).content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mValues.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> TextView mIdView;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> TextView mContentView;</span><br><span class="line">        <span class="keyword">public</span> PlaceholderItem mItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(FragmentItemBinding binding)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(binding.getRoot());</span><br><span class="line">            mIdView = binding.itemNumber;</span><br><span class="line">            mContentView = binding.content;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.toString() + <span class="string">&quot; &#x27;&quot;</span> + mContentView.getText() + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-2"><a href="#activity-main-xml-2" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;change&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;replace&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/framelayout&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00BCD4&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-blank1-xml-1"><a href="#fragment-blank1-xml-1" class="headerlink" title="fragment_blank1.xml"></a>fragment_blank1.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.BlankFragment1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> Update blank fragment layout --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-item-xml"><a href="#fragment-item-xml" class="headerlink" title="fragment_item.xml"></a>fragment_item.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/item_number&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-item-list-xml"><a href="#fragment-item-list-xml" class="headerlink" title="fragment_item_list.xml"></a>fragment_item_list.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/list&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentmangers.ItemFragment&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layoutManager</span>=<span class="string">&quot;LinearLayoutManager&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.ItemFragment&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:listitem</span>=<span class="string">&quot;@layout/fragment_item&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Activity与Fragment通信"><a href="#Activity与Fragment通信" class="headerlink" title="Activity与Fragment通信"></a>Activity与Fragment通信</h3><p><img src="/../image/Fragment4.png"></p><p>使用Bundle</p><h4 id="MainActivity-java-2"><a href="#MainActivity-java-2" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.btn:</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">            bundle.putString(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">            <span class="type">BlankFragment1</span> <span class="variable">bf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">            bf.setArguments(bundle);</span><br><span class="line">            replaceFragment(bf);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BlankFragment1-java-1"><a href="#BlankFragment1-java-1" class="headerlink" title="BlankFragment1.java"></a>BlankFragment1.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getArguments();</span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">    Log.i(<span class="string">&quot;lele&quot;</span>,string);</span><br><span class="line">    <span class="keyword">if</span>(getArguments()!=<span class="literal">null</span>)&#123;</span><br><span class="line">        mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">        mParam2 = getArguments().getString(ARG_PAEAM2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fragment动态添加与管理的总结"><a href="#fragment动态添加与管理的总结" class="headerlink" title="fragment动态添加与管理的总结"></a>fragment动态添加与管理的总结</h3><p><img src="/../image/Fragment5.png"></p><h3 id="Fragment与activity通信的接口方案"><a href="#Fragment与activity通信的接口方案" class="headerlink" title="Fragment与activity通信的接口方案"></a>Fragment与activity通信的接口方案</h3><ul><li>原生方案：Bundle</li><li>Java语言中类与类之间通信常用方案：接口</li></ul><h4 id="MainActivity-java-3"><a href="#MainActivity-java-3" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentTransaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> Button btn2;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        btn = findViewById(R.id.btn_2);</span><br><span class="line">        btn2.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn:</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                bundle.putString(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">                BlankFragment1(bundle);</span><br><span class="line">                bf.setFragmentCallback(<span class="keyword">new</span> <span class="title class_">IFragmentCallback</span>()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMsgToActivity</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="built_in">this</span>,msg,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> String <span class="title function_">getMsgFromActivity</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;hello, I am from MainActivity&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                                     </span><br><span class="line">                &#125;);</span><br><span class="line">                replaceFragment(bf);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> R.id.btn_2:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> <span class="title class_">ItemFragment</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">replaceFragment</span><span class="params">(Fragment fragment)</span>&#123;</span><br><span class="line">        <span class="type">FragmentManager</span> <span class="variable">fragmentManager</span> <span class="operator">=</span> getSupportFragmentManager();</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">transaction</span> <span class="operator">=</span> fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.framelayout,fragment);</span><br><span class="line">        transaction.addToBackStack(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="IFragmentCallback-java"><a href="#IFragmentCallback-java" class="headerlink" title="IFragmentCallback.java"></a>IFragmentCallback.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IFragmentCallback</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sendMsgToActivity</span><span class="params">(String string)</span>;</span><br><span class="line">    String <span class="title function_">getMsgFromActivity</span><span class="params">(String msg)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BlankFragment1-java-2"><a href="#BlankFragment1-java-2" class="headerlink" title="BlankFragment1.java"></a>BlankFragment1.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A simple &#123;<span class="doctag">@link</span> Fragment&#125; subclass.</span></span><br><span class="line"><span class="comment"> * Use the &#123;<span class="doctag">@link</span> BlankFragment1#newInstance&#125; factory method to</span></span><br><span class="line"><span class="comment"> * create an instance of this fragment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></span><br><span class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM1</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM2</span> <span class="operator">=</span> <span class="string">&quot;param2&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></span><br><span class="line">    <span class="keyword">private</span> String mParam1;</span><br><span class="line">    <span class="keyword">private</span> String mParam2;</span><br><span class="line">    <span class="keyword">private</span> View rootview;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use this factory method to create a new instance of</span></span><br><span class="line"><span class="comment">     * this fragment using the provided parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment BlankFragment1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlankFragment1 <span class="title function_">newInstance</span><span class="params">(String param1, String param2)</span> &#123;</span><br><span class="line">        <span class="type">BlankFragment1</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_PARAM1, param1);</span><br><span class="line">        args.putString(ARG_PARAM2, param2);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getArguments();</span><br><span class="line">        <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">        Log.i(<span class="string">&quot;lele&quot;</span>,string);</span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">if</span>(rootview == <span class="literal">null</span>)&#123;</span><br><span class="line">            rootview = inflater.inflate(R.layout.fragment_blank1, container, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> rootview.findViewById(R.id.btn_3);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="comment">//fragmentCallback.sendMsgToActivity(&quot;hello, I`m from Fragment&quot;);</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> fragmentCallback.getMsgFromActivity(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">                Toast.makeText(BlankFragment1.<span class="built_in">this</span>.getContext(),message,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rootview;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IFragmentCallback fragmentCallback;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFragmentCallback</span><span class="params">(IFragmentCallback callback)</span>&#123;</span><br><span class="line">        fragmentCallback = callback;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-3"><a href="#activity-main-xml-3" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;change&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;replace&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/framelayout&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00BCD4&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-blank-xml"><a href="#fragment-blank-xml" class="headerlink" title="fragment_blank.xml"></a>fragment_blank.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.BlankFragment1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> Update blank fragment layout --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;数据传递&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-item-xml-1"><a href="#fragment-item-xml-1" class="headerlink" title="fragment_item.xml"></a>fragment_item.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/item_number&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragment生命周期"><a href="#Fragment生命周期" class="headerlink" title="Fragment生命周期"></a>Fragment生命周期</h3><p><img src="/../image/Fragment6.png"></p><p><img src="/../image/Fragment7.png"></p><p>onAttach()用来与Activity进行绑定，onCreate()对Bundle进行解析，onCreateView()进行ui进行解析，必须要重构的数据要在onResume()中获取，创建的时候从小到大，销毁的时候从大到小</p><p>加入些调试信息观察生命周期</p><h4 id="BlankFragment1-1"><a href="#BlankFragment1-1" class="headerlink" title="BlankFragment1"></a>BlankFragment1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A simple &#123;<span class="doctag">@link</span> Fragment&#125; subclass.</span></span><br><span class="line"><span class="comment"> * Use the &#123;<span class="doctag">@link</span> BlankFragment1#newInstance&#125; factory method to</span></span><br><span class="line"><span class="comment"> * create an instance of this fragment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></span><br><span class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM1</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM2</span> <span class="operator">=</span> <span class="string">&quot;param2&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;BlankFragment1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></span><br><span class="line">    <span class="keyword">private</span> String mParam1;</span><br><span class="line">    <span class="keyword">private</span> String mParam2;</span><br><span class="line">    <span class="keyword">private</span> View rootview;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use this factory method to create a new instance of</span></span><br><span class="line"><span class="comment">     * this fragment using the provided parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment BlankFragment1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlankFragment1 <span class="title function_">newInstance</span><span class="params">(String param1, String param2)</span> &#123;</span><br><span class="line">        <span class="type">BlankFragment1</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_PARAM1, param1);</span><br><span class="line">        args.putString(ARG_PARAM2, param2);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAttach</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onAttach(context);</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;onAttach: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getArguments();</span><br><span class="line">        <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">        Log.i(<span class="string">&quot;lele&quot;</span>,string);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</span><br><span class="line">        &#125;</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onCrate: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">if</span>(rootview == <span class="literal">null</span>)&#123;</span><br><span class="line">            rootview = inflater.inflate(R.layout.frament_blank1,container,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> rootview.findViewById(R.id.btn_3);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="comment">//fragmentCallback.sendMsgToActivity(&quot;hello, I`m from Fragment&quot;);</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> fragmentCallback.getMsgFromActivity(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">                Toast.makeText(BlankFragment1.<span class="built_in">this</span>.getContext(),message,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onCreateView:&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> rootview;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onResume:&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPause</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onPause();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onPause&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onStop();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onStop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroyView();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onDestroView&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onDestory&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IFragmentCallback fragmentCallback;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFragmentCallback</span><span class="params">(IFragmentCallback callback)</span>&#123;</span><br><span class="line">        fragmentCallback = callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fragment生命周期注意事项‘"><a href="#Fragment生命周期注意事项‘" class="headerlink" title="Fragment生命周期注意事项‘"></a>Fragment生命周期注意事项‘</h3><p><img src="/../image/Fragment8.png"></p><h3 id="ViewPager2基本应用"><a href="#ViewPager2基本应用" class="headerlink" title="ViewPager2基本应用"></a>ViewPager2基本应用</h3><h4 id="MainActivity-java-4"><a href="#MainActivity-java-4" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.viewpagerandfragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager2.widget.ViewPager2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        </span><br><span class="line">        <span class="type">ViewPager2</span> <span class="variable">viewPager</span> <span class="operator">=</span> findViewById(R.id.viewPager);</span><br><span class="line">        <span class="type">ViewPagerAdapter</span> <span class="variable">viewPagerAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewPagerAdapter</span>();</span><br><span class="line">        viewPager.setAdapter(viewPagerAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ViewPagerAdaper-java"><a href="#ViewPagerAdaper-java" class="headerlink" title="ViewPagerAdaper.java"></a>ViewPagerAdaper.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.viewpagerandfragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.constraintlayout.widget.ConstraintLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;ViewPagerAdapter.ViewPagerViewHolder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; titles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    ViewPagerAdapter()&#123;</span><br><span class="line">        titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewPagerViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent,<span class="type">int</span> viewType)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewPagerViewHolder</span>(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_pager,parent,flase));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*详细解释</span></span><br><span class="line"><span class="comment">LayoutInflater.from(parent.getContext())</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">LayoutInflater 是一个 Android 类，用于从 XML 布局文件中创建视图对象。from(parent.getContext()) 获取一个 LayoutInflater 实例，使用的是 parent 视图组的上下文 (Context)。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">通过 parent.getContext() 获取 Context，因为 LayoutInflater 需要一个 Context 对象来访问资源并膨胀布局。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">.inflate(R.layout.item_pager, parent, false)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">inflate 方法用于将 XML 布局文件转换成实际的视图对象。这里，它将 R.layout.item_pager 布局文件中的视图膨胀成一个 View 对象。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">R.layout.item_pager 是布局资源的 ID，代表你要膨胀的布局文件。item_pager.xml 中定义的视图将被加载到内存中。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">parent 是 ViewGroup，它指定了布局的父视图组。在膨胀布局时，将这个 parent 传递进去可以确保正确设置视图的布局参数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">false 表示膨胀后的视图不会立即被附加到 parent 上。将其设置为 false 可以防止布局在膨胀时立刻附加到父视图，这样通常可以更好地控制视图的布局过程。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">new ViewPagerViewHolder(...)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">使用膨胀出来的 View 对象来创建一个新的 ViewPagerViewHolder 实例。ViewPagerViewHolder 是你定义的 RecyclerView.ViewHolder 子类，用于在 RecyclerView 中持有和管理视图。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在 ViewPagerViewHolder 的构造函数中，传入膨胀后的视图（itemView）用于初始化持有者的视图引用。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">作用</span></span><br><span class="line"><span class="comment">这段代码的整体作用是创建一个新的 ViewPagerViewHolder 实例，并将其与通过 item_pager.xml 膨胀出的视图相关联。ViewPagerViewHolder 负责持有和管理 RecyclerView 中每个项的视图。在 onCreateViewHolder 方法中，你使用这段代码来为 RecyclerView 创建并返回一个新的视图持有者对象。</span></span><br><span class="line"><span class="comment">总结</span></span><br><span class="line"><span class="comment">膨胀布局：从 XML 布局文件 item_pager.xml 中膨胀出一个视图。</span></span><br><span class="line"><span class="comment">创建持有者：使用膨胀出的视图创建一个 ViewPagerViewHolder 实例。</span></span><br><span class="line"><span class="comment">返回持有者：将创建的视图持有者返回给 RecyclerView。</span></span><br><span class="line"><span class="comment">这样，RecyclerView 就可以使用这个视图持有者来显示和管理列表项。*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NoNull</span> viewPagerViewHold holder,<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        holder.mTv.setText(tiltles.get(positon));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Ovrride</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewPagerViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecycleView</span>.ViewHolder&#123;</span><br><span class="line">        TextView mTv;</span><br><span class="line">        ConstraintLayout mContainer;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewPagerViewHolder</span><span class="params">(<span class="meta">@NoNull</span> View itemView)</span>&#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            </span><br><span class="line">            mContainer = itemView.findViewById(R.id.container);</span><br><span class="line">            mTv = itemView.findViewById(R.id.tvTitle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-4"><a href="#activity-main-xml-4" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager2.widget.ViewPager2</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/viewPager&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#03A9F4&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.viewpager2.widget.ViewPager2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="item-pager-xml"><a href="#item-pager-xml" class="headerlink" title="item_pager.xml"></a>item_pager.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvTitle&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;lele&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ViewPager2页面的切换"><a href="#ViewPager2页面的切换" class="headerlink" title="ViewPager2页面的切换"></a>ViewPager2页面的切换</h3><p>在color.xml文件中定义颜色</p><h4 id="color-xml"><a href="#color-xml" class="headerlink" title="color.xml"></a>color.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;black&quot;</span>&gt;</span>#FF000000<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;white&quot;</span>&gt;</span>#FFFFFFFF<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;red&quot;</span>&gt;</span>#FF4411<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>#6200EE<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>#03DAC5<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>#3700B3<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="ViewPagerAdapter-java"><a href="#ViewPagerAdapter-java" class="headerlink" title="ViewPagerAdapter.java"></a>ViewPagerAdapter.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.viewpagerandfragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.constraintlayout.widget.ConstraintLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecycleView</span>.Adapter&lt;ViewPagerAdater.ViewPagerViewHolder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; titles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; colors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    ViewPagerAdapter()&#123;</span><br><span class="line">                titles.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;8&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;9&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;10&quot;</span>);</span><br><span class="line"></span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.colorAccent);</span><br><span class="line">        colors.add(R.color.black);</span><br><span class="line">        colors.add(R.color.red);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.colorPrimaryDark);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.colorAccent);</span><br><span class="line">        colors.add(R.color.red);</span><br><span class="line">        colors.add(R.color.colorAccent);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewPagerViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGruop parent,<span class="type">int</span> viewType)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewPagerViewHolder</span>(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_pager,parent,<span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewPagerViewHolder holder,<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        holder.mTv.setText(titles.get(position));</span><br><span class="line">        holder.mContainer.setBackgroumdResource(colors.get(position));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewPagerViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViwHolder&#123;</span><br><span class="line">        TextView mTv;</span><br><span class="line">        ConstrainLayout mContainer;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewPagerViewHolder</span><span class="params">(<span class="meta">@NonNUll</span> View itemView)</span>&#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            </span><br><span class="line">            mContainer = itemView.findViewById(R.id.container);</span><br><span class="line">            mTv = itemView.finViewById(R.id.tvTitle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fragment与ViewPager合集"><a href="#Fragment与ViewPager合集" class="headerlink" title="Fragment与ViewPager合集"></a>Fragment与ViewPager合集</h3><h4 id="MainActivity-java-5"><a href="#MainActivity-java-5" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.wechatpage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager2.widget.ViewPager2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    ViewPager2 viewPager;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ininPager();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initPager</span><span class="params">()</span>&#123;</span><br><span class="line">        viewPager = findViewById(R.id.id_viewpager);</span><br><span class="line">        ArrayList&lt;Fragment&gt; fragment=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;微信聊天&quot;</span>));</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;通讯录&quot;</span>));</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;聊天&quot;</span>));</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;发现&quot;</span>));</span><br><span class="line">        fragments.add(BlankFrament.newInstance(<span class="string">&quot;我&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="type">MyFragmentPagerAdapter</span> <span class="variable">pagerAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyFragmentPagerAdapter</span>(getSupportFragment(),getLifecycle(),fragments);</span><br><span class="line">        viewPager.setAdapter(pagerAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MyFragmentPagerAdapter-java"><a href="#MyFragmentPagerAdapter-java" class="headerlink" title="MyFragmentPagerAdapter.java"></a>MyFragmentPagerAdapter.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFragmentPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">FragmentStateAdapter</span>&#123;</span><br><span class="line">    List&lt;Fragment&gt;fragmenList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFragmentPagerAdapter</span><span class="params">(<span class="meta">@NonNull</span> FragmentManager fragmentManager,<span class="meta">@NonNull</span> Lifecycle,List&lt;Fragment&gt;fragments)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(fragmentManager,lifecycle);</span><br><span class="line">        fragmetnList=fragments;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Fragment <span class="title function_">createFragment</span><span class="params">(<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fragmentList.get(position);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fragmentList.size(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BlankFragment-java"><a href="#BlankFragment-java" class="headerlink" title="BlankFragment.java"></a>BlankFragment.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span>&#123;</span><br><span class="line">    View rootView;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_TEXT</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String mTextString;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlanFragment <span class="title function_">newInstance</span><span class="params">(String param1)</span>&#123;</span><br><span class="line">        <span class="type">BlankFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_TEXT,param1);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span>(getArguments!=<span class="literal">null</span>)&#123;</span><br><span class="line">            mTextString = getArguments().getString(ARG_TEXT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(rootView = <span class="literal">null</span>)&#123;</span><br><span class="line">            rootView = inflater.inflate(R.layout.fragment_blank,container,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        initView();</span><br><span class="line">        <span class="keyword">return</span> rootView;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> rootView.findViewById(R.id.text);</span><br><span class="line">        textView.seetText(mTextString);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-5"><a href="#activity-main-xml-5" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><p>注意：orientation要设置，否则无法正常显示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager2.widget.ViewPager2</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/id_viewpager&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-blank-xml-1"><a href="#fragment-blank-xml-1" class="headerlink" title="fragment_blank.xml"></a>fragment_blank.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.BlankFragment&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> Update blank fragment layout --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;36sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/text&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ViewPager-fragment模仿微信页面"><a href="#ViewPager-fragment模仿微信页面" class="headerlink" title="ViewPager+fragment模仿微信页面"></a>ViewPager+fragment模仿微信页面</h3><p><strong><code>android:layout_gravity</code></strong>: 控制视图相对于其父视图的位置。</p><p><strong><code>android:gravity</code></strong>: 控制视图内部内容的位置和对齐方式。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ViewPager</title>
      <link href="/2024/09/03/ViewPager/"/>
      <url>/2024/09/03/ViewPager/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/ViewPager.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.viewpager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.ViewPager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">LayoutInflater</span> <span class="variable">lf</span> <span class="operator">=</span> getLayoutInflater().from(<span class="built_in">this</span>);<span class="comment">//getLayoutInflater().from(this) 获取 LayoutInflater 实例，用于动态加载布局文件。</span></span><br><span class="line">        <span class="type">View</span> <span class="variable">view1</span> <span class="operator">=</span> lf.inflate(R.layout.layout1,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">View</span> <span class="variable">view2</span> <span class="operator">=</span> lf.inflate(R.layout.layout2,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">View</span> <span class="variable">view3</span> <span class="operator">=</span> lf.inflate(R.layout.layout3,<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//inflate(R.layout.layout1, null) 从布局文件 layout1.xml 中加载视图对象 view1。同样的操作也用于 layout2 和 layout3，生成视图对象 view2 和 view3。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;View&gt; viewList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        viewList.add(view1);</span><br><span class="line">        viewList.add(view2);</span><br><span class="line">        viewList.add(view3);</span><br><span class="line"></span><br><span class="line">        <span class="type">ViewPager</span> <span class="variable">viewPager</span> <span class="operator">=</span> findViewById(R.id.vp);</span><br><span class="line">        <span class="type">MyAdapter</span> <span class="variable">myAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAdapter</span>(viewList);</span><br><span class="line">        viewPager.setAdapter(myAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myAdapter</span><br><span class="line"><span class="keyword">package</span> a.b.c.viewpager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.PagerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdapter</span> <span class="keyword">extends</span> <span class="title class_">PagerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;View&gt; mListView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">instantiateItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        container.addView(mListView.get(position),<span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*索引参数的作用</span></span><br><span class="line"><span class="comment">索引为 0：表示将视图添加到父视图的最前面（即在所有其他视图之前）。在大多数情况下，0 作为索引是常见的做法，特别是在 ViewPager 中，因为 ViewPager 通常只包含一个子视图，而不会有其他视图在其上方或下方。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">索引为其他值：如果使用不同的索引值，视图将被添加到父视图中指定的索引位置。例如，如果索引为 1，视图将被添加到第二个位置（如果父视图已经有其他视图）。*/</span></span><br><span class="line">        <span class="keyword">return</span> mListView.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAdapter</span><span class="params">(List&lt;View&gt; mListView)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.mListView = mListView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mListView.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isViewFromObject</span><span class="params">(<span class="meta">@NonNull</span> View view, <span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> view == object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position, <span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        container.removeView(mListView.get(position));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager.widget.ViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/vp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff00ffff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ffff00ff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff0000ff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout3&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff0000ff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout3&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单位和尺寸</title>
      <link href="/2024/09/02/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B8/"/>
      <url>/2024/09/02/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B8/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B81.png"></p><p><img src="/../image/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B82.png"></p><p><img src="/../image/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B83.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.layoutparams;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//setContentView(R.layout.activity_main);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">LinearLayout</span> <span class="variable">linearLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayout</span>(<span class="built_in">this</span>);</span><br><span class="line">        LinearLayout.<span class="type">LayoutParams</span> <span class="variable">layoutParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayout</span>.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,</span><br><span class="line">                ViewGroup.LayoutParams.MATCH_PARENT);</span><br><span class="line">        linearLayout.setLayoutParams(layoutParams);</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextView</span>(<span class="built_in">this</span>);</span><br><span class="line">        textView.setText(<span class="string">&quot;我是文本&quot;</span>);</span><br><span class="line">        textView.setBackgroundColor(<span class="number">0xffff0000</span>);</span><br><span class="line">        LinearLayout.<span class="type">LayoutParams</span> <span class="variable">textLayoutParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayout</span>.LayoutParams(<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        textView.setLayoutParams(textLayoutParams);</span><br><span class="line">        linearLayout.addView(textView);</span><br><span class="line">        setContentView(linearLayout);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>动画</title>
      <link href="/2024/09/02/%E5%8A%A8%E7%94%BB/"/>
      <url>/2024/09/02/%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/%E5%8A%A8%E7%94%BB1.png"></p><h2 id="逐帧动画"><a href="#逐帧动画" class="headerlink" title="逐帧动画"></a>逐帧动画</h2><p>定义：把几张图片快速播放形成的一个效果</p><p><img src="/../image/%E5%8A%A8%E7%94%BB2.png"></p><p><img src="/../image/%E5%8A%A8%E7%94%BB3.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.lele_anim;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.AnimationDrawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savadInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstance);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        <span class="type">RelativeLayout</span> <span class="variable">relativeLaout</span> <span class="operator">=</span> findViewById(R.id.rl);</span><br><span class="line">        </span><br><span class="line">        <span class="type">AnimationDrawable</span> <span class="variable">anim</span> <span class="operator">=</span> (AnimationDrawable) relativeLayoutl.getBackground();</span><br><span class="line">        relativeLayout.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCLick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    anim.start();</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    anim.stop();</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/frame&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/rl&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">   </span><br><span class="line">frame</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">animation-list</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/tx&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;120&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/bg&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;120&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">animation-list</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="补间动画"><a href="#补间动画" class="headerlink" title="补间动画"></a>补间动画</h2><p>定义：我们设置一个初始值以及结束值，然后设置一个变化时间，安卓会自动给我们补全</p><p><img src="/../image/%E5%8A%A8%E7%94%BB4.png"></p><p>创建一个文件夹</p><p><img src="/../image/%E5%B8%83%E5%B1%8011.png"></p><p>new 一个Animation Resource File</p><p><img src="/../image/%E5%B8%83%E5%B1%8012.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.animtweened;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.AnimationDrawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Animation;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.AnimationUtils;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">imageView</span> <span class="operator">=</span> findViewById(R.id.iv);</span><br><span class="line"></span><br><span class="line">        imageView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="comment">//通过加载xml动画设置文件来创建一个Animation对象</span></span><br><span class="line">                透明度</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.alpha);</span><br><span class="line">   旋转</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.rotate);</span><br><span class="line">                缩放</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.scale);</span><br><span class="line">                平移</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.translate);</span><br><span class="line">                imageView.startAnimation(animation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">alpha.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;2000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">rotate.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rotate</span> <span class="attr">android:fromDegrees</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toDegrees</span>=<span class="string">&quot;360&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;2000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">scale.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;2000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;0.5&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;0.5&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">translate.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性动画"><a href="#属性动画" class="headerlink" title="属性动画"></a>属性动画</h2><p><img src="/../image/%E5%8A%A8%E7%94%BB6.png"></p><p><img src="/../image/%E5%8A%A8%E7%94%BB7.png"></p><p><img src="/../image/%E5%8A%A8%E7%94%BB8.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.animproperty;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.animation.Animator;</span><br><span class="line"><span class="keyword">import</span> android.animation.AnimatorListenerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.animation.ObjectAnimator;</span><br><span class="line"><span class="keyword">import</span> android.animation.ValueAnimator;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">ValueAnimator</span> <span class="variable">valueAnimator</span> <span class="operator">=</span> ValueAnimator.ofFloat(<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line">        valueAnimator.setDuration(<span class="number">2000</span>);</span><br><span class="line">        valueAnimator.addUpdateListener(<span class="keyword">new</span> <span class="title class_">ValueAnimator</span>.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationUpdate</span><span class="params">(<span class="meta">@NonNull</span> ValueAnimator valueAnimator)</span> &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">value</span> <span class="operator">=</span> (<span class="type">float</span>) valueAnimator.getAnimatedValue();</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onAnimationUpdate: &quot;</span> + value );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        valueAnimator.start();</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> findViewById(R.id.tv);</span><br><span class="line">        <span class="type">ObjectAnimator</span> <span class="variable">objectAnimator</span> <span class="operator">=</span> ObjectAnimator.ofFloat(textView,<span class="string">&quot;alpha&quot;</span>,<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line">        objectAnimator.setDuration(<span class="number">40000</span>);</span><br><span class="line">        objectAnimator.start();</span><br><span class="line">        objectAnimator.addListener(<span class="keyword">new</span> <span class="title class_">Animator</span>.AnimatorListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationStart</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationEnd</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationCancel</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationRepeat</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        objectAnimator.addListener(<span class="keyword">new</span> <span class="title class_">AnimatorListenerAdapter</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationStart</span><span class="params">(Animator animation)</span> &#123;</span><br><span class="line">                <span class="built_in">super</span>.onAnimationStart(animation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ListView and RecyclerView</title>
      <link href="/2024/09/01/ListView-and-RecyclerView/"/>
      <url>/2024/09/01/ListView-and-RecyclerView/</url>
      
        <content type="html"><![CDATA[<h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.lelelistview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savaInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">100</span>；i++)&#123;</span><br><span class="line">            <span class="type">Bean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bean</span>();</span><br><span class="line">            bean.setName(<span class="string">&quot;lele&quot;</span>+i);</span><br><span class="line">            data.add(bean);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">ListView</span> <span class="variable">listView</span> <span class="operator">=</span> findViewById(R.id.lv);</span><br><span class="line">        listView.setAdapt(<span class="keyword">new</span> <span class="title class_">MyAdapter</span>(data,<span class="built_in">this</span>));</span><br><span class="line">        <span class="comment">/*setAdapter是ListView的一个方法，用于将适配器(Adapter)设置到ListView上，适配器负责将数据绑定到ListView的视图中。适配器从数据源获取数据，并将每项数据呈现为ListView中的每一个试图项。调用setAdapter后，ListView会通过适配器来管理何显示数据项。*/</span></span><br><span class="line">        listView.setOnItemClickListenner(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemClickListener())&#123;</span><br><span class="line">            <span class="meta">@override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="type">int</span> i, <span class="type">long</span> l)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onItemClick:&quot;</span> + i );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bean</span><br><span class="line"><span class="keyword">package</span> a.b.c.lelelistview;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Bean</span> &#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyAdapter</span><br><span class="line">  </span><br><span class="line"><span class="keyword">package</span> a.b.c.lelelistview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAdapter</span><span class="params">(List&lt;Bean&gt; data, Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> i, View view, View ViewGroup viewGroup)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(view == <span class="literal">null</span>)&#123;</span><br><span class="line">            view = LayoutInflater.from(context).inflate(R.layout.list_item,viewGroup,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> view.findViewById(R.id.tv);</span><br><span class="line">        tevtView.setText(data.get(i).getName());</span><br><span class="line">        </span><br><span class="line">        Log.e(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;getView: &quot;</span>+i);</span><br><span class="line">        <span class="keyword">return</span> view</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">list_item.xml</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">activity_main.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/lv&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="优化View-getView方法"><a href="#优化View-getView方法" class="headerlink" title="优化View getView方法"></a>优化View getView方法</h3><p><strong>性能优化</strong>：</p><ul><li><strong>避免重复查找</strong>：<code>findViewById</code> 是一个性能开销较大的操作。通过缓存视图的引用在 <code>ViewHolder</code> 中，可以避免在每次调用 <code>getView</code> 时重复查找视图。</li><li><strong>提高效率</strong>：<code>ViewHolder</code> 模式可以减少视图查找操作的次数，从而提高列表项的渲染速度和整体性能。</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> i, View view, ViewGroup viewGroup)</span>&#123;</span><br><span class="line">    ViewHolder viewHolder;</span><br><span class="line">    <span class="keyword">if</span>(view == <span class="literal">null</span>)&#123;</span><br><span class="line">        viewHolder = <span class="keyword">new</span> <span class="title class_">ViewHolder</span>();</span><br><span class="line">        view = LayoutInflater.from(context).inflate(R.layout.list_item,viewGroup,<span class="literal">false</span>);</span><br><span class="line">        viewHolder.testView = view.findViewById(R.id.tv);</span><br><span class="line">        view.setTag(viewHolder);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        viewHolder = (ViewHolder) view.getTag();</span><br><span class="line">    &#125;</span><br><span class="line">    viewHolder.textView.setText(data.get(i).getName());</span><br><span class="line">    </span><br><span class="line">    Log.e(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;getView:&quot;</span>+i);</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span>&#123;</span><br><span class="line">    TextView textView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h2><p><img src="/../image/cyclerview.png"></p><p>使用时要先导入依赖包</p><p><img src="/../image/recyclerview2.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line">    <span class="keyword">package</span> a.b.c.myrecycleview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.GridLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.StaggeredGridLayoutManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)&#123;</span><br><span class="line">            <span class="type">Bean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bean</span>();</span><br><span class="line">            bean.setName(<span class="string">&quot;lele&quot;</span> + i);</span><br><span class="line">            data.add(bean);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">RecyclerView</span> <span class="variable">recyclerView</span> <span class="operator">=</span> findViewById(R.id.rv);</span><br><span class="line">          <span class="comment">/*设置布局管理器：</span></span><br><span class="line"><span class="comment">LinearLayoutManager：RecyclerView 的布局管理器，用于定义列表项的排列方式。这里使用 LinearLayoutManager，它将列表项垂直排列。</span></span><br><span class="line"><span class="comment">recyclerView.setLayoutManager(linearLayoutManager);：将 LinearLayoutManager 设置为 RecyclerView 的布局管理器。*/</span></span><br><span class="line">        <span class="comment">//第一种</span></span><br><span class="line">        <span class="type">LinearLayoutManager</span> <span class="variable">linearLayoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(<span class="built_in">this</span>);</span><br><span class="line">        recyclerView.setLayoutManager(linearLayoutManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二种</span></span><br><span class="line">        <span class="type">GridLayoutManager</span> <span class="variable">gridLayoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>(<span class="built_in">this</span>, <span class="number">3</span>);</span><br><span class="line">        recyclerView.setLayoutManager(gridLayoutManager);</span><br><span class="line">        <span class="comment">//第三种</span></span><br><span class="line">        <span class="type">StaggeredGridLayoutManager</span> <span class="variable">staggeredGridLayoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StaggeredGridLayoutManager</span>(<span class="number">3</span>, LinearLayout.VERTICAL);</span><br><span class="line">        recyclerView.setLayoutManager(staggeredGridLayoutManager);</span><br><span class="line">        <span class="type">MyAdapter</span> <span class="variable">myAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAdapter</span>(data,<span class="built_in">this</span>);</span><br><span class="line">        recyclerView.setAdapter(myAdapter);</span><br><span class="line"></span><br><span class="line">        myAdapter.setRecyclerItemClickListener(<span class="keyword">new</span> <span class="title class_">MyAdapter</span>.OnRecyclerItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onRecyclerItemClick: &quot;</span> + position );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyAdapter</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">package</span> a.b.c.myrecycleview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;MyAdapter.MyViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MyAdapter.MyViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> View.inflate(context,R.layout.recycleview_item,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyViewHolder</span>(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> MyAdapter.MyViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        holder.tv.setText(data.get(position).getName());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data == <span class="literal">null</span>?<span class="number">0</span>:data.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">        <span class="keyword">private</span> TextView tv;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            tv = itemView.findViewById(R.id.tv);</span><br><span class="line">            itemView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(mOnItemClickListener!=<span class="literal">null</span>)&#123;</span><br><span class="line">                        mOnItemClickListener.onRecyclerItemClick(getAdapterPosition());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAdapter</span><span class="params">(List&lt;Bean&gt; data, Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnRecyclerItemClickListener</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnRecyclerItemClickListener mOnItemClickListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRecyclerItemClickListener</span><span class="params">(OnRecyclerItemClickListener listener)</span>&#123;</span><br><span class="line">        mOnItemClickListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/rv&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">recycleview_item</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">没问题，我们再一步步解释一下点击 RecyclerView 中项的事件是如何处理的。假设你的 RecyclerView 列表项点击后，在 MainActivity 中有代码来处理这个事件，我们将详细拆解整个过程。</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 用户点击 RecyclerView 中的项</span><br><span class="line">当用户点击 RecyclerView 中的一个项时，系统会触发这个项的点击事件。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 点击事件传递到 ViewHolder</span><br><span class="line">在 MyAdapter 中，你有一个 ViewHolder 类，它代表 RecyclerView 中的每一个项。ViewHolder 的构造函数中设置了点击事件监听器：</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">复制代码</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(itemView);</span><br><span class="line">        tv = itemView.findViewById(R.id.tv);</span><br><span class="line">        itemView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mOnItemClickListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                    mOnItemClickListener.onRecyclerItemClick(getAdapterPosition());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">解释：</span><br><span class="line">itemView.setOnClickListener：这里为每个 RecyclerView 项的 itemView 设置了点击监听器。</span><br><span class="line">getAdapterPosition()：这个方法返回当前项在适配器中的位置（即点击了哪个项）。</span><br><span class="line">mOnItemClickListener.onRecyclerItemClick(getAdapterPosition())：这个方法会被调用，前提是 mOnItemClickListener 不为 <span class="literal">null</span>。</span><br><span class="line"><span class="number">3.</span> 适配器中的监听器</span><br><span class="line">mOnItemClickListener 是在 MyAdapter 类中定义的一个接口，允许你在外部设置点击事件的处理逻辑。你在 MainActivity 中实现了这个接口：</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">复制代码</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnRecyclerItemClickListener</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">4.</span> 设置监听器</span><br><span class="line">在 MainActivity 中，你创建了一个 MyAdapter 实例，并设置了点击事件的监听器：</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">复制代码</span><br><span class="line"><span class="type">MyAdapter</span> <span class="variable">myAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAdapter</span>(data, <span class="built_in">this</span>);</span><br><span class="line">myAdapter.setRecyclerItemClickListener(<span class="keyword">new</span> <span class="title class_">MyAdapter</span>.OnRecyclerItemClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onRecyclerItemClick: &quot;</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">解释：</span><br><span class="line">setRecyclerItemClickListener：这个方法将 MainActivity 中的监听器实现赋值给 MyAdapter 中的 mOnItemClickListener。</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">MyAdapter</span>.OnRecyclerItemClickListener()：创建了一个匿名内部类，它实现了 OnRecyclerItemClickListener 接口，并定义了点击事件的具体处理逻辑（这里是打印日志）。</span><br><span class="line"><span class="number">5.</span> 事件处理流程</span><br><span class="line">当用户点击某个 RecyclerView 项时，事件处理流程如下：</span><br><span class="line"></span><br><span class="line">触发点击事件：用户点击 RecyclerView 中的一个项。</span><br><span class="line">ViewHolder 中处理点击事件：</span><br><span class="line">itemView 的点击事件触发了 View.OnClickListener 中的 onClick 方法。</span><br><span class="line">onClick 方法检查 mOnItemClickListener 是否为 <span class="literal">null</span>。如果不是 <span class="literal">null</span>，调用 mOnItemClickListener.onRecyclerItemClick(getAdapterPosition())。</span><br><span class="line">调用 MainActivity 中的点击事件处理方法：</span><br><span class="line">mOnItemClickListener 实际上是 MainActivity 中设置的具体实现。因此，onRecyclerItemClick(<span class="type">int</span> position) 方法会被调用，position 是被点击项的位置。</span><br><span class="line">这会在 MainActivity 中执行你定义的点击事件处理逻辑，例如打印日志。</span><br><span class="line">为什么 mOnItemClickListener 不是 <span class="literal">null</span></span><br><span class="line">在 MainActivity 中，你通过调用 setRecyclerItemClickListener 方法并传递了一个实现了 OnRecyclerItemClickListener 接口的对象来初始化 mOnItemClickListener。</span><br><span class="line">因此，当点击事件发生时，mOnItemClickListener 不为 <span class="literal">null</span>，能够正确调用 onRecyclerItemClick 方法。</span><br><span class="line">总结</span><br><span class="line">用户点击 RecyclerView 的项。</span><br><span class="line">ViewHolder 的点击事件监听器触发，并检查 mOnItemClickListener。</span><br><span class="line">mOnItemClickListener 调用 MainActivity 中定义的点击事件处理逻辑。</span><br><span class="line">MainActivity 中的 onRecyclerItemClick 方法执行，处理点击事件。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android布局</title>
      <link href="/2024/08/31/Android%E5%B8%83%E5%B1%80/"/>
      <url>/2024/08/31/Android%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="LinearLayout"><a href="#LinearLayout" class="headerlink" title="LinearLayout"></a>LinearLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%801.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffffff&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000ff&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="RelativeLayout"><a href="#RelativeLayout" class="headerlink" title="RelativeLayout"></a>RelativeLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%803.png"></p><p><img src="/../image/%E5%B8%83%E5%B1%804.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rl1&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="FrameLayout"><a href="#FrameLayout" class="headerlink" title="FrameLayout"></a>FrameLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%805.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foreground</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foregroundGravity</span>=<span class="string">&quot;right|bottom&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000ff&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="TableLayout"><a href="#TableLayout" class="headerlink" title="TableLayout"></a>TableLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%806.png"></p><p>注意：要有空间剩余时拉伸才有效，有控件超出空间时，收缩才有效。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:collapseColumns</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:stretchColumns</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shrinkColumns</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第三个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第四个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第三个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第四个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_column</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_span</span>=<span class="string">&quot;23&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="GridLayout"><a href="#GridLayout" class="headerlink" title="GridLayout"></a>GridLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%809.png"></p><p><img src="/../image/%E5%B8%83%E5%B1%8010.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第三个&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第四个&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ConstrainLayout"><a href="#ConstrainLayout" class="headerlink" title="ConstrainLayout"></a>ConstrainLayout</h2><p>直接在Design界面进行操作就行了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android控件</title>
      <link href="/2024/08/29/Android%E6%8E%A7%E4%BB%B6/"/>
      <url>/2024/08/29/Android%E6%8E%A7%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2><h3 id="基础属性详解"><a href="#基础属性详解" class="headerlink" title="基础属性详解"></a>基础属性详解</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B61.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#CDDC39&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">&quot;normal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;lele&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>string这种使用方式不是规范的，规范的使用方式为，在app&#x2F;src&#x2F;main&#x2F;res&#x2F;values&#x2F;strings.xml下添加</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>AndroidBasis<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;tv_one&quot;</span>&gt;</span>lele<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再以这样的方式使用</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:text=&quot;@string/tv_one&quot;</span><br></pre></td></tr></table></figure><p>color有8位数字组成，前两位代表透明度，后六位分别代表红绿蓝的程度</p><h3 id="带阴影的TextView"><a href="#带阴影的TextView" class="headerlink" title="带阴影的TextView"></a>带阴影的TextView</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B62.png"></p><p>为了使效果明显去掉背景颜色</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;444dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;848dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowColor</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowRadius</span>=<span class="string">&quot;3.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDx</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDy</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">&quot;normal&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现跑马灯效果的TextView"><a href="#实现跑马灯效果的TextView" class="headerlink" title="实现跑马灯效果的TextView"></a>实现跑马灯效果的TextView</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B63.png"></p><p>基本设置</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;444dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;848dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ellipsize</span>=<span class="string">&quot;marquee&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowColor</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDx</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDy</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowRadius</span>=<span class="string">&quot;3.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">&quot;normal&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="三种方式使TextView获取焦点"><a href="#三种方式使TextView获取焦点" class="headerlink" title="三种方式使TextView获取焦点"></a>三种方式使TextView获取焦点</h4><h5 id="第一种：点击获得焦点"><a href="#第一种：点击获得焦点" class="headerlink" title="第一种：点击获得焦点"></a>第一种：点击获得焦点</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">添加  android:clickable=&quot;true&quot;</span><br></pre></td></tr></table></figure><h5 id="第二种：自定义一个类，调用isFocused"><a href="#第二种：自定义一个类，调用isFocused" class="headerlink" title="第二种：自定义一个类，调用isFocused()"></a>第二种：自定义一个类，调用isFocused()</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">自定义一个类，调用isFocused()</span><br><span class="line">MyTextView:</span><br><span class="line"><span class="keyword">package</span> a.b.c.mytextview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTextView</span> <span class="keyword">extends</span> <span class="title class_">TextView</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr, <span class="type">int</span> defStyleRes)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr, defStyleRes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFocused</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">    &lt;a.b.c.mytextview.MyTextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_one&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;444dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;848dp&quot;</span></span><br><span class="line">        android:ellipsize=<span class="string">&quot;marquee&quot;</span></span><br><span class="line">        android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:marqueeRepeatLimit=<span class="string">&quot;marquee_forever&quot;</span></span><br><span class="line">        android:shadowColor=<span class="string">&quot;#2196F3&quot;</span></span><br><span class="line">        android:shadowDx=<span class="string">&quot;10.0&quot;</span></span><br><span class="line">        android:shadowDy=<span class="string">&quot;10.0&quot;</span></span><br><span class="line">        android:shadowRadius=<span class="string">&quot;3.0&quot;</span></span><br><span class="line">        android:singleLine=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;@string/tv_one&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;@color/white&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;30sp&quot;</span></span><br><span class="line">        android:textStyle=<span class="string">&quot;normal&quot;</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="第三种：添加标签"><a href="#第三种：添加标签" class="headerlink" title="第三种：添加标签"></a>第三种：添加标签</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">结尾添加 &lt;requestFocus&gt;</span><br></pre></td></tr></table></figure><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="StateListDrawable"><a href="#StateListDrawable" class="headerlink" title="StateListDrawable"></a>StateListDrawable</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B64.png"></p><p>改变背景颜色直接使用 android:background&#x3D;”@color&#x2F;black”是没有效果的，需要修改themes.xml文件</p><p><img src="/../image/%E6%8E%A7%E4%BB%B65.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B66.png"></p><h4 id="更换背景图片"><a href="#更换背景图片" class="headerlink" title="更换背景图片"></a>更换背景图片</h4><p><img src="/../image/%E6%8E%A7%E4%BB%B67.png"></p><p>导入图片</p><p><img src="/../image/%E6%8E%A7%E4%BB%B68.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是按钮&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/btn_selector&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/baseline_10k_24&quot;</span> <span class="attr">android:state_pressed</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/baseline_arrow_circle_down_24&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="更换背景图片颜色"><a href="#更换背景图片颜色" class="headerlink" title="更换背景图片颜色"></a>更换背景图片颜色</h4><p>创建color文件</p><p><img src="/../image/%E6%8E%A7%E4%BB%B69.png"></p><p>创建ColorResourec File</p><p><img src="/../image/%E6%8E%A7%E4%BB%B610.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/btn_selector&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:backgroundTint</span>=<span class="string">&quot;@color/btn_color_selector&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是按钮&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Button事件处理"><a href="#Button事件处理" class="headerlink" title="Button事件处理"></a>Button事件处理</h3><h4 id="点击事件、长按事件、触摸事件"><a href="#点击事件、长按事件、触摸事件" class="headerlink" title="点击事件、长按事件、触摸事件"></a>点击事件、长按事件、触摸事件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.mybutton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;lele&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> findViewById(R.id.btn);</span><br><span class="line">        <span class="comment">//设置点击事件</span></span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            ;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onClick: &quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//设置长按事件</span></span><br><span class="line">        btn.setOnLongClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnLongClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onLongClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onLongClick: &quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//设置触摸事件</span></span><br><span class="line">        btn.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View view, MotionEvent motionEvent)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onTouch: &quot;</span>+ motionEvent.getAction() );</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若是将OnTouch的返回值改为true，另外两个都不会执行，称为事件被OnTouch消费了；若是将OnLongClick改为true，OnTouch会执行，OnClick不会执行</p><p>另一种代替OnClick的方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:onClick=&quot;leleOnclick&quot;</span><br><span class="line">在MainActivity中创造此方法</span><br><span class="line">public void leleOnclick(View view)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B611.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myedittext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> EditText edt_test;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> findViewById(R.id.btn_get);</span><br><span class="line">        edt_test = findViewById(R.id.edt);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> edt_test.getText().toString();</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;输入的内容 &quot;</span>+text );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColorHint</span>=<span class="string">&quot;#03A9F4&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">&quot;phone&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/edt&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawableLeft</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">&quot;textPassword&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawablePadding</span>=<span class="string">&quot;30dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingLeft</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;获取内容&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_get&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B612.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B613.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>  <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">&quot;fitXY&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxHeight</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxWidth</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B614.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myprogressbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ProgressBar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar progressBar;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar progressBar2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        progressBar = findViewById(R.id.pb);</span><br><span class="line">        progressBar2 = findViewById(R.id.pb2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">leleClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(progressBar.getVisibility() == View.GONE)&#123;</span><br><span class="line">            progressBar.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            progressBar.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">progress</span> <span class="operator">=</span> progressBar2.getProgress();</span><br><span class="line">        progress+=<span class="number">10</span>;</span><br><span class="line">        progressBar2.setProgress(progress);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>  <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/pb&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;显示或隐藏进度条&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;leleClick&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/pb2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;lele&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;模拟下载&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;load&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Notification与NotificationManager"><a href="#Notification与NotificationManager" class="headerlink" title="Notification与NotificationManager"></a>Notification与NotificationManager</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B615.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B616.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B617.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B618.png"></p><p>简单来说就是通知的小图标不能带颜色，标题、文本内容、小图标是必须要设置的</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.mynotification;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Notification;</span><br><span class="line"><span class="keyword">import</span> android.app.NotificationChannel;</span><br><span class="line"><span class="keyword">import</span> android.app.NotificationManager;</span><br><span class="line"><span class="keyword">import</span> android.app.PendingIntent;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.NotificationCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> NotificationManager manager;</span><br><span class="line">    <span class="keyword">private</span> Notivication notification;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);<span class="comment">//这个用于将应用程序显示到屏幕边缘</span></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">        <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODE<span class="number">.0</span>)&#123;</span><br><span class="line">            <span class="type">NotificationChanner</span> <span class="variable">channer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationChanner</span>(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;测试通知&quot;</span>,NotificationManager.IMPORTANCE_HIGH);</span><br><span class="line">            manager.createNofificationChanner(channel);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, NotificationActivity.class);</span><br><span class="line">        <span class="type">PendingIntent</span> <span class="variable">pendingIntent</span> <span class="operator">=</span> PendingIntent.getActivity(</span><br><span class="line">            <span class="built_in">this</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            intent,</span><br><span class="line">            PendingIntent.FLAG_IMMUTABLE</span><br><span class="line">            <span class="comment">/*标志使用</span></span><br><span class="line"><span class="comment">PendingIntent.FLAG_IMMUTABLE：创建一个不可变的 PendingIntent，这意味着意图内容不会被更改。</span></span><br><span class="line"><span class="comment">PendingIntent.FLAG_MUTABLE：创建一个可变的 PendingIntent，这意味着意图内容可以在某些情况下被更改。*/</span></span><br><span class="line">        );</span><br><span class="line">        notification = <span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.Builder(<span class="built_in">this</span>,<span class="string">&quot;lele&quot;</span>)</span><br><span class="line">            .setContentTitle(<span class="string">&quot;官方通知&quot;</span>)</span><br><span class="line">            .setContentText(<span class="string">&quot;人生若只如初见，何事秋风悲画扇&quot;</span>)</span><br><span class="line">            .setSmallIcon(R.drabable.baseline_android_24)</span><br><span class="line">            .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.ceshi1))</span><br><span class="line">            .setColor(Color.parseCOlor(<span class="string">&quot;#ff0000&quot;</span>))</span><br><span class="line">            .setContentIntent(pendingIntent)</span><br><span class="line">            .setAutoCancel(<span class="literal">true</span>)</span><br><span class="line">            .build();</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendNotification</span><span class="params">(View view)</span>&#123;</span><br><span class="line">            manager.notify(<span class="number">1</span>,notification);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cacelNotification</span><span class="params">(View view)</span>&#123;</span><br><span class="line">            manager.cancel(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;发送通知&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;sendNotification&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;cacelNotification&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;取消通知&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">NotificationActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.mynotification;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NotificationActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        Log.e(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;onCreate: 进入NotificationActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Toolbar"><a href="#Toolbar" class="headerlink" title="Toolbar"></a>Toolbar</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B619.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.mytoolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">Toolbar</span> <span class="variable">toolbar</span> <span class="operator">=</span> findViewById(R.id.tb);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        toolbar.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.d(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: toolbar被点击了&quot;</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Toolbar</span> <span class="variable">toolbar2</span> <span class="operator">=</span> findViewById(R.id.tb2);</span><br><span class="line"></span><br><span class="line">        toolbar2.setNavigationIcon(R.drawable.baseline_arrow_back_24);</span><br><span class="line">        toolbar2.setTitle(<span class="string">&quot;标题&quot;</span>);</span><br><span class="line">        toolbar2.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: toolbar2被点击了&quot;</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tb&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;410dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:logo</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navigationIcon</span>=<span class="string">&quot;@drawable/baseline_arrow_back_24&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:subtitle</span>=<span class="string">&quot;子标题&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:subtitleTextColor</span>=<span class="string">&quot;#00ffff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;标题&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleMarginStart</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;#ff0000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tb2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;410dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;410dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navigationIcon</span>=<span class="string">&quot;@drawable/baseline_arrow_back_24&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;标题&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    &lt;/<span class="attr">androidx.appcompat.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AlertDialog"><a href="#AlertDialog" class="headerlink" title="AlertDialog"></a>AlertDialog</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B621.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.myalertdialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.DialogInterface;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AlertDialog;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;lele&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">click</span><span class="params">(View view)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> <span class="variable">dialogView</span> <span class="operator">=</span> getLayoutInflater().inflate(R.layout.dialog_view,<span class="literal">null</span>);</span><br><span class="line">        AlertDialog.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(<span class="built_in">this</span>);</span><br><span class="line">        builder.setIcon(R.drawable.ic_launcher_foreground)</span><br><span class="line">                .setTitle(<span class="string">&quot;我是对话框&quot;</span>)</span><br><span class="line">                .setMessage(<span class="string">&quot;你好啊&quot;</span>)</span><br><span class="line">                .setPositiveButton(<span class="string">&quot;确定&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        Log.e(TAG, <span class="string">&quot;onClick: 点击了确定&quot;</span> );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setNegativeButton(<span class="string">&quot;取消&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        Log.e(TAG, <span class="string">&quot;onClick: 点击了取消&quot;</span> );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setNeutralButton(<span class="string">&quot;中间&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        Log.e(TAG, <span class="string">&quot;onClick: 点击了中间&quot;</span> );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setView(dialogView)</span><br><span class="line">                .create()</span><br><span class="line">                .show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;click&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;显示对话框&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">dialog_view.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;今天天气怎么样&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PopupWindow"><a href="#PopupWindow" class="headerlink" title="PopupWindow"></a>PopupWindow</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B622.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.mypopupwindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.PopupWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clidk</span><span class="params">(View view)</span>&#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">popupView</span> <span class="operator">=</span> getLayoutInflater().inflaer(R.layout.popup_view,<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn1</span> <span class="operator">=</span> popupView.findViewById(R.id.btn1);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn2</span> <span class="operator">=</span> poputView.findViewById(R.id.btn2);</span><br><span class="line">        </span><br><span class="line">        <span class="type">PopupWindow</span> <span class="variable">popupWindow</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PopupWindow</span>(popupView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CPNTENT,<span class="literal">true</span>);</span><br><span class="line">        popupWindow.setBackgroundDrawable(getResources().getDrawable(R.drawable.tx));</span><br><span class="line">        </span><br><span class="line">        popupWindow.showAsDropDown(view);</span><br><span class="line">        </span><br><span class="line">                btn1.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: 你是住在上海吗&quot;</span> );</span><br><span class="line">                popupWindow.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn2.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: 你是住在北京吗&quot;</span> );</span><br><span class="line">                popupWindow.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;click&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;弹出PopupWindow&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">popup_view</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;上海&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;北京&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础项目</title>
      <link href="/2024/08/28/Java%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/08/28/Java%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Animal类"><a href="#Animal类" class="headerlink" title="Animal类"></a>Animal类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> visitCount;</span><br><span class="line">    <span class="keyword">private</span> LocalDate latestVisitDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">int</span> visitCount, LocalDate latestVisitDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.visitCount = visitCount;</span><br><span class="line">        <span class="built_in">this</span>.latestVisitDate = latestVisitDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;顾客 [name=&quot;</span> + name + <span class="string">&quot;, visitCount=&quot;</span> + visitCount + <span class="string">&quot;, latestVisitDate=&quot;</span> + latestVisitDate + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AnimalNotFoundException"><a href="#AnimalNotFoundException" class="headerlink" title="AnimalNotFoundException"></a>AnimalNotFoundException</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> visitCount;</span><br><span class="line">    <span class="keyword">private</span> LocalDate latestVisitDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">int</span> visitCount, LocalDate latestVisitDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.visitCount = visitCount;</span><br><span class="line">        <span class="built_in">this</span>.latestVisitDate = latestVisitDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;顾客 [name=&quot;</span> + name + <span class="string">&quot;, visitCount=&quot;</span> + visitCount + <span class="string">&quot;, latestVisitDate=&quot;</span> + latestVisitDate + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AnimalShop"><a href="#AnimalShop" class="headerlink" title="AnimalShop"></a>AnimalShop</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AnimalShop</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">buyAnimal</span><span class="params">(Animal animal)</span> <span class="keyword">throws</span> InsufficientBalanceException;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">serveCustomer</span><span class="params">(Customer customer)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">closeShop</span><span class="params">(LocalDate date)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age, gender, <span class="number">200.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;猫猫 [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;, gender=&quot;</span> + gender + <span class="string">&quot;, price=&quot;</span> + price + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ChineseRualDog"><a href="#ChineseRualDog" class="headerlink" title="ChineseRualDog"></a>ChineseRualDog</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChineseRuralDog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isVaccineInjected;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChineseRuralDog</span><span class="params">(String name, <span class="type">int</span> age, String gender, <span class="type">boolean</span> isVaccineInjected)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age, gender, <span class="number">100.0</span>); <span class="comment">// 价格100元</span></span><br><span class="line">        <span class="built_in">this</span>.isVaccineInjected = isVaccineInjected;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;中华田园犬 [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;, gender=&quot;</span> + gender +</span><br><span class="line">                <span class="string">&quot;, isVaccineInjected=&quot;</span> + isVaccineInjected + <span class="string">&quot;, price=&quot;</span> + price + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Customer"><a href="#Customer" class="headerlink" title="Customer"></a>Customer</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> visitCount;</span><br><span class="line">    <span class="keyword">private</span> LocalDate latestVisitDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">int</span> visitCount, LocalDate latestVisitDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.visitCount = visitCount;</span><br><span class="line">        <span class="built_in">this</span>.latestVisitDate = latestVisitDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;顾客 [name=&quot;</span> + name + <span class="string">&quot;, visitCount=&quot;</span> + visitCount + <span class="string">&quot;, latestVisitDate=&quot;</span> + latestVisitDate + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="InsufficientBalanceException"><a href="#InsufficientBalanceException" class="headerlink" title="InsufficientBalanceException"></a>InsufficientBalanceException</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsufficientBalanceException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InsufficientBalanceException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MyAnimalShop"><a href="#MyAnimalShop" class="headerlink" title="MyAnimalShop"></a>MyAnimalShop</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAnimalShop</span> <span class="keyword">implements</span> <span class="title class_">AnimalShop</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> balance;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Animal&gt; animalList;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Customer&gt; customerList;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isOpen;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAnimalShop</span><span class="params">(<span class="type">double</span> initialBalance)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.balance = initialBalance;</span><br><span class="line">        <span class="built_in">this</span>.animalList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.customerList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.isOpen = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buyAnimal</span><span class="params">(Animal animal)</span> <span class="keyword">throws</span> InsufficientBalanceException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;商店已歇业！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (balance &lt; animal.price) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InsufficientBalanceException</span>(<span class="string">&quot;余额不足，无法购买此动物！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        animalList.add(animal);</span><br><span class="line">        balance -= animal.price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serveCustomer</span><span class="params">(Customer customer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;商店已歇业！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        customerList.add(customer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (animalList.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AnimalNotFoundException</span>(<span class="string">&quot;店内没有动物可供购买！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> animalList.remove(<span class="number">0</span>); <span class="comment">// 出售第一只动物</span></span><br><span class="line">        balance += animal.price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">closeShop</span><span class="params">(LocalDate date)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;商店已歇业！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        isOpen = <span class="literal">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;店内客户信息:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Customer customer : customerList) &#123;</span><br><span class="line">            System.out.println(customer);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;今天的利润是: &quot;</span> + balance);</span><br><span class="line">        customerList.clear(); <span class="comment">// 清空客户列表</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Rabbit</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Rabbit</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age, gender, <span class="number">150.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;兔子 [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;, gender=&quot;</span> + gender + <span class="string">&quot;, price=&quot;</span> + price + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MyAnimalShop</span> <span class="variable">shop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAnimalShop</span>(<span class="number">500.0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 买入动物</span></span><br><span class="line">            shop.buyAnimal(<span class="keyword">new</span> <span class="title class_">ChineseRuralDog</span>(<span class="string">&quot;旺财&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">            shop.buyAnimal(<span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;喵喵&quot;</span>, <span class="number">2</span>, <span class="string">&quot;女&quot;</span>));</span><br><span class="line">            shop.buyAnimal(<span class="keyword">new</span> <span class="title class_">Rabbit</span>(<span class="string">&quot;小兔&quot;</span>, <span class="number">1</span>, <span class="string">&quot;中&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 招待客户</span></span><br><span class="line">            shop.serveCustomer(<span class="keyword">new</span> <span class="title class_">Customer</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">1</span>, LocalDate.now()));</span><br><span class="line">            shop.serveCustomer(<span class="keyword">new</span> <span class="title class_">Customer</span>(<span class="string">&quot;李四&quot;</span>, <span class="number">2</span>, LocalDate.now()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 关闭商店</span></span><br><span class="line">            shop.closeShop(LocalDate.now());</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目7</title>
      <link href="/2024/08/26/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7-1/"/>
      <url>/2024/08/26/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目7</title>
      <link href="/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7/"/>
      <url>/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">31</span> 字符串循环左移</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 白洪欢</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入一个字符串和一个非负整数N，要求将字符串循环左移N次。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中给出一个不超过<span class="number">100</span>个字符长度的、以回车结束的非空字符串；第<span class="number">2</span>行给出非负整数N。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出循环左移N次后的字符串。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">Hello World!</span><br><span class="line"><span class="number">2</span></span><br><span class="line">输出样例：</span><br><span class="line">llo World!He</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> str.length();</span><br><span class="line">        N=N%len;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> str.substring(N)+str.substring(<span class="number">0</span>,N);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">32</span> 说反话-加强版</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">测试输入包含一个测试用例，在一行内给出总长度不超过<span class="number">500</span> <span class="number">000</span>的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用若干个空格分开。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">每个测试用例的输出占一行，输出倒序后的句子，并且保证单词间只有<span class="number">1</span>个空格。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">Hello World   Here I Come</span><br><span class="line">输出样例：</span><br><span class="line">Come I Here World Hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取整行输入</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine().trim();  <span class="comment">// 去除首尾空格</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 StringTokenizer 分隔单词，并过滤掉多余的空格</span></span><br><span class="line">        <span class="type">StringTokenizer</span> <span class="variable">tokenizer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(input);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历所有单词并将它们逆序添加到 StringBuilder 中</span></span><br><span class="line">        String[] words = <span class="keyword">new</span> <span class="title class_">String</span>[tokenizer.countTokens()];</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> words.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (tokenizer.hasMoreTokens()) &#123;</span><br><span class="line">            words[index--] = tokenizer.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拼接单词</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; words.length; i++) &#123;</span><br><span class="line">            result.append(words[i]);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; words.length - <span class="number">1</span>) &#123;</span><br><span class="line">                result.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">33</span> 有理数加法</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，计算两个有理数的和。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中按照a1/b1 a2/b2的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按照a/b的格式输出两个有理数的和。注意必须是该有理数的最简分数形式，若分母为<span class="number">1</span>，则只输出分子。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">1</span>/<span class="number">3</span> <span class="number">1</span>/<span class="number">6</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">1</span>/<span class="number">2</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分割输入的分数</span></span><br><span class="line">        String[] fractions = input.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        String[] fraction1 = fractions[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        String[] fraction2 = fractions[<span class="number">1</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取分子和分母</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> Integer.parseInt(fraction1[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b1</span> <span class="operator">=</span> Integer.parseInt(fraction1[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> Integer.parseInt(fraction2[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b2</span> <span class="operator">=</span> Integer.parseInt(fraction2[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算和的分子和分母</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">numerator</span> <span class="operator">=</span> a1 * b2 + a2 * b1;</span><br><span class="line">        <span class="type">int</span> <span class="variable">denominator</span> <span class="operator">=</span> b1 * b2;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 化简分数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">gcd</span> <span class="operator">=</span> gcd(numerator, denominator);</span><br><span class="line">        numerator /= gcd;</span><br><span class="line">        denominator /= gcd;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        <span class="keyword">if</span> (denominator == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(numerator);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(numerator + <span class="string">&quot;/&quot;</span> + denominator);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求最大公约数的函数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> b;</span><br><span class="line">            b = a % b;</span><br><span class="line">            a = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">34</span> 通讯录的录入与显示</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。</span><br><span class="line">本题要求编写程序，录入N条记录，并且根据要求显示任意某条记录。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第一行给出正整数N（≤<span class="number">10</span>）；随后N行，每行按照格式姓名 生日 性别 固话 手机给出一条记录。其中姓名是不超过<span class="number">10</span>个字符、不包含空格的非空字符串；生日按yyyy/mm/dd的格式给出年月日；性别用M表示“男”、F表示“女”；固话和手机均为不超过<span class="number">15</span>位的连续数字，前面有可能出现+。</span><br><span class="line"></span><br><span class="line">在通讯录记录输入完成后，最后一行给出正整数K，并且随后给出K个整数，表示要查询的记录编号（从<span class="number">0</span>到N−<span class="number">1</span>顺序编号）。数字间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">对每一条要查询的记录编号，在一行中按照姓名 固话 手机 性别 生日的格式输出该记录。若要查询的记录不存在，则输出Not Found。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">3</span></span><br><span class="line">Chris <span class="number">1984</span>/<span class="number">03</span>/<span class="number">10</span> F +<span class="number">86181779452</span> <span class="number">13707010007</span></span><br><span class="line">LaoLao <span class="number">1967</span>/<span class="number">11</span>/<span class="number">30</span> F 057187951100 +<span class="number">8618618623333</span></span><br><span class="line">QiaoLin <span class="number">1980</span>/<span class="number">01</span>/<span class="number">01</span> M <span class="number">84172333</span> <span class="number">10086</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">7</span></span><br><span class="line">输出样例：</span><br><span class="line">LaoLao 057187951100 +<span class="number">8618618623333</span> F <span class="number">1967</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">Not Found</span><br><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">struct data&#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line">struct man&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">    struct data barthday;</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">char</span> dianhua[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> phone[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> flag;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    struct man human[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        human[i].flag=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s %d/%d/%d %c %s %s&quot;</span>,human[i].name,</span><br><span class="line">              &amp;human[i].barthday.year,</span><br><span class="line">              &amp;human[i].barthday.month,</span><br><span class="line">              &amp;human[i].barthday.day</span><br><span class="line">             ,&amp;human[i].sex</span><br><span class="line">             ,human[i].dianhua</span><br><span class="line"> ,human[i].phone);</span><br><span class="line">       human[i].flag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">            <span class="keyword">if</span>(human[num].flag==<span class="number">1</span>)&#123;</span><br><span class="line">            printf(<span class="string">&quot;%s %s %s %c %02d/%02d/%02d&quot;</span>,human[num].name,<span class="comment">//输出数字不满两位有前导0</span></span><br><span class="line">                  human[num].dianhua,</span><br><span class="line">                  human[num].phone,</span><br><span class="line">                  human[num].sex,</span><br><span class="line">                  human[num].barthday.year,</span><br><span class="line">                  human[num].barthday.month,</span><br><span class="line">                  human[num].barthday.day);</span><br><span class="line">                  <span class="keyword">if</span>(i!=k-<span class="number">1</span>)&#123;</span><br><span class="line">                    printf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                  &#125; </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                printf(<span class="string">&quot;Not Found&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(i!=k-<span class="number">1</span>)&#123;</span><br><span class="line">                    printf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">35</span> 有理数均值</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，计算N个有理数的平均值。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入第一行给出正整数N（≤<span class="number">100</span>）；第二行中按照a1/b1 a2/b2 …的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按照a/b的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为<span class="number">1</span>，则只输出分子。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span>/<span class="number">2</span> <span class="number">1</span>/<span class="number">6</span> <span class="number">3</span>/<span class="number">6</span> -<span class="number">5</span>/<span class="number">10</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">1</span>/<span class="number">6</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Method to simplify fractions</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">simplify</span><span class="params">(<span class="type">int</span>[] fraction)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> fraction[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> fraction[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> Math.min(x, y);</span><br><span class="line">        <span class="keyword">while</span> (tmp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % tmp == <span class="number">0</span> &amp;&amp; y % tmp == <span class="number">0</span>) &#123;</span><br><span class="line">                fraction[<span class="number">0</span>] /= tmp;</span><br><span class="line">                fraction[<span class="number">1</span>] /= tmp;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt(); <span class="comment">// Number of fractions</span></span><br><span class="line">        String[] firstFraction = scanner.next().split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">zfz</span> <span class="operator">=</span> Integer.parseInt(firstFraction[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">zfm</span> <span class="operator">=</span> Integer.parseInt(firstFraction[<span class="number">1</span>]);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] fraction = &#123;zfz, zfm&#125;;</span><br><span class="line">        simplify(fraction);</span><br><span class="line">        zfz = fraction[<span class="number">0</span>];</span><br><span class="line">        zfm = fraction[<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            String[] currentFraction = scanner.next().split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> Integer.parseInt(currentFraction[<span class="number">0</span>]);</span><br><span class="line">            <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> Integer.parseInt(currentFraction[<span class="number">1</span>]);</span><br><span class="line">            </span><br><span class="line">            zfz = zfz * b + zfm * a;</span><br><span class="line">            zfm *= b;</span><br><span class="line">            </span><br><span class="line">            fraction[<span class="number">0</span>] = zfz;</span><br><span class="line">            fraction[<span class="number">1</span>] = zfm;</span><br><span class="line">            simplify(fraction);</span><br><span class="line">            zfz = fraction[<span class="number">0</span>];</span><br><span class="line">            zfm = fraction[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        zfm *= n; <span class="comment">// Multiply denominator by n to calculate average</span></span><br><span class="line">        fraction[<span class="number">0</span>] = zfz;</span><br><span class="line">        fraction[<span class="number">1</span>] = zfm;</span><br><span class="line">        simplify(fraction);</span><br><span class="line">        zfz = fraction[<span class="number">0</span>];</span><br><span class="line">        zfm = fraction[<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (zfm == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(zfz);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (zfz == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(zfz + <span class="string">&quot;/&quot;</span> + zfm);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目6</title>
      <link href="/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE6/"/>
      <url>/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">26</span> 单词长度</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">你的程序要读入一行文本，其中以空格分隔为若干个单词，以.结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如it<span class="string">&#x27;s算一个单词，长度为4。注意，行中可能出现连续的空格；最后的.不计算在内。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输入格式：</span></span><br><span class="line"><span class="string">输入在一行中给出一行文本，以.结束</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提示：用scanf(&quot;%c&quot;,...);来读入一个字符，直到读到.为止。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输出格式：</span></span><br><span class="line"><span class="string">在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输入样例：</span></span><br><span class="line"><span class="string">It&#x27;</span>s great to see you here.</span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> scanner.nextLine().trim();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (line.isEmpty() || line.equals(<span class="string">&quot;.&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>); <span class="comment">// Print an empty line for empty input</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (line.endsWith(<span class="string">&quot;.&quot;</span>)) &#123;</span><br><span class="line">            line = line.substring(<span class="number">0</span>, line.length() - <span class="number">1</span>).trim(); <span class="comment">// Remove the trailing dot and trim spaces</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] words = line.split(<span class="string">&quot;\\s+&quot;</span>); <span class="comment">// Split by one or more whitespace characters</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!word.isEmpty()) &#123; <span class="comment">// Check to avoid empty words</span></span><br><span class="line">                result.append(word.length()).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Remove the trailing space and print the result</span></span><br><span class="line">        <span class="keyword">if</span> (result.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result.setLength(result.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">27</span> 冒泡法排序</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−<span class="number">1</span>个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。</span><br><span class="line"></span><br><span class="line">本题要求对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果数列。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中给出N和K（<span class="number">1</span>≤K&lt;N≤<span class="number">100</span>），在第<span class="number">2</span>行中给出N个待排序的整数，数字间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span> <span class="number">4</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取N和K</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">K</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取N个整数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            array[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行冒泡排序，直到第K遍</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">pass</span> <span class="operator">=</span> <span class="number">0</span>; pass &lt; K; pass++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N - pass - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i] &gt; array[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="comment">// 交换array[i]和array[i + 1]</span></span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> array[i];</span><br><span class="line">                    array[i] = array[i + <span class="number">1</span>];</span><br><span class="line">                    array[i + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出第K遍后的结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">28</span> 猴子选大王</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">一群猴子要选新猴王。新猴王的选择方法是：让N只候选猴子围成一圈，从某位置起顺序编号为<span class="number">1</span>~N号。从第<span class="number">1</span>号开始报数，每轮从<span class="number">1</span>报到<span class="number">3</span>，凡报到<span class="number">3</span>的猴子即退出圈子，接着又从紧邻的下一只猴子开始同样的报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给一个正整数N（≤<span class="number">1000</span>）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出当选猴王的编号。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">11</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">7</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个链表来存储猴子的编号</span></span><br><span class="line">        List&lt;Integer&gt; monkeys = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            monkeys.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 当前报数的位置</span></span><br><span class="line">        <span class="keyword">while</span> (monkeys.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            index = (index + <span class="number">2</span>) % monkeys.size(); <span class="comment">// 计算要淘汰的猴子的索引 (报到3)</span></span><br><span class="line">            monkeys.remove(index); <span class="comment">// 移除该猴子</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出最后剩下的猴子的编号</span></span><br><span class="line">        System.out.println(monkeys.get(<span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">29</span> 删除字符串中的子串</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 白洪欢</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入<span class="number">2</span>个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在<span class="number">2</span>行中分别给出不超过<span class="number">80</span>个字符长度的、以回车结束的<span class="number">2</span>个非空字符串，对应S1和S2。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">Tomcat is a male ccatat</span><br><span class="line">cat</span><br><span class="line">输出样例：</span><br><span class="line">Tom is a male </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取第一个字符串 S1</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">S1</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="comment">// 读取第二个字符串 S2</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">S2</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理删除操作</span></span><br><span class="line">        <span class="keyword">while</span> (S1.contains(S2)) &#123;</span><br><span class="line">            S1 = S1.replace(S2, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(S1);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">30</span> 字符串的冒泡排序</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">我们已经知道了将N个整数按从小到大排序的冒泡排序法。本题要求将此方法用于字符串序列，并对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果序列。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中给出N和K（<span class="number">1</span>≤K&lt;N≤<span class="number">100</span>），此后N行，每行包含一个长度不超过<span class="number">10</span>的、仅由小写英文字母组成的非空字符串。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出冒泡排序法扫描完第K遍后的中间结果序列，每行包含一个字符串。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line">best</span><br><span class="line">cat</span><br><span class="line">east</span><br><span class="line">a</span><br><span class="line">free</span><br><span class="line">day</span><br><span class="line">输出样例：</span><br><span class="line">best</span><br><span class="line">a</span><br><span class="line">cat</span><br><span class="line">day</span><br><span class="line">east</span><br><span class="line">free</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">K</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.nextLine();</span><br><span class="line">        String[] strings = <span class="keyword">new</span> <span class="title class_">String</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            strings[i] = scanner.nextLine();</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; K; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j= <span class="number">0</span>;j&lt;N-i-<span class="number">1</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(strings[j].compareTo(strings[j+<span class="number">1</span>]) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> strings[j];</span><br><span class="line">                    strings[j] = strings[j+<span class="number">1</span>];</span><br><span class="line">                    strings[j+<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String s : strings)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目5</title>
      <link href="/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE5/"/>
      <url>/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">21</span> 求特殊方程的正整数解</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 张彤彧</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求对任意给定的正整数N，求方程X </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> +Y </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> =N的全部正整数解。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出正整数N（≤<span class="number">10000</span>）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出方程X </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> +Y </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> =N的全部正整数解，其中X≤Y。每组解占<span class="number">1</span>行，两数字间以<span class="number">1</span>空格分隔，按X的递增顺序输出。如果没有解，则输出No Solution。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">884</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">10</span> <span class="number">28</span></span><br><span class="line"><span class="number">20</span> <span class="number">22</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">11</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">No Solution</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">foundSolution</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历可能的 X 值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>; x &lt;= Math.sqrt(N); x++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> x * x;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> N - x2;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算 Y</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">int</span>) Math.sqrt(y2);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 检查 Y 是否满足条件</span></span><br><span class="line">            <span class="keyword">if</span> (y * y == y2 &amp;&amp; x &lt;= y) &#123;</span><br><span class="line">                System.out.println(x + <span class="string">&quot; &quot;</span> + y);</span><br><span class="line">                foundSolution = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果没有找到解</span></span><br><span class="line">        <span class="keyword">if</span> (!foundSolution) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">22</span> 龟兔赛跑</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈建海</span><br><span class="line">单位 浙江大学</span><br><span class="line">乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进<span class="number">3</span>米，兔子每分钟前进<span class="number">9</span>米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑<span class="number">10</span>分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息<span class="number">30</span>分钟，否则继续跑<span class="number">10</span>分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出比赛时间T（分钟）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出比赛的结果：乌龟赢输出<span class="meta">@_</span>@，兔子赢输出^_^，平局则输出-_-；后跟<span class="number">1</span>空格，再输出胜利者跑完的距离。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">242</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="meta">@_</span>@ <span class="number">726</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">int</span> <span class="variable">turtle</span> <span class="operator">=</span> <span class="number">0</span>,rabbit =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rest</span> <span class="operator">=</span> -<span class="number">1</span>,run=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">while</span>(minute--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            turtle +=<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">if</span>(run-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                rabbit+=<span class="number">9</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(run ==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(rabbit&gt;turtle &amp;&amp; rest!=<span class="number">0</span>)&#123;</span><br><span class="line">                    rest =  <span class="number">30</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    run = <span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(rest--==<span class="number">0</span>)&#123;</span><br><span class="line">                run =<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(turtle&gt;rabbit)&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;@_@ %d&quot;</span>,turtle);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(rabbit &gt; turtle)&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;^_^ %d&quot;</span>,rabbit);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;-_- %d&quot;</span>,rabbit);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">23</span> 币值转换</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈建海</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入一个整数（位数不超过<span class="number">9</span>位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如<span class="number">23108</span>元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字<span class="number">0</span>-<span class="number">9</span>，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是<span class="number">23108</span>元应被转换输出为“cWdQbBai”元。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个不超过<span class="number">9</span>位的非负整数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">813227345</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">iYbQdBcScWhQdBeSf</span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">6900</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">gQjB</span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">long</span> <span class="variable">num</span> <span class="operator">=</span> scanner.nextLong();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 数字字符和单位字符</span></span><br><span class="line">        <span class="type">char</span>[] number = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>&#125;;</span><br><span class="line">        <span class="type">char</span>[] unit = &#123;<span class="string">&#x27;\0&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将数字按位拆分</span></span><br><span class="line">        <span class="keyword">while</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            a[i++] = (<span class="type">int</span>) (num % <span class="number">10</span>);</span><br><span class="line">            num /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        i--; <span class="comment">// 索引调整到最后一个非零位</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (i &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                result.append(number[a[i]]);</span><br><span class="line">                result.append(unit[i]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">4</span> &amp;&amp; (a[<span class="number">5</span>] != <span class="number">0</span> || a[<span class="number">6</span>] != <span class="number">0</span> || a[<span class="number">7</span>] != <span class="number">0</span>)) &#123;</span><br><span class="line">                    result.append(<span class="string">&#x27;W&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ((i - <span class="number">1</span>) &gt;= <span class="number">0</span> &amp;&amp; a[i - <span class="number">1</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">                    result.append(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">24</span> 约分最简分式</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">分数可以表示为分子/分母的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如<span class="number">6</span>/<span class="number">12</span>可以被约分为<span class="number">1</span>/<span class="number">2</span>。当分子大于分母时，不需要表达为整数又分数的形式，即<span class="number">11</span>/<span class="number">8</span>还是<span class="number">11</span>/<span class="number">8</span>；而当分子分母相等时，仍然表达为<span class="number">1</span>/<span class="number">1</span>的分数形式。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个分数，分子和分母中间以斜杠/分隔，如：<span class="number">12</span>/<span class="number">34</span>表示<span class="number">34</span>分之<span class="number">12</span>。分子和分母都是正整数（不包含<span class="number">0</span>，如果不清楚正整数的定义的话）。</span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">对于C语言，在scanf的格式字符串中加入/，让scanf来处理这个斜杠。</span><br><span class="line">对于Python语言，用a,b=map(<span class="type">int</span>, input().split(<span class="string">&#x27;/&#x27;</span>))这样的代码来处理这个斜杠。</span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用分子/分母的形式表示分数。如</span><br><span class="line"><span class="number">5</span>/<span class="number">6</span>表示<span class="number">6</span>分之<span class="number">5</span>。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">66</span>/<span class="number">120</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">11</span>/<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算最大公约数的递归函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解析输入分数</span></span><br><span class="line">        String[] parts = input.split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">numerator</span> <span class="operator">=</span> Integer.parseInt(parts[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">denominator</span> <span class="operator">=</span> Integer.parseInt(parts[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算最大公约数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">gcdValue</span> <span class="operator">=</span> gcd(numerator, denominator);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 约分分子和分母</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">simplifiedNumerator</span> <span class="operator">=</span> numerator / gcdValue;</span><br><span class="line">        <span class="type">int</span> <span class="variable">simplifiedDenominator</span> <span class="operator">=</span> denominator / gcdValue;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出最简分式</span></span><br><span class="line">        System.out.println(simplifiedNumerator + <span class="string">&quot;/&quot;</span> + simplifiedDenominator);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">25</span> 念数字</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出fu字。十个数字对应的拼音如下：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>: ling</span><br><span class="line"><span class="number">1</span>: yi</span><br><span class="line"><span class="number">2</span>: er</span><br><span class="line"><span class="number">3</span>: san</span><br><span class="line"><span class="number">4</span>: si</span><br><span class="line"><span class="number">5</span>: wu</span><br><span class="line"><span class="number">6</span>: liu</span><br><span class="line"><span class="number">7</span>: qi</span><br><span class="line"><span class="number">8</span>: ba</span><br><span class="line"><span class="number">9</span>: jiu</span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个整数，如：<span class="number">1234</span>。</span><br><span class="line"></span><br><span class="line">提示：整数包括负数、零和正数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如</span><br><span class="line">yi er san si。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">-<span class="number">600</span></span><br><span class="line">输出样例：</span><br><span class="line">fu liu ling ling</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义数字到拼音的映射</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] PINYIN = &#123;</span><br><span class="line">        <span class="string">&quot;ling&quot;</span>, <span class="string">&quot;yi&quot;</span>, <span class="string">&quot;er&quot;</span>, <span class="string">&quot;san&quot;</span>, <span class="string">&quot;si&quot;</span>, <span class="string">&quot;wu&quot;</span>, <span class="string">&quot;liu&quot;</span>, <span class="string">&quot;qi&quot;</span>, <span class="string">&quot;ba&quot;</span>, <span class="string">&quot;jiu&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理负数</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">if</span> (input.charAt(<span class="number">0</span>) == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            result.append(<span class="string">&quot;fu &quot;</span>);</span><br><span class="line">            input = input.substring(<span class="number">1</span>); <span class="comment">// 去掉负号</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理每个数字</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> input.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(ch)) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">digit</span> <span class="operator">=</span> ch - <span class="string">&#x27;0&#x27;</span>; <span class="comment">// 将字符转换为对应的数字</span></span><br><span class="line">                result.append(PINYIN[digit]).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 移除最后一个多余的空格</span></span><br><span class="line">        <span class="keyword">if</span> (result.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result.setLength(result.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目4</title>
      <link href="/2024/08/24/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE4/"/>
      <url>/2024/08/24/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">16</span> 求符合给定条件的整数集</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">给定不超过<span class="number">6</span>的正整数A，考虑从A开始的连续<span class="number">4</span>个数字。请输出所有由它们组成的无重复数字的<span class="number">3</span>位数。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出A。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出满足条件的的<span class="number">3</span>位数，要求从小到大，每行<span class="number">6</span>个整数。整数间以空格分隔，但行末不能有多余空格。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">2</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">234</span> <span class="number">235</span> <span class="number">243</span> <span class="number">245</span> <span class="number">253</span> <span class="number">254</span></span><br><span class="line"><span class="number">324</span> <span class="number">325</span> <span class="number">342</span> <span class="number">345</span> <span class="number">352</span> <span class="number">354</span></span><br><span class="line"><span class="number">423</span> <span class="number">425</span> <span class="number">432</span> <span class="number">435</span> <span class="number">452</span> <span class="number">453</span></span><br><span class="line"><span class="number">523</span> <span class="number">524</span> <span class="number">532</span> <span class="number">534</span> <span class="number">542</span> <span class="number">543</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLOutput;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">A</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> x,y,z;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        A = sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="keyword">if</span>(A&gt;<span class="number">0</span>&amp;&amp;A&lt;<span class="number">7</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(x = A;x&lt;A+<span class="number">4</span>;x++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(y = A;y&lt;A+<span class="number">4</span>;y++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(z = A;z&lt;A+<span class="number">4</span>;z++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(x!=y&amp;&amp;y!=z&amp;&amp;z!=x)&#123;</span><br><span class="line">                            System.out.printf(<span class="string">&quot;%d%d%d&quot;</span>,x,y,z);</span><br><span class="line">                            count++;</span><br><span class="line">                            <span class="keyword">if</span>(count!=<span class="number">0</span>&amp;&amp;count%<span class="number">6</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                                System.out.println();</span><br><span class="line">                            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">17</span> 爬动的蠕虫</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 C课程组</span><br><span class="line">单位 浙江大学</span><br><span class="line">一条蠕虫长<span class="number">1</span>寸，在一口深为N寸的井的底部。已知蠕虫每<span class="number">1</span>分钟可以向上爬U寸，但必须休息<span class="number">1</span>分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？</span><br><span class="line"></span><br><span class="line">这里要求不足<span class="number">1</span>分钟按<span class="number">1</span>分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为<span class="number">0</span>）。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中顺序给出<span class="number">3</span>个正整数N、U、D，其中D&lt;U，N不超过<span class="number">100</span>。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出蠕虫爬出井的时间，以分钟为单位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">12</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">U</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">D</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">time</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(height&lt;N)&#123;</span><br><span class="line">            height+=U;</span><br><span class="line">            time++;</span><br><span class="line">            <span class="keyword">if</span>(height&gt;=N)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            height -= D;</span><br><span class="line">            time++;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(time);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">18</span> 二分法求多项式单根</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">二分法求函数根的原理为：如果连续函数f(x)在区间[a,b]的两个端点取值异号，即f(a)f(b)&lt;<span class="number">0</span>，则它在这个区间内至少存在<span class="number">1</span>个根r，即f(r)=<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">二分法的步骤为：</span><br><span class="line"></span><br><span class="line">检查区间长度，如果小于给定阈值，则停止，输出区间中点(a+b)/<span class="number">2</span>；否则</span><br><span class="line">如果f(a)f(b)&lt;<span class="number">0</span>，则计算中点的值f((a+b)/<span class="number">2</span>)；</span><br><span class="line">如果f((a+b)/<span class="number">2</span>)正好为<span class="number">0</span>，则(a+b)/<span class="number">2</span>就是要求的根；否则</span><br><span class="line">如果f((a+b)/<span class="number">2</span>)与f(a)同号，则说明根在区间[(a+b)/<span class="number">2</span>,b]，令a=(a+b)/<span class="number">2</span>，重复循环；</span><br><span class="line">如果f((a+b)/<span class="number">2</span>)与f(b)同号，则说明根在区间[a,(a+b)/<span class="number">2</span>]，令b=(a+b)/<span class="number">2</span>，重复循环。</span><br><span class="line">本题目要求编写程序，计算给定<span class="number">3</span>阶多项式f(x)=a </span><br><span class="line"><span class="number">3</span></span><br><span class="line">​</span><br><span class="line"> x </span><br><span class="line"><span class="number">3</span></span><br><span class="line"> +a </span><br><span class="line"><span class="number">2</span></span><br><span class="line">​</span><br><span class="line"> x </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> +a </span><br><span class="line"><span class="number">1</span></span><br><span class="line">​</span><br><span class="line"> x+a </span><br><span class="line"><span class="number">0</span></span><br><span class="line">​</span><br><span class="line"> 在给定区间[a,b]内的根。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中顺序给出多项式的<span class="number">4</span>个系数a </span><br><span class="line"><span class="number">3</span></span><br><span class="line">​</span><br><span class="line"> 、a </span><br><span class="line"><span class="number">2</span></span><br><span class="line">​</span><br><span class="line"> 、a </span><br><span class="line"><span class="number">1</span></span><br><span class="line">​</span><br><span class="line"> 、a </span><br><span class="line"><span class="number">0</span></span><br><span class="line">​</span><br><span class="line"> ，在第<span class="number">2</span>行中顺序给出区间端点a和b。题目保证多项式在给定区间内存在唯一单根。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出该多项式在该区间内的根，精确到小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">3</span> -<span class="number">1</span> -<span class="number">3</span> <span class="number">1</span></span><br><span class="line">-<span class="number">0.5</span> <span class="number">0.5</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">0.33</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 定义多项式函数 f(x) = a3*x^3 + a2*x^2 + a1*x + a0</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">polynomial</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> a3, <span class="type">double</span> a2, <span class="type">double</span> a1, <span class="type">double</span> a0)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a3 * x * x * x + a2 * x * x + a1 * x + a0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取多项式系数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">a3</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">a2</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">a1</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">a0</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取区间端点</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算多项式在端点的值</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">fa</span> <span class="operator">=</span> polynomial(a, a3, a2, a1, a0);</span><br><span class="line">        <span class="type">double</span> <span class="variable">fb</span> <span class="operator">=</span> polynomial(b, a3, a2, a1, a0);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查区间端点是否是根</span></span><br><span class="line">        <span class="keyword">if</span> (Math.abs(fa) &lt; <span class="number">1e-7</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>, a);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Math.abs(fb) &lt; <span class="number">1e-7</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>, b);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查端点值的符号是否异号</span></span><br><span class="line">        <span class="keyword">if</span> (fa * fb &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The function does not have a root in the given interval.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置精度阈值</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">epsilon</span> <span class="operator">=</span> <span class="number">1e-6</span>; <span class="comment">// 精度阈值，确保结果精确到小数点后两位</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 二分法过程</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">mid</span> <span class="operator">=</span> a;</span><br><span class="line">        <span class="keyword">while</span> ((b - a) / <span class="number">2</span> &gt; epsilon) &#123;</span><br><span class="line">            mid = (a + b) / <span class="number">2</span>;</span><br><span class="line">            <span class="type">double</span> <span class="variable">fmid</span> <span class="operator">=</span> polynomial(mid, a3, a2, a1, a0);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (Math.abs(fmid) &lt; <span class="number">1e-7</span>) &#123; <span class="comment">// 如果中点的值非常接近0</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fa * fmid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                b = mid;</span><br><span class="line">                fb = fmid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a = mid;</span><br><span class="line">                fa = fmid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出结果，精确到小数点后两位</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>, mid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span><span class="number">-19</span> 支票面额</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">一个采购员去银行兑换一张y元f分的支票，结果出纳员错给了f元y分。采购员用去了n分之后才发觉有错，于是清点了余额尚有<span class="number">2</span>y元<span class="number">2</span>f分，问该支票面额是多少？</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出小于<span class="number">100</span>的正整数n。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按格式y.f输出该支票的原始面额。如果无解，则输出No Solution。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">23</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">25.51</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">22</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">No Solution</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,flag=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">100</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i+j*<span class="number">100</span>-n==j*<span class="number">2</span>+i*<span class="number">2</span>*<span class="number">100</span>)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&#x27;.&#x27;</span>&lt;&lt;j,flag=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">if</span>(flag)cout&lt;&lt;<span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">20</span> 打印九九口诀表</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">下面是一个完整的下三角九九口诀表：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">5</span>=<span class="number">5</span>   <span class="number">2</span>*<span class="number">5</span>=<span class="number">10</span>  <span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span>  <span class="number">4</span>*<span class="number">5</span>=<span class="number">20</span>  <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">6</span>=<span class="number">6</span>   <span class="number">2</span>*<span class="number">6</span>=<span class="number">12</span>  <span class="number">3</span>*<span class="number">6</span>=<span class="number">18</span>  <span class="number">4</span>*<span class="number">6</span>=<span class="number">24</span>  <span class="number">5</span>*<span class="number">6</span>=<span class="number">30</span>  <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">7</span>=<span class="number">7</span>   <span class="number">2</span>*<span class="number">7</span>=<span class="number">14</span>  <span class="number">3</span>*<span class="number">7</span>=<span class="number">21</span>  <span class="number">4</span>*<span class="number">7</span>=<span class="number">28</span>  <span class="number">5</span>*<span class="number">7</span>=<span class="number">35</span>  <span class="number">6</span>*<span class="number">7</span>=<span class="number">42</span>  <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">8</span>=<span class="number">8</span>   <span class="number">2</span>*<span class="number">8</span>=<span class="number">16</span>  <span class="number">3</span>*<span class="number">8</span>=<span class="number">24</span>  <span class="number">4</span>*<span class="number">8</span>=<span class="number">32</span>  <span class="number">5</span>*<span class="number">8</span>=<span class="number">40</span>  <span class="number">6</span>*<span class="number">8</span>=<span class="number">48</span>  <span class="number">7</span>*<span class="number">8</span>=<span class="number">56</span>  <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">9</span>=<span class="number">9</span>   <span class="number">2</span>*<span class="number">9</span>=<span class="number">18</span>  <span class="number">3</span>*<span class="number">9</span>=<span class="number">27</span>  <span class="number">4</span>*<span class="number">9</span>=<span class="number">36</span>  <span class="number">5</span>*<span class="number">9</span>=<span class="number">45</span>  <span class="number">6</span>*<span class="number">9</span>=<span class="number">54</span>  <span class="number">7</span>*<span class="number">9</span>=<span class="number">63</span>  <span class="number">8</span>*<span class="number">9</span>=<span class="number">72</span>  <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span>  </span><br><span class="line">本题要求对任意给定的一位正整数N，输出从<span class="number">1</span>*<span class="number">1</span>到N*N的部分口诀表。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个正整数N（<span class="number">1</span>≤N≤<span class="number">9</span>）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出下三角N*N部分口诀表，其中等号右边数字占<span class="number">4</span>位、左对齐。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">4</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入的正整数 N</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 遍历每一行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="comment">// 遍历每一列</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                <span class="comment">// 计算乘法表的结果</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> i * j;</span><br><span class="line">                <span class="comment">// 打印乘法表的格式，结果占4个字符宽度并左对齐</span></span><br><span class="line">                System.out.printf(<span class="string">&quot;%d*%d=%-4d&quot;</span>, j, i, result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 打印每一行之后换行</span></span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目3</title>
      <link href="/2024/08/23/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE3/"/>
      <url>/2024/08/23/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">12</span> 两个数的简单计算器</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 沈睿</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求编写一个简单计算器程序，可根据输入的运算符，对<span class="number">2</span>个整数进行加、减、乘、除或求余运算。题目保证输入和输出均不超过整型范围。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中依次输入操作数<span class="number">1</span>、运算符、操作数<span class="number">2</span>，其间以<span class="number">1</span>个空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">当运算符为+、-、*、/、%时，在一行输出相应的运算结果。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出ERROR。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line">-<span class="number">7</span> / <span class="number">2</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">-<span class="number">3</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">3</span> &amp; <span class="number">6</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">ERROR</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        String[] parts = input.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(parts.length !=<span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">operator</span> <span class="operator">=</span> parts[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            num1 = Integer.parseInt(parts[<span class="number">0</span>]);</span><br><span class="line">            num2 = Integer.parseInt(parts[<span class="number">2</span>]);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(NumberFormatException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span>(operator)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                System.out.println(num1 + num2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                System.out.println(num1 - num2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                System.out.println(num1 * num2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span>(num2 == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.println(num1 / num2);</span><br><span class="line">                &#125;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;%&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span>(num2 == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.println(num1%num2);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">13</span> 日K蜡烛图</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 陈建海</span><br><span class="line">单位 浙江大学</span><br><span class="line">股票价格涨跌趋势，常用蜡烛图技术中的K线图来表示，分为按日的日K线、按周的周K线、按月的月K线等。以日K线为例，每天股票价格从开盘到收盘走完一天，对应一根蜡烛小图，要表示四个价格：开盘价格Open（早上刚刚开始开盘买卖成交的第<span class="number">1</span>笔价格）、收盘价格Close（下午收盘时最后一笔成交的价格）、中间的最高价High和最低价Low。</span><br><span class="line"></span><br><span class="line">如果Close&lt;Open，表示为“BW-Solid”（即“实心蓝白蜡烛”）；如果Close&gt;Open，表示为“R-Hollow”（即“空心红蜡烛”）；如果Open等于Close，则为“R-Cross”（即“十字红蜡烛”）。如果Low比Open和Close低，称为“Lower Shadow”（即“有下影线”），如果High比Open和Close高，称为“Upper Shadow”（即“有上影线”）。请编程序，根据给定的四个价格组合，判断当日的蜡烛是一根什么样的蜡烛。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">4</span>个正实数，分别对应Open、High、Low、Close，其间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出日K蜡烛的类型。如果有上、下影线，则在类型后加上with 影线类型。如果两种影线都有，则输出with Lower Shadow and Upper Shadow。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">5.110</span> <span class="number">5.250</span> <span class="number">5.100</span> <span class="number">5.105</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">BW-Solid with Lower Shadow and Upper Shadow</span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">5.110</span> <span class="number">5.110</span> <span class="number">5.110</span> <span class="number">5.110</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">R-Cross</span><br><span class="line">输入样例<span class="number">3</span>：</span><br><span class="line"><span class="number">5.110</span> <span class="number">5.125</span> <span class="number">5.112</span> <span class="number">5.126</span></span><br><span class="line">输出样例<span class="number">3</span>：</span><br><span class="line">R-Hollow</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        String[] prices = line.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将输入的字符串转换为浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">open</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">high</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">low</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">2</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">close</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断蜡烛的基本类型</span></span><br><span class="line">        String candleType;</span><br><span class="line">        <span class="keyword">if</span> (close &lt; open) &#123;</span><br><span class="line">            candleType = <span class="string">&quot;BW-Solid&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (close &gt; open) &#123;</span><br><span class="line">            candleType = <span class="string">&quot;R-Hollow&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            candleType = <span class="string">&quot;R-Cross&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查影线的存在</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasLowerShadow</span> <span class="operator">=</span> low &lt; Math.min(open, close);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasUpperShadow</span> <span class="operator">=</span> high &gt; Math.max(open, close);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成输出结果</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(candleType);</span><br><span class="line">        <span class="keyword">if</span> (hasLowerShadow &amp;&amp; hasUpperShadow) &#123;</span><br><span class="line">            result.append(<span class="string">&quot; with Lower Shadow and Upper Shadow&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hasLowerShadow) &#123;</span><br><span class="line">            result.append(<span class="string">&quot; with Lower Shadow&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hasUpperShadow) &#123;</span><br><span class="line">            result.append(<span class="string">&quot; with Upper Shadow&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">14</span> 求整数段和</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">给定两个整数A和B，输出从A到B的所有整数以及这些数的和。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">2</span>个整数A和B，其中−<span class="number">100</span>≤A≤B≤<span class="number">100</span>，其间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">首先顺序输出从A到B的所有整数，每<span class="number">5</span>个数字占一行，每个数字占<span class="number">5</span>个字符宽度，向右对齐。最后在一行中按Sum = X的格式输出全部数字的和X。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">-<span class="number">3</span> <span class="number">8</span></span><br><span class="line">输出样例：</span><br><span class="line">   -<span class="number">3</span>   -<span class="number">2</span>   -<span class="number">1</span>    <span class="number">0</span>    <span class="number">1</span></span><br><span class="line">    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">    <span class="number">7</span>    <span class="number">8</span></span><br><span class="line">Sum = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">A</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">B</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A; i &lt;= B; i++)&#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A; i &lt;= B; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(count !=<span class="number">0</span> &amp;&amp; count%<span class="number">5</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%5d&quot;</span>,i);</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;Sum = &quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">15</span> 计算圆周率</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">根据下面关系式，求圆周率的值，直到最后一项的值小于给定阈值。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line">π</span><br><span class="line">​</span><br><span class="line"> =<span class="number">1</span>+ </span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">​</span><br><span class="line"> + </span><br><span class="line"><span class="number">3</span>×<span class="number">5</span></span><br><span class="line"><span class="number">2</span>!</span><br><span class="line">​</span><br><span class="line"> + </span><br><span class="line"><span class="number">3</span>×<span class="number">5</span>×<span class="number">7</span></span><br><span class="line"><span class="number">3</span>!</span><br><span class="line">​</span><br><span class="line"> +⋯+ </span><br><span class="line"><span class="number">3</span>×<span class="number">5</span>×<span class="number">7</span>×⋯×(2n+<span class="number">1</span>)</span><br><span class="line">n!</span><br><span class="line">​</span><br><span class="line"> +⋯</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出小于<span class="number">1</span>的阈值。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出满足阈值条件的近似圆周率，输出到小数点后<span class="number">6</span>位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">0.01</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">3.132157</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">double</span> t= in.nextDouble();</span><br><span class="line">        <span class="type">double</span> sum=<span class="number">1.0</span>;</span><br><span class="line">        <span class="type">double</span> pi=<span class="number">1.0</span>;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(pi&gt;t)&#123;</span><br><span class="line">            pi=pi*i/(<span class="number">2</span>*i+<span class="number">1</span>);</span><br><span class="line">            sum +=pi;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.6f&quot;</span>,sum*<span class="number">2</span>);<span class="comment">//这里一定要进行格式化，java不要仅仅局限于print和println的输出方式</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目2</title>
      <link href="/2024/08/18/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE2/"/>
      <url>/2024/08/18/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">7</span> <span class="number">12</span>-<span class="number">24</span>小时制</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">编写一个程序，要求用户输入<span class="number">24</span>小时制的时间，然后显示<span class="number">12</span>小时制的时间。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出带有中间的:符号（半角的冒号）的<span class="number">24</span>小时制的时间，如<span class="number">12</span>:<span class="number">34</span>表示<span class="number">12</span>点<span class="number">34</span>分。当小时或分钟数小于<span class="number">10</span>时，均没有前导的零，如<span class="number">5</span>:<span class="number">6</span>表示<span class="number">5</span>点零<span class="number">6</span>分。</span><br><span class="line"></span><br><span class="line">提示：在scanf的格式字符串中加入:，让scanf来处理这个冒号。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个时间对应的<span class="number">12</span>小时制的时间，数字部分格式与输入的相同，然后跟上空格，再跟上表示上午的字符串AM或表示下午的字符串PM。如<span class="number">5</span>:<span class="number">6</span> PM表示下午<span class="number">5</span>点零<span class="number">6</span>分。注意，在英文的习惯中，中午<span class="number">12</span>点被认为是下午，所以<span class="number">24</span>小时制的<span class="number">12</span>:<span class="number">00</span>就是<span class="number">12</span>小时制的<span class="number">12</span>:<span class="number">0</span> PM；而<span class="number">0</span>点被认为是第二天的时间，所以是<span class="number">0</span>:<span class="number">0</span> AM。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">21</span>:<span class="number">11</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">9</span>:<span class="number">11</span> PM</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取24小时制的时间</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">inputTime</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用 split 方法分割时间字符串</span></span><br><span class="line">        String[] timeParts = inputTime.split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> Integer.parseInt(timeParts[<span class="number">0</span>]); <span class="comment">// 小时部分</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> Integer.parseInt(timeParts[<span class="number">1</span>]); <span class="comment">// 分钟部分</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 确定AM或PM以及调整小时</span></span><br><span class="line">        String period;</span><br><span class="line">        <span class="keyword">if</span> (hour &gt;= <span class="number">12</span>) &#123;</span><br><span class="line">            period = <span class="string">&quot;PM&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (hour &gt; <span class="number">12</span>) &#123;</span><br><span class="line">                hour -= <span class="number">12</span>; <span class="comment">// 将13-23时转换为1-11时</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hour == <span class="number">0</span>) &#123;</span><br><span class="line">                hour = <span class="number">12</span>; <span class="comment">// 处理24小时制的0点，即12:xx AM</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            period = <span class="string">&quot;AM&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (hour == <span class="number">0</span>) &#123;</span><br><span class="line">                hour = <span class="number">0</span>; <span class="comment">// 处理24小时制的0点，即12:xx AM</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 格式化输出</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%d:%d %s\n&quot;</span>, hour, minute, period);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">8</span> 超速判断</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">模拟交通警察的雷达测速仪。输入汽车速度，如果速度超出<span class="number">60</span> mph，则显示“Speeding”，否则显示“OK”。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">1</span>个不超过<span class="number">500</span>的非负整数，即雷达测到的车速。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出测速仪显示结果，格式为：Speed: V - S，其中V是车速，S或者是Speeding、或者是OK。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">40</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">Speed: <span class="number">40</span> - OK</span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">75</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">Speed: <span class="number">75</span> - Speeding</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">v</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(v &lt;= <span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Speed: &quot;</span>+v+<span class="string">&quot; - &quot;</span>+<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Speed: &quot;</span>+v+<span class="string">&quot; - &quot;</span>+<span class="string">&quot;Speeding&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">9</span> 用天平找小球</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 C课程组</span><br><span class="line">单位 浙江大学</span><br><span class="line">三个球A、B、C，大小形状相同且其中有一个球与其他球重量不同。要求找出这个不一样的球。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">3</span>个正整数，顺序对应球A、B、C的重量。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出唯一的那个不一样的球。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line">输出样例：</span><br><span class="line">C</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取输入</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">weightA</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">weightB</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">weightC</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 找出不一样的球</span></span><br><span class="line">        <span class="keyword">if</span> (weightA != weightB &amp;&amp; weightA != weightC) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weightB != weightA &amp;&amp; weightB != weightC) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weightC != weightA &amp;&amp; weightC != weightB) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">10</span> 计算工资</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 沈睿</span><br><span class="line">单位 浙江大学</span><br><span class="line">某公司员工的工资计算方法如下：一周内工作时间不超过<span class="number">40</span>小时，按正常工作时间计酬；超出<span class="number">40</span>小时的工作时间部分，按正常工作时间报酬的<span class="number">1.5</span>倍计酬。员工按进公司时间分为新职工和老职工，进公司不少于<span class="number">5</span>年的员工为老职工，<span class="number">5</span>年以下的为新职工。新职工的正常工资为<span class="number">30</span>元/小时，老职工的正常工资为<span class="number">50</span>元/小时。请按该计酬方式计算员工的工资。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">2</span>个正整数，分别为某员工入职年数和周工作时间，其间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行输出该员工的周薪，精确到小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">5</span> <span class="number">40</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">2000.00</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">3</span> <span class="number">50</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">1650.00</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">double</span> money=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(age&gt;=<span class="number">5</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(hour &gt;= <span class="number">40</span>)&#123;</span><br><span class="line">                money=<span class="number">50</span>*<span class="number">40</span>*<span class="number">1.0</span>+<span class="number">1.5</span>*(hour-<span class="number">40</span>)*<span class="number">1.0</span>*<span class="number">50</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                money = <span class="number">50</span> * hour*<span class="number">1.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(hour &gt;= <span class="number">40</span>)&#123;</span><br><span class="line">                money = <span class="number">30</span>*<span class="number">40</span>*<span class="number">1.0</span>+<span class="number">1.5</span>*(hour-<span class="number">40</span>)*<span class="number">1.0</span>*<span class="number">30</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                money = <span class="number">30</span> * hour*<span class="number">1.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f&quot;</span>,money);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">11</span> 分段计算居民水费</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 沈睿</span><br><span class="line">单位 浙江大学</span><br><span class="line">为鼓励居民节约用水，自来水公司采取按用水量阶梯式计价的办法，居民应交水费y（元）与月用水量x（吨）相关：当x不超过<span class="number">15</span>吨时，y=4x/<span class="number">3</span>；超过后，y=<span class="number">2.</span>5x−<span class="number">17.5</span>。请编写程序实现水费的计算。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出非负实数x。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行输出应交的水费，精确到小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">12</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">16.00</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">16</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">22.50</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">double</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=<span class="number">15</span>)&#123;</span><br><span class="line">            y = <span class="number">1.0</span>*<span class="number">4</span>*x/<span class="number">3</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            y = <span class="number">2.5</span>*x-<span class="number">17.5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f&quot;</span>,y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span><span class="number">-1</span> 简单输出整数</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求实现一个函数，对给定的正整数N，打印从<span class="number">1</span>到N的全部正整数。</span><br><span class="line"></span><br><span class="line">函数接口定义：</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span> <span class="params">( <span class="type">int</span> N )</span>;</span><br><span class="line">其中N是用户传入的参数。该函数必须将从<span class="number">1</span>到N的全部正整数顺序打印出来，每个数字占<span class="number">1</span>行。</span><br><span class="line"></span><br><span class="line">裁判测试程序样例：</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span> <span class="params">( <span class="type">int</span> N )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    PrintN( N );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">3</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">    </span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span> <span class="params">( <span class="type">int</span> N )</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目1</title>
      <link href="/2024/08/17/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE1/"/>
      <url>/2024/08/17/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">1</span> 厘米换算英尺英寸</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">如果已知英制长度的英尺foot和英寸inch的值，那么对应的米是(foot+inch/<span class="number">12</span>)×<span class="number">0.3048</span>。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了<span class="number">1</span>英尺等于<span class="number">12</span>英寸。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">1</span>个正整数，单位是厘米。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。英寸的值应小于<span class="number">12</span>。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">170</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cm</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        cm=sc.nextInt();</span><br><span class="line">        <span class="type">double</span> <span class="variable">m</span> <span class="operator">=</span> cm/<span class="number">100.0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalinch</span> <span class="operator">=</span> m/<span class="number">0.3048</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">inch</span> <span class="operator">=</span> (<span class="type">int</span>)totalinch;</span><br><span class="line">        <span class="type">int</span> <span class="variable">feet</span> <span class="operator">=</span> (<span class="type">int</span>)((totalinch-inch)*<span class="number">12</span>);</span><br><span class="line">        System.out.print(inch+<span class="string">&quot; &quot;</span>+feet);</span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">2</span> 然后是几点</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">有时候人们用四位数字表示一个时间，比如 <span class="number">1106</span> 表示 <span class="number">11</span> 点零 <span class="number">6</span> 分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。</span><br><span class="line"></span><br><span class="line">读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，例如 <span class="number">5</span> 点 <span class="number">30</span> 分表示为 <span class="number">530</span>；<span class="number">0</span> 点 <span class="number">30</span> 分表示为 <span class="number">030</span>。注意，第二个数字表示的分钟数可能超过 <span class="number">60</span>，也可能是负数。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出 <span class="number">2</span> 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即 <span class="number">5</span> 点 <span class="number">30</span> 分表示为 <span class="number">530</span>；<span class="number">0</span> 点 <span class="number">30</span> 分表示为 <span class="number">030</span>。流逝的分钟数可能超过 <span class="number">60</span>，也可能是负数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。题目保证起始时间和终止时间在同一天内。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">1120</span> <span class="number">110</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1310</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取输入的起始时间和流逝的分钟数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">time1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">minutesPassed</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 拆分起始时间为小时和分钟</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">startHour</span> <span class="operator">=</span> time1/<span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">startMinute</span> <span class="operator">=</span> time1%<span class="number">100</span>;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算起始时间的总分钟数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalMinutes</span> <span class="operator">=</span> startHour*<span class="number">60</span>+startMinute;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算新的总分钟数</span></span><br><span class="line">        totalMinutes += minutesPassed;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算新的小时和分钟</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">newHour</span> <span class="operator">=</span> totalMinutes/<span class="number">60</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">newMinute</span> <span class="operator">=</span> totalMinutes%<span class="number">60</span>;</span><br><span class="line">         <span class="comment">// 处理小时数，确保在0到23之间</span></span><br><span class="line">        newHour = newHour%<span class="number">24</span>;</span><br><span class="line">        newMinute = newMinute%<span class="number">60</span>;</span><br><span class="line">              <span class="comment">// 处理分钟数，确保在0到59之间</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 格式化输出，确保小时和分钟都是两位数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%d%02d%n&quot;</span>,newHour,newMinute);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">3</span> 逆序的三位数</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">程序每次读入一个正<span class="number">3</span>位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的<span class="number">0</span>时，输出不应带有前导的<span class="number">0</span>。比如输入<span class="number">700</span>，输出应该是<span class="number">7</span>。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">每个测试是一个<span class="number">3</span>位的正整数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出按位逆序的数。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">123</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">321</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> m%<span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> m/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> m/<span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> a*<span class="number">100</span>+b*<span class="number">10</span>+c;</span><br><span class="line">        sc.close();</span><br><span class="line">        System.out.print(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">4</span> BCD解密</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">BCD数是用一个字节来表达两位十进制的数，每四个比特表示一位。所以如果一个BCD数的十六进制是<span class="number">0x12</span>，它表达的就是十进制的<span class="number">12</span>。但是小明没学过BCD，把所有的BCD数都当作二进制数转换成十进制输出了。于是BCD的<span class="number">0x12</span>被输出成了十进制的<span class="number">18</span>了！</span><br><span class="line"></span><br><span class="line">现在，你的程序要读入这个错误的十进制数，然后输出正确的十进制数。提示：你可以把<span class="number">18</span>转换回<span class="number">0x12</span>，然后再转换回<span class="number">12</span>。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个[<span class="number">0</span>, <span class="number">153</span>]范围内的正整数，保证能转换回有效的BCD数，也就是说这个整数转换成十六进制时不会出现A-F的数字。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出对应的十进制数。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">18</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">12</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">incorrect</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        incorrect = sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">int</span> <span class="variable">lowbyte</span> <span class="operator">=</span> incorrect &amp; <span class="number">0x0F</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">highbyte</span> <span class="operator">=</span> (<span class="type">int</span>)(incorrect &gt;&gt; <span class="number">4</span>)&amp;<span class="number">0x0F</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">correct</span> <span class="operator">=</span> highbyte*<span class="number">10</span>+lowbyte;</span><br><span class="line">        System.out.println(correct);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">5</span> 表格输出</span><br><span class="line">分数 <span class="number">5</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，按照规定格式输出表格。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">本题目没有输入。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">要求严格按照给出的格式输出下列表格：</span><br><span class="line"></span><br><span class="line">------------------------------------</span><br><span class="line">Province      <span class="title function_">Area</span><span class="params">(km2)</span>   Pop.(10K)</span><br><span class="line">------------------------------------</span><br><span class="line">Anhui         <span class="number">139600.00</span>   <span class="number">6461.00</span></span><br><span class="line">Beijing        <span class="number">16410.54</span>   <span class="number">1180.70</span></span><br><span class="line">Chongqing      <span class="number">82400.00</span>   <span class="number">3144.23</span></span><br><span class="line">Shanghai        <span class="number">6340.50</span>   <span class="number">1360.26</span></span><br><span class="line">Zhejiang      <span class="number">101800.00</span>   <span class="number">4894.00</span></span><br><span class="line">------------------------------------</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Province      Area(km2)   Pop.(10K)&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Anhui         139600.00   6461.00&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Beijing        16410.54   1180.70&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Chongqing      82400.00   3144.23&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Shanghai        6340.50   1360.26&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Zhejiang      101800.00   4894.00&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">6</span> 混合类型数据格式化输入</span><br><span class="line">分数 <span class="number">5</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，顺序读入浮点数<span class="number">1</span>、整数、字符、浮点数<span class="number">2</span>，再按照字符、整数、浮点数<span class="number">1</span>、浮点数<span class="number">2</span>的顺序输出。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中顺序给出浮点数<span class="number">1</span>、整数、字符、浮点数<span class="number">2</span>，其间以<span class="number">1</span>个空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按照字符、整数、浮点数<span class="number">1</span>、浮点数<span class="number">2</span>的顺序输出，其中浮点数保留小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">2.12</span> <span class="number">88</span> c <span class="number">4.7</span></span><br><span class="line">输出样例：</span><br><span class="line">c <span class="number">88</span> <span class="number">2.12</span> <span class="number">4.70</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">float1</span> <span class="operator">=</span> sc.nextDouble(); <span class="comment">// 读取第一个浮点数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">integer</span> <span class="operator">=</span> sc.nextInt();      <span class="comment">// 读取整数</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">character</span> <span class="operator">=</span> sc.next().charAt(<span class="number">0</span>); <span class="comment">// 读取字符</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">float2</span> <span class="operator">=</span> sc.nextDouble(); <span class="comment">// 读取第二个浮点数</span></span><br><span class="line"></span><br><span class="line">        sc.close(); <span class="comment">// 关闭 Scanner</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按照指定格式输出</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%c %d %.2f %.2f\n&quot;</span>, character, integer, float1, float2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span><span class="number">-10</span> 阶乘计算升级版</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求实现一个打印非负整数阶乘的函数。</span><br><span class="line"></span><br><span class="line">函数接口定义：</span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Factorial</span> <span class="params">( <span class="type">const</span> <span class="type">int</span> N )</span>;</span><br><span class="line">其中N是用户传入的参数，其值不超过<span class="number">1000</span>。如果N是非负整数，则该函数必须在一行中打印出N!的值，否则打印“Invalid input”。</span><br><span class="line"></span><br><span class="line">裁判测试程序样例：</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Factorial</span> <span class="params">( <span class="type">const</span> <span class="type">int</span> N )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    Print_Factorial(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">15</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1307674368000</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Factorial</span><span class="params">(<span class="type">int</span> N)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (N &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid input\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化存储阶乘结果的数组</span></span><br><span class="line">    <span class="type">int</span> factorial[<span class="number">10000</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 阶乘的初始值是 1 (即 1! = 1)</span></span><br><span class="line">    <span class="type">int</span> length = <span class="number">1</span>;</span><br><span class="line">    factorial[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算阶乘</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="type">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 逐位乘以当前的数 i</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">            <span class="type">int</span> product = factorial[j] * i + carry;</span><br><span class="line">            factorial[j] = product % <span class="number">10</span>; <span class="comment">// 存储当前位</span></span><br><span class="line">            carry = product / <span class="number">10</span>;        <span class="comment">// 进位</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理最后的进位</span></span><br><span class="line">        <span class="keyword">while</span> (carry &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            factorial[length] = carry % <span class="number">10</span>;</span><br><span class="line">            carry /= <span class="number">10</span>;</span><br><span class="line">            length++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印结果（从高位到低位）</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, factorial[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java1</title>
      <link href="/2024/08/15/java1/"/>
      <url>/2024/08/15/java1/</url>
      
        <content type="html"><![CDATA[<h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>1.随便新建一个文件夹，存放代码</p><p>2.新建一个Java文件</p><ul><li><p>文件后缀名为.java</p></li><li><p>Hello.java</p></li><li><p>【注意点】系统可能没有显示文件后缀名</p></li></ul><p>3.编写代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;Hello,World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.编译javac java文件，会生成一个class文件</p><p>5.运行class文件，java class文件</p><p><img src="/../image/java1.png"></p><h2 id="可能会遇到的情况"><a href="#可能会遇到的情况" class="headerlink" title="可能会遇到的情况"></a>可能会遇到的情况</h2><p>1.每个单词的大小写不能出现问题，<strong>Java是大小写敏感的</strong>；</p><p>2.尽量使用英文；</p><p>3.文件名和类名必须保持一直，并且首字母大写</p><p>4.符号使用了中文的</p><h2 id="Scanner的使用"><a href="#Scanner的使用" class="headerlink" title="Scanner的使用"></a>Scanner的使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;使用next方式接收:&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出的内容为：&quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;使用nextLine方式接受：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出内容为：&quot;</span>+str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数据：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;输出的内容为：&quot;</span>+str);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            i = scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的数字为：&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是整数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入小数：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextFloat())&#123;</span><br><span class="line">            f = scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的小数为：&quot;</span>+f);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是浮点数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">                <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">                sum += x;</span><br><span class="line">                m++;</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入了第&quot;</span> + m + <span class="string">&quot;个数据,当前结果sum=&quot;</span> + sum);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(m + <span class="string">&quot;个数的和为&quot;</span> + sum);</span><br><span class="line">            System.out.println(m + <span class="string">&quot;个数的平均值是&quot;</span> + (sum / m));</span><br><span class="line">            scanner.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if结构"><a href="#if结构" class="headerlink" title="if结构"></a>if结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ifDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;Hello&quot;</span>))&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;End&quot;</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ifDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(score&gt;<span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="switch结构"><a href="#switch结构" class="headerlink" title="switch结构"></a>switch结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">switchDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (grade) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;再接再厉&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;挂科&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">switchDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;秦疆&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;秦疆&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;秦疆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;狂神&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;狂神&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;弄啥嘞&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="whlie循环"><a href="#whlie循环" class="headerlink" title="whlie循环"></a>whlie循环</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">whileDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">whileDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">            sum = sum + i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum1</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum2</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                sum1+=i;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sum2+=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;奇数和为：&quot;</span>+sum1);</span><br><span class="line">        System.out.println(<span class="string">&quot;偶数和为：&quot;</span>+sum2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i%(<span class="number">5</span>*<span class="number">3</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;*&quot;</span>+j+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] numbers = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LabelDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        outer:<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">101</span>;i&lt;<span class="number">150</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>;j&lt;i/<span class="number">2</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i%j==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">continue</span> outer;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">5</span>;j&gt;i;j--)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> max(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a==b&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">            result = a;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result = b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>方法名称必须相同</li><li>参数列表必须不同(个数不同、或类型不同、参数排列顺序不同等)</li><li>方法的返回类型可用相同也可以不相同</li><li>仅仅返回类型不同不足以成为方法的重载</li></ul><h3 id="实现理论"><a href="#实现理论" class="headerlink" title="实现理论"></a>实现理论</h3><p>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错</p><h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><ul><li>JDK1.5开始，Java支持传递同类型的可变参数给一个方法</li><li>在方法声明中，在知道参数类型后加一个省略号(…)</li><li>一个方法中只能指定一个可变参数，它必须是方法的最后一个参数。任何普通的参数必须在它之前声明</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        printMax(<span class="number">32</span>,<span class="number">43</span>,<span class="number">67</span>,<span class="number">36</span>,<span class="number">26</span>);</span><br><span class="line">        printMax(<span class="keyword">new</span> <span class="title class_">double</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMax</span><span class="params">(<span class="type">double</span>... numbers)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(numbers == <span class="literal">null</span> || numbers.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> numbers[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(max &lt; numbers[i]) &#123;</span><br><span class="line">                max = numbers[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(multiple(<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">multiple</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a ==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a*multiple(a-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] nums;</span><br><span class="line">        nums = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            nums[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum = &quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLOutput;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] array=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line">        System.out.println(array[<span class="number">0</span>][<span class="number">0</span>])&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>市面app加固情况</title>
      <link href="/2024/08/14/%E5%B8%82%E9%9D%A2app%E5%8A%A0%E5%9B%BA%E6%83%85%E5%86%B5/"/>
      <url>/2024/08/14/%E5%B8%82%E9%9D%A2app%E5%8A%A0%E5%9B%BA%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<p>可用jadx自带的反混淆</p><p><img src="/../image/appfhx.png"></p><h4 id="下载wallbreaker"><a href="#下载wallbreaker" class="headerlink" title="下载wallbreaker"></a>下载wallbreaker</h4><p>用于绕过软件的保护机制</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hluwa/Wallbreaker</span><br></pre></td></tr></table></figure><h4 id="加载wallbreaker"><a href="#加载wallbreaker" class="headerlink" title="加载wallbreaker"></a>加载wallbreaker</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin load /root/桌面/lesson4/Wallbreaker</span><br></pre></td></tr></table></figure><h4 id="查询类"><a href="#查询类" class="headerlink" title="查询类"></a>查询类</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin wallbreaker objectsearch app.huawei.auto.message.ui.MessageMainActivity</span><br></pre></td></tr></table></figure><h4 id="查询类的结构"><a href="#查询类的结构" class="headerlink" title="查询类的结构"></a>查询类的结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin wallbreaker objectdump 0x2b5a(0x2b5a为搜索出来的编号)</span><br></pre></td></tr></table></figure><h4 id="使用github-frida-fart"><a href="#使用github-frida-fart" class="headerlink" title="使用github frida_fart"></a>使用github frida_fart</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hanbinglengyue/FART</span><br></pre></td></tr></table></figure><h4 id="使用frida-fart反射脱壳"><a href="#使用frida-fart反射脱壳" class="headerlink" title="使用frida_fart反射脱壳"></a>使用frida_fart反射脱壳</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查找</span><br><span class="line">find /root/桌面/lesson4/FART/frida_fart -name &quot;frida_fart_reflection.js&quot;</span><br><span class="line">在vscode的终端中</span><br><span class="line">frida -UF -l /root/桌面/lesson4/FART/frida_fart/frida_fart_reflection.js </span><br><span class="line">执行fart函数</span><br><span class="line">fart()</span><br></pre></td></tr></table></figure><p>这个一直失败，实在无法解决</p><h4 id="使用frida-fart-hook方式"><a href="#使用frida-fart-hook方式" class="headerlink" title="使用frida_fart hook方式"></a>使用frida_fart hook方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida -U -f app.huawei.motor -l /root/桌面/lesson4/FART/frida_fart/frida_fart_hook.js --no-pause</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>了解APP加固技术</title>
      <link href="/2024/08/14/%E4%BA%86%E8%A7%A3APP%E5%8A%A0%E5%9B%BA%E6%8A%80%E6%9C%AF/"/>
      <url>/2024/08/14/%E4%BA%86%E8%A7%A3APP%E5%8A%A0%E5%9B%BA%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>这个不知道讲了什么。。。蛮记录下</p><h2 id="常见混淆"><a href="#常见混淆" class="headerlink" title="常见混淆"></a>常见混淆</h2><h3 id="资源混淆"><a href="#资源混淆" class="headerlink" title="资源混淆"></a>资源混淆</h3><p><a href="https://github.com/shwenzhang/AndResGuard">https://github.com/shwenzhang/AndResGuard</a></p><h3 id="代码混淆"><a href="#代码混淆" class="headerlink" title="代码混淆"></a>代码混淆</h3><h4 id="ProGuard"><a href="#ProGuard" class="headerlink" title="ProGuard"></a>ProGuard</h4><p>ProGuard是一个开源的Java代码混淆器，在Android中一提起ProGuard,我们通常第一想到的是用来混淆代码的，其实它的功能并不仅限于此，有以下四个功能：<br>（1）压缩(Shrink):侦测并移除代码中无用的类、字段、方法和特性<br>（2）优化(<a href="https://so.csdn.net/so/search?q=Optimize&spm=1001.2101.3001.7020">Optimize</a>):对字节码进行优化，移除无用的指令<br>（3）混淆(Obfuscate):使用a,b,c,d这样简短而无意义的名称，对类、字段和方法进行重命名<br>（4）预检(Preverify):在Java平台上对处理后的代码进行预检</p><h3 id="字符串加解密"><a href="#字符串加解密" class="headerlink" title="字符串加解密"></a>字符串加解密</h3><p><a href="https://mp.weixin.qq.com/s/SRv1Oar87w1iKuDXS4oaew">https://mp.weixin.qq.com/s/SRv1Oar87w1iKuDXS4oaew</a></p><h4 id="ollvm混淆"><a href="#ollvm混淆" class="headerlink" title="ollvm混淆"></a>ollvm混淆</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p> OLLVM是一个流行的代码混淆工具，常用于国内移动安全领域。其主要混淆技术包括控制流平坦化、虚假控制流和指令替代，这些方法能有效提高代码的反逆向工程能力。开发者可以通过GitHub上的源码研究其实现细节，学习如何利用OLLVM来保护自己的代码</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FRIDA轻量化内存脱壳</title>
      <link href="/2024/08/13/FRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98%E8%84%B1%E5%A3%B3/"/>
      <url>/2024/08/13/FRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98%E8%84%B1%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<h4 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/pyenv/pyenv.git ~/.pyenv</span><br><span class="line">echo &#x27;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;command -v pyenv &gt;/dev/null || export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;eval &quot;$(pyenv init -)&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">exec &quot;$SHELL&quot;</span><br></pre></td></tr></table></figure><h4 id="安装pyenv版本"><a href="#安装pyenv版本" class="headerlink" title="安装pyenv版本"></a>安装pyenv版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyenv install 3.8.0</span><br><span class="line">pyenv local system 让python变成系统版本</span><br><span class="line">（安装失败）</span><br><span class="line">apt update</span><br><span class="line">apt install -y libbz2-dev libreadline-dev libssl-dev zlib1g-dev</span><br><span class="line">查看版本</span><br><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><h4 id="安装frida"><a href="#安装frida" class="headerlink" title="安装frida"></a>安装frida</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==12.8.0</span><br><span class="line">pip install frida-tools==5.3.0</span><br><span class="line">pip install objection==1.8.4</span><br><span class="line">frida --version</span><br><span class="line">frdia-ps --version</span><br><span class="line">objection version</span><br><span class="line">直接安装最新的</span><br><span class="line">pip install objection</span><br></pre></td></tr></table></figure><h4 id="将jadx加入环境"><a href="#将jadx加入环境" class="headerlink" title="将jadx加入环境"></a>将jadx加入环境</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打开文件</span><br><span class="line">nano ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=$PATH:/root/桌面/jadx/bin&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="使用命令将手机中的apk放到虚拟机"><a href="#使用命令将手机中的apk放到虚拟机" class="headerlink" title="使用命令将手机中的apk放到虚拟机"></a>使用命令将手机中的apk放到虚拟机</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/Android/data/com.coolapk.market/files/Download/鸿蒙智行-1.2.4.310-120403100-941817.apk</span><br></pre></td></tr></table></figure><h4 id="连接到目标应用，启动交互式通话"><a href="#连接到目标应用，启动交互式通话" class="headerlink" title="连接到目标应用，启动交互式通话"></a>连接到目标应用，启动交互式通话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objection -g app.huawei.motor explore</span><br></pre></td></tr></table></figure><h4 id="推送-frida-server-到-Android-设备"><a href="#推送-frida-server-到-Android-设备" class="headerlink" title="推送 frida-server 到 Android 设备"></a>推送 <code>frida-server</code> 到 Android 设备</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push /root/下载/frida-inject-12.11.8-android-arm64 /data/local/tmp</span><br></pre></td></tr></table></figure><h4 id="设置权限并启动-frida-server，一定一定要给权限，否则会报错误ProcessNotFoundError-unable-to-find-process-with-name-‘system-server’"><a href="#设置权限并启动-frida-server，一定一定要给权限，否则会报错误ProcessNotFoundError-unable-to-find-process-with-name-‘system-server’" class="headerlink" title="设置权限并启动 frida-server，一定一定要给权限，否则会报错误ProcessNotFoundError: unable to find process with name ‘system_server’"></a>设置权限并启动 <code>frida-server</code>，一定一定要给权限，否则会报错误ProcessNotFoundError: unable to find process with name ‘system_server’</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell &quot;chmod 755 /data/local/tmp/frida-server-12.8.0-android-arm64&quot;</span><br><span class="line">adb shell &quot;su -c &#x27;/data/local/tmp/frida-server-12.8.0-android-arm64 &amp;&#x27;&quot;</span><br><span class="line">使用以下命令检查正在监听的端口</span><br><span class="line">adb shell netstat -an | grep 27042</span><br><span class="line">通过 ps 命令列出所有进程，并手动查找可能占用端口的进程</span><br><span class="line">adb shell ps | grep frida-server</span><br><span class="line">一旦找出占用端口的进程 PID（假设是 1234），可以终止它：</span><br><span class="line"> adb shell su -c &#x27;kill -9 1234&#x27;</span><br></pre></td></tr></table></figure><h4 id="特别注意下，objection-g-app-huawei-motor-explore没反应的原因是Objection依赖有问题"><a href="#特别注意下，objection-g-app-huawei-motor-explore没反应的原因是Objection依赖有问题" class="headerlink" title="特别注意下，objection -g app.huawei.motor explore没反应的原因是Objection依赖有问题"></a>特别注意下，objection -g app.huawei.motor explore没反应的原因是Objection依赖有问题</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install --upgrade objection</span><br></pre></td></tr></table></figure><h4 id="列出所有activity"><a href="#列出所有activity" class="headerlink" title="列出所有activity"></a>列出所有activity</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android hooking list activities</span><br></pre></td></tr></table></figure><h4 id="启动某个activity"><a href="#启动某个activity" class="headerlink" title="启动某个activity"></a>启动某个activity</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android intent launch_activity app.huawei.auto.im.ui.chat.SearchChatRecordActivity</span><br></pre></td></tr></table></figure><h4 id="配置dexdump"><a href="#配置dexdump" class="headerlink" title="配置dexdump"></a>配置dexdump</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hluwa/FRIDA_DEXDump ~/Downloads/FRIDA-DEXDump</span><br></pre></td></tr></table></figure><h4 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg -i /root/下载/code_1.92.1-1723066302_amd64.deb</span><br><span class="line">处理依赖问题</span><br><span class="line">apt-get install -f</span><br><span class="line">以root用户运行</span><br><span class="line">code --no-sandbox --user-data-dir=/root/.vscode-data</span><br></pre></td></tr></table></figure><h4 id="使用frida-dexdump"><a href="#使用frida-dexdump" class="headerlink" title="使用frida-dexdump"></a>使用frida-dexdump</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida-dexdump -FU</span><br></pre></td></tr></table></figure><h4 id="打开当前目录"><a href="#打开当前目录" class="headerlink" title="打开当前目录"></a>打开当前目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">thunar .</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -ril &quot;MainActivity&quot;</span><br></pre></td></tr></table></figure><h4 id="读文件大小"><a href="#读文件大小" class="headerlink" title="读文件大小"></a>读文件大小</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">du -h 0xc18a0000.dex</span><br><span class="line">解释命令部分</span><br><span class="line">du：du（disk usage）是一个用于显示文件和目录的磁盘使用情况的命令行工具。它可以计算和显示指定文件或目录的磁盘使用空间。</span><br><span class="line"></span><br><span class="line">-h：这是一个选项，表示“human-readable”（人类可读的格式）。它使 du 以易于阅读的格式显示文件或目录的大小（例如，使用 KB、MB、GB 等单位）。</span><br><span class="line"></span><br><span class="line">0xc18a0000.dex：这是一个文件名。在这个例子中，0xc18a0000.dex 是你想要检查其大小的文件。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>体验FRIDA轻量化内存dump脱壳</title>
      <link href="/2024/08/11/%E4%BD%93%E9%AA%8CFRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98dump%E8%84%B1%E5%A3%B3/"/>
      <url>/2024/08/11/%E4%BD%93%E9%AA%8CFRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98dump%E8%84%B1%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<h4 id="切换python版本"><a href="#切换python版本" class="headerlink" title="切换python版本"></a>切换python版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyenv local 3.8.0</span><br><span class="line">pyenv local 3.8.5</span><br></pre></td></tr></table></figure><h4 id="启动jeb"><a href="#启动jeb" class="headerlink" title="启动jeb"></a>启动jeb</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若是权限不够要赋予权限</span><br><span class="line">chmod +x jeb_linux.sh</span><br><span class="line"></span><br><span class="line">./jeb_linux.sh</span><br></pre></td></tr></table></figure><h4 id="使用命令将手机中的apk放到虚拟机"><a href="#使用命令将手机中的apk放到虚拟机" class="headerlink" title="使用命令将手机中的apk放到虚拟机"></a>使用命令将手机中的apk放到虚拟机</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/Android/data/com.coolapk.market/files/Download/鸿蒙智行-1.2.4.310-120403100-941817.apk</span><br></pre></td></tr></table></figure><h4 id="将jadx加入环境变量"><a href="#将jadx加入环境变量" class="headerlink" title="将jadx加入环境变量"></a>将jadx加入环境变量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;export PATH=$PATH:/root/桌面/jadx-1.2.0/bin&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="用jadx打开"><a href="#用jadx打开" class="headerlink" title="用jadx打开"></a>用jadx打开</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jadx-gui 鸿蒙智行-1.2.4.310-120403100-941817.apk</span><br></pre></td></tr></table></figure><p>frida-server缺失了就去下，注意要下Android的arm64，否则无法执行下面指令</p><h4 id="连接到目标应用，启动交互式通话"><a href="#连接到目标应用，启动交互式通话" class="headerlink" title="连接到目标应用，启动交互式通话"></a>连接到目标应用，启动交互式通话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objection -g app.huawei.motor explore</span><br></pre></td></tr></table></figure><h4 id="列出所有activity"><a href="#列出所有activity" class="headerlink" title="列出所有activity"></a>列出所有activity</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android hooking list activityies</span><br></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 解压 APK 文件</span><br><span class="line">unzip /root/桌面/鸿蒙智行-1.2.4.310-120403100-941817.apk -d /root/桌面/鸿蒙智行</span><br><span class="line">2. 找到 DEX 文件</span><br><span class="line">find /root/桌面/鸿蒙智行 -name &quot;*.dex&quot;</span><br><span class="line">3. 使用 frida-dexdump 分析 DEX 文件</span><br><span class="line">frida-dexdump -f /root/桌面/鸿蒙智行/classes.dex</span><br><span class="line">确保将 classes.dex 替换为你实际找到的 DEX 文件的路径。</span><br></pre></td></tr></table></figure><h4 id="如果需要使用-root-用户"><a href="#如果需要使用-root-用户" class="headerlink" title="如果需要使用 root 用户"></a>如果需要使用 <code>root</code> 用户</h4><p>如果你必须以 <code>root</code> 用户身份启动 VS Code（尽管不推荐），你可以使用 <code>--no-sandbox</code> 参数。运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo code --no-sandbox --user-data-dir=$HOME/.vscode-data</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>逆向环境配置</title>
      <link href="/2024/08/10/%E9%80%86%E5%90%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/08/10/%E9%80%86%E5%90%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="install-vmtools"><a href="#install-vmtools" class="headerlink" title="install vmtools"></a>install vmtools</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /media/cdrom0</span><br><span class="line"></span><br><span class="line">cp /media/cdrom0/VMwareTools-*.tar.gz ~/</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">tar -zxvf VMwareTools-*.tar.gz</span><br><span class="line"></span><br><span class="line">cd vmware-tools-distrib</span><br><span class="line">sudo ./vmware-install.pl</span><br><span class="line">或者：</span><br><span class="line">sudo apt install open-vm-tools-desktop -y</span><br></pre></td></tr></table></figure><h3 id="更新时区"><a href="#更新时区" class="headerlink" title="更新时区"></a>更新时区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure><h3 id="切换中文"><a href="#切换中文" class="headerlink" title="切换中文"></a>切换中文</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg-reconfigure locales</span><br><span class="line">重启</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="回退到bash"><a href="#回退到bash" class="headerlink" title="回退到bash"></a>回退到bash</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/bash</span><br></pre></td></tr></table></figure><h3 id="下载Android-studio"><a href="#下载Android-studio" class="headerlink" title="下载Android studio"></a>下载Android studio</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.1.1.12/android-studio-2024.1.1.12-linux.tar.gz</span><br></pre></td></tr></table></figure><h3 id="启动Android-studio"><a href="#启动Android-studio" class="headerlink" title="启动Android studio"></a>启动Android studio</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要在bin目录下</span><br><span class="line">./studio.sh</span><br></pre></td></tr></table></figure><h4 id="启动jadx"><a href="#启动jadx" class="headerlink" title="启动jadx"></a>启动jadx</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要在bin目录下</span><br><span class="line">./jadx-gui</span><br></pre></td></tr></table></figure><h4 id="添加Android-SDK路径"><a href="#添加Android-SDK路径" class="headerlink" title="添加Android SDK路径"></a>添加Android SDK路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;export ANDROID_HOME=/root/Android/Sdk&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=$PATH:$ANDROID_HOME/platform-tools&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="启动jeb"><a href="#启动jeb" class="headerlink" title="启动jeb"></a>启动jeb</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提权</span><br><span class="line">chmod +x +jeb_linux.sh</span><br><span class="line">启动</span><br><span class="line">./jeb_linux.sh</span><br></pre></td></tr></table></figure><h4 id="添加jadx路径"><a href="#添加jadx路径" class="headerlink" title="添加jadx路径"></a>添加jadx路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;export PATH=$PATH:/root/Desktop/jeb/bin&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Smali汇编</title>
      <link href="/2024/08/09/Smali%E6%B1%87%E7%BC%96/"/>
      <url>/2024/08/09/Smali%E6%B1%87%E7%BC%96/</url>
      
        <content type="html"><![CDATA[<h2 id="Smali"><a href="#Smali" class="headerlink" title="Smali"></a>Smali</h2><h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><p>Smali是用于Dalvik(Android虚拟机)的反汇编程序实现，汇编工具(将Smali代码汇编为dex文件)为smali.jar。</p><p>Smali支持注解、调试信息、行数信息等Java的基本特性，可以说是很接近Java编译在JVM上的中间语言了，一般用来做Android程序的逆向工程</p><h3 id="Smali基础"><a href="#Smali基础" class="headerlink" title="Smali基础"></a>Smali基础</h3><p>下面的内容涉及一些Smali编程的结构和基本语法</p><h4 id="Smali文件结构"><a href="#Smali文件结构" class="headerlink" title="Smali文件结构"></a>Smali文件结构</h4><p>一个Smali文件对应的是一个Java的类，更准确的说是一个.class文件，如果有内部类，需要写成ClassName$InnerClassA、ClassName$InnerClassB…这样的形式</p><h4 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h4><p><img src="/../image/Smali%E6%B1%87%E7%BC%96.png"></p><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>Object类型，即引用类型的对象，在引用时，使用L开头，后面紧跟着的是完整的包名，比如：java.lang.String对应的Smali语法则是Ljava&#x2F;lang&#x2F;String</p><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>数组定义比较有意思，一维数组在类型的左边加一个方括号，比如：[I等同于Java的int[]]，每多一维就加一个方括号，最多可以设置255维</p><h4 id="方法声明及调用"><a href="#方法声明及调用" class="headerlink" title="方法声明及调用"></a>方法声明及调用</h4><p>官方Wiki中给出的Smali引用的方法的模板如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lpackage/name/ObjectName;-&gt;MethodName(III)Z</span><br></pre></td></tr></table></figure><p>第一部分Lpackage&#x2F;name&#x2F;ObjectName；用于声明具体的类型，以便JVM寻找</p><p>第二部分MethodName(III)Z，其中MethodName为具体的方法名，()中的字符，表示了参数数量和类型，即3个int型参数，Z为返回值的类型，即返回Boolean类型</p><p>由于方法的参数列表没有使用逗号这样的分隔符进行划分，所有只能从左到右，根据类型定义来区分参数个数，这一点需要比较仔细来观察</p><p>如果需要调用构造方法，则MethodName为：<init></p><h4 id="寄存器声明及使用"><a href="#寄存器声明及使用" class="headerlink" title="寄存器声明及使用"></a>寄存器声明及使用</h4><p>在Smali中，如果需要存储变量，必须先声明足够数量的寄存器，一个寄存器可以存储32位长的的类型，比如Int，而两个寄存器可以存储64位长度类型的数据，比如Long或Double</p><p>声明可使用的寄存器数量的方式为：.registers N，N代表需要的寄存器的总个数，同时，还有一个关键字.locals，它用于声明非参数的寄存器的个数(包含在registers声明的个数当中)，也叫做本地寄存器，只在一个方法内有效，但不常用，一般使用registers即可</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.method private test(I)V</span><br><span class="line">    .registers 4  # 声明总共需要使用4个寄存器</span><br><span class="line"></span><br><span class="line">    const-string v0, &quot;LOG&quot;  # 将v0寄存器赋值为字符串常量&quot;LOG&quot;</span><br><span class="line"></span><br><span class="line">    move v1, p1  # 将int型参数的值赋给v1寄存器</span><br><span class="line"></span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br></pre></td></tr></table></figure><h4 id="如何确定需要使用的寄存器的个数"><a href="#如何确定需要使用的寄存器的个数" class="headerlink" title="如何确定需要使用的寄存器的个数"></a>如何确定需要使用的寄存器的个数</h4><p>由于非static方法，需要占用一个寄存器以保存this指针，那么这类方法的寄存器个数，最低就为1，如过还需要处理传入的参数，则需要再次叠加，此时还需要考虑Double和Float这种需要占用两个寄存器的参数类型，举例来看：</p><p>如果一个Java方法声明如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">myMethod(nt p1, float p2, boolean p3)</span><br></pre></td></tr></table></figure><p>那么对应的Smali则为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">method LMyObject;-&gt;myMethod(IJZ)V</span><br></pre></td></tr></table></figure><p>此时，寄存器的对应情况如下：</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%962.png"></p><p>那么最少需要的寄存器的个数则为：5</p><p>如果方法内含有常量、变量等定义，则需要根据情况增加寄存器个数，数量只要满足需求，保证需求要获取的值不被后面复制冲掉即可，方法有：存入类中的字段中(存入后，寄存器可被重新赋值)，或者长期占用一个寄存器</p><h4 id="Dalvik指令集"><a href="#Dalvik指令集" class="headerlink" title="Dalvik指令集"></a>Dalvik指令集</h4><p>移位操作</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%963.png"></p><p>返回操作</p><p>用于返回值，对应Java中的return语句</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%964.png"></p><p>常量操作</p><p>用于声明常量，比如字符串常量(仅声明，String a &#x3D; “abc”这种语句包含声明和赋值)</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%965.png"></p><p>调用操作</p><p>用于调用方法，基本格式：invoke-kind{vC，vD，vE，vF，vG}，meth@BBBB，其中，BBBB代表方法引用(参见上面介绍的方法定义及其调用)，vC~G为需要的参数，根据顺序一一对应</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%966.png"></p><p>判断操作：</p><p>判断操作用来比较一个寄存器中的值，是否与目标寄存器中的值相等或不等，对应Java中的if语句，格式为：if-[test] v1,v2, [condition]，其衍生操作还有专门与0进行比较的if-[test]z v1, [condition]，其中[condition]为符合判断结果后的跳转条件，需要提前定义好。判断操作也通常和goto配合使用，用来实现循环或者if-else语句<br><img src="/../image/Smali%E6%B1%87%E7%BC%967.png"></p><p>需要注意的是，在Java中编写的if语句，往往在对应的Smali中，会变成相反的判断逻辑，如下面所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private void test() &#123;</span><br><span class="line">    int a = 0;</span><br><span class="line">    int b = 1;</span><br><span class="line">    String result;</span><br><span class="line">    if (a &gt; b) &#123;</span><br><span class="line">        result = &quot;a great than b&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        result = &quot;a less than or equals b&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的Java代码逻辑很简单——一个很简单的if语句，为了在Smali中看的更清楚，我只做了字符串赋值操作。下面是对应的Smali代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.method private test()V</span><br><span class="line">    .registers 4</span><br><span class="line"></span><br><span class="line">    .line 24</span><br><span class="line">    const/4 v0, 0x0</span><br><span class="line"></span><br><span class="line">    .line 25</span><br><span class="line">    .local v0, &quot;a&quot;:I</span><br><span class="line">    const/4 v1, 0x1</span><br><span class="line"></span><br><span class="line">    .line 27</span><br><span class="line">    .local v1, &quot;b&quot;:I</span><br><span class="line">    if-le v0, v1, :cond_7</span><br><span class="line"></span><br><span class="line">    .line 28</span><br><span class="line">    const-string v2, &quot;a great than b&quot;</span><br><span class="line"></span><br><span class="line">    .line 28</span><br><span class="line">    .local v2, &quot;result&quot;:Ljava/lang/String;</span><br><span class="line">    goto :goto_9</span><br><span class="line"></span><br><span class="line">    .line 30</span><br><span class="line">    .end local v2    # &quot;result&quot;:Ljava/lang/String;</span><br><span class="line">    :cond_7</span><br><span class="line">    const-string v2, &quot;a less than or equals b&quot;</span><br><span class="line"></span><br><span class="line">    .line 32</span><br><span class="line">    .restart local v2    # &quot;result&quot;:Ljava/lang/String;</span><br><span class="line">    :goto_9</span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br></pre></td></tr></table></figure><p>属性操作：<br>属性操作的分为：取值（get）和赋值（put）</p><p>目标类型分为：数组（array）、实例（instance）和静态（static）三种，对应的缩写前缀就是a、i、s</p><p>长度类型分为：默认（什么都不写）、wide（宽，64位）、object（对象）、boolean、byte、char、short（后面几种就不解释了，和Java一致）</p><p>指令格式：[指令名] [源寄存器], [目标字段所在对象寄存器], [字段指针]，示例代码如下，操作是为int型的类成员变量mIntA赋值为100：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const/16 v0, 0x64</span><br><span class="line"></span><br><span class="line">iput v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mIntA:I</span><br></pre></td></tr></table></figure><p><img src="/../image/Smali%E6%B1%87%E7%BC%968.png"></p><p>举例：</p><p>以下Java代码是进行的是最基本的类成员变量的赋值、取值操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private String mStringA;</span><br><span class="line">private int mIntA;</span><br><span class="line">private Activity mActivityA;</span><br><span class="line"></span><br><span class="line">public void fieldTest() &#123;</span><br><span class="line">    mStringA = &quot;Put String to mStringA&quot;;</span><br><span class="line">    mIntA = 100;</span><br><span class="line">    mActivityA = this;</span><br><span class="line"></span><br><span class="line">    int len = mStringA.length();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的Smali代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># instance fields</span><br><span class="line">.field private mActivityA:Landroid/app/Activity;</span><br><span class="line"></span><br><span class="line">.field private mIntA:I</span><br><span class="line"></span><br><span class="line">.field private mStringA:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line"># virtual methods</span><br><span class="line">.method public fieldTest()V</span><br><span class="line">    .registers 2</span><br><span class="line"></span><br><span class="line">    .line 55</span><br><span class="line">    const-string v0, &quot;Put String to mStringA&quot;</span><br><span class="line"></span><br><span class="line">    iput-object v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mStringA:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    .line 56</span><br><span class="line">    const/16 v0, 0x64</span><br><span class="line"></span><br><span class="line">    iput v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mIntA:I</span><br><span class="line"></span><br><span class="line">    .line 57</span><br><span class="line">    iput-object p0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mActivityA:Landroid/app/Activity;</span><br><span class="line"></span><br><span class="line">    .line 59</span><br><span class="line">    iget-object v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mStringA:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;v0&#125;, Ljava/lang/String;-&gt;length()I</span><br><span class="line"></span><br><span class="line">    move-result v0</span><br><span class="line"></span><br><span class="line">    .line 60</span><br><span class="line">    .local v0, &quot;len&quot;:I</span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br></pre></td></tr></table></figure><p>其他指令</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%969.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>root</title>
      <link href="/2024/08/09/root/"/>
      <url>/2024/08/09/root/</url>
      
        <content type="html"><![CDATA[<h2 id="root"><a href="#root" class="headerlink" title="root"></a>root</h2><p>1、adb reboot bootloader</p><p>2、fastboot boot recovery.img</p><p>3、清除</p><p>4、重启</p><p>5、adb push magisk.apk &#x2F;data&#x2F;locla&#x2F;tmp&#x2F;a.zip</p><p>6、fastboot boot recover.img</p><p>7、install</p><p>8、重启</p><p>9、修改语言，卸载magisk应用，重新安装magisk的apk</p><p>10、选择安装，直接安装，重启</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dex反编译工具的安装和使用</title>
      <link href="/2024/08/08/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/08/08/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="jadx的安装和使用"><a href="#jadx的安装和使用" class="headerlink" title="jadx的安装和使用"></a>jadx的安装和使用</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>jadx可以一键把apk文件还原成Java代码，使用起来很简单，功能强大，还具有一些附加功能可以辅助代码追查，其主要具有如下几个功能：</p><p>1、除了反编译apk文件，还可以反编译jar、class、dex、arr、等文件和zip文件中的Dalvik字节码</p><p>2、解码AndroidManifest.xml文件和一些来自resources.arsc中的资源文件</p><p>3、一些apk文件在打包过程中增加了java代码的混淆机制，对比jadx提供反混淆的支持。</p><p>jadx本身是一个命令行工具，仅仅通过jadx这个命令就可以反编译一个apk文件。除此之外，它也可以有配套的图形化界面工具——jadx-gui。</p><p>安装过程就略过了</p><h4 id="jadx命令"><a href="#jadx命令" class="headerlink" title="jadx命令"></a>jadx命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jadx xxx.apk -d xxx，运行完成后本地会生成一个xxx文件夹</span><br></pre></td></tr></table></figure><h4 id="jadx-gui的使用方法"><a href="#jadx-gui的使用方法" class="headerlink" title="jadx-gui的使用方法"></a>jadx-gui的使用方法</h4><p>jadx-gui是一个图形界面工具，它就像一个IDE，支持很多方便快捷的交互式操作</p><h4 id="保存为Gradle项目"><a href="#保存为Gradle项目" class="headerlink" title="保存为Gradle项目"></a>保存为Gradle项目</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8.png"></p><p>导出后的项目目录结构和我们在 jadx-gui 界面里看到的结构基本一致，这个项目是可以被 Android Studio 工具打开的，打开之后的代码一般没办法直接运行，因为毕竟整个项目是反编译出来的，不太可能完全还原出开发版本的 Andriod 项目。</p><h4 id="文本搜索"><a href="#文本搜索" class="headerlink" title="文本搜索"></a>文本搜索</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A82.png"></p><h4 id="查找方法的声明"><a href="#查找方法的声明" class="headerlink" title="查找方法的声明"></a>查找方法的声明</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A83.png"></p><h4 id="反混淆"><a href="#反混淆" class="headerlink" title="反混淆"></a>反混淆</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A85.png"></p><p>反混淆能进一步提升代码的还原度，从而让我们更方便地推敲代码中的逻辑</p><h4 id="JEB的简介"><a href="#JEB的简介" class="headerlink" title="JEB的简介"></a>JEB的简介</h4><p>JEB 是由 PNF 软件(PNF Software) 机构开发的一款专业的反编译 Android App 的工具，适用于逆向和审计工程，功能非常强大。</p><p>功能：</p><p>1、可以对Android App和Dalvik(Android虚拟机，类似Java中的JVM)字节码执行精确和快速的反编译操作</p><p>2、内置的分析模块可以对高度尕的代码提供虚拟层次化重构，对分析代码很有帮助</p><p>3、可以对接JEB API来执行一些逆向任务，支持用Java和Python编写自动化逆向脚本</p><p>安装过程略过</p><p>进入JEB解压目录，windows下双击jeb_wincon.bat，按照弹窗generate a license，即可正常使用。设置中文</p><p>具体使用还没有办法实操</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>adb</title>
      <link href="/2024/08/08/adb/"/>
      <url>/2024/08/08/adb/</url>
      
        <content type="html"><![CDATA[<h2 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Android调试桥(adb)是一种功能多样的命令行工具，它可以让你与设备进行通信，adb命令可以用于执行各种设备操作(例如安装和调试应用)，并提供对Unix shell(可用来再设备上运行各种命令)的访问权限，它是一种C&#x2F;S架构的程序，包括以下三个组件：</p><p>1、客户端：主要用于发送命令，adb client在开发机器上运行，我们可以通过adb命令从命令行终端调用客户端，它主要的工作是解析像push、shell、install等命令的参数，做必要的预处理，然后转移为指令或数据，发送给adb server。</p><p>2、守护程序(adbd)：是运行在Android设备(真机&#x2F;模拟器)后台的一个进程，它是由init进程启动的，并且系统一开机就以及启动，它主要作用是出来来自adb server的命令行请求，然后获取对应Android设备的信息，再将结果返回给adb server。</p><p>3、服务器：是运行再开发机器上的一个后台进程，它有两个作用：1、检测usb端口感知设备的连接和拔出，以及模拟器实例的启动或停止；2、将adb client的请求通过usb或者tcp的方式发送到对应的abdb上。</p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>当我们启动某个ADB客户端的时候，客户端会先检查是否有ADB服务器正在运行。如果没有，它将启动服务器进程。服务器在启动后会与本地TCP端口5037绑定，并监听ADB客户端发出的命令，所有ADB客户端均通过端口5037与ADB服务器通信。然后，服务器会与所有正在运行的设备建立连接。它通过扫描5555到5585之间(该范围供前16个模拟器使用)的奇数号端口查找模拟器。服务器一旦发现ADB守护进程(adbd)，便会与相应的端口建立连接。</p><p>所有的Client通过TCP端口号5037进行与Server通信，而Server创建local socket与remote socket，前者用于Client通信，后者用于远端进行通信，emulator(模拟器)通过TCP，real device则通过usb。服务器于所有设备均建立连接后，你便可以使用adb命令访问这些设备，由于服务器管理于设备的连接，并处理来自多个adb客户端的命令，因此你可以从任意客户端(或从某个脚本)控制任意设备。</p><p>举个例子：</p><p>1、我们通过Android Studio 工具或者命令行界面直接或间接的调用某个abd命令，比如adb install或者adb devices</p><p>2、adb进程会fork出一个子进程作为adb server，而这个fork出的进程将常驻PC端，监听来自Client端的请求</p><p>3、adb server查找当前连接的真机或者模拟器，并接受来自Client端发出的请求</p><p>4、adb server处理请求：如果是本地能直接处理的请求比如：adb devices就直接处理，如果是本地处理不了的请求就会转发给连接的真机或者模拟器来进行处理，可以通过数据线和TCP&#x2F;IP的方式通信</p><p>5、位于真机或者模拟器后台的adbd进程接受到请求后，通过JDWP协议转发给对应的Java虚拟机进程处理</p><p>6、abdb将处理后的结果返回给adb server</p><p>7、adb server再将结果返回给Client，这时候我们就在命令行界面中看到展示结果就了</p><h3 id="adb的配置"><a href="#adb的配置" class="headerlink" title="adb的配置"></a>adb的配置</h3><p>将sdk的platform-tools配置到环境变量中</p><p><img src="/../image/adb.png"></p><h4 id="ADB常见命令及选项"><a href="#ADB常见命令及选项" class="headerlink" title="ADB常见命令及选项"></a>ADB常见命令及选项</h4><p>adb help&#x2F;adb –help 查看帮助</p><p>adb version 显示adb版本及所在路径</p><p>adb devices 显示连接的设备列表</p><p>adb devices -l，列举所有设备，-l表示长输出，包含设备名称等信息。</p><p>adb push 文件路径 目标路径(以&#x2F;开头)推送电脑的文件到手机</p><p>adb pull 文件路径(手机)本地路径(PC，可选)拉取手机的文件到电脑</p><p>adb shell 进入到手机的Linux控制台</p><p>adb install [-lrstsdg] <file>(xxx.apk)通过adb安装app</p><p>参数说明如下：</p><p>-l：直接锁定app</p><p>-r：替换已存在的app，也就是说强制安装</p><p>-t：允许安装测试包</p><p>-s：把app安装到sd卡上</p><p>-d：允许降版本安装(只针对调试版本的app有用)</p><p>-g：安装时获取所有的权限(只有6.0系统可用)</p><p>adb uninstall包名 通过adb卸载app，借助jadx工具查看App7的包名，然后执行adb uninstall命令卸载App例如：adb uninstall com.kanxue.app</p><p>adb start-server 确保启动adb server</p><p>adb kill-server停止adb server</p><p>adb get-serialno获取设备唯一的序列号(如打开app通过该值判断是否重复打开)</p><p>adb get-state 获取设备的状态</p><p>设备的状态有3中：device、offline、unknown、说明如下：</p><p>1、device：设备正常连接、</p><p>2、offline：连接出现异常，设备无响应</p><p>3、unknown：没有连接设备</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>题目3</title>
      <link href="/2024/08/08/%E9%A2%98%E7%9B%AE3/"/>
      <url>/2024/08/08/%E9%A2%98%E7%9B%AE3/</url>
      
        <content type="html"><![CDATA[<h3 id="CFF-100"><a href="#CFF-100" class="headerlink" title="CFF_100"></a>CFF_100</h3><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><p><a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/CFF2016-%E7%88%AC%E6%A5%BC%E6%A2%AF">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/CFF2016-%E7%88%AC%E6%A5%BC%E6%A2%AF</a></p><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>查看题目是需要我们点击到对应层数显示flag</p><p><img src="/../image/CFF_100.png"></p><p>setClickable()函数作用是设置控件点击无效，但是可以点击，颜色不会变灰色，也就是右边的按钮如果可以点击，那么就能够显示flag了</p><p><img src="/../image/CFF_1002.png"></p><p>输入命令java -jar apktool_2.6.1.jar d CFF_100.apk对apk文件进行解包</p><p><img src="/../image/CFF1003.png"></p><p>找到setClickable函数</p><p><img src="/../image/CFF1004.png"></p><p><img src="/../image/CFF1005.png"></p><p>推测v5和v3即为true或false的标记位，v3一直为0x1，v5一直为0x0，因此考虑修改v5为0x1</p><p><img src="/../image/CFF1006.png"></p><p>再输入命令java -jar apktool_2.6.1.jar b CFF_100进行重打包</p><p><img src="/../image/CFF1007.png"></p><p>这里进行重打包时有问题，以我目前水平还是无法解决</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DD-Androideasy and smali</title>
      <link href="/2024/08/08/DD-Androideasy-and-smali/"/>
      <url>/2024/08/08/DD-Androideasy-and-smali/</url>
      
        <content type="html"><![CDATA[<h3 id="DD-Android-Easy"><a href="#DD-Android-Easy" class="headerlink" title="DD-Android Easy"></a>DD-Android Easy</h3><h4 id="链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-DD-20-20Android-20Easy"><a href="#链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-DD-20-20Android-20Easy" class="headerlink" title="链接：https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/DD%20-%20Android%20Easy"></a>链接：<a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/DD%20-%20Android%20Easy">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/DD%20-%20Android%20Easy</a></h4><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>下载完成后发现是.zip格式，将后缀改为.apk格式，安装到模拟器中，发现是输入注册码的题目</p><p><img src="/../image/DD-AndroidEasy.png"></p><p>用jeb打开分析</p><p><img src="/../image/DD-AndroidEasy2.png"></p><p>可以看出只要得到字符串i的值便可以得到flag</p><h4 id="解密脚本："><a href="#解密脚本：" class="headerlink" title="解密脚本："></a>解密脚本：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = [-<span class="number">40</span>, -<span class="number">62</span>, <span class="number">107</span>, <span class="number">66</span>, -<span class="number">126</span>, <span class="number">103</span>, -<span class="number">56</span>, <span class="number">77</span>, <span class="number">122</span>, -<span class="number">107</span>, -<span class="number">24</span>, -<span class="number">127</span>, <span class="number">72</span>, -<span class="number">63</span>, -<span class="number">98</span>, <span class="number">64</span>, -<span class="number">24</span>, -<span class="number">5</span>, -<span class="number">49</span>, -<span class="number">26</span>, <span class="number">79</span>, -<span class="number">70</span>, -<span class="number">26</span>, -<span class="number">81</span>, <span class="number">120</span>, <span class="number">25</span>, <span class="number">111</span>, -<span class="number">100</span>, -<span class="number">23</span>, -<span class="number">9</span>, <span class="number">122</span>, -<span class="number">35</span>, <span class="number">66</span>, -<span class="number">50</span>, -<span class="number">116</span>, <span class="number">3</span>, -<span class="number">72</span>, <span class="number">102</span>, -<span class="number">45</span>, -<span class="number">85</span>, <span class="number">0</span>, <span class="number">126</span>, -<span class="number">34</span>, <span class="number">62</span>, <span class="number">83</span>, -<span class="number">34</span>, <span class="number">48</span>, -<span class="number">111</span>, <span class="number">61</span>, -<span class="number">9</span>, -<span class="number">51</span>, <span class="number">114</span>, <span class="number">20</span>, <span class="number">81</span>, -<span class="number">126</span>, -<span class="number">18</span>, <span class="number">27</span>, -<span class="number">115</span>, -<span class="number">76</span>, -<span class="number">116</span>, -<span class="number">48</span>, -<span class="number">118</span>, -<span class="number">10</span>, -<span class="number">102</span>, -<span class="number">106</span>, <span class="number">113</span>, -<span class="number">104</span>, <span class="number">98</span>, -<span class="number">109</span>, <span class="number">74</span>, <span class="number">48</span>, <span class="number">47</span>, -<span class="number">100</span>, -<span class="number">88</span>, <span class="number">121</span>, <span class="number">22</span>, -<span class="number">63</span>, -<span class="number">32</span>, -<span class="number">20</span>, -<span class="number">41</span>, -<span class="number">27</span>, -<span class="number">20</span>, -<span class="number">118</span>, <span class="number">100</span>, -<span class="number">76</span>, <span class="number">70</span>, -<span class="number">49</span>, -<span class="number">39</span>, -<span class="number">27</span>, -<span class="number">106</span>, -<span class="number">13</span>, -<span class="number">108</span>, <span class="number">115</span>, -<span class="number">87</span>, -<span class="number">1</span>, -<span class="number">22</span>, -<span class="number">53</span>, <span class="number">21</span>, -<span class="number">100</span>, <span class="number">124</span>, -<span class="number">95</span>, -<span class="number">40</span>, <span class="number">62</span>, -<span class="number">69</span>, <span class="number">29</span>, <span class="number">56</span>, -<span class="number">53</span>, <span class="number">85</span>, -<span class="number">48</span>, <span class="number">25</span>, <span class="number">37</span>, -<span class="number">78</span>, <span class="number">11</span>, -<span class="number">110</span>, -<span class="number">24</span>, -<span class="number">120</span>, -<span class="number">82</span>, <span class="number">6</span>, -<span class="number">94</span>, -<span class="number">101</span>]</span><br><span class="line">q = [-<span class="number">57</span>, -<span class="number">90</span>, <span class="number">53</span>, -<span class="number">71</span>, -<span class="number">117</span>, <span class="number">98</span>, <span class="number">62</span>, <span class="number">98</span>, <span class="number">101</span>, -<span class="number">96</span>, <span class="number">36</span>, <span class="number">110</span>, <span class="number">77</span>, -<span class="number">83</span>, -<span class="number">121</span>, <span class="number">2</span>, -<span class="number">48</span>, <span class="number">94</span>, -<span class="number">106</span>, -<span class="number">56</span>, -<span class="number">49</span>, -<span class="number">80</span>, -<span class="number">1</span>, <span class="number">83</span>, <span class="number">75</span>, <span class="number">66</span>, -<span class="number">44</span>, <span class="number">74</span>, <span class="number">2</span>, -<span class="number">36</span>, -<span class="number">42</span>, -<span class="number">103</span>, <span class="number">6</span>, -<span class="number">115</span>, -<span class="number">40</span>, <span class="number">69</span>, -<span class="number">107</span>, <span class="number">85</span>, -<span class="number">78</span>, -<span class="number">49</span>, <span class="number">54</span>, <span class="number">78</span>, -<span class="number">26</span>, <span class="number">15</span>, <span class="number">98</span>, -<span class="number">70</span>, <span class="number">8</span>, -<span class="number">90</span>, <span class="number">94</span>, -<span class="number">61</span>, -<span class="number">84</span>, <span class="number">64</span>, <span class="number">112</span>, <span class="number">51</span>, -<span class="number">29</span>, -<span class="number">34</span>, <span class="number">126</span>, -<span class="number">21</span>, -<span class="number">126</span>, -<span class="number">71</span>, -<span class="number">31</span>, -<span class="number">24</span>, -<span class="number">60</span>, -<span class="number">2</span>, -<span class="number">81</span>, <span class="number">66</span>, -<span class="number">84</span>, <span class="number">85</span>, -<span class="number">91</span>, <span class="number">10</span>, <span class="number">84</span>, <span class="number">70</span>, -<span class="number">8</span>, -<span class="number">63</span>, <span class="number">26</span>, <span class="number">126</span>, -<span class="number">76</span>, -<span class="number">104</span>, -<span class="number">123</span>, -<span class="number">71</span>, -<span class="number">126</span>, -<span class="number">62</span>, -<span class="number">23</span>, <span class="number">11</span>, -<span class="number">39</span>, <span class="number">70</span>, <span class="number">14</span>, <span class="number">59</span>, -<span class="number">101</span>, -<span class="number">39</span>, -<span class="number">124</span>, <span class="number">91</span>, -<span class="number">109</span>, <span class="number">102</span>, -<span class="number">49</span>, <span class="number">21</span>, <span class="number">105</span>, <span class="number">0</span>, <span class="number">37</span>, -<span class="number">128</span>, -<span class="number">57</span>, <span class="number">117</span>, <span class="number">110</span>, -<span class="number">115</span>, -<span class="number">86</span>, <span class="number">56</span>, <span class="number">25</span>, -<span class="number">46</span>, -<span class="number">55</span>, <span class="number">7</span>, -<span class="number">125</span>, <span class="number">109</span>, <span class="number">76</span>, <span class="number">104</span>, -<span class="number">15</span>, <span class="number">82</span>, -<span class="number">53</span>, <span class="number">18</span>, -<span class="number">28</span>, -<span class="number">24</span>]</span><br><span class="line">bArr = []</span><br><span class="line">i2=<span class="number">0</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">i3=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(p)):</span><br><span class="line">    bArr.append(p[i]^q[i])</span><br><span class="line">b=bArr[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">while</span> bArr[b+i2]!=<span class="number">0</span>:</span><br><span class="line">    i2+=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i3&lt;i2:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(bArr[b+i3])</span><br><span class="line">    i3+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行得到 <a href="mailto:&#102;&#x6c;&#x61;&#x67;&#x44;&#68;&#x43;&#84;&#70;&#x2d;&#51;&#97;&#100;&#x36;&#x30;&#56;&#49;&#x31;&#100;&#56;&#55;&#x63;&#x34;&#97;&#50;&#100;&#x62;&#97;&#x30;&#101;&#x66;&#54;&#x35;&#49;&#98;&#x32;&#100;&#x39;&#51;&#52;&#55;&#x36;&#64;&#100;&#x69;&#100;&#x69;&#x63;&#104;&#117;&#x78;&#x69;&#110;&#x67;&#x2e;&#99;&#111;&#x6d;">&#102;&#x6c;&#x61;&#x67;&#x44;&#68;&#x43;&#84;&#70;&#x2d;&#51;&#97;&#100;&#x36;&#x30;&#56;&#49;&#x31;&#100;&#56;&#55;&#x63;&#x34;&#97;&#50;&#100;&#x62;&#97;&#x30;&#101;&#x66;&#54;&#x35;&#49;&#98;&#x32;&#100;&#x39;&#51;&#52;&#55;&#x36;&#64;&#100;&#x69;&#100;&#x69;&#x63;&#104;&#117;&#x78;&#x69;&#110;&#x67;&#x2e;&#99;&#111;&#x6d;</a></p><p><img src="/../image/DD-AndroidEasy3.png"></p><h3 id="smali"><a href="#smali" class="headerlink" title="smali"></a>smali</h3><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><p><a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/smali">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/smali</a></p><p>直接用jeb打开分析</p><p><img src="/../image/smalictf1.png"></p><p>分析看出是2次base64，一次AES，直接使用python编写脚本</p><h4 id="解密脚本：-1"><a href="#解密脚本：-1" class="headerlink" title="解密脚本："></a>解密脚本：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">cipher = <span class="string">&quot;sSNnx1UKbYrA1+MOrdtDTA==&quot;</span></span><br><span class="line">cipher = base64.b64decode(cipher)</span><br><span class="line">key = <span class="string">&quot;cGhyYWNrICBjdGYgMjAxNg==&quot;</span></span><br><span class="line">key = base64.b64decode(key)</span><br><span class="line">cryptor = AES.new(key,AES.MODE_ECB)</span><br><span class="line">flag = cryptor.decrypt(cipher)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行得到flag：b’PCTF{Sm4liRiver}’</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Androideasy&amp;simplecheck</title>
      <link href="/2024/08/08/Androideasy-simplecheck/"/>
      <url>/2024/08/08/Androideasy-simplecheck/</url>
      
        <content type="html"><![CDATA[<h3 id="androideasy"><a href="#androideasy" class="headerlink" title="androideasy"></a>androideasy</h3><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><h4 id="https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-androideasy"><a href="#https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-androideasy" class="headerlink" title="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/androideasy"></a><a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/androideasy">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/androideasy</a></h4><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>文件下载后发现是zip格式，将后缀改为.apk然后用jeb打开进行分析</p><p><img src="/../image/androideasy.png"></p><p>对于一般比较简单的题目，我们只需要找到函数的入口，即MainActivity中onCreate方法下的onClick点击事件，因为是找注册码(flag)，那就肯定有一个按钮负责判断注册码是正确，这个按钮的点击事件是否正确，这个按钮的点击事件就是用onClick实现的，所以大部分这种题目直接找onClick就对了。我们双击之后可以看到以下代码，这里是smali代码。</p><p>java代码如下</p><p><img src="/../image/androideasy2.png"></p><p>这里是要调用MainActivity的check()函数来判断flag是否正确，我们直接定位到check()函数</p><p><img src="/../image/androideasy3.png"></p><p>分析函数内容，可以看出数组v0即是我们输入的注册码，根据if语句可以确定注册码的长度和s[]数组一样有31位，下面又有一个if语句判断即为我们的关键语句：s[i]&#x3D;&#x3D;chars[i]^23</p><p>因为flag字符都是ASCII码在0-127中，所以我们只需用python进行爆破</p><h4 id="解密脚本："><a href="#解密脚本：" class="headerlink" title="解密脚本："></a>解密脚本：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = &#123;<span class="number">113</span>, <span class="number">123</span>, <span class="number">118</span>, <span class="number">112</span>, <span class="number">108</span>, <span class="number">94</span>, <span class="number">99</span>, <span class="number">72</span>, <span class="number">38</span>, <span class="number">68</span>, <span class="number">72</span>, <span class="number">87</span>, <span class="number">89</span>, <span class="number">72</span>, <span class="number">36</span>, <span class="number">118</span>, <span class="number">100</span>, <span class="number">78</span>, <span class="number">72</span>, <span class="number">87</span>, <span class="number">121</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">39</span>, <span class="number">62</span>, <span class="number">94</span>, <span class="number">62</span>, <span class="number">38</span>, <span class="number">107</span>, <span class="number">115</span>, <span class="number">106</span>&#125;</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">31</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span>(s[m]==i^<span class="number">23</span>):</span><br><span class="line">            flag+=i</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h3 id="simplecheck"><a href="#simplecheck" class="headerlink" title="simplecheck"></a>simplecheck</h3><h4 id="链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-simplecheck"><a href="#链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-simplecheck" class="headerlink" title="链接：https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/simplecheck"></a>链接：<a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/simplecheck">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/simplecheck</a></h4><h4 id="解题思路：-1"><a href="#解题思路：-1" class="headerlink" title="解题思路："></a>解题思路：</h4><p>因为是.apk文件，直接放入雷电模拟器里面运行一下，非常简单，这是一个判断注册码的题目</p><p><img src="/../image/simplecheck.png"></p><p>用jeb打开分析，看看MainActivity里面的内容</p><p><img src="/../image/simplecheck2.png"></p><p>这里通过a方法来判断正确与否，所以我们主要研究a方法</p><p><img src="/../image/simplecheck3.png"></p><p>可以看到我们的输入即为iArr，通过爆破即可得到flag</p><h4 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="number">0</span>, <span class="number">146527998</span>, <span class="number">205327308</span>, <span class="number">94243885</span>, <span class="number">138810487</span>, <span class="number">408218567</span>, <span class="number">77866117</span>, <span class="number">71548549</span>, <span class="number">563255818</span>, <span class="number">559010506</span>, <span class="number">449018203</span>, <span class="number">576200653</span>, <span class="number">307283021</span>, <span class="number">467607947</span>, <span class="number">314806739</span>, <span class="number">341420795</span>, <span class="number">341420795</span>, <span class="number">469998524</span>, <span class="number">417733494</span>, <span class="number">342206934</span>, <span class="number">392460324</span>, <span class="number">382290309</span>, <span class="number">185532945</span>, <span class="number">364788505</span>, <span class="number">210058699</span>, <span class="number">198137551</span>, <span class="number">360748557</span>, <span class="number">440064477</span>, <span class="number">319861317</span>, <span class="number">676258995</span>, <span class="number">389214123</span>, <span class="number">829768461</span>, <span class="number">534844356</span>, <span class="number">427514172</span>, <span class="number">864054312</span>]</span><br><span class="line">b = [<span class="number">13710</span>, <span class="number">46393</span>, <span class="number">49151</span>, <span class="number">36900</span>, <span class="number">59564</span>, <span class="number">35883</span>, <span class="number">3517</span>, <span class="number">52957</span>, <span class="number">1509</span>, <span class="number">61207</span>, <span class="number">63274</span>, <span class="number">27694</span>, <span class="number">20932</span>, <span class="number">37997</span>, <span class="number">22069</span>, <span class="number">8438</span>, <span class="number">33995</span>, <span class="number">53298</span>, <span class="number">16908</span>, <span class="number">30902</span>, <span class="number">64602</span>, <span class="number">64028</span>, <span class="number">29629</span>, <span class="number">26537</span>, <span class="number">12026</span>, <span class="number">31610</span>, <span class="number">48639</span>, <span class="number">19968</span>, <span class="number">45654</span>, <span class="number">51972</span>, <span class="number">64956</span>, <span class="number">45293</span>, <span class="number">64752</span>, <span class="number">37108</span>]</span><br><span class="line">c = [<span class="number">38129</span>, <span class="number">57355</span>, <span class="number">22538</span>, <span class="number">47767</span>, <span class="number">8940</span>, <span class="number">4975</span>, <span class="number">27050</span>, <span class="number">56102</span>, <span class="number">21796</span>, <span class="number">41174</span>, <span class="number">63445</span>, <span class="number">53454</span>, <span class="number">28762</span>, <span class="number">59215</span>, <span class="number">16407</span>, <span class="number">64340</span>, <span class="number">37644</span>, <span class="number">59896</span>, <span class="number">41276</span>, <span class="number">25896</span>, <span class="number">27501</span>, <span class="number">38944</span>, <span class="number">37039</span>, <span class="number">38213</span>, <span class="number">61842</span>, <span class="number">43497</span>, <span class="number">9221</span>, <span class="number">9879</span>, <span class="number">14436</span>, <span class="number">60468</span>, <span class="number">19926</span>, <span class="number">47198</span>, <span class="number">8406</span>, <span class="number">64666</span>]</span><br><span class="line">d = [<span class="number">0</span>, -<span class="number">341994984</span>, -<span class="number">370404060</span>, -<span class="number">257581614</span>, -<span class="number">494024809</span>, -<span class="number">135267265</span>, <span class="number">54930974</span>, -<span class="number">155841406</span>, <span class="number">540422378</span>, -<span class="number">107286502</span>, -<span class="number">128056922</span>, <span class="number">265261633</span>, <span class="number">275964257</span>, <span class="number">119059597</span>, <span class="number">202392013</span>, <span class="number">283676377</span>, <span class="number">126284124</span>, -<span class="number">68971076</span>, <span class="number">261217574</span>, <span class="number">197555158</span>, -<span class="number">12893337</span>, -<span class="number">10293675</span>, <span class="number">93868075</span>, <span class="number">121661845</span>, <span class="number">167461231</span>, <span class="number">123220255</span>, <span class="number">221507</span>, <span class="number">258914772</span>, <span class="number">180963987</span>, <span class="number">107841171</span>, <span class="number">41609001</span>, <span class="number">276531381</span>, <span class="number">169983906</span>, <span class="number">276158562</span>]</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">1</span>,<span class="number">34</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span>((a[m] == b[m]*i*i+c[m]*i+d[m] )<span class="keyword">and</span>(a[m]==(b[m-<span class="number">1</span>]*i*i)+c[m-<span class="number">1</span>]*i+d[m-<span class="number">1</span>])):</span><br><span class="line">            flag+=<span class="built_in">chr</span>(i)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行得到flag：flag{MAth_i&amp;_GOOd_DON7_90V_7hInK?(自己添加一个})</p><p><img src="/../../../../Hexo-Blog/blog-demo/source/image/simplecheck4.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android常见风险2</title>
      <link href="/2024/08/06/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A92/"/>
      <url>/2024/08/06/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A92/</url>
      
        <content type="html"><![CDATA[<h2 id="安卓常见风险"><a href="#安卓常见风险" class="headerlink" title="安卓常见风险"></a>安卓常见风险</h2><h3 id="Android重打包风险"><a href="#Android重打包风险" class="headerlink" title="Android重打包风险"></a>Android重打包风险</h3><p>风险：插入广告、扣费</p><p>防范措施：使用一些混淆工具，阻止反编译，加壳</p><h3 id="敏感数据明文保存风险"><a href="#敏感数据明文保存风险" class="headerlink" title="敏感数据明文保存风险"></a>敏感数据明文保存风险</h3><p>含义：对app来说重要的数据</p><p>防范措施：不能放在公共区域</p><h3 id="组件越权风险"><a href="#组件越权风险" class="headerlink" title="组件越权风险"></a>组件越权风险</h3><p>防范措施</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:exported = &quot;false&quot;</span><br></pre></td></tr></table></figure><h3 id="WebView跨域访问风险"><a href="#WebView跨域访问风险" class="headerlink" title="WebView跨域访问风险"></a>WebView跨域访问风险</h3><h4 id="安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）"><a href="#安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）" class="headerlink" title="安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）"></a>安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）</h4><p><img src="/../image/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B01.png"></p><p><img src="/../image/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B02.png"></p><h4 id="ContentProvider目录遍历漏洞"><a href="#ContentProvider目录遍历漏洞" class="headerlink" title="ContentProvider目录遍历漏洞"></a>ContentProvider目录遍历漏洞</h4><h4 id="组件拒绝服务漏洞讲解"><a href="#组件拒绝服务漏洞讲解" class="headerlink" title="组件拒绝服务漏洞讲解"></a>组件拒绝服务漏洞讲解</h4><h4 id="安全审计工具Drozer的安装与使用"><a href="#安全审计工具Drozer的安装与使用" class="headerlink" title="安全审计工具Drozer的安装与使用"></a>安全审计工具Drozer的安装与使用</h4><p>下载地址：<a href="https://github.com/WithSecureLabs/drozer">https://github.com/WithSecureLabs/drozer</a></p><p>出现这个图片即算成功（中间过程复杂，都可以询问gpt）</p><p><img src="/../image/Drozerdownload.png"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><img src="/../image/drozer%E7%9A%84%E4%BD%BF%E7%94%A8.png"></p><h4 id="Drozer代码阅读"><a href="#Drozer代码阅读" class="headerlink" title="Drozer代码阅读"></a>Drozer代码阅读</h4><p>从drozer console connect命令中drozer.bat开始</p><p>drozer.bat</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">python.exe &quot;%~dp0drozer&quot; %*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android常见风险1</title>
      <link href="/2024/08/04/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A91/"/>
      <url>/2024/08/04/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A91/</url>
      
        <content type="html"><![CDATA[<h2 id="安卓常见风险"><a href="#安卓常见风险" class="headerlink" title="安卓常见风险"></a>安卓常见风险</h2><h3 id="Android重打包风险"><a href="#Android重打包风险" class="headerlink" title="Android重打包风险"></a>Android重打包风险</h3><p>风险：插入广告、扣费</p><p>防范措施：使用一些混淆工具，阻止反编译，加壳</p><h3 id="敏感数据明文保存风险"><a href="#敏感数据明文保存风险" class="headerlink" title="敏感数据明文保存风险"></a>敏感数据明文保存风险</h3><p>含义：对app来说重要的数据</p><p>防范措施：不能放在公共区域</p><h3 id="组件越权风险"><a href="#组件越权风险" class="headerlink" title="组件越权风险"></a>组件越权风险</h3><p>防范措施</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:exported = &quot;false&quot;</span><br></pre></td></tr></table></figure><h3 id="WebView跨域访问风险"><a href="#WebView跨域访问风险" class="headerlink" title="WebView跨域访问风险"></a>WebView跨域访问风险</h3><p>（明天再更，难度太大，一时难以理解）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Arm</title>
      <link href="/2024/08/03/Arm/"/>
      <url>/2024/08/03/Arm/</url>
      
        <content type="html"><![CDATA[<h2 id="Arm汇编"><a href="#Arm汇编" class="headerlink" title="Arm汇编"></a>Arm汇编</h2><h3 id="工具网站"><a href="#工具网站" class="headerlink" title="工具网站"></a>工具网站</h3><p>谷歌官网：<a href="https://developer.arm.com/documentation-beta/">https://developer.arm.com/documentation-beta/</a></p><p>ARM汇编-opcode转换：<a href="http://armconverter.com/">http://armconverter.com</a></p><h3 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h3><p>1、立即数寻址：mov r0，#0x1</p><p>2、寄存器寻址：mov r0</p><p>3、寄存器间接寻址：ldr r0，[r1]</p><p>4、寄存器偏移寻址：mov r0，r1，[r1，#4]</p><p>5、寄存器基址变址寻址：ldr r0,[r1，#4]</p><p>6、多寄存器寻址：ldmia r0，{r1，r2，r3，r4}</p><p>7、相对寻址：bl label</p><p>8、堆栈寻址：stmfd sp!，{r1-r7，lr}</p><p>9、块拷贝寻址：stmia r0，{r1-r7}</p><h3 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h3><p>B label：直接跳，无条件，需要条件就B后面增加条件</p><p>BL：跳转之前，下一条指令地址保存到LR寄存器中，然后再调</p><p>MOV PC，LR：直接修改PC指针，实现跳转</p><p>LDR PC，0x?：和上一条一样，修改PC寄存器</p><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><p>参数小于等于4：用r0，r1，r2，r3</p><p>大于4：多出来的用栈</p><h3 id="内联汇编"><a href="#内联汇编" class="headerlink" title="内联汇编"></a>内联汇编</h3><h4 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h4><p>asm(“指令” ：输出 ：输入 ：变化寄存器);</p><h4 id="方式-1"><a href="#方式-1" class="headerlink" title="方式"></a>方式</h4><p>asm_volatile_(</p><p>​“mov r0，r1\n\t”</p><p>​“mov r2，r3\n\t”</p><p>​…………..</p><p>);volatile的作用是让代码不会被优化</p><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><p>输出：asm-&gt;C 用于定义输出的参数，通常只能是变量</p><p>r：任何可用寄存器</p><p>m：使用变量的内存地址</p><p>+：可读可写</p><p>&#x3D;：只写</p><p>&amp;：表示该输出操作数不能使用输入部分使用过的寄存器，只能用” +&amp; “ 或 “ &#x3D;&amp; “ 的方式使用</p><p>输入：C-&gt;asm 用于定义输入的参数，可以使用变量也可以使用立即数</p><p>r：可以使用任何可用的寄存器和立即数和变量</p><p>m：表示使用变量的内存地址</p><p>i：表示使用立即数</p><p>_volatile_：加上代表让编译器不优化</p><p>注意：可以字符串组合，但组合中间不能有回车换行</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dlfcn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;elf.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> aa, <span class="type">int</span> bb, <span class="type">int</span> cc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;add %0, %1, %2&quot;</span> : <span class="string">&quot;=r&quot;</span>(ret) : <span class="string">&quot;r&quot;</span>(aa), <span class="string">&quot;r&quot;</span>(bb) : <span class="string">&quot;memory&quot;</span>);</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;add %0, %1, %2&quot;</span> : <span class="string">&quot;+r&quot;</span>(ret) : <span class="string">&quot;r&quot;</span>(ret),  <span class="string">&quot;r&quot;</span>(cc) : <span class="string">&quot;memory&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add2</span><span class="params">(<span class="type">int</span> aa, <span class="type">int</span> bb, <span class="type">int</span> cc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>, tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">asm</span>(</span><br><span class="line">    <span class="string">&quot;add %[bmTMP], %[bmAA], %[bmBB]\n\t&quot;</span></span><br><span class="line">    <span class="string">&quot;add %[bmRET], %[bmTMP], %[bmCC]\n\t&quot;</span></span><br><span class="line">    :[bmTMP]<span class="string">&quot;+r&quot;</span>(tmp), [bmRET]<span class="string">&quot;=r&quot;</span>(ret)</span><br><span class="line">   :[bmTMP]<span class="string">&quot;r&quot;</span>(aa), [bmBB]<span class="string">&quot;r&quot;</span>(bb),[bmCC]<span class="string">&quot;r&quot;</span>(cc)</span><br><span class="line">    :<span class="string">&quot;memory&quot;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, %[bmRET]&quot;</span> ::[bmRET]<span class="string">&quot;r&quot;</span>(ret):<span class="string">&quot;memory&quot;</span>);</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov pc, lr&quot;</span>);</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, #0x11&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r1, #0x22&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r2, #0x33&quot;</span></span><br><span class="line">        <span class="string">&quot;bl add&quot;</span></span><br><span class="line">       )</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="type">int</span> addRet = <span class="built_in">add</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="type">int</span> addRet2 = <span class="built_in">add2</span>(<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ret:%d\n&quot;</span>,addRet,addRet2);</span><br><span class="line">    <span class="keyword">return</span> addRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C调用汇编"><a href="#C调用汇编" class="headerlink" title="C调用汇编"></a>C调用汇编</h4><p>通常在 C 代码中嵌入汇编代码，通过内联汇编来执行特定的汇编指令</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">example</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> result;</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, #0x11\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r1, #0x22\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r2, #0x33\n&quot;</span></span><br><span class="line">        <span class="string">&quot;bl add\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov %[result], r0\n&quot;</span></span><br><span class="line">        : [result] <span class="string">&quot;=r&quot;</span> (result)  <span class="comment">// 输出操作数</span></span><br><span class="line">        :                        <span class="comment">// 无输入操作数</span></span><br><span class="line">        : <span class="string">&quot;r0&quot;</span>, <span class="string">&quot;r1&quot;</span>, <span class="string">&quot;r2&quot;</span>, <span class="string">&quot;memory&quot;</span>  <span class="comment">// 被破坏的寄存器</span></span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 现在 result 包含 add 函数的返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="汇编调用C"><a href="#汇编调用C" class="headerlink" title="汇编调用C"></a>汇编调用C</h4><p>汇编代码可以使用 <code>bl</code> 指令跳转到 C 函数，传递参数通过寄存器，并执行 C 函数的逻辑。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum: %d\n&quot;</span>, a + b + c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">example</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, #1\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r1, #2\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r2, #3\n&quot;</span></span><br><span class="line">        <span class="string">&quot;bl add\n&quot;</span></span><br><span class="line">        :  <span class="comment">// 无输出操作数</span></span><br><span class="line">        :  <span class="comment">// 无输入操作数</span></span><br><span class="line">        : <span class="string">&quot;r0&quot;</span>, <span class="string">&quot;r1&quot;</span>, <span class="string">&quot;r2&quot;</span>, <span class="string">&quot;memory&quot;</span>  <span class="comment">// 被破坏的寄存器</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改应用ARM代码实现破解功能"><a href="#修改应用ARM代码实现破解功能" class="headerlink" title="修改应用ARM代码实现破解功能"></a>修改应用ARM代码实现破解功能</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:extractNativeLibs=&quot;true&quot;</span><br><span class="line"></span><br><span class="line">android:extractNativeLibs=&quot;true&quot;：表示在应用安装时，APK 中的本地库（lib 目录中的 .so 文件）将被提取到设备的 /data/app/&lt;package-name&gt;/lib 目录中。这是 Android 系统的默认行为。在应用运行时，系统会从这个目录中加载本地库。</span><br><span class="line"></span><br><span class="line">android:extractNativeLibs=&quot;false&quot;：表示本地库将不会被提取到设备的 /data/app/&lt;package-name&gt;/lib 目录中。相反，系统会直接从 APK 文件中加载本地库。这可以减少设备上存储的重复文件，但要求应用的 APK 必须是完整且没有被压缩的，以确保本地库可以从 APK 文件中直接读取。</span><br></pre></td></tr></table></figure><p>IDA打开.so文件，把return 0全部修改为return 1</p><p><img src="/../image/arm1.png"></p><p>将修改后的so文件替换旧的，并进行对齐和签名</p><p>对齐操作</p><p><img src="/../image/arm2.png"></p><p>签名操作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Smali</title>
      <link href="/2024/08/02/Smali/"/>
      <url>/2024/08/02/Smali/</url>
      
        <content type="html"><![CDATA[<h2 id="Smali汇编"><a href="#Smali汇编" class="headerlink" title="Smali汇编"></a>Smali汇编</h2><h3 id="了解安卓虚拟机"><a href="#了解安卓虚拟机" class="headerlink" title="了解安卓虚拟机"></a>了解安卓虚拟机</h3><h4 id="Dalvik虚拟机"><a href="#Dalvik虚拟机" class="headerlink" title="Dalvik虚拟机"></a>Dalvik虚拟机</h4><p>JIT(Just-In-Time Compile 即时编译)，高频率使用代码空闲时间编译好并存储到内存</p><h4 id="Art虚拟机"><a href="#Art虚拟机" class="headerlink" title="Art虚拟机"></a>Art虚拟机</h4><p>AOT(Ahead-Of-Time 预先编译)一次编译好，oat文件</p><h3 id="头文件定义与接口实现"><a href="#头文件定义与接口实现" class="headerlink" title="头文件定义与接口实现"></a>头文件定义与接口实现</h3><p>(“&lt;&gt;”表示可选)</p><h4 id="class"><a href="#class" class="headerlink" title=".class"></a>.class</h4><p>作用：定义类，包括包名和类名</p><p>格式：.class &lt;访问权限&gt; [关键修饰字] &lt;完整类名&gt;  (“&lt;&gt;”表示可选)</p><h4 id="super"><a href="#super" class="headerlink" title=".super"></a>.super</h4><p>作用：定义所属父类</p><p>格式：.super &lt;父类完整类名&gt;</p><h4 id="source"><a href="#source" class="headerlink" title=".source"></a>.source</h4><p>作用：指定该smail代码所属java源文件</p><p>格式：.source &lt;java源代码名称&gt;</p><h4 id="implements"><a href="#implements" class="headerlink" title=".implements"></a>.implements</h4><p>作用： 声明实现接口类名称</p><p>格式：.implements &lt;接口类名&gt;</p><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>作用：相当于全局变量，跟类实例没关系，属于类</p><p>格式：.field &lt;访问权限&gt; static [修饰词] &lt;字段名&gt; : &lt;变量类型&gt;</p><p>​   .field &lt;访问权限&gt; static final &lt;变量名&gt; : &lt;常量类型&gt; &#x3D; 常量值</p><h4 id="普通变量"><a href="#普通变量" class="headerlink" title="普通变量"></a>普通变量</h4><p>作用：相当于局部变量，跟类实例有关系，不属于类，没有static修饰</p><p>格式：.field &lt;访问权限修饰符&gt; [非权限修饰符] &lt;变量名&gt; : &lt;变量类型&gt;</p><h3 id="方法定义"><a href="#方法定义" class="headerlink" title="方法定义"></a>方法定义</h3><p>标签：.method  .end 之间</p><p>格式：.method &lt;访问权限修饰符&gt; [非访问权限修饰符] &lt;方法名&gt; 签名</p><p>​&lt;.locals&gt;</p><p>​[.parameter]</p><p>​[.prologue]</p><p>​[.line]</p><p>​&lt;代码逻辑&gt;</p><p>​.end method</p><h4 id="其他语法知识点"><a href="#其他语法知识点" class="headerlink" title="其他语法知识点"></a>其他语法知识点</h4><p>clinit函数：静态代码static修饰的</p><p>direct methods：不能被子类继承、覆盖、修改</p><p>virtual methods：能被子类继承、覆盖、修改</p><h4 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h4><p>指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">invoke-virtual(调用实例的虚方法)</span><br><span class="line">invoke-super(调用实例的父类/基类方法)</span><br><span class="line">invoke-direct(调用实例的直接方法)</span><br><span class="line">invoke-static(调用实例的静态方法)</span><br><span class="line">invoke-static(调用实例的接口方法)</span><br></pre></td></tr></table></figure><p><img src="/../image/Smali.jpg"> </p><p><img src="/../image/Smali2.jpg"></p><h4 id="对象的创建"><a href="#对象的创建" class="headerlink" title="对象的创建"></a>对象的创建</h4><p>指令组合</p><p>new-instance 寄存器，类名</p><p>invoke-direct{寄存器，参数寄存器}，类名-&gt;&lt; init &gt;签名</p><p>return-object 寄存器</p><h4 id="修改应用Smali代码实现破解功能"><a href="#修改应用Smali代码实现破解功能" class="headerlink" title="修改应用Smali代码实现破解功能"></a>修改应用Smali代码实现破解功能</h4><p>反汇编成smali</p><p><img src="/../image/smali3.png"></p><p>使用jadx-gui-1.4.4查看源代码，在AndroidManifest.xml中查看包名</p><p><img src="/../image/smali4.png"></p><p>找到注册按钮</p><p><img src="/../image/smali5.png"></p><p>找到调用checkSN的函数</p><p><img src="/../image/smali6.png"></p><p><img src="/../image/smali7.png"></p><p>成功的语句块</p><p><img src="/../image/smali8.png"></p><p>失败的语句块</p><p><img src="/../image/smali9.png"></p><p>修改checkSN，在放回之前强制将v7改为true</p><p><img src="/../image/smali10.png"></p><p>将修改完后的smali进行回编</p><p><img src="/../image/smali11.png"></p><p>回编后的文件路径</p><p><img src="/../image/smali12.png"></p><p>要先删除原先安装的，再使用APK上上签进行签名,完成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ELF</title>
      <link href="/2024/08/01/ELF/"/>
      <url>/2024/08/01/ELF/</url>
      
        <content type="html"><![CDATA[<h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>Linux平台的一种可执行文件格式，Executable and Linkable Format(可执行 和 可链接 格式 )</p><p>的文件</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>C&#x2F;C++语言编译生成，动静态。x86汇编、arm汇编。执行速度快，逆行成本高。</p><h4 id="生成方式"><a href="#生成方式" class="headerlink" title="生成方式"></a>生成方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//call ndk-build.cmd NDK_PROJECT_PATH=. NDK_APPLICATION_MK=jni\\Application.mk</span><br><span class="line">//Application.mk、 Android.mk、xx.c源文件</span><br><span class="line">gcc test.c -c test.o &amp;&amp; gcc test.c -o test</span><br></pre></td></tr></table></figure><p>Main.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">soPath</span> <span class="operator">=</span> <span class="string">&quot;so/libhello-jni.so&quot;</span>;</span><br><span class="line">        <span class="type">ParseSo</span> <span class="variable">parseSo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ParseSo</span>(soPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//��ELF�ļ�ͷ��Ϣ</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Elf Header+++++++++++++++++&quot;</span>);</span><br><span class="line">        parseSo.readElfHeader(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//������ͷ����Ϣ</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Program Header Table+++++++++++++++++&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">pHeaderOffset</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_phoff);</span><br><span class="line">        <span class="type">int</span> <span class="variable">pHeaderCount</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_phnum);</span><br><span class="line"><span class="comment">//        parseSo.readProgramHeaderList(pHeaderOffset, pHeaderCount);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//����ͷ����Ϣ</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Section Header Table+++++++++++++++++&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sHeaderOffset</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_shoff);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sHeaderCount</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_shnum);</span><br><span class="line">        parseSo.readSectionHeaderList(sHeaderOffset, sHeaderCount);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//�����ű�</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Symbol Table+++++++++++++++++&quot;</span>);</span><br><span class="line">        parseSo.printSymbolTableList();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ParseSo.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.pediy.test.ElfType32.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ParseSo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">byte</span>[] byteArr;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">ElfType32</span> <span class="variable">type_32</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType32</span>();</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">ElfType64</span> <span class="variable">type_64</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType64</span>();</span><br><span class="line">    <span class="keyword">public</span>  String soPath;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParseSo</span><span class="params">(String pSoPath)</span> &#123;</span><br><span class="line">        soPath = pSoPath;</span><br><span class="line">        byteArr = Utils.readFile(soPath);</span><br><span class="line">        <span class="keyword">if</span> (byteArr == <span class="literal">null</span>)</span><br><span class="line">            System.out.println(<span class="string">&quot;read file byte failed...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readElfHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (offset &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ELf Header offset error&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        public byte[] e_ident = new byte[16];</span></span><br><span class="line"><span class="comment">//        public byte[] e_type = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_machine = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_version = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_entry = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_phoff = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shoff = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_flags = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_ehsize = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_phentsize = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_phnum = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shentsize = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shnum = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shstrndx = new byte[2];</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">off</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;type_32.hdr.em.size(); i++)&#123;</span><br><span class="line">            System.arraycopy(byteArr, off, type_32.hdr.em.get(i), <span class="number">0</span>, type_32.hdr.em.get(i).length);</span><br><span class="line">            off += type_32.hdr.em.get(i).length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(type_32.hdr.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readProgramHeaderList</span><span class="params">(<span class="type">int</span> offset, <span class="type">int</span> count)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pHeaderSize</span> <span class="operator">=</span> Utils.byte2Short(type_32.hdr.e_phentsize);  <span class="comment">//����ͷ�ṹ���С</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;count; i++)&#123;</span><br><span class="line">            type_32.phdrList.add(readProgramHeader(offset+pHeaderSize*i));</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;ProgramHeader index:&quot;</span> +i+ <span class="string">&quot; :&quot;</span>);</span><br><span class="line">            System.out.println(type_32.phdrList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ElfType32.elf32_phdr <span class="title function_">readProgramHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line">        <span class="comment">//    public byte[] p_type = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_offset = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_vaddr = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_paddr = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_filesz = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_memsz = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_flags = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_align = new byte[4];</span></span><br><span class="line">        ElfType32.<span class="type">elf32_phdr</span> <span class="variable">phdr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType32</span>.elf32_phdr();</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">0</span>, phdr.p_type, <span class="number">0</span>, phdr.p_type.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">4</span>, phdr.p_offset, <span class="number">0</span>, phdr.p_offset.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">8</span>, phdr.p_vaddr, <span class="number">0</span>, phdr.p_vaddr.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">12</span>, phdr.p_paddr, <span class="number">0</span>, phdr.p_paddr.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">16</span>, phdr.p_filesz, <span class="number">0</span>, phdr.p_filesz.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">20</span>, phdr.p_memsz, <span class="number">0</span>, phdr.p_memsz.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">24</span>, phdr.p_flags, <span class="number">0</span>, phdr.p_flags.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">28</span>, phdr.p_align, <span class="number">0</span>, phdr.p_align.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> phdr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readSectionHeaderList</span><span class="params">(<span class="type">int</span> offset, <span class="type">int</span> count)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sHeaderSize</span> <span class="operator">=</span> Utils.byte2Short(type_32.hdr.e_shentsize);</span><br><span class="line">        <span class="type">int</span> <span class="variable">strIndex</span> <span class="operator">=</span> Utils.byte2Int(type_32.hdr.e_shstrndx);</span><br><span class="line"></span><br><span class="line">        readSectionHeader(offset + sHeaderSize*strIndex);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;count; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == strIndex)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;SectionHeader index:&quot;</span> +i+ <span class="string">&quot; :&quot;</span>);</span><br><span class="line">            type_32.shdrList.add(readSectionHeader(offset + sHeaderSize*i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ElfType32.elf32_shdr <span class="title function_">readSectionHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line"><span class="comment">//        public byte[] sh_name = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_type = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_flags = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_addr = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_offset = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_size = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_link = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_info = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_addralign = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_entsize = new byte[4];</span></span><br><span class="line">        ElfType32.<span class="type">elf32_shdr</span> <span class="variable">shdr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType32</span>.elf32_shdr();</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">0</span>, shdr.sh_name, <span class="number">0</span>, shdr.sh_name.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">4</span>, shdr.sh_type, <span class="number">0</span>, shdr.sh_type.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">8</span>, shdr.sh_flags, <span class="number">0</span>, shdr.sh_flags.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">12</span>, shdr.sh_addr, <span class="number">0</span>, shdr.sh_addr.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">16</span>, shdr.sh_offset, <span class="number">0</span>, shdr.sh_offset.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">20</span>, shdr.sh_size, <span class="number">0</span>, shdr.sh_size.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">24</span>, shdr.sh_link, <span class="number">0</span>, shdr.sh_link.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">28</span>, shdr.sh_info, <span class="number">0</span>, shdr.sh_info.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">32</span>, shdr.sh_addralign, <span class="number">0</span>, shdr.sh_addralign.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">36</span>, shdr.sh_entsize, <span class="number">0</span>, shdr.sh_entsize.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (Utils.byte2Int(shdr.sh_type))&#123;</span><br><span class="line">            <span class="keyword">case</span> ElfType32.SHT_STRTAB:&#123;</span><br><span class="line">                <span class="type">ElfStringTable</span> <span class="variable">elfStringTable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfStringTable</span>(byteArr, Utils.byte2Int(shdr.sh_offset), Utils.byte2Int(shdr.sh_size));</span><br><span class="line">                type_32.elfStringTables.add(elfStringTable);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> ElfType32.SHT_DYNSYM:&#123;  <span class="comment">//���ű�</span></span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">baseOffset</span> <span class="operator">=</span> Utils.byte2Int(shdr.sh_offset);</span><br><span class="line">                <span class="type">int</span> <span class="variable">symCount</span> <span class="operator">=</span> Utils.byte2Int(shdr.sh_size)/<span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                public byte[] st_name_ndx = new byte[4];</span></span><br><span class="line"><span class="comment">//                public byte[] st_value = new byte[4];</span></span><br><span class="line"><span class="comment">//                public byte[] st_size = new byte[4];</span></span><br><span class="line"><span class="comment">//                public byte[] st_info = new byte[1];</span></span><br><span class="line"><span class="comment">//                public byte[] st_other = new byte[1];</span></span><br><span class="line"><span class="comment">//                public byte[] st_shndx = new byte[2];</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;symCount; i++)&#123;</span><br><span class="line">                    <span class="type">ElfSymbolTable</span> <span class="variable">elfSymbolTable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfSymbolTable</span>();</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">0</span>+i*<span class="number">16</span>, elfSymbolTable.st_name_ndx, <span class="number">0</span>, elfSymbolTable.st_name_ndx.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">4</span>+i*<span class="number">16</span>, elfSymbolTable.st_value, <span class="number">0</span>, elfSymbolTable.st_value.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">8</span>+i*<span class="number">16</span>, elfSymbolTable.st_size, <span class="number">0</span>, elfSymbolTable.st_size.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">12</span>+i*<span class="number">16</span>, elfSymbolTable.st_info, <span class="number">0</span>, elfSymbolTable.st_info.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">13</span>+i*<span class="number">16</span>, elfSymbolTable.st_other, <span class="number">0</span>, elfSymbolTable.st_other.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">14</span>+i*<span class="number">16</span>, elfSymbolTable.st_shndx, <span class="number">0</span>, elfSymbolTable.st_shndx.length);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">switch</span> (elfSymbolTable.getBinding())&#123;</span><br><span class="line">                        <span class="keyword">case</span> STB_LOCAL:</span><br><span class="line">                        <span class="keyword">case</span> STB_GLOBAL:&#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">switch</span> (elfSymbolTable.getType())&#123;</span><br><span class="line">                        <span class="keyword">case</span> STT_NOTYPE:&#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    type_32.elfSymbolTableList.add(elfSymbolTable);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">tmp</span> <span class="operator">=</span> type_32.elfStringTables.get(<span class="number">0</span>).getCStringByOffset(Utils.byte2Int(shdr.sh_name));</span><br><span class="line">        <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;sh_name: &quot;</span>+tmp <span class="comment">/*Utils.byte2Int(sh_name)*/</span></span><br><span class="line">                +<span class="string">&quot;\nsh_type:&quot;</span>+Utils.bytes2HexString(shdr.sh_type)</span><br><span class="line">                +<span class="string">&quot;\nsh_flags:&quot;</span>+Utils.bytes2HexString(shdr.sh_flags)</span><br><span class="line">                +<span class="string">&quot;\nsh_add:&quot;</span>+Utils.bytes2HexString(shdr.sh_addr)</span><br><span class="line">                +<span class="string">&quot;\nsh_offset:&quot;</span>+Utils.bytes2HexString(shdr.sh_offset)</span><br><span class="line">                +<span class="string">&quot;\nsh_size:&quot;</span>+Utils.bytes2HexString(shdr.sh_size)</span><br><span class="line">                +<span class="string">&quot;\nsh_link:&quot;</span>+Utils.bytes2HexString(shdr.sh_link)</span><br><span class="line">                +<span class="string">&quot;\nsh_info:&quot;</span>+Utils.bytes2HexString(shdr.sh_info)</span><br><span class="line">                +<span class="string">&quot;\nsh_addralign:&quot;</span>+Utils.bytes2HexString(shdr.sh_addralign)</span><br><span class="line">                +<span class="string">&quot;\nsh_entsize:&quot;</span>+ Utils.bytes2HexString(shdr.sh_entsize);</span><br><span class="line">        System.out.println(pri);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> shdr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printSymbolTableList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;type_32.elfSymbolTableList.size(); i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">symName</span> <span class="operator">=</span> Utils.byte2Int(type_32.elfSymbolTableList.get(i).st_name_ndx);</span><br><span class="line">            System.out.println(<span class="string">&quot;symbol index: &quot;</span> + i + <span class="string">&quot; :&quot;</span>);</span><br><span class="line">            System.out.println(type_32.elfStringTables.get(<span class="number">1</span>).getCStringByOffset(symName));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ElfType32.java、ElfType64.java、ElfStringTable.java、ElfSymbolTable.java就省略了，官网都能找到。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dex完整代码解析</title>
      <link href="/2024/07/26/Dex%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
      <url>/2024/07/26/Dex%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h4 id="DexFile-h"><a href="#DexFile-h" class="headerlink" title="DexFile.h"></a>DexFile.h</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2008 The Android Open Source Project</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Access .dex (Dalvik Executable Format) files.  The code here assumes that</span></span><br><span class="line"><span class="comment"> * the DEX file has been rewritten (byte-swapped, word-aligned) and that</span></span><br><span class="line"><span class="comment"> * the contents can be directly accessed as a collection of C arrays.  Please</span></span><br><span class="line"><span class="comment"> * see docs/dalvik/dex-format.html for a detailed description.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The structure and field names were chosen to match those in the DEX spec.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * It&#x27;s generally assumed that the DEX file will be stored in shared memory,</span></span><br><span class="line"><span class="comment"> * obviating the need to copy code and constant pool entries into newly</span></span><br><span class="line"><span class="comment"> * allocated storage.  Maintaining local pointers to items in the shared area</span></span><br><span class="line"><span class="comment"> * is valid and encouraged.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * All memory-mapped structures are 32-bit aligned unless otherwise noted.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LIBDEX_DEXFILE_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIBDEX_DEXFILE_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vm/Common.h&quot;</span>      <span class="comment">// basic type defs, e.g. u1/u2/u4/u8, and LOG</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;libdex/SysUtil.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * gcc-style inline management -- ensures we have a copy of all functions</span></span><br><span class="line"><span class="comment"> * in the library, so code that links against us will work whether or not</span></span><br><span class="line"><span class="comment"> * it was built with optimizations enabled.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _DEX_GEN_INLINES             <span class="comment">/* only defined by DexInlines.c */</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> DEX_INLINE extern __inline__</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> DEX_INLINE</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* DEX file magic number */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_MAGIC       <span class="string">&quot;dex\n&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* current version, encoded in 4 bytes of ASCII */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_MAGIC_VERS  <span class="string">&quot;036\0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * older but still-recognized version (corresponding to Android API</span></span><br><span class="line"><span class="comment"> * levels 13 and earlier</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_MAGIC_VERS_API_13  <span class="string">&quot;035\0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* same, but for optimized DEX header */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_OPT_MAGIC   <span class="string">&quot;dey\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_OPT_MAGIC_VERS  <span class="string">&quot;036\0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_DEP_MAGIC   <span class="string">&quot;deps&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 160-bit SHA-1 digest.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> &#123; kSHA1DigestLen = <span class="number">20</span>,</span><br><span class="line">       kSHA1DigestOutputLen = kSHA1DigestLen*<span class="number">2</span> <span class="number">+1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* general constants */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexEndianConstant = <span class="number">0x12345678</span>,    <span class="comment">/* the endianness indicator */</span></span><br><span class="line">    kDexNoIndex = <span class="number">0xffffffff</span>,           <span class="comment">/* not a valid index value */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Enumeration of all the primitive types.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">PrimitiveType</span> &#123;</span><br><span class="line">    PRIM_NOT        = <span class="number">0</span>,       <span class="comment">/* value is a reference type, not a primitive type */</span></span><br><span class="line">    PRIM_VOID       = <span class="number">1</span>,</span><br><span class="line">    PRIM_BOOLEAN    = <span class="number">2</span>,</span><br><span class="line">    PRIM_BYTE       = <span class="number">3</span>,</span><br><span class="line">    PRIM_SHORT      = <span class="number">4</span>,</span><br><span class="line">    PRIM_CHAR       = <span class="number">5</span>,</span><br><span class="line">    PRIM_INT        = <span class="number">6</span>,</span><br><span class="line">    PRIM_LONG       = <span class="number">7</span>,</span><br><span class="line">    PRIM_FLOAT      = <span class="number">8</span>,</span><br><span class="line">    PRIM_DOUBLE     = <span class="number">9</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * access flags and masks; the &quot;standard&quot; ones are all &lt;= 0x4000</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Note: There are related declarations in vm/oo/Object.h in the ClassFlags</span></span><br><span class="line"><span class="comment"> * enum.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    ACC_PUBLIC       = <span class="number">0x00000001</span>,       <span class="comment">// class, field, method, ic</span></span><br><span class="line">    ACC_PRIVATE      = <span class="number">0x00000002</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_PROTECTED    = <span class="number">0x00000004</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_STATIC       = <span class="number">0x00000008</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_FINAL        = <span class="number">0x00000010</span>,       <span class="comment">// class, field, method, ic</span></span><br><span class="line">    ACC_SYNCHRONIZED = <span class="number">0x00000020</span>,       <span class="comment">// method (only allowed on natives)</span></span><br><span class="line">    ACC_SUPER        = <span class="number">0x00000020</span>,       <span class="comment">// class (not used in Dalvik)</span></span><br><span class="line">    ACC_VOLATILE     = <span class="number">0x00000040</span>,       <span class="comment">// field</span></span><br><span class="line">    ACC_BRIDGE       = <span class="number">0x00000040</span>,       <span class="comment">// method (1.5)</span></span><br><span class="line">    ACC_TRANSIENT    = <span class="number">0x00000080</span>,       <span class="comment">// field</span></span><br><span class="line">    ACC_VARARGS      = <span class="number">0x00000080</span>,       <span class="comment">// method (1.5)</span></span><br><span class="line">    ACC_NATIVE       = <span class="number">0x00000100</span>,       <span class="comment">// method</span></span><br><span class="line">    ACC_INTERFACE    = <span class="number">0x00000200</span>,       <span class="comment">// class, ic</span></span><br><span class="line">    ACC_ABSTRACT     = <span class="number">0x00000400</span>,       <span class="comment">// class, method, ic</span></span><br><span class="line">    ACC_STRICT       = <span class="number">0x00000800</span>,       <span class="comment">// method</span></span><br><span class="line">    ACC_SYNTHETIC    = <span class="number">0x00001000</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_ANNOTATION   = <span class="number">0x00002000</span>,       <span class="comment">// class, ic (1.5)</span></span><br><span class="line">    ACC_ENUM         = <span class="number">0x00004000</span>,       <span class="comment">// class, field, ic (1.5)</span></span><br><span class="line">    ACC_CONSTRUCTOR  = <span class="number">0x00010000</span>,       <span class="comment">// method (Dalvik only)</span></span><br><span class="line">    ACC_DECLARED_SYNCHRONIZED =</span><br><span class="line">                       <span class="number">0x00020000</span>,       <span class="comment">// method (Dalvik only)</span></span><br><span class="line">    ACC_CLASS_MASK =</span><br><span class="line">        (ACC_PUBLIC | ACC_FINAL | ACC_INTERFACE | ACC_ABSTRACT</span><br><span class="line">                | ACC_SYNTHETIC | ACC_ANNOTATION | ACC_ENUM),</span><br><span class="line">    ACC_INNER_CLASS_MASK =</span><br><span class="line">        (ACC_CLASS_MASK | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC),</span><br><span class="line">    ACC_FIELD_MASK =</span><br><span class="line">        (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL</span><br><span class="line">                | ACC_VOLATILE | ACC_TRANSIENT | ACC_SYNTHETIC | ACC_ENUM),</span><br><span class="line">    ACC_METHOD_MASK =</span><br><span class="line">        (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL</span><br><span class="line">                | ACC_SYNCHRONIZED | ACC_BRIDGE | ACC_VARARGS | ACC_NATIVE</span><br><span class="line">                | ACC_ABSTRACT | ACC_STRICT | ACC_SYNTHETIC | ACC_CONSTRUCTOR</span><br><span class="line">                | ACC_DECLARED_SYNCHRONIZED),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* annotation constants */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexVisibilityBuild         = <span class="number">0x00</span>,     <span class="comment">/* annotation visibility */</span></span><br><span class="line">    kDexVisibilityRuntime       = <span class="number">0x01</span>,</span><br><span class="line">    kDexVisibilitySystem        = <span class="number">0x02</span>,</span><br><span class="line"></span><br><span class="line">    kDexAnnotationByte          = <span class="number">0x00</span>,</span><br><span class="line">    kDexAnnotationShort         = <span class="number">0x02</span>,</span><br><span class="line">    kDexAnnotationChar          = <span class="number">0x03</span>,</span><br><span class="line">    kDexAnnotationInt           = <span class="number">0x04</span>,</span><br><span class="line">    kDexAnnotationLong          = <span class="number">0x06</span>,</span><br><span class="line">    kDexAnnotationFloat         = <span class="number">0x10</span>,</span><br><span class="line">    kDexAnnotationDouble        = <span class="number">0x11</span>,</span><br><span class="line">    kDexAnnotationString        = <span class="number">0x17</span>,</span><br><span class="line">    kDexAnnotationType          = <span class="number">0x18</span>,</span><br><span class="line">    kDexAnnotationField         = <span class="number">0x19</span>,</span><br><span class="line">    kDexAnnotationMethod        = <span class="number">0x1a</span>,</span><br><span class="line">    kDexAnnotationEnum          = <span class="number">0x1b</span>,</span><br><span class="line">    kDexAnnotationArray         = <span class="number">0x1c</span>,</span><br><span class="line">    kDexAnnotationAnnotation    = <span class="number">0x1d</span>,</span><br><span class="line">    kDexAnnotationNull          = <span class="number">0x1e</span>,</span><br><span class="line">    kDexAnnotationBoolean       = <span class="number">0x1f</span>,</span><br><span class="line"></span><br><span class="line">    kDexAnnotationValueTypeMask = <span class="number">0x1f</span>,     <span class="comment">/* low 5 bits */</span></span><br><span class="line">    kDexAnnotationValueArgShift = <span class="number">5</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* map item type codes */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexTypeHeaderItem               = <span class="number">0x0000</span>,</span><br><span class="line">    kDexTypeStringIdItem             = <span class="number">0x0001</span>,</span><br><span class="line">    kDexTypeTypeIdItem               = <span class="number">0x0002</span>,</span><br><span class="line">    kDexTypeProtoIdItem              = <span class="number">0x0003</span>,</span><br><span class="line">    kDexTypeFieldIdItem              = <span class="number">0x0004</span>,</span><br><span class="line">    kDexTypeMethodIdItem             = <span class="number">0x0005</span>,</span><br><span class="line">    kDexTypeClassDefItem             = <span class="number">0x0006</span>,</span><br><span class="line">    kDexTypeMapList                  = <span class="number">0x1000</span>,</span><br><span class="line">    kDexTypeTypeList                 = <span class="number">0x1001</span>,</span><br><span class="line">    kDexTypeAnnotationSetRefList     = <span class="number">0x1002</span>,</span><br><span class="line">    kDexTypeAnnotationSetItem        = <span class="number">0x1003</span>,</span><br><span class="line">    kDexTypeClassDataItem            = <span class="number">0x2000</span>,</span><br><span class="line">    kDexTypeCodeItem                 = <span class="number">0x2001</span>,</span><br><span class="line">    kDexTypeStringDataItem           = <span class="number">0x2002</span>,</span><br><span class="line">    kDexTypeDebugInfoItem            = <span class="number">0x2003</span>,</span><br><span class="line">    kDexTypeAnnotationItem           = <span class="number">0x2004</span>,</span><br><span class="line">    kDexTypeEncodedArrayItem         = <span class="number">0x2005</span>,</span><br><span class="line">    kDexTypeAnnotationsDirectoryItem = <span class="number">0x2006</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* auxillary data section chunk codes */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexChunkClassLookup            = <span class="number">0x434c4b50</span>,   <span class="comment">/* CLKP */</span></span><br><span class="line">    kDexChunkRegisterMaps           = <span class="number">0x524d4150</span>,   <span class="comment">/* RMAP */</span></span><br><span class="line"></span><br><span class="line">    kDexChunkEnd                    = <span class="number">0x41454e44</span>,   <span class="comment">/* AEND */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* debug info opcodes and constants */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    DBG_END_SEQUENCE         = <span class="number">0x00</span>,</span><br><span class="line">    DBG_ADVANCE_PC           = <span class="number">0x01</span>,</span><br><span class="line">    DBG_ADVANCE_LINE         = <span class="number">0x02</span>,</span><br><span class="line">    DBG_START_LOCAL          = <span class="number">0x03</span>,</span><br><span class="line">    DBG_START_LOCAL_EXTENDED = <span class="number">0x04</span>,</span><br><span class="line">    DBG_END_LOCAL            = <span class="number">0x05</span>,</span><br><span class="line">    DBG_RESTART_LOCAL        = <span class="number">0x06</span>,</span><br><span class="line">    DBG_SET_PROLOGUE_END     = <span class="number">0x07</span>,</span><br><span class="line">    DBG_SET_EPILOGUE_BEGIN   = <span class="number">0x08</span>,</span><br><span class="line">    DBG_SET_FILE             = <span class="number">0x09</span>,</span><br><span class="line">    DBG_FIRST_SPECIAL        = <span class="number">0x0a</span>,</span><br><span class="line">    DBG_LINE_BASE            = <span class="number">-4</span>,</span><br><span class="line">    DBG_LINE_RANGE           = <span class="number">15</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;header_item&quot; struct.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexHeader</span> &#123;</span><br><span class="line">    u1  magic[<span class="number">8</span>];           <span class="comment">/* includes version number */</span></span><br><span class="line">    u4  checksum;           <span class="comment">/* adler32 checksum */</span></span><br><span class="line">    u1  signature[kSHA1DigestLen]; <span class="comment">/* SHA-1 hash */</span></span><br><span class="line">    u4  fileSize;           <span class="comment">/* length of entire file */</span></span><br><span class="line">    u4  headerSize;         <span class="comment">/* offset to start of next section */</span></span><br><span class="line">    u4  endianTag;</span><br><span class="line">    u4  linkSize;</span><br><span class="line">    u4  linkOff;</span><br><span class="line">    u4  mapOff;</span><br><span class="line">    u4  stringIdsSize;</span><br><span class="line">    u4  stringIdsOff;</span><br><span class="line">    u4  typeIdsSize;</span><br><span class="line">    u4  typeIdsOff;</span><br><span class="line">    u4  protoIdsSize;</span><br><span class="line">    u4  protoIdsOff;</span><br><span class="line">    u4  fieldIdsSize;</span><br><span class="line">    u4  fieldIdsOff;</span><br><span class="line">    u4  methodIdsSize;</span><br><span class="line">    u4  methodIdsOff;</span><br><span class="line">    u4  classDefsSize;</span><br><span class="line">    u4  classDefsOff;</span><br><span class="line">    u4  dataSize;</span><br><span class="line">    u4  dataOff;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;map_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMapItem</span> &#123;</span><br><span class="line">    u2 type;              <span class="comment">/* type code (see kDexType* above) */</span></span><br><span class="line">    u2 unused;</span><br><span class="line">    u4 size;              <span class="comment">/* count of items of the indicated type */</span></span><br><span class="line">    u4 offset;            <span class="comment">/* file offset to the start of data */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;map_list&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMapList</span> &#123;</span><br><span class="line">    u4  size;               <span class="comment">/* #of entries in list */</span></span><br><span class="line">    DexMapItem list[<span class="number">1</span>];     <span class="comment">/* entries */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;string_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexStringId</span> &#123;</span><br><span class="line">    u4 stringDataOff;      <span class="comment">/* file offset to string_data_item */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;type_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTypeId</span> &#123;</span><br><span class="line">    u4  descriptorIdx;      <span class="comment">/* index into stringIds list for type descriptor */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;field_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexFieldId</span> &#123;</span><br><span class="line">    u2  classIdx;           <span class="comment">/* index into typeIds list for defining class */</span></span><br><span class="line">    u2  typeIdx;            <span class="comment">/* index into typeIds for field type */</span></span><br><span class="line">    u4  nameIdx;            <span class="comment">/* index into stringIds for field name */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;method_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMethodId</span> &#123;</span><br><span class="line">    u2  classIdx;           <span class="comment">/* index into typeIds list for defining class */</span></span><br><span class="line">    u2  protoIdx;           <span class="comment">/* index into protoIds for method prototype */</span></span><br><span class="line">    u4  nameIdx;            <span class="comment">/* index into stringIds for method name */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;proto_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexProtoId</span> &#123;</span><br><span class="line">    u4  shortyIdx;          <span class="comment">/* index into stringIds for shorty descriptor */</span></span><br><span class="line">    u4  returnTypeIdx;      <span class="comment">/* index into typeIds list for return type */</span></span><br><span class="line">    u4  parametersOff;      <span class="comment">/* file offset to type_list for parameter types */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;class_def_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexClassDef</span> &#123;</span><br><span class="line">    u4  classIdx;           <span class="comment">/* index into typeIds for this class */</span></span><br><span class="line">    u4  accessFlags;</span><br><span class="line">    u4  superclassIdx;      <span class="comment">/* index into typeIds for superclass */</span></span><br><span class="line">    u4  interfacesOff;      <span class="comment">/* file offset to DexTypeList */</span></span><br><span class="line">    u4  sourceFileIdx;      <span class="comment">/* index into stringIds for source file name */</span></span><br><span class="line">    u4  annotationsOff;     <span class="comment">/* file offset to annotations_directory_item */</span></span><br><span class="line">    u4  classDataOff;       <span class="comment">/* file offset to class_data_item */</span></span><br><span class="line">    u4  staticValuesOff;    <span class="comment">/* file offset to DexEncodedArray */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;type_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTypeItem</span> &#123;</span><br><span class="line">    u2  typeIdx;            <span class="comment">/* index into typeIds */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;type_list&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTypeList</span> &#123;</span><br><span class="line">    u4  size;               <span class="comment">/* #of entries in list */</span></span><br><span class="line">    DexTypeItem list[<span class="number">1</span>];    <span class="comment">/* entries */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;code_item&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The &quot;catches&quot; table is used when throwing an exception,</span></span><br><span class="line"><span class="comment"> * &quot;debugInfo&quot; is used when displaying an exception stack trace or</span></span><br><span class="line"><span class="comment"> * debugging. An offset of zero indicates that there are no entries.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexCode</span> &#123;</span><br><span class="line">    u2  registersSize;</span><br><span class="line">    u2  insSize;</span><br><span class="line">    u2  outsSize;</span><br><span class="line">    u2  triesSize;</span><br><span class="line">    u4  debugInfoOff;       <span class="comment">/* file offset to debug info stream */</span></span><br><span class="line">    u4  insnsSize;          <span class="comment">/* size of the insns array, in u2 units */</span></span><br><span class="line">    u2  insns[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">/* followed by optional u2 padding */</span></span><br><span class="line">    <span class="comment">/* followed by try_item[triesSize] */</span></span><br><span class="line">    <span class="comment">/* followed by uleb128 handlersSize */</span></span><br><span class="line">    <span class="comment">/* followed by catch_handler_item[handlersSize] */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;try_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTry</span> &#123;</span><br><span class="line">    u4  startAddr;          <span class="comment">/* start address, in 16-bit code units */</span></span><br><span class="line">    u2  insnCount;          <span class="comment">/* instruction count, in 16-bit code units */</span></span><br><span class="line">    u2  handlerOff;         <span class="comment">/* offset in encoded handler data to handlers */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Link table.  Currently undefined.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexLink</span> &#123;</span><br><span class="line">    u1  bleargh;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotations_directory_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationsDirectoryItem</span> &#123;</span><br><span class="line">    u4  classAnnotationsOff;  <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">    u4  fieldsSize;           <span class="comment">/* count of DexFieldAnnotationsItem */</span></span><br><span class="line">    u4  methodsSize;          <span class="comment">/* count of DexMethodAnnotationsItem */</span></span><br><span class="line">    u4  parametersSize;       <span class="comment">/* count of DexParameterAnnotationsItem */</span></span><br><span class="line">    <span class="comment">/* followed by DexFieldAnnotationsItem[fieldsSize] */</span></span><br><span class="line">    <span class="comment">/* followed by DexMethodAnnotationsItem[methodsSize] */</span></span><br><span class="line">    <span class="comment">/* followed by DexParameterAnnotationsItem[parametersSize] */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;field_annotations_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexFieldAnnotationsItem</span> &#123;</span><br><span class="line">    u4  fieldIdx;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;method_annotations_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMethodAnnotationsItem</span> &#123;</span><br><span class="line">    u4  methodIdx;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;parameter_annotations_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexParameterAnnotationsItem</span> &#123;</span><br><span class="line">    u4  methodIdx;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnotationSetRefList */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_set_ref_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationSetRefItem</span> &#123;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_set_ref_list&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationSetRefList</span> &#123;</span><br><span class="line">    u4  size;</span><br><span class="line">    DexAnnotationSetRefItem list[<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_set_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationSetItem</span> &#123;</span><br><span class="line">    u4  size;</span><br><span class="line">    u4  entries[<span class="number">1</span>];                 <span class="comment">/* offset to DexAnnotationItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_item&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">NOTE:</span> this structure is byte-aligned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationItem</span> &#123;</span><br><span class="line">    u1  visibility;</span><br><span class="line">    u1  annotation[<span class="number">1</span>];              <span class="comment">/* data in encoded_annotation format */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;encoded_array&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">NOTE:</span> this structure is byte-aligned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexEncodedArray</span> &#123;</span><br><span class="line">    u1  array[<span class="number">1</span>];                   <span class="comment">/* data in encoded_array format */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Lookup table for classes.  It provides a mapping from class name to</span></span><br><span class="line"><span class="comment"> * class definition.  Used by dexFindClass().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * We calculate this at DEX optimization time and embed it in the file so we</span></span><br><span class="line"><span class="comment"> * don&#x27;t need the same hash table in every VM.  This is slightly slower than</span></span><br><span class="line"><span class="comment"> * a hash table with direct pointers to the items, but because it&#x27;s shared</span></span><br><span class="line"><span class="comment"> * there&#x27;s less of a penalty for using a fairly sparse table.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexClassLookup</span> &#123;</span><br><span class="line">    <span class="type">int</span>     size;                       <span class="comment">// total size, including &quot;size&quot;</span></span><br><span class="line">    <span class="type">int</span>     numEntries;                 <span class="comment">// size of table[]; always power of 2</span></span><br><span class="line">    <span class="keyword">struct</span> &#123;</span><br><span class="line">        u4      classDescriptorHash;    <span class="comment">// class descriptor hash code</span></span><br><span class="line">        <span class="type">int</span>     classDescriptorOffset;  <span class="comment">// in bytes, from start of DEX</span></span><br><span class="line">        <span class="type">int</span>     classDefOffset;         <span class="comment">// in bytes, from start of DEX</span></span><br><span class="line">    &#125; table[<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Header added by DEX optimization pass.  Values are always written in</span></span><br><span class="line"><span class="comment"> * local byte and structure padding.  The first field (magic + version)</span></span><br><span class="line"><span class="comment"> * is guaranteed to be present and directly readable for all expected</span></span><br><span class="line"><span class="comment"> * compiler configurations; the rest is version-dependent.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Try to keep this simple and fixed-size.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexOptHeader</span> &#123;</span><br><span class="line">    u1  magic[<span class="number">8</span>];           <span class="comment">/* includes version number */</span></span><br><span class="line"></span><br><span class="line">    u4  dexOffset;          <span class="comment">/* file offset of DEX header */</span></span><br><span class="line">    u4  dexLength;</span><br><span class="line">    u4  depsOffset;         <span class="comment">/* offset of optimized DEX dependency table */</span></span><br><span class="line">    u4  depsLength;</span><br><span class="line">    u4  optOffset;          <span class="comment">/* file offset of optimized data tables */</span></span><br><span class="line">    u4  optLength;</span><br><span class="line"></span><br><span class="line">    u4  flags;              <span class="comment">/* some info flags */</span></span><br><span class="line">    u4  checksum;           <span class="comment">/* adler32 checksum covering deps/opt */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* pad for 64-bit alignment if necessary */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_OPT_FLAG_BIG            (1&lt;&lt;1)  <span class="comment">/* swapped to big-endian */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_INTERFACE_CACHE_SIZE    128     <span class="comment">/* must be power of 2 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Structure representing a DEX file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Code should regard DexFile as opaque, using the API calls provided here</span></span><br><span class="line"><span class="comment"> * to access specific structures.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexFile</span> &#123;</span><br><span class="line">    <span class="comment">/* directly-mapped &quot;opt&quot; header */</span></span><br><span class="line">    <span class="type">const</span> DexOptHeader* pOptHeader;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* pointers to directly-mapped structs and arrays in base DEX */</span></span><br><span class="line">    <span class="type">const</span> DexHeader*    pHeader;</span><br><span class="line">    <span class="type">const</span> DexStringId*  pStringIds;</span><br><span class="line">    <span class="type">const</span> DexTypeId*    pTypeIds;</span><br><span class="line">    <span class="type">const</span> DexFieldId*   pFieldIds;</span><br><span class="line">    <span class="type">const</span> DexMethodId*  pMethodIds;</span><br><span class="line">    <span class="type">const</span> DexProtoId*   pProtoIds;</span><br><span class="line">    <span class="type">const</span> DexClassDef*  pClassDefs;</span><br><span class="line">    <span class="type">const</span> DexLink*      pLinkData;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * These are mapped out of the &quot;auxillary&quot; section, and may not be</span></span><br><span class="line"><span class="comment">     * included in the file.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">const</span> DexClassLookup* pClassLookup;</span><br><span class="line">    <span class="type">const</span> <span class="type">void</span>*         pRegisterMapPool;       <span class="comment">// RegisterMapClassPool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* points to start of DEX file data */</span></span><br><span class="line">    <span class="type">const</span> u1*           baseAddr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* track memory overhead for auxillary structures */</span></span><br><span class="line">    <span class="type">int</span>                 overhead;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* additional app-specific data structures associated with the DEX */</span></span><br><span class="line">    <span class="comment">//void*               auxData;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Utility function -- rounds up to the nearest power of 2.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">u4 <span class="title">dexRoundUpPower2</span><span class="params">(u4 val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Parse an optimized or unoptimized .dex file sitting in memory.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * On success, return a newly-allocated DexFile.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DexFile* <span class="title">dexFileParse</span><span class="params">(<span class="type">const</span> u1* data, <span class="type">size_t</span> length, <span class="type">int</span> flags)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bit values for &quot;flags&quot; argument to dexFileParse */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexParseDefault            = <span class="number">0</span>,</span><br><span class="line">    kDexParseVerifyChecksum     = <span class="number">1</span>,</span><br><span class="line">    kDexParseContinueOnError    = (<span class="number">1</span> &lt;&lt; <span class="number">1</span>),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Fix the byte ordering of all fields in the DEX file, and do</span></span><br><span class="line"><span class="comment"> * structural verification. This is only required for code that opens</span></span><br><span class="line"><span class="comment"> * &quot;raw&quot; DEX files, such as the DEX optimizer.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Return 0 on success.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dexSwapAndVerify</span><span class="params">(u1* addr, <span class="type">int</span> len)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Detect the file type of the given memory buffer via magic number.</span></span><br><span class="line"><span class="comment"> * Call dexSwapAndVerify() on an unoptimized DEX file, do nothing</span></span><br><span class="line"><span class="comment"> * but return successfully on an optimized DEX file, and report an</span></span><br><span class="line"><span class="comment"> * error for all other cases.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Return 0 on success.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dexSwapAndVerifyIfNecessary</span><span class="params">(u1* addr, <span class="type">int</span> len)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Check to see if the file magic and format version in the given</span></span><br><span class="line"><span class="comment"> * header are recognized as valid. Returns true if they are</span></span><br><span class="line"><span class="comment"> * acceptable.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dexHasValidMagic</span><span class="params">(<span class="type">const</span> DexHeader* pHeader)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Compute DEX checksum.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">u4 <span class="title">dexComputeChecksum</span><span class="params">(<span class="type">const</span> DexHeader* pHeader)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Free a DexFile structure, along with any associated structures.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dexFileFree</span><span class="params">(DexFile* pDexFile)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create class lookup table.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DexClassLookup* <span class="title">dexCreateClassLookup</span><span class="params">(DexFile* pDexFile)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Find a class definition by descriptor.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">const</span> DexClassDef* <span class="title">dexFindClass</span><span class="params">(<span class="type">const</span> DexFile* pFile, <span class="type">const</span> <span class="type">char</span>* descriptor)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Set up the basic raw data pointers of a DexFile. This function isn&#x27;t</span></span><br><span class="line"><span class="comment"> * meant for general use.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dexFileSetupBasicPointers</span><span class="params">(DexFile* pDexFile, <span class="type">const</span> u1* data)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the DexMapList of the file, if any */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexMapList* <span class="title">dexGetMap</span><span class="params">(<span class="type">const</span> DexFile* pDexFile)</span> </span>&#123;</span><br><span class="line">    u4 mapOff = pDexFile-&gt;pHeader-&gt;mapOff;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mapOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> (<span class="type">const</span> DexMapList*) (pDexFile-&gt;baseAddr + mapOff);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the const char* string data referred to by the given string_id */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetStringData</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="type">const</span> DexStringId* pStringId)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> u1* ptr = pDexFile-&gt;baseAddr + pStringId-&gt;stringDataOff;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Skip the uleb128 length.</span></span><br><span class="line">    <span class="keyword">while</span> (*(ptr++) &gt; <span class="number">0x7f</span>) <span class="comment">/* empty */</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> <span class="type">char</span>*) ptr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the StringId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexStringId* <span class="title">dexGetStringId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;stringIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pStringIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the UTF-8 encoded string with the specified string_id index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexStringById</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexStringId* pStringId = <span class="built_in">dexGetStringId</span>(pDexFile, idx);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetStringData</span>(pDexFile, pStringId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Return the UTF-8 encoded string with the specified string_id index,</span></span><br><span class="line"><span class="comment"> * also filling in the UTF-16 size (number of 16-bit code points).*/</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span>* <span class="title">dexStringAndSizeById</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx,</span></span></span><br><span class="line"><span class="params"><span class="function">        u4* utf16Size)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the TypeId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeId* <span class="title">dexGetTypeId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;typeIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pTypeIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the descriptor string associated with a given type index.</span></span><br><span class="line"><span class="comment"> * The caller should not free() the returned string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexStringByTypeIdx</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexTypeId* typeId = <span class="built_in">dexGetTypeId</span>(pDexFile, idx);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringById</span>(pDexFile, typeId-&gt;descriptorIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the MethodId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexMethodId* <span class="title">dexGetMethodId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;methodIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pMethodIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the FieldId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexFieldId* <span class="title">dexGetFieldId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;fieldIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pFieldIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the ProtoId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexProtoId* <span class="title">dexGetProtoId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;protoIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pProtoIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the parameter list from a ProtoId. The returns NULL if the ProtoId</span></span><br><span class="line"><span class="comment"> * does not have a parameter list.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeList* <span class="title">dexGetProtoParameters</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile *pDexFile, <span class="type">const</span> DexProtoId* pProtoId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pProtoId-&gt;parametersOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexTypeList*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pProtoId-&gt;parametersOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the ClassDef with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexClassDef* <span class="title">dexGetClassDef</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;classDefsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pClassDefs[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* given a ClassDef pointer, recover its index */</span></span><br><span class="line"><span class="function">DEX_INLINE u4 <span class="title">dexGetIndexForClassDef</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(pClassDef &gt;= pDexFile-&gt;pClassDefs &amp;&amp;</span><br><span class="line">           pClassDef &lt; pDexFile-&gt;pClassDefs + pDexFile-&gt;pHeader-&gt;classDefsSize);</span><br><span class="line">    <span class="keyword">return</span> pClassDef - pDexFile-&gt;pClassDefs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the interface list for a DexClass */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeList* <span class="title">dexGetInterfacesList</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;interfacesOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexTypeList*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pClassDef-&gt;interfacesOff);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the Nth entry in a DexTypeList. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeItem* <span class="title">dexGetTypeItem</span><span class="params">(<span class="type">const</span> DexTypeList* pList,</span></span></span><br><span class="line"><span class="params"><span class="function">    u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pList-&gt;size);</span><br><span class="line">    <span class="keyword">return</span> &amp;pList-&gt;list[idx];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the type_idx for the Nth entry in a TypeList */</span></span><br><span class="line"><span class="function">DEX_INLINE u4 <span class="title">dexTypeListGetIdx</span><span class="params">(<span class="type">const</span> DexTypeList* pList, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexTypeItem* pItem = <span class="built_in">dexGetTypeItem</span>(pList, idx);</span><br><span class="line">    <span class="keyword">return</span> pItem-&gt;typeIdx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the static values list for a DexClass */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexEncodedArray* <span class="title">dexGetStaticValuesList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;staticValuesOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexEncodedArray*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pClassDef-&gt;staticValuesOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the annotations directory item for a DexClass */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationsDirectoryItem* <span class="title">dexGetAnnotationsDirectoryItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;annotationsOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationsDirectoryItem*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pClassDef-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the source file string */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetSourceFile</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;sourceFileIdx == <span class="number">0xffffffff</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringById</span>(pDexFile, pClassDef-&gt;sourceFileIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the size, in bytes, of a DexCode */</span></span><br><span class="line"><span class="function"><span class="type">size_t</span> <span class="title">dexGetDexCodeSize</span><span class="params">(<span class="type">const</span> DexCode* pCode)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Get the list of &quot;tries&quot; for the given DexCode. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTry* <span class="title">dexGetTries</span><span class="params">(<span class="type">const</span> DexCode* pCode)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> u2* insnsEnd = &amp;pCode-&gt;insns[pCode-&gt;insnsSize];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Round to four bytes.</span></span><br><span class="line">    <span class="keyword">if</span> ((((<span class="type">uintptr_t</span>) insnsEnd) &amp; <span class="number">3</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        insnsEnd++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexTry*) insnsEnd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Get the base of the encoded data for the given DexCode. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> u1* <span class="title">dexGetCatchHandlerData</span><span class="params">(<span class="type">const</span> DexCode* pCode)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexTry* pTries = <span class="built_in">dexGetTries</span>(pCode);</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> u1*) &amp;pTries[pCode-&gt;triesSize];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get a pointer to the start of the debugging data */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> u1* <span class="title">dexGetDebugInfoStream</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexCode* pCode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pCode-&gt;debugInfoOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pDexFile-&gt;baseAddr + pCode-&gt;debugInfoOff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DexClassDef convenience - get class descriptor */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetClassDescriptor</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringByTypeIdx</span>(pDexFile, pClassDef-&gt;classIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DexClassDef convenience - get superclass descriptor */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetSuperClassDescriptor</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;superclassIdx == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringByTypeIdx</span>(pDexFile, pClassDef-&gt;superclassIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DexClassDef convenience - get class_data_item pointer */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> u1* <span class="title">dexGetClassData</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;classDataOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> u1*) (pDexFile-&gt;baseAddr + pClassDef-&gt;classDataOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Get an annotation set at a particular offset. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetAnnotationSetItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, u4 offset)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (offset == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationSetItem*) (pDexFile-&gt;baseAddr + offset);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* get the class&#x27; annotation set */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetClassAnnotationSet</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pAnnoDir-&gt;classAnnotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the class&#x27; field annotation list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexFieldAnnotationsItem* <span class="title">dexGetFieldAnnotations</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pAnnoDir-&gt;fieldsSize == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Skip past the header to the start of the field annotations.</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexFieldAnnotationsItem*) &amp;pAnnoDir[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get field annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetFieldAnnotationsSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pAnnoDir-&gt;fieldsSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return a pointer to the field&#x27;s annotation set */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetFieldAnnotationSetItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexFieldAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the class&#x27; method annotation list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexMethodAnnotationsItem* <span class="title">dexGetMethodAnnotations</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pAnnoDir-&gt;methodsSize == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Skip past the header and field annotations to the start of the</span></span><br><span class="line"><span class="comment">     * method annotations.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">const</span> u1* addr = (<span class="type">const</span> u1*) &amp;pAnnoDir[<span class="number">1</span>];</span><br><span class="line">    addr += pAnnoDir-&gt;fieldsSize * <span class="built_in">sizeof</span> (DexFieldAnnotationsItem);</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexMethodAnnotationsItem*) addr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get method annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetMethodAnnotationsSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pAnnoDir-&gt;methodsSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return a pointer to the method&#x27;s annotation set */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetMethodAnnotationSetItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexMethodAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the class&#x27; parameter annotation list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexParameterAnnotationsItem* <span class="title">dexGetParameterAnnotations</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pAnnoDir-&gt;parametersSize == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Skip past the header, field annotations, and method annotations</span></span><br><span class="line"><span class="comment">     * to the start of the parameter annotations.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">const</span> u1* addr = (<span class="type">const</span> u1*) &amp;pAnnoDir[<span class="number">1</span>];</span><br><span class="line">    addr += pAnnoDir-&gt;fieldsSize * <span class="built_in">sizeof</span> (DexFieldAnnotationsItem);</span><br><span class="line">    addr += pAnnoDir-&gt;methodsSize * <span class="built_in">sizeof</span> (DexMethodAnnotationsItem);</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexParameterAnnotationsItem*) addr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get method annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetParameterAnnotationsSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pAnnoDir-&gt;parametersSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the parameter annotation ref list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetRefList* <span class="title">dexGetParameterAnnotationSetRefList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexParameterAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pItem-&gt;annotationsOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationSetRefList*) (pDexFile-&gt;baseAddr + pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get method annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetParameterAnnotationSetRefSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexParameterAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pItem-&gt;annotationsOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetParameterAnnotationSetRefList</span>(pDexFile, pItem)-&gt;size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the Nth entry from an annotation set ref list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetRefItem* <span class="title">dexGetParameterAnnotationSetRef</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationSetRefList* pList, u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pList-&gt;size);</span><br><span class="line">    <span class="keyword">return</span> &amp;pList-&gt;list[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* given a DexAnnotationSetRefItem, return the DexAnnotationSetItem */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetSetRefItemItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationSetRefItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the Nth annotation offset from a DexAnnotationSetItem */</span></span><br><span class="line"><span class="function">DEX_INLINE u4 <span class="title">dexGetAnnotationOff</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationSetItem* pAnnoSet, u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pAnnoSet-&gt;size);</span><br><span class="line">    <span class="keyword">return</span> pAnnoSet-&gt;entries[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the Nth annotation item from a DexAnnotationSetItem */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationItem* <span class="title">dexGetAnnotationItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationSetItem* pAnnoSet, u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u4 offset = <span class="built_in">dexGetAnnotationOff</span>(pAnnoSet, idx);</span><br><span class="line">    <span class="keyword">if</span> (offset == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationItem*) (pDexFile-&gt;baseAddr + offset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the type descriptor character associated with a given primitive</span></span><br><span class="line"><span class="comment"> * type. This returns &#x27;\0&#x27; if the type is invalid.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">dexGetPrimitiveTypeDescriptorChar</span><span class="params">(PrimitiveType type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the type descriptor string associated with a given primitive</span></span><br><span class="line"><span class="comment"> * type.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetPrimitiveTypeDescriptor</span><span class="params">(PrimitiveType type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the boxed type descriptor string associated with a given</span></span><br><span class="line"><span class="comment"> * primitive type. This returns NULL for an invalid type, including</span></span><br><span class="line"><span class="comment"> * particularly for type &quot;void&quot;. In the latter case, even though there</span></span><br><span class="line"><span class="comment"> * is a class Void, there&#x27;s no such thing as a boxed instance of it.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetBoxedTypeDescriptor</span><span class="params">(PrimitiveType type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the primitive type constant from the given descriptor character.</span></span><br><span class="line"><span class="comment"> * This returns PRIM_NOT (note: this is a 0) if the character is invalid</span></span><br><span class="line"><span class="comment"> * as a primitive type descriptor.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">PrimitiveType <span class="title">dexGetPrimitiveTypeFromDescriptorChar</span><span class="params">(<span class="type">char</span> descriptorChar)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">// LIBDEX_DEXFILE_H_</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="DexType-java"><a href="#DexType-java" class="headerlink" title="DexType.java"></a>DexType.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import org.jf.dexlib.Code.Instruction;</span></span><br><span class="line"><span class="comment">//import org.jf.dexlib.Code.InstructionIterator;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexType</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DexHeader dexHeader;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexStringId&gt; dexStringId; <span class="comment">//�����ַ���ƫ�ƴ洢</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexStringList;<span class="comment">//�����ַ���</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexTypeId&gt; dexTypeId;<span class="comment">//����dexTypeID</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexTypeList;<span class="comment">//����type</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexProtoId&gt; dexProtoId;<span class="comment">//����dexProtoID</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexProtoIdString;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexProtoIdType;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexTypeList&gt; dexTypeLists;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexProtoList;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexFieldId&gt; dexFieldId;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexFieldList;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexMethodId&gt; dexMethodId;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexMethodList;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexClassDef&gt; dexClassDefs;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexClassData&gt; dexClassData;</span><br><span class="line">    <span class="keyword">public</span> DexMapList dexMapLists;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//���캯��</span></span><br><span class="line">    DexType()&#123;</span><br><span class="line">        dexHeader = <span class="keyword">new</span> <span class="title class_">DexHeader</span>();</span><br><span class="line"></span><br><span class="line">        dexStringId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexStringId&gt;();</span><br><span class="line">        dexStringList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexTypeId =  <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexTypeId &gt;();</span><br><span class="line">        dexTypeList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line">        dexTypeLists = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexTypeList&gt;();</span><br><span class="line"></span><br><span class="line">        dexProtoId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexProtoId&gt;();</span><br><span class="line">        dexProtoIdString = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line">        dexProtoIdType = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line">        dexProtoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexFieldId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexFieldId&gt;();</span><br><span class="line">        dexFieldList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexMethodId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMethodId&gt;();</span><br><span class="line">        dexMethodList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexClassDefs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexClassDef&gt;();</span><br><span class="line">        dexClassData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexClassData&gt;();</span><br><span class="line"></span><br><span class="line">        dexMapLists = <span class="keyword">new</span> <span class="title class_">DexMapList</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexHeader&#123;</span></span><br><span class="line"><span class="comment">     *     u1 magic[8];                   //dex�汾��ʶ8��1�ֽ�</span></span><br><span class="line"><span class="comment">     *     u4 checksum;                   //adler32У��1��4�ֽ�</span></span><br><span class="line"><span class="comment">     *     u1 signature[kSHA1DigestLen];  //SHA-1��ϣֵ</span></span><br><span class="line"><span class="comment">     *     u4 fileSize;                   //�����ļ��Ĵ�С</span></span><br><span class="line"><span class="comment">     *     u4 headerSize;                 //DexHeader�Ľṹ��С</span></span><br><span class="line"><span class="comment">     *     u4 endianTag;                  //�ֽ�����</span></span><br><span class="line"><span class="comment">     *     u4 linkSize;                   //���Ӷδ�С</span></span><br><span class="line"><span class="comment">     *     u4 linkOff;                    //���Ӷ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 mapOff;                     //DexMapList���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 stringIdsSize;              //DexStringId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 stringIdsOff;               //DexStringId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 typeIdsSize;                //DexTupeID�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 typeIdsOff;                 //DexTypeId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 protoIdsSize;               //DexProtoId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 protoIdsOff;                //DexProtoId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 fieldIdsSize;               //DexFieldId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 fieldIdsOff;                //DexFieldId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 methodIdsSize;              //DexMethodId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 methodIdsOff;               //DexMethodID���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 classDefsSize;              //DexClassDef�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 classDefsOff;               //DexClassDef���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 dataSize;                   //���ݶεĴ�С</span></span><br><span class="line"><span class="comment">     *     u4 dataOff;                    //���ݶε��ļ�ƫ��</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexHeader</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] magic = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">8</span>];          <span class="comment">//dex�汾��ʶ</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] checksum = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//adler32У��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] signature = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">20</span>];     <span class="comment">//sha-1��ϣֵ</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fileSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//�����ļ��Ĵ�С</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] headerSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];     <span class="comment">//DexHeader�ṹ��С</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] endianTag = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];      <span class="comment">//��С��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] linkSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//���Ӷδ�С</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] linkOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//���Ӷ�ƫ��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] mapOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//DexMapList���ļ�ƫ��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] stringIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//DexStringId�ĸ���</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] stringIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//DexStringId���ļ�ƫ��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] protoIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] protoIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fieldIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fieldIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] methodIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] methodIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classDefsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classDefsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] dataSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] dataOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> List&lt;<span class="type">byte</span>[]&gt; em = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DexHeader</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.em.add(magic);</span><br><span class="line">            <span class="built_in">this</span>.em.add(checksum);</span><br><span class="line">            <span class="built_in">this</span>.em.add(signature);</span><br><span class="line">            <span class="built_in">this</span>.em.add(fileSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(headerSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(endianTag);</span><br><span class="line">            <span class="built_in">this</span>.em.add(linkSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(linkOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(mapOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(stringIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(stringIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(typeIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(typeIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(protoIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(protoIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(fieldIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(fieldIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(methodIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(methodIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(classDefsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(classDefsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(dataSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(dataOff);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexStringId&#123;</span></span><br><span class="line"><span class="comment">     *      u4 stringDataOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexStringId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] stringDataOff= <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexTypeId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 descriptorIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexTypeId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] descriptorIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexProtoId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 shortyIdx;</span></span><br><span class="line"><span class="comment">     *     u4 returnTypeIdx;</span></span><br><span class="line"><span class="comment">     *     u4 parametersOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexProtoId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] shortyIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] returnTypeIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] parametersOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> List&lt;DexTypeItem&gt; dexTypeItemList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexTypeItem&#123;</span></span><br><span class="line"><span class="comment">     *     u2 typeIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexTypeItem</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexTypeList&#123;</span></span><br><span class="line"><span class="comment">     *     u4 size;</span></span><br><span class="line"><span class="comment">     *     DexTypeItem list[11;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexTypeList</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] size=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexTypeItem&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexTypeItem&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexFieldId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 classIdx;</span></span><br><span class="line"><span class="comment">     *     u4 typeIdx;</span></span><br><span class="line"><span class="comment">     *     u4 nameIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexFieldId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] nameIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMethodId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 classIdx;</span></span><br><span class="line"><span class="comment">     *     u4 protoIdx;</span></span><br><span class="line"><span class="comment">     *     u4 nameIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMethodId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] protoIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] nameIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexClassDef&#123;</span></span><br><span class="line"><span class="comment">     *     u4 classIdx;</span></span><br><span class="line"><span class="comment">     *     u4 accessFlags;</span></span><br><span class="line"><span class="comment">     *     u4 superclassIdx;</span></span><br><span class="line"><span class="comment">     *     u4 interfacesOff;</span></span><br><span class="line"><span class="comment">     *     u4 sourceFileIdx;</span></span><br><span class="line"><span class="comment">     *     u4 annotationsOff;</span></span><br><span class="line"><span class="comment">     *     u4 classDataOff;</span></span><br><span class="line"><span class="comment">     *     u4 staticValuesOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexClassDef</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] accessFlags=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] superclassIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] interfacesOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] sourceFileIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] annotationsOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classDataOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] staticValuesOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexClassDataItem&#123;</span></span><br><span class="line"><span class="comment">     *     u4 staticFieldsSize;</span></span><br><span class="line"><span class="comment">     *     u4 instanceFieldsSize;</span></span><br><span class="line"><span class="comment">     *     u4 directMethodsSize;</span></span><br><span class="line"><span class="comment">     *     u4 virtualMethodsSize;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexClassDataItem</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] staticFieldsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] instanceFieldsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] directMethodsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] virtualMethodsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexCodeItem</span>&#123;</span><br><span class="line">        <span class="type">short</span> registers_size ;</span><br><span class="line">        <span class="type">short</span> ins_size ;</span><br><span class="line">        <span class="type">short</span> outs_size ;</span><br><span class="line">        <span class="type">short</span> tries_size ;</span><br><span class="line">        <span class="type">int</span> debug_info_off ;</span><br><span class="line">        <span class="type">int</span> insns_size;</span><br><span class="line">        List&lt;<span class="type">byte</span>[]&gt; insns ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DexCodeItem</span><span class="params">(<span class="type">byte</span>[] pBuff, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line">            registers_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">0</span>);</span><br><span class="line">            ins_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">2</span>);</span><br><span class="line">            outs_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">4</span>);</span><br><span class="line">            tries_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">6</span>);</span><br><span class="line">            debug_info_off = Utils.byte2Int_4(pBuff, pOff + <span class="number">8</span>);</span><br><span class="line">            insns_size = Utils.byte2Int_4(pBuff, pOff + <span class="number">12</span>);</span><br><span class="line">            insns = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            System.out.printf(<span class="string">&quot;\tCodeItem:\t.registers:%d, ������������:%d, ���������������ʱ��Ҫ�Ĳ�������:%d, try_item����:%d, %d,%d\r\n&quot;</span>, registers_size, ins_size, outs_size, tries_size, debug_info_off, insns_size);</span><br><span class="line">            <span class="type">byte</span>[] ttmp = <span class="keyword">new</span> <span class="title class_">byte</span>[insns_size*<span class="number">2</span>];</span><br><span class="line">            System.arraycopy(pBuff, pOff+<span class="number">16</span>, ttmp, <span class="number">0</span>, ttmp.length);</span><br><span class="line">            ParseDex.getOpcodeByIns2(ttmp);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            for (int i=0; i&lt;insns_size; i++)&#123;</span></span><br><span class="line"><span class="comment">//                byte[] tmp = new byte[2];</span></span><br><span class="line"><span class="comment">//                System.arraycopy(pBuff, pOff + 16+i*2, tmp, 0, 2);</span></span><br><span class="line"><span class="comment">//                insns.add(tmp);</span></span><br><span class="line"><span class="comment">////                System.out.printf(&quot;\t\t&quot;+ParseDex.getOpcodeByIns2(tmp));</span></span><br><span class="line"><span class="comment">////                System.out.printf(&quot;: &quot; + Utils.bytes2HexString(tmp) + &quot;\r\n&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;&quot;);</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSize_CodeItem</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> insns_size;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexField&#123;</span></span><br><span class="line"><span class="comment">     *     u4 fieldIdx;</span></span><br><span class="line"><span class="comment">     *     u4 accessFlags;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexField</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fieldIdx = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] accessFlags = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMethod&#123;</span></span><br><span class="line"><span class="comment">     *     u4 methodIdx;</span></span><br><span class="line"><span class="comment">     *     u4 accessFlags;</span></span><br><span class="line"><span class="comment">     *     u4 codoOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMethod</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] methodIdx = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] accessFlags = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] codeOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexClassData&#123;</span></span><br><span class="line"><span class="comment">     *     DexClassDataItem header;</span></span><br><span class="line"><span class="comment">     *     DexField* staticFields;</span></span><br><span class="line"><span class="comment">     *     DexField* instanceFields;</span></span><br><span class="line"><span class="comment">     *     DexMethod* directMethods;</span></span><br><span class="line"><span class="comment">     *     DexMethod* virtualMethods</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexClassData</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexClassDataItem&gt; dexClassDataItems = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexClassDataItem&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexField&gt; staticFields = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexField&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexField&gt; instanceFields = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexField&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexMethod&gt; directMethods = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMethod&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexMethod&gt; virtualMethods = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMethod&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMapItem&#123;</span></span><br><span class="line"><span class="comment">     *     u2 type;</span></span><br><span class="line"><span class="comment">     *     u2 unused;</span></span><br><span class="line"><span class="comment">     *     u4 size;</span></span><br><span class="line"><span class="comment">     *     u4 offset;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMapItem</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] type=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] unused=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] size=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] offset=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMapList&#123;</span></span><br><span class="line"><span class="comment">     *     u4 size;</span></span><br><span class="line"><span class="comment">     *     DexMapItem list[11;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMapList</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] size=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexMapItem&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMapItem&gt;();</span><br><span class="line">        <span class="keyword">public</span> Map&lt;Integer, String&gt; type_code = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DexMapList</span><span class="params">()</span> &#123;</span><br><span class="line">            type_code.put(<span class="number">0x0000</span>, <span class="string">&quot;TYPE_HEADER_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0001</span>, <span class="string">&quot;TYPE_STRING_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0002</span>, <span class="string">&quot;TYPE_TYPE_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0003</span>, <span class="string">&quot;TYPE_PROTO_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0004</span>, <span class="string">&quot;TYPE_FIELD_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0005</span>, <span class="string">&quot;TYPE_METHOD_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0006</span>, <span class="string">&quot;TYPE_CLASS_DEF_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1000</span>, <span class="string">&quot;TYPE_MAP_LIST&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1001</span>, <span class="string">&quot;TYPE_TYPE_LIST&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1002</span>, <span class="string">&quot;TYPE_ANNOTATION_SET_REF_LIST&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1003</span>, <span class="string">&quot;TYPE_ANNOTATION_SET_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2000</span>, <span class="string">&quot;TYPE_CLASS_DATA_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2001</span>, <span class="string">&quot;TYPE_CODE_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2002</span>, <span class="string">&quot;TYPE_STRING_DATA_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2003</span>, <span class="string">&quot;TYPE_DEBUG_INFO_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2004</span>, <span class="string">&quot;TYPE_ANNOTATION_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2005</span>, <span class="string">&quot;TYPE_ENCODED_ARRAY_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2006</span>, <span class="string">&quot;TYPE_ANNOTATIONS_DIRECTORY_ITEM&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">dexPath</span> <span class="operator">=</span> <span class="string">&quot;HelloWorld.dex&quot;</span>;</span><br><span class="line">    <span class="type">byte</span>[] fileByteArrays = Utils.readFile(dexPath);</span><br><span class="line">    <span class="keyword">if</span> (fileByteArrays == <span class="literal">null</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;read file filed&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="type">ParseDex</span> <span class="variable">parseDex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ParseDex</span>(fileByteArrays);</span><br><span class="line">    parseDex.parse();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ParseDex-java"><a href="#ParseDex-java" class="headerlink" title="ParseDex.java"></a>ParseDex.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jf.dexlib2.Opcode;</span><br><span class="line"><span class="keyword">import</span> org.jf.dexlib2.Opcodes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ParseDex</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="type">byte</span>[] byteData;</span><br><span class="line">    <span class="keyword">private</span> DexType dexType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParseDex</span><span class="params">(<span class="type">byte</span>[] pArr)</span> &#123;</span><br><span class="line">        byteData = pArr;</span><br><span class="line">        dexType = <span class="keyword">new</span> <span class="title class_">DexType</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parse</span><span class="params">()</span>&#123;</span><br><span class="line">        parseHeader(<span class="number">0</span>);</span><br><span class="line">        printHeader();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">stringOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.stringIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">stringSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.stringIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexStringId(stringOff, stringSize);</span><br><span class="line">        printStrings();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">typeOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.typeIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">typeSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.typeIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexTypeId(typeOff, typeSize);</span><br><span class="line">        printTypes();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">protoOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.protoIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">protoSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.protoIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexProtoId(protoOff, protoSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">fieldOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.fieldIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">fieldSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.fieldIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexFieldId(fieldOff, fieldSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">methodOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.methodIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">methodSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.methodIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexMethodId(methodOff, methodSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">classOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.classDefsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">classSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.classDefsSize, <span class="number">0</span>);</span><br><span class="line">        readDexClassDefsId(classOff, classSize);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexStringList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getTypeStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexTypeList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getProtoStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexProtoList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getFieldStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexFieldList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getMethodStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexMethodList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">parseHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (byteData == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;byteData is null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.arraycopy(byteData, 0, dexType.dexHeader.magic, 0, dexType.dexHeader.magic.length);</span></span><br><span class="line"><span class="comment">//        System.arraycopy(byteData, 0+dexType.dexHeader.magic.length, dexType.dexHeader.checksum, 0, dexType.dexHeader.checksum.length);</span></span><br><span class="line"><span class="comment">//        System.arraycopy(byteData, 0+dexType.dexHeader.checksum.length, dexType.dexHeader.signature, 0, dexType.dexHeader.signature.length);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">curPos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt; dexType.dexHeader.em.size(); i++)&#123;</span><br><span class="line">            System.arraycopy(byteData, curPos, dexType.dexHeader.em.get(i), <span class="number">0</span>, dexType.dexHeader.em.get(i).length);</span><br><span class="line">            curPos += dexType.dexHeader.em.get(i).length;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printHeader</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;magic&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.magic));</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;checksum&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.checksum));</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;signature&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.signature));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexStringId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexStringId</span> <span class="variable">t_dexStringId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexStringId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">4</span>, t_dexStringId.stringDataOff, <span class="number">0</span>, t_dexStringId.stringDataOff.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">dexStringId</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexStringId.stringDataOff, <span class="number">0</span>);</span><br><span class="line">            Utils.<span class="type">RETULEB128</span> <span class="variable">tmp</span> <span class="operator">=</span> Utils.readULEB128(byteData, dexStringId);</span><br><span class="line">            <span class="type">byte</span>[] strContent = Utils.copyNewBytes(byteData, dexStringId+tmp.readSize, tmp.retValue);</span><br><span class="line">            <span class="type">String</span> <span class="variable">realString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(strContent);</span><br><span class="line"></span><br><span class="line">            dexType.dexStringId.add(t_dexStringId);</span><br><span class="line">            dexType.dexStringList.add(realString);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printStrings</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------strings----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;dexType.dexStringList.size(); i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\t&quot;</span> + dexType.dexStringList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexTypeId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexTypeId</span> <span class="variable">t_dexTypeId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexTypeId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">4</span>, t_dexTypeId.descriptorIdx, <span class="number">0</span>, t_dexTypeId.descriptorIdx.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">dexTypeId</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexTypeId.descriptorIdx, <span class="number">0</span>);</span><br><span class="line">            dexType.dexTypeId.add(t_dexTypeId);</span><br><span class="line">            dexType.dexTypeList.add(getStringById(dexTypeId));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printTypes</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------types----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String one:dexType.dexTypeList) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\t&quot;</span> + one);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexProtoId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexProtoId</span> <span class="variable">t_dexProtoId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexProtoId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">12</span>*i+<span class="number">0</span>, t_dexProtoId.shortyIdx, <span class="number">0</span>, t_dexProtoId.shortyIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">12</span>*i+<span class="number">4</span>, t_dexProtoId.returnTypeIdx, <span class="number">0</span>, t_dexProtoId.returnTypeIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">12</span>*i+<span class="number">8</span>, t_dexProtoId.parametersOff, <span class="number">0</span>, t_dexProtoId.parametersOff.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">shorty_string</span> <span class="operator">=</span> getStringById(Utils.byte2Int_4(t_dexProtoId.shortyIdx, <span class="number">0</span>));</span><br><span class="line">            <span class="type">String</span> <span class="variable">return_type_idx</span> <span class="operator">=</span> getStringById(Utils.byte2Int_4(t_dexProtoId.returnTypeIdx, <span class="number">0</span>));</span><br><span class="line">            pri += (shorty_string + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            pri += (return_type_idx + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">parameters_Off</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexProtoId.parametersOff, <span class="number">0</span>);</span><br><span class="line">            pri += <span class="string">&quot;(&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (parameters_Off == <span class="number">0</span>)&#123;</span><br><span class="line">                dexType.dexProtoId.add(t_dexProtoId);</span><br><span class="line">                dexType.dexProtoList.add(getTypeStringById(Utils.byte2Int_4(t_dexProtoId.returnTypeIdx, <span class="number">0</span>)));</span><br><span class="line">                pri += <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">structCount</span> <span class="operator">=</span> Utils.byte2Int_4(byteData, parameters_Off);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;structCount; j++)&#123;</span><br><span class="line">                DexType.<span class="type">DexTypeItem</span> <span class="variable">t_dexTypeItem</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexTypeItem</span>();</span><br><span class="line">                System.arraycopy(byteData, parameters_Off+<span class="number">4</span>+j*t_dexTypeItem.typeIdx.length, t_dexTypeItem.typeIdx, <span class="number">0</span>, t_dexTypeItem.typeIdx.length);</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexTypeItem.typeIdx, <span class="number">0</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">p</span> <span class="operator">=</span> getTypeStringById(tmp);</span><br><span class="line">                pri += (p + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            pri += <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            dexType.dexProtoId.add(t_dexProtoId);</span><br><span class="line">            dexType.dexProtoList.add(getTypeStringById(Utils.byte2Int_4(t_dexProtoId.returnTypeIdx, <span class="number">0</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexFieldId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------fields----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexFieldId</span> <span class="variable">t_dexFieldId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexFieldId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">0</span>, t_dexFieldId.classIdx, <span class="number">0</span>, t_dexFieldId.classIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">2</span>, t_dexFieldId.typeIdx, <span class="number">0</span>, t_dexFieldId.typeIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">4</span>, t_dexFieldId.nameIdx, <span class="number">0</span>, t_dexFieldId.nameIdx.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">classIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexFieldId.classIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">typeIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexFieldId.typeIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">nameIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexFieldId.nameIdx, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            pri += (<span class="string">&quot;class:&quot;</span>+getTypeStringById(classIdx) + <span class="string">&quot;, type:&quot;</span> + getTypeStringById(typeIdx) + <span class="string">&quot;, name:&quot;</span>+getStringById(nameIdx));</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            dexType.dexFieldId.add(t_dexFieldId);</span><br><span class="line">            dexType.dexFieldList.add(getStringById(nameIdx));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexMethodId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------methods----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexMethodId</span> <span class="variable">t_dexMethodId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexMethodId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">0</span>, t_dexMethodId.classIdx, <span class="number">0</span>, t_dexMethodId.classIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">2</span>, t_dexMethodId.protoIdx, <span class="number">0</span>, t_dexMethodId.protoIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">4</span>, t_dexMethodId.nameIdx, <span class="number">0</span>, t_dexMethodId.nameIdx.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">classIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexMethodId.classIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">protoIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexMethodId.protoIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">nameIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexMethodId.nameIdx, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            pri += (<span class="string">&quot;class:&quot;</span>+getTypeStringById(classIdx) + <span class="string">&quot;, proto:&quot;</span> + getProtoStringById(protoIdx) + <span class="string">&quot;, name:&quot;</span>+getStringById(nameIdx));</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            dexType.dexMethodId.add(t_dexMethodId);</span><br><span class="line">            dexType.dexMethodList.add(getStringById(nameIdx));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexClassDefsId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------ClassDefs----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexClassDef</span> <span class="variable">t_dexClassDef</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexClassDef</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">0</span>, t_dexClassDef.classIdx, <span class="number">0</span>, t_dexClassDef.classIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">4</span>, t_dexClassDef.accessFlags, <span class="number">0</span>, t_dexClassDef.accessFlags.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">8</span>, t_dexClassDef.superclassIdx, <span class="number">0</span>, t_dexClassDef.superclassIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">12</span>, t_dexClassDef.interfacesOff, <span class="number">0</span>, t_dexClassDef.interfacesOff.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">16</span>, t_dexClassDef.sourceFileIdx, <span class="number">0</span>, t_dexClassDef.sourceFileIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">20</span>, t_dexClassDef.annotationsOff, <span class="number">0</span>, t_dexClassDef.annotationsOff.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">24</span>, t_dexClassDef.classDataOff, <span class="number">0</span>, t_dexClassDef.classDataOff.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">28</span>, t_dexClassDef.staticValuesOff, <span class="number">0</span>, t_dexClassDef.staticValuesOff.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">classIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.classIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">accessFlags</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.accessFlags, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">superclassIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.superclassIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">interfacesOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.interfacesOff, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">sourceFileIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.sourceFileIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">annotationsOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.annotationsOff, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">classDataOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.classDataOff, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">staticValuesOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.staticValuesOff, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;classIdx: &quot;</span> + getTypeStringById(classIdx) + <span class="string">&quot;\r\naccessFlags: &quot;</span> + accessFlags + <span class="string">&quot;\r\nsuperclassIdx: &quot;</span></span><br><span class="line">                    + getTypeStringById(superclassIdx) + <span class="string">&quot;\r\ninterfacesOff: &quot;</span>;</span><br><span class="line">            pri += (interfacesOff + <span class="string">&quot;\r\nsourceFileIdx: &quot;</span> + getStringById(sourceFileIdx) + <span class="string">&quot;\r\nannotationsOff: &quot;</span> + annotationsOff + <span class="string">&quot;\r\nclassDataOff: &quot;</span>);</span><br><span class="line">            pri += (classDataOff + <span class="string">&quot;\r\nstaticValuesOff: &quot;</span> + staticValuesOff);</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (classDataOff == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">off</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            Utils.<span class="type">RETULEB128</span> <span class="variable">retuleb128</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">static_fields_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">instance_fields_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">direct_methods_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">virtual_methods_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;static_fields_size:&quot;</span> + static_fields_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;static_fields_size; j++)&#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">field_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getFieldStringById(field_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;instance_fields_size:&quot;</span> + instance_fields_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;static_fields_size; j++) &#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">field_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getFieldStringById(field_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;direct_methods_size:&quot;</span> + direct_methods_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;direct_methods_size; j++) &#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">method_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">code_off</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (code_off &lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getMethodStringById(method_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">                DexType.<span class="type">DexCodeItem</span> <span class="variable">t_dexCodeItem</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexCodeItem</span>(byteData, code_off);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;virtual_methods_size:&quot;</span> + virtual_methods_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;virtual_methods_size; j++) &#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">method_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">code_off</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (code_off &lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getMethodStringById(method_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">                DexType.<span class="type">DexCodeItem</span> <span class="variable">t_dexCodeItem</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexCodeItem</span>(byteData, code_off);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getOpcodeByIns2</span><span class="params">(<span class="type">byte</span>[] insns)</span>&#123;</span><br><span class="line">        <span class="comment">//����λ��org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction  public static Instruction readFrom(DexBackedDexFile dexFile, DexReader reader) &#123;</span></span><br><span class="line">        <span class="type">Opcode</span> <span class="variable">opcode</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> insnsPosition=<span class="number">0</span>; insnsPosition&lt;insns.length; insnsPosition += (opcode.format.size/<span class="number">2</span>*<span class="number">2</span>))&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">opcodeValue</span> <span class="operator">=</span>  (insns[insnsPosition] &amp; <span class="number">255</span>);</span><br><span class="line">                <span class="keyword">if</span> (opcodeValue == <span class="number">0</span>) &#123;</span><br><span class="line">                    opcodeValue = (insns[insnsPosition] &amp; <span class="number">255</span>) | ((insns[insnsPosition + <span class="number">1</span>] &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                opcode = Opcodes.forApi(<span class="number">35</span>).getOpcodeByValue(opcodeValue);</span><br><span class="line">                <span class="type">byte</span>[] tmp = <span class="keyword">new</span> <span class="title class_">byte</span>[opcode.format.size/<span class="number">2</span>*<span class="number">2</span>];</span><br><span class="line">                System.arraycopy(insns, insnsPosition, tmp, <span class="number">0</span>, tmp.length);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t\t&quot;</span> + opcode.name + <span class="string">&quot; : &quot;</span> + Utils.bytes2HexString(tmp));</span><br><span class="line">                <span class="keyword">if</span> (opcode.format.size &lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Utils-java"><a href="#Utils-java" class="headerlink" title="Utils.java"></a>Utils.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Utils</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bytes2HexString</span><span class="params">(<span class="type">byte</span>[] bytes)</span>&#123;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;bytes.length;i++)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> bytes[i] &amp; <span class="number">0xff</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> Integer.toHexString(t).toUpperCase();</span><br><span class="line"><span class="keyword">if</span>(hex.length() &lt; <span class="number">2</span>)&#123;</span><br><span class="line">result.append(<span class="string">&quot;0&quot;</span>+hex);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result.append(hex);</span><br><span class="line">&#125;</span><br><span class="line">result.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bytes2HexStringBig</span><span class="params">(<span class="type">byte</span>[] bytes)</span>&#123;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;bytes.length;i++)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> bytes[i] &amp; <span class="number">0xff</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> Integer.toHexString(t).toUpperCase();</span><br><span class="line"><span class="keyword">if</span>(hex.length() &lt; <span class="number">2</span>)&#123;</span><br><span class="line">result.append(<span class="string">&quot;0&quot;</span>+hex);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result.append(hex);</span><br><span class="line">&#125;</span><br><span class="line">result.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readFile(String fileName)&#123;</span><br><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">bos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"><span class="type">byte</span>[] temp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((size = fis.read(temp)) != -<span class="number">1</span>) &#123;</span><br><span class="line">bos.write(temp, <span class="number">0</span>, size);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bos.toByteArray();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;read file error:&quot;</span>+e.toString());</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fis != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">fis.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bos != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">bos.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] copyNewBytes(<span class="type">byte</span>[] addr,<span class="type">int</span> start,<span class="type">int</span> length)&#123;</span><br><span class="line"><span class="type">byte</span>[] destByte = <span class="keyword">new</span> <span class="title class_">byte</span>[length];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">destByte[i] = addr[start+i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> destByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">byte2Int_4</span><span class="params">(<span class="type">byte</span>[] res, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">targets</span> <span class="operator">=</span> (res[pOff+<span class="number">0</span>] &amp; <span class="number">0xff</span>)</span><br><span class="line">| ((res[pOff+<span class="number">1</span>] &lt;&lt; <span class="number">8</span>) &amp; <span class="number">0xff00</span>)</span><br><span class="line">| ((res[pOff+<span class="number">2</span>] &lt;&lt; <span class="number">24</span>) &gt;&gt;&gt; <span class="number">8</span>)</span><br><span class="line">| (res[pOff+<span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line"><span class="keyword">return</span> targets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">short</span> <span class="title function_">byte2Short_2</span><span class="params">(<span class="type">byte</span>[] b, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s0</span> <span class="operator">=</span> (<span class="type">short</span>) (b[pOff+<span class="number">0</span>] &amp; <span class="number">0xff</span>);<span class="comment">// 最低位</span></span><br><span class="line"><span class="type">short</span> <span class="variable">s1</span> <span class="operator">=</span> (<span class="type">short</span>) (b[pOff+<span class="number">1</span>] &amp; <span class="number">0xff</span>);</span><br><span class="line">s1 &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">s = (<span class="type">short</span>) (s0 | s1);</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RETULEB128</span>&#123;</span><br><span class="line"><span class="type">int</span> retValue;</span><br><span class="line"><span class="type">int</span> readSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> RETULEB128 <span class="title function_">readULEB128</span><span class="params">(<span class="type">byte</span>[] data, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="type">RETULEB128</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RETULEB128</span>();</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">shift</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">bytesRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (pOff+i &gt;= data.length)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;pOff+i &gt;= data.length&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">currentByte</span> <span class="operator">=</span> data[pOff + i];</span><br><span class="line"></span><br><span class="line">bytesRead++;</span><br><span class="line">result |= (currentByte &amp; <span class="number">0x7F</span>) &lt;&lt; shift;</span><br><span class="line">shift += <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((currentByte &amp; <span class="number">0x80</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (bytesRead &gt; <span class="number">5</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;Invalid ULEB128 encoded data: more than 5 bytes&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret.retValue = result;</span><br><span class="line">ret.readSize = bytesRead;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;<span class="keyword">catch</span> (IOException ioe)&#123;</span><br><span class="line">ioe.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;file_gbk.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dex代码解析1</title>
      <link href="/2024/07/25/Dex%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%901/"/>
      <url>/2024/07/25/Dex%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%901/</url>
      
        <content type="html"><![CDATA[<h3 id="代码解析Dex文件"><a href="#代码解析Dex文件" class="headerlink" title="代码解析Dex文件"></a>代码解析Dex文件</h3><p>Android源码：<a href="http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java">http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java</a></p><p>Android文档：<a href="https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn">https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn</a></p><p>搜索DexHeader</p><p><img src="C:\Hexo-Blog\blog-demo\source\image\dexjx.png"></p><p>try、catch、finally三个语句的执行顺序</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果 try 块中没有异常抛出，程序会直接跳过 catch 块，执行 finally 块。</span><br><span class="line">如果 try 块中有异常抛出，并且有匹配的 catch 块处理该异常，先执行匹配的 catch 块，然后执行 finally 块。</span><br><span class="line">如果 try 块中有异常抛出，但没有匹配的 catch 块处理该异常，先执行 finally 块，然后将异常抛出至上层调用栈。</span><br></pre></td></tr></table></figure><p>System.arraycopy 方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//System.arraycopy 是 Java 中用于复制数组内容的方法。它的签名如下：</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">arraycopy</span><span class="params">(Object src, <span class="type">int</span> srcPos, Object dest, <span class="type">int</span> destPos, <span class="type">int</span> length)</span></span><br><span class="line"><span class="comment">/*其中：</span></span><br><span class="line"><span class="comment">src：源数组，即要从中复制数据的数组。</span></span><br><span class="line"><span class="comment">srcPos：源数组中开始复制的起始位置索引。</span></span><br><span class="line"><span class="comment">dest：目标数组，即要将数据复制到其中的数组。</span></span><br><span class="line"><span class="comment">destPos：目标数组中开始复制的起始位置索引。</span></span><br><span class="line"><span class="comment">length：要复制的元素数量*/</span></span><br></pre></td></tr></table></figure><p>System.out.printf方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;magic&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.magic));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">printf 方法与 System.out.println 类似，但是它允许使用格式化字符串来定义输出的格式。</span><br><span class="line"><span class="string">&quot;%-12s: %s\r\n&quot;</span></span><br><span class="line">% 开始表示格式化标志的起始。</span><br><span class="line">- 表示左对齐（在字符串字段内，右对齐是默认的）。</span><br><span class="line"><span class="number">12</span> 表示最小宽度，确保输出的字符串至少占据 <span class="number">12</span> 个字符的宽度。</span><br><span class="line">s 表示后续参数是一个字符串。</span><br><span class="line">: 是一个字面值，即将在输出中显示 : 字符。</span><br><span class="line">%s 是格式化字符串的占位符，用来接收第一个参数 <span class="string">&quot;magic&quot;</span>。</span><br><span class="line">\r\n 表示换行符，确保每次输出后换行。</span><br><span class="line"><span class="string">&quot;magic&quot;</span>：作为格式化字符串的第一个参数，将填充到 %s 的位置。</span><br><span class="line">Utils.bytes2HexString(dexType.dexHeader.magic)：作为格式化字符串的第二个参数，调用 Utils.bytes2HexString 方法将 dexType.dexHeader.magic 转换为十六进制字符串表示。</span><br></pre></td></tr></table></figure><p>Utils.java（但是在进行位与操作时，会忽略符号位）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Utils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readFile(String fileName)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            bot = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="type">byte</span>[] temp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>((size = fis.read(temp))!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bot.write(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> bos.toByteArray();</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;read file error:&quot;</span>+e.toString);</span><br><span class="line">        &#125;<span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(fis != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    fis.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    bot.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">byte2Int_4</span><span class="params">(<span class="type">byte</span>[] res, <span class="type">int</span> pOff)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">targets</span> <span class="operator">=</span> (res[pOff+<span class="number">0</span>] &amp; <span class="number">0xff</span>)</span><br><span class="line">            |(res[pOff+<span class="number">1</span>] &amp; <span class="number">0xff00</span>)</span><br><span class="line">            |((res[pOff+<span class="number">2</span>] &lt;&lt;<span class="number">24</span>)&gt;&gt;&gt;<span class="number">8</span>)</span><br><span class="line">            |(res[pOff+<span class="number">3</span>]&lt;&lt;<span class="number">24</span>);</span><br><span class="line">        <span class="keyword">return</span> targets;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RETULEB128</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> retValue;</span><br><span class="line">        <span class="type">int</span> readSize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> RETULEEB128 <span class="title function_">readULEB128</span><span class="params">(<span class="type">byte</span>[] data, <span class="type">int</span> pOff)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">RETULEB128</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RETULEB128</span>();</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shift</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">byteRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(pOff+i&gt;=data.length)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;pOff+i &gt;=data.length&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">currentByte</span> <span class="operator">=</span> data[pOff + i];</span><br><span class="line">                bytesRead++;</span><br><span class="line">                result |=(currentByte &amp; <span class="number">0x7F</span>)&lt;&lt;shift; <span class="comment">// 将当前字节的低7位加入到 result 中,0x7F二进制:0111 1111</span></span><br><span class="line">                shift +=<span class="number">7</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>((currentByte &amp; <span class="number">0x80</span>) == <span class="number">0</span>) <span class="comment">// 检查当前字节的最高位是否为0，如果为0，则表示这是最后一个字节,0x80二进制:1000 0000</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(byteRead &gt; <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;Invalid ULEB128 encoded data: more than 5 bytes&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ret.retValue = result;</span><br><span class="line">            ret.readSize = bytesRead;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dex文件基本结构</title>
      <link href="/2024/07/24/Dex%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
      <url>/2024/07/24/Dex%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="Dex文件基本结构"><a href="#Dex文件基本结构" class="headerlink" title="Dex文件基本结构"></a>Dex文件基本结构</h3><h3 id="Dex文件介绍"><a href="#Dex文件介绍" class="headerlink" title="Dex文件介绍"></a>Dex文件介绍</h3><p>含义：专门位移动端开发的一种可执行文件格式</p><p>优点：比class文件体积小，真内存小，加载速度快，堆栈加载速度快，类查找快等，更适合手机</p><p>生成：&#x2F;&#x2F;javac c\b\a\HelloWorld.java</p><p>​  &#x2F;&#x2F;dx –dex –output &#x3D; c\b\a\HelloWorld.dex c\b\a\HelloWorld.class&#x2F;&#x2F;这是旧版本的Android SDK写法</p><p>反编译smali</p><p><a href="https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn">https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn</a></p><p><a href="https://source.android.com/docs/core/runtime/dex-format?hl=zh-cn">https://source.android.com/docs/core/runtime/dex-format?hl=zh-cn</a></p><p>其他名词解释：</p><p>odex(5.0引入)、oat(elf,包含 odex内容)、vdex(8.0引入)</p><p>png文件格式的</p><p><img src="/../image/dex.png"></p><p>生成代码如下图</p><p><img src="/../image/dex2.png"></p><p>注意下生成.dex的代码：1、要根据Android SDK的版本选择不同的命令</p><p>​2、输出目录要合法（gdp要善于利用）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;D:\Android SDK\build-tools\35.0.0\d8.bat&quot; --release --output D:\ideaprojects\untitled\src D:\ideaprojects\untitled\src\Main.class</span><br><span class="line">--release：编译时优化为 release 版本。</span><br><span class="line">--output D:\ideaprojects\untitled\src：指定输出目录为 D:\ideaprojects\untitled\src，这里不需要指定具体的文件名，d8 工具会自动根据输入的类文件生成相应的 .dex 文件。</span><br><span class="line">路径和空格问题：确保路径中的空格和斜杠使用正确。路径中的空格需要使用引号包裹，例如：&quot;D:\Android SDK\build-tools\35.0.0\d8.bat&quot;。</span><br><span class="line">输出目录设置：--output 参数后应该是一个目录路径，而不是一个具体的文件路径。</span><br></pre></td></tr></table></figure><p><img src="/../image/dex3.png"></p><p>用GDA可查看.dex文件的字节码</p><p><img src="/../image/dex4.png"></p><p>odex:Odex 文件是对应于 <code>.dex</code> 文件的一种优化版本，它会提前编译和优化 Dalvik 字节码，以加快应用程序的加载速度和执行效率。</p><p>oat:OAT 文件中包含了经过优化的本地机器代码，这些代码相比于解释执行的字节码（<code>.dex</code> 文件），在执行时可以更快速和高效。这种预先编译的方式可以显著提高应用程序的启动速度、响应速度和运行效率。</p><p>vdex:VDex文件包含了经过优化和验证的DEX文件的内容。在应用程序安装或首次运行时，系统会将原始的DEX文件转换为VDex文件。这种优化不仅包括了对DEX文件中字节码的优化，还包括了对DEX文件中数据的验证和校验。</p><p>dex文件结构</p><p><img src="/../image/dex5.jpg"></p><p>Dex Header：对整个文件进行描述</p><p>索引表：记录信息</p><p>Proto索引表：类似存放函数签名</p><p>Field索引表：成员变量</p><p>数据区：存储数据</p><p>Map块：告诉我们有哪些索引方式</p><p><img src="/../image/dex8.jpg"></p><p>具体作用：</p><p><img src="/../image/dex9.jpg"></p><h4 id="Leb128-Little-Endian-Base-128"><a href="#Leb128-Little-Endian-Base-128" class="headerlink" title="Leb128(Little-Endian Base 128)"></a>Leb128(Little-Endian Base 128)</h4><p>u表示unsigned，s表示signed，p1是dalvik独有的编码格式(后面说明)，是一种变长的整数压缩编码形式，通常由1-5byte组成，由一个int值再机器中占有4Byte。为了实现变长存储，节省空间，在Leb128格式中每个byte的最高位作为后续byte是否有效的标志位，1表示还有后续字节，0表示结束，后面7bits是有效数据，所有一个整数最大需要5byte存储</p><h4 id="Uleb128"><a href="#Uleb128" class="headerlink" title="Uleb128"></a>Uleb128</h4><p>将无符号整数写成二进制形式，从低位到高位每个7bits作为一个整体组合成一个组，最高字节不足7bit，用0填充到7bit，在每组最高位填入是否有高字节的标识，构成一个完整的字节，然后将所有字节小端序排列</p><ul><li>大端序（Big-Endian）将数据的低位字节存放在内存的高位地址，高位字节存放在低位地址。这种排列方式与数据用字节表示时的书写顺序一致，符合人类的阅读习惯。</li><li>小端序（Little-Endian），将一个多位数的低位放在较小的地址处，高位放在较大的地址处，则称<strong>小端序</strong>。小端序与人类的阅读习惯相反，但更符合计算机读取内存的方式，因为CPU读取内存中的数据时，是从低地址向高地址方向进行读取的。</li><li><img src="/../../../../Hexo-Blog/blog-demo/source/image/sandb.jpeg"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>APK基本结构</title>
      <link href="/2024/07/23/APK%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
      <url>/2024/07/23/APK%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="APK文件构成"><a href="#APK文件构成" class="headerlink" title="APK文件构成"></a>APK文件构成</h3><p>没有aidl文件的解决方法：在build.gradle中添加如下代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">    buildFeatures &#123;</span><br><span class="line">        aidl = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DexClassLoader</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DexClassLoader(参数<span class="number">1</span>，参数<span class="number">2</span>，参数<span class="number">3</span>，参数<span class="number">4</span>);</span><br><span class="line">参数<span class="number">1</span>：要加载的Jar的路径</span><br><span class="line">参数<span class="number">2</span>：缓存目录</span><br><span class="line">参数<span class="number">3</span>：Native目录，可以为空</span><br><span class="line">参数<span class="number">4</span>：父类加载器    </span><br></pre></td></tr></table></figure><h4 id="静态资源文件"><a href="#静态资源文件" class="headerlink" title="静态资源文件"></a>静态资源文件</h4><p>不需要编译的文件夹：assets</p><p>assets目录的添加方法：</p><p><img src="/../image/apk.png"></p><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findViewById(R.id.btn_startLoad).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">AssetManager</span> <span class="variable">assetManager</span> <span class="operator">=</span> MainActivity.<span class="built_in">this</span>.getAssets();<span class="comment">//通过获取MainActivity实例的AssetManager对象，使我们能够访问和管理Android应用程序中包含的原始资产文件。</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> assetManager.open(<span class="string">&quot;test2.jar&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;jarSaveDir&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">        &#123;</span><br><span class="line">            dir.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;test.jar&quot;</span>;</span><br><span class="line">        <span class="type">File</span> <span class="variable">jar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">        <span class="keyword">if</span>(jar.exists())</span><br><span class="line">        &#123;</span><br><span class="line">            jar.delete;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">File</span> <span class="variable">jar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">        </span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(jar.getAbsolutePath(),<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//false: 这是 FileOutputStream 构造函数的第二个参数，它表示是否追加写入。在这里，false 表示不进行追加写入，而是直接覆盖原文件内容</span></span><br><span class="line">        <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((len = in.read(buff))&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fos.write(buff,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        fos.flush();</span><br><span class="line">        fos.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    loadJar();                                                    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadJar</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;jarSaveDir&quot;</span>);</span><br><span class="line">    <span class="type">File</span> <span class="variable">tmp</span> <span class="operator">=</span> Environment.getExternalStoragePublic(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;jarTmpDir&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;test2.jar&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">DexClassLoader</span> <span class="variable">loader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DexClassLoader</span>(FullFilePath,tmp.getAbsolutePath(),<span class="literal">null</span>,<span class="built_in">this</span>.getClassLoader());</span><br><span class="line">    <span class="comment">//这行代码的作用是创建一个 DexClassLoader 对象 loader，用于从指定的 DEX 文件 (fullFilePath) 加载类和资源。加载后的类和资源会存放在临时目录 (tmp.getAbsolutePath())，并使用当前类 (this) 的类加载器来加载。这样可以实现在 Android 应用程序运行时动态加载外部提供的类和资源，增强了应用的灵活性和扩展性。</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> loader.loadClass(<span class="string">&quot;com.example.mylibrary2.OneFun2&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ins_OneFun2</span> <span class="operator">=</span> clz.newInstance();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_add2</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;add2&quot;</span>,<span class="type">int</span>.class,<span class="type">int</span>.class);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ret</span> <span class="operator">=</span> method_add2.invoke(ins_OneFun2,<span class="number">11</span>,<span class="number">22</span>);</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;add2 ret &quot;</span>+(String)ret );</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="库文件"><a href="#库文件" class="headerlink" title="库文件"></a>库文件</h4><p>build.gradle-&gt;android-&gt;defaultConfig-&gt;ndk abiFilters-&gt;属性-&gt;abd install–abi arm64-v8a</p><p><img src="/../image/apk2.png"></p><p>注意：这里配置ndk的写法不同的版本会有不同</p><p>安卓apk文件代码</p><p><img src="/../image/apk3.png"></p><p>可以看到被安装到data.data中</p><p><img src="/../image/apk4.png"></p><p>强制安装x86架构的</p><p><img src="/../image/apk5.png"></p><h4 id="签名文件"><a href="#签名文件" class="headerlink" title="签名文件"></a>签名文件</h4><p>CERT.RSA、CERT.SF和MANIFEST.MF</p><p>生成Release版本的签名的方法</p><p><img src="/../image/apk6.png"></p><h4 id="编译资源文件"><a href="#编译资源文件" class="headerlink" title="编译资源文件"></a>编译资源文件</h4><p>编译的文件夹：res</p><p>代码会引用的文件，位置统一，名字固定，系统分配资源ID</p><h4 id="配置清单文件"><a href="#配置清单文件" class="headerlink" title="配置清单文件"></a>配置清单文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot; <span class="comment">&lt;!--允许使用不安全的传输协议--&gt;</span></span><br></pre></td></tr></table></figure><p>可用Android逆向助手 解码，这里注意java环境一定要配置好,我这里出现的问题是jre没配置</p><p><img src="/../image/apk7.jpg"></p><p>逆向时，可重点关注继承application的类，因为application的生命周期贯穿整个应用，重点看下图中标出的部分</p><p><img src="/../image/apk8.jpg"></p><h4 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h4><p>代码：classes.dexclasses.1.dexclasses2.dex（命名是固定的）</p><p>安装后会被放到私有目录下，Dalivik虚拟机加载运行</p><h4 id="资源映射文件"><a href="#资源映射文件" class="headerlink" title="资源映射文件"></a>资源映射文件</h4><p>resources.arsc(用010Editor打开)</p><p>包含了应用程序的ID和资源类型的映射关系</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础练习--四种方式遍历SDCard</title>
      <link href="/2024/07/22/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%81%8D%E5%8E%86SDCard/"/>
      <url>/2024/07/22/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%81%8D%E5%8E%86SDCard/</url>
      
        <content type="html"><![CDATA[<h3 id="四种方式遍历SDCard"><a href="#四种方式遍历SDCard" class="headerlink" title="四种方式遍历SDCard"></a>四种方式遍历SDCard</h3><h4 id="一、java语言"><a href="#一、java语言" class="headerlink" title="一、java语言"></a>一、java语言</h4><p>首先都要在清单文件中申请读、写、管理SDCard的权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>activity_main.xml，部分代码</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_start&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textAllCaps</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;遍历SDCard的Download目录&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_show&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    MyHandler handler;</span><br><span class="line">    ArrayList&lt;String&gt;al;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI01</span><span class="params">(String fp)</span></span><br><span class="line">    &#123;</span><br><span class="line">        fp = fp.replace(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(al.size()&lt;<span class="number">20</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            al.add(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            al.remove(<span class="number">0</span>);</span><br><span class="line">            al.add(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;al.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sb.append(al.get(i)+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        tv.setText(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceStage)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> binding.btnsStart;</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    tv.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    al.clear();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> Environment.getExternalStorageDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">MyThread</span>(handler,tmpPath).start();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyHandler.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MainActivity mainActivity;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">MyHandler</span><span class="params">(MainActivity mact)</span></span><br><span class="line">    &#123;</span><br><span class="line">        mainActivity = mact;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        <span class="keyword">switch</span>(msg.what)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                     mainActivity.updateUI01(msg.getData().getString(<span class="string">&quot;fp&quot;</span>));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;未知消息类型&quot;</span>+msg.what);</span><br><span class="line">                &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyThread.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    MyHandler myHandler;</span><br><span class="line">    String fp;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mm,String fpath)</span></span><br><span class="line">    &#123;</span><br><span class="line">        myHandler = mm;</span><br><span class="line">        fp = fpath;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getFiles</span><span class="params">(String path)</span></span><br><span class="line">    &#123;</span><br><span class="line">        File[] allFiles = <span class="keyword">new</span> <span class="title class_">File</span>(path).listFiles();</span><br><span class="line">        <span class="keyword">if</span>(file.isFile())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">            message.what = i;</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">            message.setData(bundle);</span><br><span class="line">            myHandler.sendMessage(message);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!file.getAbsolutePath().contains(<span class="string">&quot;.thumbnail&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                getFiles(file.getAbsolutePath());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">super</span>.run();</span><br><span class="line">                getFiles(fp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二、java反射"><a href="#二、java反射" class="headerlink" title="二、java反射"></a>二、java反射</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getFile2</span><span class="params">(Object path)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">cls_File</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.io.File&quot;</span>);</span><br><span class="line">    <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls_File.getConstructor(String.class);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">ins_file</span> <span class="operator">=</span> constructor.newInstance(path);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_listFiles</span> <span class="operator">=</span> cls_File.getMethod(<span class="string">&quot;ListFile&quot;</span>);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_isFile</span> <span class="operator">=</span> cls_File.getMthod(<span class="string">&quot;isFile&quot;</span>);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_getAbsolutePath</span> <span class="operator">=</span> cls_File.getMethod(<span class="string">&quot;getAbsolutePath&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">Class</span> <span class="variable">cls_String</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">    <span class="type">Class</span> <span class="variable">cls_CharSequence</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.CharSquence&quot;</span>);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_contains</span> <span class="operator">=</span> cls_String.getMethod(<span class="string">&quot;contains&quot;</span>,cls_CharSequence);</span><br><span class="line">    </span><br><span class="line">    Object[] files = (Object[])method_isFile.invoke(ins_file);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">obj_path</span> <span class="operator">=</span> method_getAbsolutePath.invoke(ins_file);</span><br><span class="line">    <span class="keyword">for</span>(Object one:files)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_one_path</span> <span class="operator">=</span> method_getAbsolutePath.invoke(one);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_isfile</span> <span class="operator">=</span> method_listFiles.invoke(one);</span><br><span class="line">        <span class="keyword">if</span>((<span class="type">boolean</span>)obj_isFile)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls_Message</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;android.os.Message&quot;</span>);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_obtain</span> <span class="operator">=</span> cls_Message.getMethod(<span class="string">&quot;obtain&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ins_message</span> <span class="operator">=</span> method_obtain.invoke(cls_Message);</span><br><span class="line">            <span class="type">Filed</span> <span class="variable">filed_what</span> <span class="operator">=</span> cls_Message.getField(<span class="string">&quot;what&quot;</span>);</span><br><span class="line">            filed_what.set(ins_message,<span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls_Bundle</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;android.os.Bundle&quot;</span>);</span><br><span class="line">            <span class="type">Constructor</span> <span class="variable">constructor_Bundle</span> <span class="operator">=</span> cls_Bundle.getConstructor();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ins_Bundle</span> <span class="operator">=</span> constructor_Bundle.newInstance();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_putString</span> <span class="operator">=</span> cls_Bundle.getMethod(<span class="string">&quot;putString&quot;</span>,clsString,clsString);</span><br><span class="line">            method_putString.invoke(ins_Bundle,<span class="string">&quot;fp&quot;</span>,obj_one_path);</span><br><span class="line">            </span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_setData</span> <span class="operator">=</span> cls_Message.getMethod(<span class="string">&quot;setData&quot;</span>,cls_Bundle);</span><br><span class="line">            method_setData.invoke(ins_message,ins_Bundle);</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!(<span class="type">boolean</span>)(method_contains.invoke(obj_one_path,<span class="string">&quot;.thumbnali&quot;</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            getFile(obj_one_path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三、JNI"><a href="#三、JNI" class="headerlink" title="三、JNI"></a>三、JNI</h4><p>前置知识</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//struct timeval tval; 定义了一个名为 tval 的结构体变量，其类型是 struct timeval</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">timeval</span> &#123;</span><br><span class="line">    <span class="type">long</span> tv_sec;  <span class="comment">// 秒</span></span><br><span class="line">    <span class="type">long</span> tv_usec; <span class="comment">// 微秒</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sleep_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> secs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">timeval</span> tval;</span><br><span class="line">    tval.tv_sec = secs/<span class="number">1000</span>;<span class="comment">// 将毫秒转换为秒部分</span></span><br><span class="line">    tval.tv_usec = (secs*<span class="number">1000</span>)%<span class="number">1000000</span>; <span class="comment">// 将毫秒转换为微秒部分,这里使用了取余运算符 % 来确保微秒数在 0 到 999999 之间。</span></span><br><span class="line">    <span class="built_in">select</span>(<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,&amp;tval);</span><br><span class="line">    <span class="comment">//select(0, NULL, NULL, NULL, &amp;tval); 是一个系统调用，通常在 Unix-like 系统（包括 Linux）中用于多路复用 I/O 操作。在这里，它被用来实现一个简单的睡眠功能，即暂停程序的执行一段时间，直到指定的时间间隔（由 tval 结构体指定）过去为止。</span></span><br><span class="line"><span class="comment">/*参数解释：</span></span><br><span class="line"><span class="comment">第一个参数 (nfds):</span></span><br><span class="line"><span class="comment">在此处设为 0，表示不监视任何文件描述符（通常是输入输出设备），因为我们只是希望进行定时等待，而不需要监听任何 I/O 事件。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">后续参数 (readfds, writefds, exceptfds):</span></span><br><span class="line"><span class="comment">这三个参数分别为读取、写入和异常文件描述符的集合，用于指定应该监视哪些文件描述符上的事件。在这里，我们将它们都设为 NULL，表示不监视任何文件描述符。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">最后一个参数 (timeout):</span></span><br><span class="line"><span class="comment">这是一个指向 struct timeval 结构体的指针，用来指定 select 函数应该等待的时间长度。具体地，它包含了两个成员：</span></span><br><span class="line"><span class="comment">tv_sec：等待的秒数部分。</span></span><br><span class="line"><span class="comment">tv_usec：等待的微秒数部分。</span></span><br><span class="line"><span class="comment">在这段代码中，通过设置 &amp;tval，即将 select 函数设定为等待 tval 所指定的时间长度。当 tval 中的时间过去后，select 函数返回，程序继续执行。*/</span></span><br><span class="line">    <span class="comment">//功能说明：这种用法实现了一个简单的延时功能。通过调整 tval 结构体中的 tv_sec 和 tv_usec 成员，可以精确地控制程序的睡眠时间。在这个例子中，程序将会休眠 secs 毫秒（即 secs 秒加上 secs * 1000 微秒）。    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">pthread_t</span> pid; <span class="comment">//这行代码是在 C 或 C++ 中声明了一个变量 pid，其类型为 pthread_t。这里的 pthread_t 是 POSIX 线程库中用来表示线程的数据类型。</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span>* <span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv  *env;</span><br><span class="line">    javaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env, <span class="number">0</span>);</span><br><span class="line">    ((PARAM*)args)-&gt;a = env;</span><br><span class="line">    </span><br><span class="line">    <span class="type">void</span>* ret = <span class="built_in">doWork2</span>(args);</span><br><span class="line">    javaVM-&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">    <span class="function"><span class="type">void</span>* <span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span>:</span></span><br><span class="line"><span class="function">/*这是一个函数定义，返回类型为 void*，接受一个 void* 类型的参数 args，通常用来传递函数的参数或数据。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">JNIEnv *env;</span>:</span><br><span class="line">JNIEnv 是一个结构体指针，用于与 Java 虚拟机进行通信，可以通过 javaVM 访问。</span><br><span class="line">    </span><br><span class="line">javaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env, <span class="number">0</span>);:</span><br><span class="line">javaVM 是一个指向 Java 虚拟机的指针或引用。</span><br><span class="line">AttachCurrentThread 函数用于将当前线程附加到 Java 虚拟机，以便在本地代码中与 Java 代码进行交互。通过此函数，可以获取当前线程的 JNIEnv 环境变量 env，从而能够调用 Java 方法和操作 Java 对象。</span><br><span class="line">第二个参数 <span class="number">0</span> 表示线程附加时使用默认的线程挂钩（Thread Attach Detach Support）。</span><br><span class="line"></span><br><span class="line">((PARAM*)args)-&gt;a = env;:</span><br><span class="line">将 args 强制转换为 PARAM* 类型，并将其中的 a 成员设置为当前的 env，即将 env 传递给 args 中的 a 成员。这样在后续的工作函数中可以使用 env 来与 Java 层交互。</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* ret = <span class="built_in">doWork2</span>(args);:</span><br><span class="line">调用函数 doWork2，并传递 args 参数。doWork2 函数执行具体的工作任务，可能会涉及到与 Java 层的交互或其他操作。它返回一个 <span class="type">void</span>* 类型的结果，将其赋给 ret 变量。</span><br><span class="line"></span><br><span class="line">javaVM-&gt;<span class="built_in">DetachCurrentThread</span>();:</span><br><span class="line">DetachCurrentThread 函数用于将当前线程从 Java 虚拟机中分离，结束与 Java 层的交互。这样做是为了避免资源泄漏或其他问题，确保线程的安全退出。*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">JNIEXPORT jint JNICALL <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm, <span class="type">void</span> *reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//注意不能在里面做耗时操作</span></span><br><span class="line">    <span class="comment">//void *reserved：这是一个保留参数，通常不会在函数体内使用。</span></span><br><span class="line">    <span class="comment">// 获取到 JavaVM</span></span><br><span class="line">    javaVM = vm;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印日志</span></span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>, <span class="string">&quot;JNI_OnLoad&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回 JNI 版本号</span></span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JNI_OnLoad 函数是 JNI 库加载时自动调用的初始化函数。它的主要作用是获取并保存 Java 虚拟机实例，并且可以执行一些初始化操作。返回的 JNI 版本号指示本地库需要的 JNI 接口版本。</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Java_a_b_c_practice_MainActivity_walkDir</span>(JNIEnv *env, jobject thiz, jstring dirPath_, jobject h_handler)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pthread_t</span> pid; <span class="comment">// 声明一个 pthread_t 类型的变量 pid，用来存储线程的标识符</span></span><br><span class="line"></span><br><span class="line">    PARAM* param = (PARAM*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(PARAM)); <span class="comment">// 分配 PARAM 结构体的内存空间，并将指针赋给 param</span></span><br><span class="line">    param-&gt;a = env; <span class="comment">// 将 JNIEnv 指针 env 赋给 param 结构体中的成员变量 a</span></span><br><span class="line">    param-&gt;b = env-&gt;<span class="built_in">NewGlobalRef</span>(thiz); <span class="comment">// 创建 thiz 对象的全局引用，并赋给 param 结构体中的成员变量 b</span></span><br><span class="line">    param-&gt;c = <span class="built_in">static_cast</span>&lt;jstring&gt;(env-&gt;<span class="built_in">NewGlobalRef</span>(dirPath_)); <span class="comment">// 将 dirPath_ 转换为 jstring 类型，并创建其全局引用，赋给 param 结构体中的成员变量 c</span></span><br><span class="line">    param-&gt;d = env-&gt;<span class="built_in">NewGlobalRef</span>(h_handler); <span class="comment">// 创建 h_handler 对象的全局引用，并赋给 param 结构体中的成员变量 d</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个新线程，并调用 subWalkDir 函数执行目录遍历操作，传入 param 结构体作为参数</span></span><br><span class="line">    <span class="built_in">pthread_create</span>(&amp;pid, <span class="number">0</span>, subWalkDir, param);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">DIR *dir = <span class="built_in">opendir</span>(dirPath);</span><br><span class="line"><span class="comment">/*opendir(dirPath)：</span></span><br><span class="line"><span class="comment">opendir 是 POSIX 标准库中用来打开目录的函数。</span></span><br><span class="line"><span class="comment">dirPath 是一个 const char * 类型的参数，表示要打开的目录的路径。</span></span><br><span class="line"><span class="comment">opendir 函数将指定路径 dirPath 的目录打开，并返回一个指向 DIR 结构体的指针 dir。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">DIR *dir：</span></span><br><span class="line"><span class="comment">dir 是一个指向 DIR 结构体的指针，用于表示打开的目录。在 POSIX 系统中，DIR 结构体用于维护目录流的状态信息。*/</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//dirent 是一个结构体，用于表示目录中的一个条目（文件或子目录</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">dirent</span> &#123;</span><br><span class="line">    <span class="type">ino_t</span> d_ino;           <span class="comment">/* inode number */</span></span><br><span class="line">    <span class="type">off_t</span> d_off;           <span class="comment">/* offset to the next dirent */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> d_reclen;<span class="comment">/* length of this record */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> d_type;  <span class="comment">/* type of file; not supported by all file system types */</span></span><br><span class="line">    <span class="type">char</span> d_name[<span class="number">256</span>];      <span class="comment">/* filename */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Eg:</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">dirent</span> *file;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打开目录</span></span><br><span class="line">    dir = <span class="built_in">opendir</span>(<span class="string">&quot;/path/to/directory&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (dir == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">perror</span>(<span class="string">&quot;opendir&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取目录中的每一个文件条目</span></span><br><span class="line">    <span class="keyword">while</span> ((file = <span class="built_in">readdir</span>(dir)) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;File name: %s\n&quot;</span>, file-&gt;d_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭目录</span></span><br><span class="line">    <span class="built_in">closedir</span>(dir);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">jfieldID whatFieldID = env-&gt;<span class="built_in">GetFieldID</span>(cls, <span class="string">&quot;what&quot;</span>, <span class="string">&quot;I&quot;</span>);</span><br><span class="line"><span class="comment">/*jfieldID 是 JNI 中表示 Java 字段的数据类型，它用于唯一标识一个特定的 Java 字段。</span></span><br><span class="line"><span class="comment">env 是 JNI 环境指针，可以通过它来调用 JNI 的各种函数。</span></span><br><span class="line"><span class="comment">GetFieldID 是 JNI 提供的一个函数，用于获取指定 Java 类中的字段的 jfieldID。</span></span><br><span class="line"><span class="comment">cls 是一个 jclass 对象，表示要操作的 Java 类。通常通过 GetObjectClass 函数从 Java 对象获取。</span></span><br><span class="line"><span class="comment">&quot;what&quot; 是要获取的字段的名称，这里是一个 int 类型的字段名。</span></span><br><span class="line"><span class="comment">&quot;I&quot; 是 JNI 字段描述符，表示字段类型是 int。*/</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击按钮响应，和上面一样</span></span><br><span class="line"><span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">walkDir(tmpPath,handler);</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">walkDir</span><span class="params">(String fpath, MyHandler hHandler)</span>;</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line">#&lt;android/log.h&gt;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TAG <span class="string">&quot;qqqqqqqq&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...)__android_log_print(ANDROID_LOG_DEBUG,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...)__android_log_print(ANDROID_LOG_INFO,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGW(...)__android_log_print(ANDROID_LOG_WARN,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGE(...)__android_log_print(ANDROID_LOG_ERROR,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGF(...)__android_log_print(ANDROID_LOG_FATAL,TAG,__VA_ARGS__);</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> PATH_MAX_LEGTH = <span class="number">26</span>;</span><br><span class="line">JavaVM *javaVM;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PARAM</span></span><br><span class="line">&#123;</span><br><span class="line">    JNIEnv *a;</span><br><span class="line">    jobject b;</span><br><span class="line">    jstring c;</span><br><span class="line">    jobject d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sleep_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> secs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">timeval</span> tval;</span><br><span class="line">    tval.tv_sec = secs/<span class="number">1000</span>; <span class="comment">//将毫秒转换位秒</span></span><br><span class="line">    tval.tv_usec = (secs*<span class="number">1000</span>)%<span class="number">1000000</span>; <span class="comment">//将毫秒转换为微妙部分，这里使用了取余运算符 % 来确保微妙数在0 到 999999 之间。</span></span><br><span class="line">    <span class="built_in">select</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="literal">NULL</span>,NUll,<span class="literal">NULL</span>,&amp;tval);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">doWork</span><span class="params">(<span class="type">void</span> *args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PARAM tmp = *(PARAM*)args;</span><br><span class="line">    JNIEnv *env = tmp.a;</span><br><span class="line">    jobject thiz = tmp.b;</span><br><span class="line">    jstring dirPath_ = tmp.c;</span><br><span class="line">    jobject h_handler = tmp.d;</span><br><span class="line">    <span class="keyword">if</span>(dirPath_ == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath is null!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *dirPath = env-&gt;<span class="built_in">GetStringUTFchars</span>(dirPath_,<span class="literal">nullptr</span>);<span class="comment">//GetStringUTFChars 是 JNIEnv 提供的一个函数，用于获取一个 Java 字符串对象的 UTF-8 编码的 C 字符串表示</span></span><br><span class="line">    <span class="comment">//长度判断</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(dirPath) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath length is 0!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打开文件夹读取流</span></span><br><span class="line">    DIR *dir = <span class="built_in">opendir</span>(dirPath);</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">nullptr</span> == dir)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;can not open dir, check path or permission!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">dirent</span> *file;</span><br><span class="line">    <span class="keyword">while</span>((file = <span class="built_in">readdir</span>(dir))!=<span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断是不是 .或者 ..文件夹</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(file-&gt;d_name,<span class="string">&quot;.&quot;</span>) == <span class="number">0</span>||<span class="built_in">strcmp</span>(file-&gt;d_name,<span class="string">&quot;..&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> *path = <span class="keyword">new</span> <span class="type">char</span>[PATH_MAX_LEGTH];</span><br><span class="line">        <span class="built_in">memset</span>(path,<span class="number">0</span>,PATH_MAX_LEGTH);</span><br><span class="line">        <span class="built_in">strcpy</span>(path,dirpath);</span><br><span class="line">        <span class="built_in">strcat</span>(path,<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(path,file-&gt;d_name);</span><br><span class="line">        jstring tDir = env-&gt;<span class="built_in">NewStringUTF</span>(path);</span><br><span class="line">        <span class="comment">//GetStringUTFChars：从 jstring 中获取 UTF-8 编码的 C 字符串，用于读取 Java 字符串数据。</span></span><br><span class="line">        <span class="comment">//NewStringUTF：将 UTF-8 编码的 C 字符串转换为 Java 字符串对象，用于创建新的 Java 字符串。</span></span><br><span class="line">        <span class="keyword">if</span>(file-&gt;d_type == DT_DIR)  <span class="comment">//DT_DIR 是 &lt;dirent.h&gt; 头文件中定义的常量，表示目录的类型。</span></span><br><span class="line">        &#123;</span><br><span class="line">            PARAM param;</span><br><span class="line">            param.a = env;</span><br><span class="line">            param.b = thiz;<span class="comment">//这个thiz不理解</span></span><br><span class="line">            param.c = tDir;</span><br><span class="line">            param.d = h_handler;</span><br><span class="line">            <span class="built_in">doWork</span>(&amp;param);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//打印文件名</span></span><br><span class="line">            <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>,path);</span><br><span class="line">            jclass cls = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/os/Message&quot;</span>);</span><br><span class="line">            jmethodID obtainMethod = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls,<span class="string">&quot;obtain&quot;</span>,<span class="string">&quot;()Landroid/os/Message;&quot;</span>);</span><br><span class="line">            jobject ins_Message = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls,obtainMethod);</span><br><span class="line">            </span><br><span class="line">            jfieldID whatFieldID = env-&gt;<span class="built_in">GetFiledID</span>(cls,<span class="string">&quot;what&quot;</span>,<span class="string">&quot;I&quot;</span>);</span><br><span class="line">            <span class="comment">//参数解释</span></span><br><span class="line"><span class="comment">/*env：这是一个 JNIEnv* 类型的指针，它代表了JNI环境。</span></span><br><span class="line"><span class="comment">cls：这是一个 jclass 类型的对象，表示要操作的Java类的类对象。</span></span><br><span class="line"><span class="comment">&quot;what&quot;：这是要获取字段ID的字段名，这里是 &quot;what&quot;。</span></span><br><span class="line"><span class="comment">&quot;I&quot;：这是字段的签名，其中 &quot;I&quot; 表示这是一个整数类型的字段（Java中的 int）*/</span></span><br><span class="line">            env-&gt;<span class="built_in">SetIntField</span>(ins_Message,whatFieldID,<span class="number">1</span>);</span><br><span class="line">            jobject ins_bundle = env-&gt;<span class="built_in">NewObject</span>(cls_bundle,method_init_bundle);</span><br><span class="line">            <span class="comment">//clazz：表示要实例化的Java类的 jclass 对象，即类的句柄或引用。methodID：表示要调用的构造方法的 jmethodID 对象，它标识了要使用的构造方法。</span></span><br><span class="line">            jmethodID method_putString = env-&gt;<span class="built_in">GetMethodID</span>(cls_bundle,<span class="string">&quot;putString&quot;</span>,<span class="string">&quot;(Ljava/lang/String;Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">            jstring jstr_key = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;fp&quot;</span>);</span><br><span class="line">            evn-&gt;<span class="built_in">CallVoidMethod</span>(ins_bundle,method_putString,jstr_key,tDir);</span><br><span class="line">            </span><br><span class="line">            jmethodID method_setData = env-&gt;<span class="built_in">GetMethodID</span>(cls,<span class="string">&quot;setData&quot;</span>,<span class="string">&quot;(Landroid/os/Bundle;)V&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallVoidMethod</span>(ins_Message,method_setData,ins_bundle);</span><br><span class="line">            </span><br><span class="line">            jclass jcls_handler = env-&gt;<span class="built_in">GetObject</span>(h_handler);</span><br><span class="line">            jmethodID method_sendMessage = env-&gt;<span class="built_in">GetMethodID</span>(jcls_handler,<span class="string">&quot;sendMessage&quot;</span>,<span class="string">&quot;(Landroid/os/Message;)Z&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallBooleanMethod</span>(h_handler,method_sendMessage,ins_Message);</span><br><span class="line">            <span class="built_in">sleep_ms</span>(<span class="number">100</span>);        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放文件内存路径</span></span><br><span class="line">        <span class="keyword">delete</span> path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭读取流</span></span><br><span class="line">    <span class="built_in">closedir</span>(dir);</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(dirPath_,dirPath);    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>* <span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv *env;</span><br><span class="line">    javaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env,<span class="number">0</span>);</span><br><span class="line">    ((PARAM*)args)-&gt;a = env;</span><br><span class="line">    <span class="type">void</span> *ret = <span class="built_in">doWork</span>(args);</span><br><span class="line">    javaVM -&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT <span class="type">void</span> JNICALL</span><br><span class="line">MainActivity.<span class="built_in">waklDri</span>(JNIEnv *env,jobject thiz,jstring dirPath_, jobject h_handler)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pthread_t</span> pid;<span class="comment">//pthread_t 是用来表示线程的数据类型</span></span><br><span class="line">    PARAM* param = (PARAM*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(PARAM));</span><br><span class="line">    param-&gt;a = env;</span><br><span class="line">    param-&gt;b = env-&gt;<span class="built_in">NewGloblaRef</span>(thiz);</span><br><span class="line">    param-&gt;c = <span class="built_in">static_cast</span>&lt;jsting&gt;(env-&gt;<span class="built_in">NewGlobalRef</span>(dirPath_));<span class="comment">////static_cast 是 C++ 中的一种类型转换操作符，用于执行编译时的类型转换</span></span><br><span class="line">    <span class="comment">//在 JNI（Java Native Interface）中，env 是指向 JNI 环境的指针，NewGlobalRef 函数用于创建一个全局引用，确保对象在 Java 层面不会被垃圾回收器回收，直到显式释放为止</span></span><br><span class="line">    param-&gt;d = env-&gt;<span class="built_in">NewGlobalRef</span>(h_handler);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">pthread_create</span>(&amp;pid,<span class="number">0</span>,subWalkDir,param);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm,<span class="type">void</span> *reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取到JavaVM</span></span><br><span class="line">    javaVM = vm;</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;JNI_OnLoad&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四、ndk反射-和JNI差距不大"><a href="#四、ndk反射-和JNI差距不大" class="headerlink" title="四、ndk反射(和JNI差距不大)"></a>四、ndk反射(和JNI差距不大)</h4><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">walkDir2</span><span class="params">(String fpath, MyHandler hHandler)</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">walkDir2(tmpPath,handler);</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;android/log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TAG <span class="string">&quot;qqqqqqqq&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...)__android_log_print(ANDROID_LOG_DEBUG,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGI(...)__android_log_print(ANDROID_LOG_INFO,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGW(...)__android_log_print(ANDROID_LOG_WARN,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGE(...)__android_log_print(ANDROID_LOG_ERROR,TAG__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGF(...)__android_log_print(ANDROID_LOG_FATAL,TAG__VA__ARGS__);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> PATH_MAX_LEGTH = <span class="number">26</span>;</span><br><span class="line">JavaVM *javaVM;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PARAM</span></span><br><span class="line">&#123;</span><br><span class="line">    JNIEnv *a;</span><br><span class="line">    jobject b;</span><br><span class="line">    jstring c;</span><br><span class="line">    jstring d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sleep_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> secs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">timeval</span> tval;</span><br><span class="line">    tval.tv_sec = secs/<span class="number">1000</span>;</span><br><span class="line">    tval.tv_usec = (secs*<span class="number">1000</span>)%<span class="number">1000000</span>;</span><br><span class="line">    <span class="built_in">select</span>(<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,&amp;tval); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">doWork2</span><span class="params">(<span class="type">void</span> *args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PARAM tmp = *(PARAM*)args;</span><br><span class="line">    JNIEnv *env = tmp.a;</span><br><span class="line">    jobject thiz = tmp.b;</span><br><span class="line">    jstring dirPath_ = tmp.c;</span><br><span class="line">    jobject h_handler = tmp.d;</span><br><span class="line">    <span class="keyword">if</span>(dirPath_ == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath is null&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *dirPaht = env-&gt;<span class="built_in">GetStringUTFChars</span>(dirPath_,<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="comment">//长度判断</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(dirPath) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath length is 0!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;     </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    jclass cls_File = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;java/io/File&quot;</span>);</span><br><span class="line">    jmethodID methodID_init_File = env-&gt;<span class="built_in">GetMethodID</span>(cls_File,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">    <span class="comment">//&lt;init&gt; 是构造方法的特殊名称，用于表示构造方法。</span></span><br><span class="line">    jobject obj_File = env-&gt;<span class="built_in">NewObject</span>(cls_File,methodID_init_File,dirPath);</span><br><span class="line">    </span><br><span class="line">    jmethodID methodID_listFiles_File = env-&gt;<span class="built_in">GetMethod</span>(cls_File,<span class="string">&quot;listFiles&quot;</span>,<span class="string">&quot;()Ljava/io/File;&quot;</span>);</span><br><span class="line">    jobjectArray ins_Files = (jobjectArray)(env-&gt;<span class="built_in">CallObjectMethod</span>(obj_File,methodID_listFiles_File));</span><br><span class="line">    jsize size = env-&gt;<span class="built_in">GetArrayLength</span>(ins_Files);</span><br><span class="line">    </span><br><span class="line">    jmethodID methodID_isFile_File = env-&gt;<span class="built_in">GetMethodID</span>(cls_File,<span class="string">&quot;isFile&quot;</span>,<span class="string">&quot;()Z&quot;</span>);</span><br><span class="line">    jmethodID methoID_getAbsolutePath_File = env-&gt;<span class="built_in">GetMethod</span>(cls_File,<span class="string">&quot;getAbsolutePath&quot;</span>,<span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    jclass cls_String = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">    jmethodID methodID_contains_String = env-&gt;<span class="built_in">GetMethodID</span>(cls_String,<span class="string">&quot;contains&quot;</span>,<span class="string">&quot;(Ljava/lang/CharSequence;)Z&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    jstring jstring_tmp = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;.thumnail&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;(size);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        jobject jobject_InsFile = env-&gt;<span class="built_in">GetObjectArrayElement</span>(ins_Files,i);</span><br><span class="line">        jboolean isfile = env-&gt;<span class="built_in">CallBooleanMethod</span>(jobject_InsFile,methodID_isFile_File);</span><br><span class="line">        </span><br><span class="line">        jobject jstring_fpath = env-&gt;<span class="built_in">CallObjectMethod</span>(jobject_InsFile,methodID_getAbsolutePath_File);</span><br><span class="line">        jboolean iscontains = env-&gt;<span class="built_in">CallBooleanMethod</span>((jstring)jstring_fpah,methodID_contains_String,jstring_tmp);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(isfile)</span><br><span class="line">        &#123;</span><br><span class="line">            jclas cls = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/os/Message&quot;</span>);</span><br><span class="line">            jmethodID obtainMethod = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls,<span class="string">&quot;obtain&quot;</span>,<span class="string">&quot;()Landroid/os/Message;&quot;</span>);</span><br><span class="line">            jobject ins_Message = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls,obtainMethod);</span><br><span class="line">            </span><br><span class="line">            jfileID whatField = emv-&gt;<span class="built_in">GetFileID</span>(cls,<span class="string">&quot;what&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">SetIntField</span>(ins_Message,whatField,<span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            jclass cls_bundle = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/os/Bundle&quot;</span>);</span><br><span class="line">            jmethodID method_init_bundle = env-&gt;<span class="built_in">GetMethodID</span>(cls_bundle,&lt;init&gt;,<span class="string">&quot;()V&quot;</span>);</span><br><span class="line">            jobject ins_bundle = env-&gt;<span class="built_in">NewObject</span>(cls_bundle, method_init_bundle);</span><br><span class="line">            </span><br><span class="line">            jmethodID method_putString = env-&gt;<span class="built_in">GetMethodID</span>(cls_bundle,<span class="string">&quot;putString&quot;</span>,<span class="string">&quot;(Ljava/lang/String;Ljava/lang/String)V&quot;</span>);</span><br><span class="line">            jstring jstr_key = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;fp&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallVoidMethod</span>(ins_bundle,method_putString,jstr_key,(jstring)jstring_fpath);</span><br><span class="line">            </span><br><span class="line">            jmethodID method_setData = env-&gt;<span class="built_in">GetMethodID</span>(cls,<span class="string">&quot;setData&quot;</span>,<span class="string">&quot;(Landroid/os/Bundle;)V&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallVoidMehtod</span>(ins_Message,method_setData,ins_bundle);</span><br><span class="line">            </span><br><span class="line">            jclass jcls_handler = env-&gt;<span class="built_in">GetObjectClass</span>(h_handler);</span><br><span class="line">            jmethodID method_sendMessage = env-&gt;<span class="built_in">GetMethodID</span>(jcls_handler,<span class="string">&quot;sendMessage&quot;</span>,<span class="string">&quot;(Landroid/os/Message;)Z&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            env-&gt;<span class="built_in">CallBooleanMethod</span>(h_handler,method_sendMessage,ins_Message);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">sleep_ms</span>(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!iscontains)</span><br><span class="line">        &#123;</span><br><span class="line">            PARAM param;</span><br><span class="line">            param.a = env;</span><br><span class="line">            param.b = thiz;</span><br><span class="line">            param.c = (jstring)jstring_fpath;</span><br><span class="line">            param.d = h_handler;</span><br><span class="line">            <span class="built_in">doWork2</span>(&amp;param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(dirPath_,dirPath);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIE *env;</span><br><span class="line">    javaVM-&gt;AttachCurrentThread)(&amp;env,<span class="number">0</span>);</span><br><span class="line"><span class="comment">/*&amp;env：这是一个 JNIEnv* 类型的指针，用于接收当前线程附加后的JNI环境。</span></span><br><span class="line"><span class="comment">0：这个参数是一个可选的 void* 类型的数据指针，用于在线程附加时传递额外的数据。在这里，使用 0 表示不传递任何额外数据。*/</span></span><br><span class="line">    ((PARAM*)args)-&gt;a = env;</span><br><span class="line">    </span><br><span class="line">    <span class="type">void</span> *ret = <span class="built_in">doWork2</span>(args);</span><br><span class="line">    javaVM-&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT <span class="type">void</span> JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_practice_MainActivity_walkDir</span><span class="params">(JNIEnv *env, jobject thiz, jstring dirPath_, jobject h_handler)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">pthread_t</span> pid;</span><br><span class="line">    PARAM *param = (PARAM*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(PARAM));</span><br><span class="line">    param-&gt;a = env;</span><br><span class="line">    param-&gt;b = env-&gt;<span class="built_in">NewGlobalRes</span>(thiz);</span><br><span class="line">    param-&gt;c = <span class="built_in">static_cast</span>&lt;jstring&gt;(env-&gt;<span class="built_in">NewGlobalRef</span>(dirPath_));</span><br><span class="line">    param-&gt;d = env-&gt;<span class="built_in">NewGlobalRef</span>(h_handler);</span><br><span class="line">    <span class="built_in">pthread_create</span>(&amp;pid,<span class="number">0</span>,sunWalkDir,param);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm,<span class="type">void</span> *reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取到JavaVM</span></span><br><span class="line">    javaVm = vm;</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;JNI_OnLoad&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--NDK编程</title>
      <link href="/2024/07/21/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-NDK%E7%BC%96%E7%A8%8B/"/>
      <url>/2024/07/21/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-NDK%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="NDK"><a href="#NDK" class="headerlink" title="NDK"></a>NDK</h3><p>定义：NDK编程指的是使用Android Native Development Kit（NDK）进行开发，它允许开发者使用C和C++等原生编程语言来编写Android应用的部分代码，通常是处理性能要求高或者需要直接访问设备硬件的功能</p><h4 id="JNI函数命名规则"><a href="#JNI函数命名规则" class="headerlink" title="JNI函数命名规则"></a>JNI函数命名规则</h4><p>Java + 包名 + 类名 + 函数名（以_间隔）,Eg：Java_a_b_c_ndk_MainActivity_getLength</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Java_a_b_c_ndk_MainActivity_getLength</span>(JNIEnv *env, jobject thiz, jstring param)&#123;&#125;</span><br><span class="line"><span class="comment">/*每个参数的含义</span></span><br><span class="line"><span class="comment">JNIEnv env:</span></span><br><span class="line"><span class="comment">JNIEnv 是一个指向JNI环境的指针，它提供了一系列的JNI函数和数据结构，用于在Java虚拟机（JVM）中操作Java对象、调用Java方法、异常处理等。通过 env 参数，本地代码能够与JVM进行交互，执行JNI操作。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">jobject thiz:</span></span><br><span class="line"><span class="comment">jobject 是JNI中的一个泛型类型，表示一个Java对象的引用。在本例中，thiz 参数代表了调用本地方法的Java对象的引用。通常情况下，它指向当前实例对象，即调用本地方法的对象实例。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">jstring param:</span></span><br><span class="line"><span class="comment">jstring 是JNI中表示Java字符串的类型。在JNI中，字符串类型需要特殊处理，因为Java中的字符串和C/C++中的字符串表示方式不同。param 参数表示从Java层传递过来的字符串参数。*/</span></span><br></pre></td></tr></table></figure><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p><img src="/../image/ndk.jpg"></p><h4 id="函数签名"><a href="#函数签名" class="headerlink" title="函数签名"></a>函数签名</h4><p>查看函数签名的方法</p><p><img src="/../image/ndk1.png"></p><p>输入： javap -s a.b.c.ndk01.MainActivity</p><p><img src="/../image/ndk2.jpg"></p><h4 id="读写SDCard"><a href="#读写SDCard" class="headerlink" title="读写SDCard"></a>读写SDCard</h4><p>申请读、写、管理SDCard权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.ndk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.ndk.databinding.ActivityMainBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">MY_PERMISSION_REQUEST_WRITE_CODE</span> <span class="operator">=</span> <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Used to load the &#x27;ndk&#x27; library on application startup.</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;ndk&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">testFun</span><span class="params">(String a,<span class="type">double</span> b,<span class="type">long</span> c)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">        testFun(<span class="string">&quot;aa&quot;</span>,<span class="number">4.5</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Example of a call to a native method</span></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> binding.sampleText;</span><br><span class="line">        tv.setText(stringFromJNI());</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> ContextCompat.checkSelfPermission(MainActivity.<span class="built_in">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE);<span class="comment">//这里注意：Manifest一定要选android</span></span><br><span class="line">                <span class="keyword">if</span>(ret == PackageManager.PERMISSION_GRANTED)</span><br><span class="line">                &#123;</span><br><span class="line"><span class="comment">//PackageManager.PERMISSION_GRANTED: 这个常量的值是 0，表示应用程序已被授予了该权限。</span></span><br><span class="line"><span class="comment">//PackageManager.PERMISSION_DENIED: 这个常量的值是 -1，表示应用程序未被授予该权限，可能是因为尚未请求权限或用户显式拒绝了。</span></span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;已经有写SDCard的权限了&quot;</span>);</span><br><span class="line">                                            <span class="type">String</span> <span class="variable">fp1</span> <span class="operator">=</span> Environment.getExternalStoragePublicDictory(Environment.DIRECTORY_DOWNLOADS).getAbsoultaePath();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">fc</span> <span class="operator">=</span> readSDCardFile(fp1+<span class="string">&quot;/b.txt&quot;</span>);</span><br><span class="line">                        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;文件内容：&quot;</span>+fc);</span><br><span class="line">               </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;还没有写SDcard的权限&quot;</span>);</span><br><span class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,MY_PERMISSION_REQUEST_WRITE_CODE)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionResult</span><span class="params">(<span class="type">int</span> requestCode,<span class="meta">@Nonull</span> String[] permission,<span class="meta">@Nonull</span> <span class="type">int</span>[] grantResults)</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">/*requestCode：用于标识权限请求的请求码，通常是在发起权限请求时传递的。</span></span><br><span class="line"><span class="comment">permissions：请求的权限数组，包含了应用程序请求的权限列表。</span></span><br><span class="line"><span class="comment">grantResults：授权结果数组，包含了对应于请求权限数组中每个权限的授权结果、(PackageManager.PERMISSION_GRANTED 或 PackageManager.PERMISSION_DENIED)。*/</span></span><br><span class="line">            <span class="built_in">super</span>.onRequestPermissionResult(requestCode,permission,grantResult);</span><br><span class="line">            swtich(requetsCode)<span class="comment">//注意：break不要忘了写</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> MY_PERMISSION_RQQUEST_WRITE_CODE:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(grantResult.length&gt;<span class="number">0</span>&amp;&amp;grantResults[<span class="number">0</span>]!=-<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;写SDcard权限申请成功&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;写SDcard权限申请失败&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">33</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;这是申请其他权限的结果&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * A native method that is implemented by the &#x27;ndk&#x27; native library,</span></span><br><span class="line"><span class="comment">     * which is packaged with this application.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">stringFromJNI</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">getLength</span><span class="params">(String param)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">readSDCardFile</span><span class="params">(String filePath)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">include &lt;jni.h&gt;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;android/log.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGI(...) __android_log_print(ANDROID_LOG_INFO,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);<span class="comment">//注意别写错</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...) __android_log_print(ANDROID_LOG_WARN,,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGW(...) __android_log_print(ANDROID_LOG_WARN,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGE(...) __android_log_print(ANDROID_LOG_ERROR,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);</span></span><br><span class="line"><span class="comment">/*#define LOGI(...)：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#define 是 C/C++ 语言中的预处理指令，用于定义宏。</span></span><br><span class="line"><span class="comment">LOGI 是宏的名称，可以根据需要自定义。在这里，LOGI 可以用来打印信息级别的日志。</span></span><br><span class="line"><span class="comment">__android_log_print()：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">__android_log_print() 是 Android NDK 提供的一个函数，用于在 Android 的 LogCat 中打印日志信息。</span></span><br><span class="line"><span class="comment">它接受多个参数，包括日志级别、标签和日志内容等。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ANDROID_LOG_INFO：</span></span><br><span class="line"><span class="comment">ANDROID_LOG_INFO 是 __android_log_print() 函数的第一个参数，表示日志级别为信息（INFO）。其他常用的日志级别还包括 ANDROID_LOG_DEBUG、ANDROID_LOG_WARN 等。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> &quot;qqqqqqqq&quot;：</span></span><br><span class="line"><span class="comment">&quot;qqqqqqqq&quot; 是日志的标签，用于在 LogCat 中识别和过滤日志条目。可以根据实际需求修改为其他标签。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> __VA_ARGS__：</span></span><br><span class="line"><span class="comment">__VA_ARGS__ 是一个特殊的宏，表示宏中的可变参数列表。在这里，它用来接收 LOGI 宏的所有额外参数，并将它们传递给 __android_log_print() 函数。*/</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_stringFromJNI</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        JNIEnv* env,</span></span></span><br><span class="line"><span class="params"><span class="function">        jobject <span class="comment">/* this */</span>)</span> </span>&#123;</span><br><span class="line">    std::string hello = <span class="string">&quot;Hello from C++&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;<span class="built_in">NewStringUTF</span>(hello.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_getLength</span><span class="params">(JNIEnv *env, jobject thiz, jstring param)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_readSDCardFile</span><span class="params">(JNIEnv *env, jobject thiz, jstring file_path)</span> </span>&#123;</span><br><span class="line">    jstring jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">    <span class="type">char</span>*tmp = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFChars</span>(jstring_ret,<span class="number">0</span>);</span><br><span class="line">    <span class="type">char</span>* filePath = (<span class="type">char</span> *)env-&gt;<span class="built_in">GetStringUTFChars</span>(file_path,<span class="number">0</span>);<span class="comment">//JNI_TRUE：表示返回的字符串是从 Java 字符串复制出来的，即 JNI 在返回的字符串中创建了一个新的副本。</span></span><br><span class="line">   <span class="comment">// JNI_FALSE：表示返回的字符串是直接指向 Java 字符串的内部缓冲区，没有进行复制。这种情况下，应该避免在本地代码中修改字符串内容，以免影响 Java 层原始数据。</span></span><br><span class="line">   FILE *fp;</span><br><span class="line">   fp = <span class="built_in">fopen</span>(filePath,<span class="string">&quot;r&quot;</span>);<span class="comment">//&quot;r&quot; 表示以只读方式打开文件。这意味着你可以从文件中读取数据，但不能写入或修改文件内容。</span></span><br><span class="line">   <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">LOGE</span>(<span class="string">&quot;fp == NULL, %s&quot;</span>,filePath);</span><br><span class="line">       <span class="keyword">return</span> jstring_ret;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> (<span class="built_in">fgets</span>(buff,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">LOGI</span>(<span class="string">&quot;fgets :%s&quot;</span>,buff);</span><br><span class="line">   &#125;</span><br><span class="line">   env-&gt;<span class="built_in">ReleaseStringChars</span>(jstring_ret, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">const</span> jchar *&gt;(tmp));<span class="comment">//reinterpret_cast 是 C++ 中的类型转换操作符</span></span><br><span class="line">   jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(buff);</span><br><span class="line">   <span class="keyword">return</span> jstring_ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h4><p>含义：在运行时检查或操作类、方法、属性等程序结构的能力。通俗地讲，反射允许程序在运行时动态地获取信息和操作对象，而不需要在编译时就知道这些信息。</p><p>1、获取类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;类名全路径&quot;</span>)</span><br><span class="line">类名.class</span><br><span class="line">实例.getClass</span><br></pre></td></tr></table></figure><p>2、获取方法和属性</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclaredMethods();</span><br><span class="line">类.getDeclaredConstructors();</span><br><span class="line">类.getMethod();</span><br><span class="line">类.getDeclaredFields();</span><br></pre></td></tr></table></figure><p>3、调用方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">方法.invoke();</span><br></pre></td></tr></table></figure><p>用法详细解释</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclareMethods();</span><br><span class="line"><span class="comment">//这个方法返回一个 Method 对象数组，代表了该类中所有声明的方法，包括 public、protected、default（包级别）和 private 方法，但不包括从父类继承的方法。</span></span><br><span class="line"><span class="comment">//语法：Method[] methods = 类.getDeclaredMethods();</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line">Method[] methods = clazz.getDeclaredMethods();</span><br><span class="line"><span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">    System.out.println(method.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclaredConstructors();</span><br><span class="line"><span class="comment">//这个方法返回一个 Constructor 对象数组，代表了该类中所有声明的构造函数，包括 public、protected、default 和 private 构造函数。</span></span><br><span class="line"><span class="comment">//语法：Constructor&lt;?&gt;[] constructors = 类.getDeclaredConstructors();</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line">Constructor&lt;?&gt;[] constructors = clazz.getDeclaredConstructors();</span><br><span class="line"><span class="keyword">for</span> (Constructor&lt;?&gt; constructor : constructors) &#123;</span><br><span class="line">    System.out.println(constructor.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getMethod();</span><br><span class="line"><span class="comment">//这个方法用于获取指定方法名和参数类型的 Method 对象，只能获取到 public 方法，包括从父类继承而来的 public 方法。</span></span><br><span class="line"><span class="comment">//语法：Method method = 类.getMethod(&quot;methodName&quot;, parameterTypes);</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line"><span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;someMethod&quot;</span>, String.class, <span class="type">int</span>.class);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclaredFields();</span><br><span class="line"><span class="comment">//这个方法返回一个 Field 对象数组，代表了该类中所有声明的字段（成员变量），包括 public、protected、default 和 private 字段</span></span><br><span class="line"><span class="comment">//语法：Field[] fields = 类.getDeclaredFields();</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line">Field[] fields = clazz.getDeclaredFields();</span><br><span class="line"><span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">    System.out.println(field.getName());</span><br><span class="line">&#125;</span><br><span class="line">Eg:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, my name is &quot;</span> + name + <span class="string">&quot; and I am &quot;</span> + age + <span class="string">&quot; years old.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">privateMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is a private method.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflectionExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        Class&lt;Person&gt; personClass = Person.class;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取所有声明的字段</span></span><br><span class="line">        Field[] fields = personClass.getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出字段的名称和值</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>); <span class="comment">// 因为字段是私有的，需要设置可访问</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">fieldName</span> <span class="operator">=</span> field.getName();</span><br><span class="line">            System.out.println(<span class="string">&quot;Field name: &quot;</span> + fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">Field name: name</span><br><span class="line">Field name: age</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        clz = Class.forName(<span class="string">&quot;a.b.c.ndk.Student&quot;</span>);</span><br><span class="line">        Method[] declaredMethods = clz.getDeclareMethods();</span><br><span class="line">        <span class="keyword">for</span>(Method method :declareMethods)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line">            <span class="type">String</span> <span class="variable">returnType</span> <span class="operator">=</span> method.getReturnType().getSimpleName();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;method:&quot;</span>+methodName+<span class="string">&quot;,&quot;</span>+returnType);</span><br><span class="line">        &#125;</span><br><span class="line">        Constructor[] declaredConstructors = clz.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span>(Constructor constructor:declareConstructors)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> constructor.getName();</span><br><span class="line">            <span class="type">String</span> <span class="variable">returnType</span> <span class="operator">=</span> constructor.toGenericString();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;Constructor:&quot;</span>+methodName<span class="string">&quot;,&quot;</span>+returnType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> Student.class;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_study</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;study&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor_Student</span> <span class="operator">=</span> clz.getConstructor(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student)constructor_Student.newInstance(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;lisi&quot;</span>,<span class="number">25</span>&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_study.invoke(student,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">77</span>&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;study ret:&quot;</span>+(String) obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> one.getClass();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_getAge0</span> <span class="operator">=</span> clz.getDeclaredMethod(<span class="string">&quot;getAge&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;&#125;);</span><br><span class="line">        method_getAge0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//Method method_getAge = clz.getMethod(&quot;getAge&quot;,new Class[]&#123;&#125;); 只能获取public方法</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_getAge0.invoke(one,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;getAge ret:&quot;</span>+(<span class="type">int</span>) obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStaceTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.ndk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String studentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">studentAge</span> <span class="operator">=</span> <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String studentName, <span class="type">int</span> studentAge)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentName = studentName;</span><br><span class="line">        <span class="built_in">this</span>.studentAge = studentAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String studentName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentName = studentName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">study</span><span class="params">(<span class="type">int</span> flag)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;name:&quot;</span> + studentName +<span class="string">&quot;,age:&quot;</span> + studentAge + <span class="string">&quot;,flag:&quot;</span> + flag);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;studyRet&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calaLength</span><span class="params">(String param)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> param.length();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> studentAge;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="NDK反射Java层"><a href="#NDK反射Java层" class="headerlink" title="NDK反射Java层"></a>NDK反射Java层</h4><p>含义：NDK（Native Development Kit）是用于在 C&#x2F;C++ 中编写代码并与 Java 层交互的工具集。在需要从 C&#x2F;C++ 层访问 Java 层的情况下，可以通过 JNI（Java Native Interface）来实现。</p><p>1、获取类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jclass <span class="title function_">GetObjectClass</span><span class="params">(对象)</span>;</span><br><span class="line">jclass <span class="title function_">FindClass</span><span class="params">(<span class="string">&quot;类名&quot;</span>)</span>;</span><br></pre></td></tr></table></figure><p>2、获取方法ID  (javap -s a.b.c.javareflection.Student获取签名)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jmethodID <span class="title function_">GetMethonID</span><span class="params">(jclass clazz, const <span class="type">char</span>*name, const <span class="type">char</span>*sig)</span>;</span><br><span class="line">jmethodID <span class="title function_">GetStaticMethodID</span><span class="params">(jclass clazz, const <span class="type">char</span>* name,const <span class="type">char</span>*sig)</span>;    </span><br></pre></td></tr></table></figure><p>3、调用方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">CallVoidMethod</span><span class="params">(jobject obj,jmethodID methodID,......)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">CallStaticVoidMethod</span><span class="params">(jclass clazz, jmethodID methoID,......)</span>;</span><br><span class="line">jobject <span class="title function_">CallObjectMethod</span><span class="params">(JNIEnv*,jobject,jmethodID,.......)</span>;</span><br></pre></td></tr></table></figure><p>4、获取和设置成员变量</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GetFieldID;</span><br><span class="line">GetObjectField;</span><br><span class="line">SetObjectField;</span><br></pre></td></tr></table></figure><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;callJavaFunFromJNI ret :&quot;</span>+callJavaFunFromJNI(one));</span><br><span class="line">Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;callJavaFunFromJNI ret :&quot;</span>+callStaticJavaFunFromJNI());</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">callJavaFunFromJNI</span><span class="params">(Student param)</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">callStaticJavaFunFromJNI</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>native-lib.cpp，部分代码</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jint JNICALL</span><br><span class="line">MainActivity.<span class="built_in">callJavaFunFromJNI</span>(JNIEnv *env, jobject thiz,jobject param)</span><br><span class="line">&#123;</span><br><span class="line">    jclass jclass_student = env-&gt;<span class="built_in">GetObjectClass</span>(param);</span><br><span class="line">    jclass jclass_student2 = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;a/b/c/ndk/Student&quot;</span>);</span><br><span class="line">    jmethoID jmethodID_study = env-?<span class="built_in">GetMethod</span>(jclass_student,<span class="string">&quot;study&quot;</span>,<span class="string">&quot;(I)Ljava/lang/String;&quot;</span>);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">34</span>;</span><br><span class="line">    jobject jobject_ret = env-&gt;<span class="built_in">CallObjectMethod</span>(param,jmethodid_study,flag);<span class="comment">//注意：不能直接传入值，要放个参数，否则会报错</span></span><br><span class="line">    <span class="type">char</span>* t = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFchars</span>((jstring)jobject_ret,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;ndk call study ret: %s&quot;</span>,t);</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL    </span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_callStaticJavaFunFromJNI</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass jclass_student2 = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;a/b/c/ndk/Student&quot;</span>);</span><br><span class="line">    jmethoID jmethodId_calcLength = env-&gt;<span class="built_in">GetStaticMethodID</span>(jclass_student2,<span class="string">&quot;calcLength&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)I&quot;</span>);</span><br><span class="line">    jstring jstring_param = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;hahahaha&quot;</span>);</span><br><span class="line">    jint jint_ret = env-&gt;<span class="built_in">CallStaticIntMethod</span>(jclass_student2,jmethodId_calcLength,jstring_param);</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;ndk call calcLength ret:%d&quot;</span>,jint_ret);</span><br><span class="line">    <span class="keyword">return</span> jstring_param;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="NDK反射获取包名"><a href="#NDK反射获取包名" class="headerlink" title="NDK反射获取包名"></a>NDK反射获取包名</h4><p>查看系统源码：<a href="http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java">http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java</a></p><p>native-lib.cpp，部分代码</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过反射获取整个应用的ActivityThread类，获取类里面的静态函数，这个函数返回的是ActivityThread的一个实例，通过这个实例调用成员函数，得到上下文</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_k02s10_MainActivity_getPkgName</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass cls_ActivityThread = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/app/ActivityThread&quot;</span>);</span><br><span class="line">    jmethodID jmethodId_currentActivityThread = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls_ActivityThread, <span class="string">&quot;currentActivityThread&quot;</span>, <span class="string">&quot;()Landroid/app/ActivityThread;&quot;</span>);</span><br><span class="line">    jobject ins_currentActivityThread = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls_ActivityThread, jmethodId_currentActivityThread);</span><br><span class="line"></span><br><span class="line">    jmethodID jmethodId_getApplication = env-&gt;<span class="built_in">GetMethodID</span>(cls_ActivityThread, <span class="string">&quot;getApplication&quot;</span>, <span class="string">&quot;()Landroid/app/Application;&quot;</span>);</span><br><span class="line">    jobject ins_mInitialApplication = env-&gt;<span class="built_in">CallObjectMethod</span>(ins_currentActivityThread, jmethodId_getApplication);</span><br><span class="line"></span><br><span class="line">    jclass cls_Application = env-&gt;<span class="built_in">GetObjectClass</span>(ins_mInitialApplication);</span><br><span class="line">    jmethodID jmethodId_getPackageName = env-&gt;<span class="built_in">GetMethodID</span>(cls_Application, <span class="string">&quot;getPackageName&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line">    jstring pkgName = (jstring)env-&gt;<span class="built_in">CallObjectMethod</span>(ins_mInitialApplication, jmethodId_getPackageName);</span><br><span class="line">    <span class="keyword">return</span> pkgName;</span><br><span class="line">&#125;                                  </span><br></pre></td></tr></table></figure><h4 id="动态注册JNI函数"><a href="#动态注册JNI函数" class="headerlink" title="动态注册JNI函数"></a>动态注册JNI函数</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* name;  <span class="comment">// Java 中调用本地方法的方法名</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* signature;  <span class="comment">// Java 方法的签名</span></span><br><span class="line">    <span class="type">void</span>* fnPtr;  <span class="comment">// 指向本地方法实现的函数指针</span></span><br><span class="line">&#125; JNINativeMethod;</span><br></pre></td></tr></table></figure><p>RegisterNatives</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 是 JNI（Java Native Interface）中的一个函数，用于注册本地方法（native methods）</span></span><br><span class="line"><span class="comment">//原型：</span></span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL</span></span><br><span class="line"><span class="function"><span class="title">RegisterNatives</span><span class="params">(JNIEnv *env, jclass cls, <span class="type">const</span> JNINativeMethod *methods, jint nMethods)</span></span>;</span><br><span class="line">env：JNI 环境指针，通过它可以访问 JNI 提供的方法和功能。</span><br><span class="line">cls：要注册本地方法的 Java 类的 jclass 对象。</span><br><span class="line">methods：一个 JNINativeMethod 结构体数组，定义了要注册的本地方法。</span><br><span class="line">nMethods：要注册的本地方法的数量。</span><br></pre></td></tr></table></figure><p>GetEnv</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">jint result = vm-&gt;<span class="built_in">GetEnv</span>(&amp;env, JNI_VERSION_1_4);</span><br><span class="line"><span class="comment">/*vm 是一个 JavaVM* 类型的指针，代表了 Java 虚拟机。</span></span><br><span class="line"><span class="comment">&amp;env 是 JNIEnv* 类型指针的地址，通过传递 &amp;env，GetEnv 函数会将当前线程的 JNI 环境指针写入到 env 变量中。</span></span><br><span class="line"><span class="comment">JNI_VERSION_1_4 是希望使用的 JNI 版本。*/</span></span><br></pre></td></tr></table></figure><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">getPkgName2222</span><span class="params">()</span>;</span><br><span class="line">Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;jni22222 return:&quot;</span>+getPkgName2222());</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">jstring <span class="title">getAAAA</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass cls_ActivityThread = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/app/ActivityThread&quot;</span>);</span><br><span class="line">    jmethodID jmethodId_currentActivityThread = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls_ActivityThread, <span class="string">&quot;currentActivityThread&quot;</span>, <span class="string">&quot;()Landroid/app/ActivityThread;&quot;</span>);</span><br><span class="line">    jobject ins_currentActivityThread = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls_ActivityThread, jmethodId_currentActivityThread);</span><br><span class="line"></span><br><span class="line">    jmethodID jmethodId_getApplication = env-&gt;<span class="built_in">GetMethodID</span>(cls_ActivityThread, <span class="string">&quot;getApplication&quot;</span>, <span class="string">&quot;()Landroid/app/Application;&quot;</span>);</span><br><span class="line">    jobject ins_mInitialApplication = env-&gt;<span class="built_in">CallObjectMethod</span>(ins_currentActivityThread, jmethodId_getApplication);</span><br><span class="line"></span><br><span class="line">    jclass cls_Application = env-&gt;<span class="built_in">GetObjectClass</span>(ins_mInitialApplication);</span><br><span class="line">    jmethodID jmethodId_getPackageName = env-&gt;<span class="built_in">GetMethodID</span>(cls_Application, <span class="string">&quot;getPackageName&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line">    jstring pkgName = (jstring)env-&gt;<span class="built_in">CallObjectMethod</span>(ins_mInitialApplication, jmethodId_getPackageName);</span><br><span class="line"></span><br><span class="line">    jstring ret = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot; from getAAAA!!!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm,<span class="type">void</span>* reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv* env = <span class="literal">NULL</span>;</span><br><span class="line">    jint restule = <span class="number">-1</span>;</span><br><span class="line">    vm-&gt;<span class="built_in">GetEnv</span>((<span class="type">void</span>**)(&amp;env),JNI_VERSION_1_4);</span><br><span class="line">    </span><br><span class="line">    JNINativeMethod methods[] = &#123;&#123;<span class="string">&quot;getPkgName2222&quot;</span>&#125;,<span class="string">&quot;()Ljava/lang/String;&quot;</span>,(<span class="type">void</span>*)getAAAA&#125;;</span><br><span class="line">    env-&gt;<span class="built_in">Register</span>(cls_MainActivity,methods,<span class="built_in">sizeof</span>(methods)/<span class="built_in">sizeof</span>(JNINativeMethod));</span><br><span class="line">    </span><br><span class="line">    result = JNI_VERSION_1_4;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--Binder</title>
      <link href="/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-Binder/"/>
      <url>/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-Binder/</url>
      
        <content type="html"><![CDATA[<h3 id="Binder"><a href="#Binder" class="headerlink" title="Binder"></a>Binder</h3><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>在清单中申请权限</p><p>application外</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.IINTERNET&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application内</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyService&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span>//<span class="attr">用于指定一个组件是否启用</span>（<span class="attr">可用</span>）。<span class="attr">它通常用于表明组件是否可以响应用户交互操作</span>，<span class="attr">如点击或者触摸等</span>。</span></span><br><span class="line"><span class="tag">    <span class="attr">android:process</span>=<span class="string">&quot;:server&quot;</span>&gt;</span>//android:process 是一个用于指定组件应该运行的进程名称的属性。</span><br><span class="line">在 Android 中，默认情况下，所有的组件（活动、服务、接收器等）都在应用的主进程中运行。这意味着它们共享同一个进程空间和资源。</span><br><span class="line">通过设置 android:process 属性，可以使得特定的组件在一个独立的进程中运行，而不是与主进程共享</span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.server.student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span>         </span><br></pre></td></tr></table></figure><p>MainActivity.java没有特别的代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>MyService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Binder</span> <span class="variable">mBinder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binder</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code,<span class="meta">@NonNull</span> Parcel data,<span class="meta">@Nullable</span> Parcel reply,<span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException<span class="comment">//表示在进行跨进程通信（IPC）时可能发生的异常情况。</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/*code：这是一个整数参数，表示客户端请求的操作代码（或者称为事务码）。客户端和服务端之间的通信通过这个代码来区分不同的请求或操作。在客户端调用远程服务的方法时，通常会将一个特定的事务码作为参数传递给服务端，服务端在 onTransact 方法中根据这个事务码来确定具体要执行的操作。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">data：这是一个 Parcel 对象，用于在客户端和服务端之间传输数据。Parcel 是 Android 中用于高效传输数据的类，可以将对象序列化为字节流，然后在不同进程之间进行传递。在 onTransact 方法中，data 参数包含了客户端传递给服务端的请求数据和参数。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">reply：这也是一个 Parcel 对象，用于存储服务端向客户端返回的响应数据。在 onTransact 方法中，服务端可以通过修改 reply 对象来返回处理结果给客户端。客户端在调用远程方法后，会等待服务端处理完成并将结果填充到 reply 中，然后解析并处理返回结果。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">flags：</span></span><br><span class="line"><span class="comment">这是一个整数参数，用于指示当前事务的特性或标志。在 onTransact 方法中，flags 可以用来描述事务的一些额外信息，例如事务的方向（入站或出站）、是否需要将数据进行回复等。具体的标志值和含义可以根据具体的 IPC 使用场景而定，例如 FLAG_ONEWAY 表示单向通信，不需要返回结果。*/</span></span><br><span class="line">        <span class="keyword">if</span>(code == REQUEST_CODE)</span><br><span class="line">        &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readSting();<span class="comment">//readString() 是 Parcel 类提供的方法之一，用于在跨进程通信中读取字符串数据</span></span><br><span class="line">            <span class="type">ing</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">            <span class="keyword">if</span>(reply != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                reply.writeInt(age);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code,data,reply,flags);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,Integer&gt; info = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">23</span>);</span><br><span class="line">        info.put(<span class="string">&quot;lisi&quot;</span>,<span class="number">19</span>);</span><br><span class="line">        info.put(<span class="string">&quot;wangwu&quot;</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> info.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String name, <span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(name,age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>在清单中申请权限(application外)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permisson</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permissoin.INTERNET&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permisson</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">queries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.usebindrserver&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">queries</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;queries&gt; 元素是 Android 11（API 级别 30）引入的新特性，用于声明应用程序需要访问的其他应用程序的信息。它允许开发者在应用安装时就声明需要访问的其他应用程序，以便系统在运行时检查和控制访问权限。--&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    Button btn_bindService,btn_searchAge;</span><br><span class="line">    IBinder binder;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ServiceConnection</span> <span class="variable">serviceConnection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName,IBinder iBinder)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = IBinder;</span><br><span class="line"><span class="comment">/*componentName 参数：</span></span><br><span class="line"><span class="comment">ComponentName 对象用于表示你所连接的服务组件的名称。</span></span><br><span class="line"><span class="comment">它包含两部分信息：包名和类名，用于唯一标识服务组件。</span></span><br><span class="line"><span class="comment">你可以通过 componentName 参数获取到服务组件的详细信息，如输出日志或者进行其他逻辑处理。*/</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">bindRemoteService</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;android.intent.action.server.student&quot;</span>;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(action);</span><br><span class="line">        intnt.setPackage(<span class="string">&quot;a.b.c.usebinderserver&quot;</span>);<span class="comment">//setPackage 方法用于设置 Intent 的目标包名，即指定你希望发送这个 Intent 给哪个应用程序。</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="built_in">this</span>.bindService(intent,serviceConnection,BIND_AUTO_CREATE);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;bindRemoteService result:&quot;</span> + bt);    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = findViewById(R.id.tv_view);</span><br><span class="line">        btn_bindService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_searchAge = findViewById(R.btn_searchAge);</span><br><span class="line">        btn_bindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                bindRemoteService();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_searchAge.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;qqqq-client&quot;</span>,<span class="string">&quot;开始查询&quot;</span>);</span><br><span class="line">                getRemoteAge(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getRemoteAge</span><span class="params">(String name)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Parcel</span> <span class="variable">data</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">            <span class="type">Parcel</span> <span class="variable">reply</span> <span class="operator">=</span> Parce.obtain();<span class="comment">//注意下，Parcel对象也是通过.obtain()获得</span></span><br><span class="line">            data.wtiteString(name);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(binder == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                binder.transact(REQUEST_CODE,data,reply,<span class="number">0</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> reply.readInt();</span><br><span class="line">                tv.setText(<span class="string">&quot;年龄查询结果：&quot;</span>+age);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">            &#123;</span><br><span class="line">                ee.printStackTrace();</span><br><span class="line">                tv.setText(ee.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--sdcard &amp;&amp; Binder</title>
      <link href="/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-sdcard-Handler/"/>
      <url>/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-sdcard-Handler/</url>
      
        <content type="html"><![CDATA[<h3 id="读写SDCard"><a href="#读写SDCard" class="headerlink" title="读写SDCard"></a>读写SDCard</h3><p>Android高版本不能使用http协议，需要在清单文件中添加(application内)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot;</span><br><span class="line"><span class="comment">&lt;!--这个属性用于指示应用是否允许使用明文网络流量，即未加密的网络请求，比如 HTTP 请求。--&gt;</span></span><br></pre></td></tr></table></figure><p>在清单文件里面申请使用网络权限、读SD卡的权限、写SD卡的权限、管理SD卡的权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.INTERNET&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.READ_EXTERNAL_STORAGE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.WRITE_EXTERNAL_STORAGE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.MANAGE_EXTERNAL_STORAGE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> findViewById(R.id.tv_downloadResult);</span><br><span class="line">    tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">DownloadZip</span> <span class="variable">downloadZip</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DownloadZip</span>(tv);</span><br><span class="line">            downloadZip.execute(<span class="string">&quot;http:192.168.31.197/down/test/zip&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViedById(R.id.btn_startUnzip).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">((View view)</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">UnzipFile</span> <span class="variable">unzipFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UnzipFile</span>(tv);</span><br><span class="line">            unzipFile.execute(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;                                                      </span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DownloadZip.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadZip</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;String,String,String&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//AsyncTask是一个用于在后台线程中执行耗时操作（如网络请求、文件读写等）的类，同时允许你在操作完成后更新UI</span></span><br><span class="line">    <span class="comment">//Params（第一个String）：这是传递给execute()方法的参数的类型</span></span><br><span class="line">    <span class="comment">//Progress（第二个String）：这是onProgressUpdate()方法接收的进度更新信息的类型。</span></span><br><span class="line">    <span class="comment">//Result（第三个String）：这是doInBackground()方法执行完成后返回的结果的类型。</span></span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DownloadZip</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">doInBackground</span><span class="params">(String...String)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//doInBackground 方法是 AsyncTask 类中的一个关键方法，用于执行那些应该在后台线程中运行的耗时操作。</span></span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">httpURLConnection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//HttpURLConnection 是 Java 标准库中的一个类，用于处理 HTTP 请求和响应。它是 URLConnection 的一个子类，专门用于 HTTP 通信。</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//InputStream 是 Java 中的一个抽象类，用于表示字节输入流的所有类的超类。在文件下载的场景中，InputStream 用于从 HTTP 响应中读取数据。</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStreamToFile</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//FileOutputStream 是 Java 标准库中的一个类，用于向文件写入数据。</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(string[<span class="number">0</span>]);</span><br><span class="line">            httpURLConnection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            httpURLConnection.connect();</span><br><span class="line">            <span class="keyword">if</span>(httpURLConnection.getResponseCode != HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                Log.d(<span class="string">&quot;DownloadZip&quot;</span>,<span class="string">&quot;nor error code&quot;</span> + httpURLConnection.getResponseCode());</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;code error&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            inputStream = httpURLConnection.getInputStream();</span><br><span class="line">            </span><br><span class="line">            <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS+<span class="string">&quot;/&quot;</span>+<span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                dir.mkdir</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">            <span class="keyword">if</span>(file.exists)</span><br><span class="line">            &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">            outputStreamToFile = <span class="keyword">new</span> <span class="title class_">File</span>(file.getAbsolutePath);</span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> count;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                count = inputStream.read(buffer);</span><br><span class="line">                <span class="keyword">if</span>(count == -<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                outputStreamFile.write(buffer,<span class="number">0</span>,count);</span><br><span class="line">            &#125;</span><br><span class="line">            outputStreamToFile.close();</span><br><span class="line">            ret = <span class="string">&quot;success&quot;</span>;</span><br><span class="line">                </span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">            ret = <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(inputStream !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(httpURLConnection !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    httpURLConnection.disconnect();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">            &#123;</span><br><span class="line">                ee.pringStackTrace;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(String s)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostExecute(s);</span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载success&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//rotected void onPostExecute(String s) 是一个通常在AsyncTask中重写的方法，用于在后台任务执行完毕后（即doInBackground方法完成后）在主线程（UI线程）上执行的操作。这里的参数String s是doInBackground方法返回的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UnzipFile.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnzipFile</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;String, String, String&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UnzipFile</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">doInBackground</span><span class="params">(String...strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ZipInputStream</span> <span class="variable">zipInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">           <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">            <span class="keyword">if</span>(file.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">jieyaDir</span> <span class="operator">=</span> dir.getAbsolutePath();</span><br><span class="line">                inputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                zipInputStream = <span class="keyword">new</span> <span class="title class_">ZipInputStream</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(inputStream));</span><br><span class="line">                <span class="comment">//这是ZipInputStream类型的一个变量，用于引用新创建的ZipInputStream对象。之后，你可以使用这个变量来读取ZIP文件中的内容。</span></span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                ZipEntry zipEntry;</span><br><span class="line">                <span class="keyword">while</span>((zipEntry = zipInputStream.getNextEntry())!=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> zipEntry.getName();</span><br><span class="line">                    <span class="keyword">if</span>(zipEntry.isDirectory())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">subDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(jieyaDir + <span class="string">&quot;/&quot;</span> + fileName);</span><br><span class="line">                        subDir.mkdirs();</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">int</span> rCount;</span><br><span class="line">                    <span class="type">FileOutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(jieyaDir + <span class="string">&quot;/&quot;</span>+ fileName);</span><br><span class="line">                    <span class="keyword">while</span>((rCount = zipInputStream.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        fout.write(buffer,<span class="number">0</span>,rCount);</span><br><span class="line">                    &#125;</span><br><span class="line">                    fout.close();</span><br><span class="line">                    zipInputStream.closeEntry();</span><br><span class="line">                &#125;</span><br><span class="line">                zipInputStream.close();</span><br><span class="line">                ret = <span class="string">&quot;unzip success&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="string">&quot;file not exists&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   </span><br><span class="line">       &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">       &#123;</span><br><span class="line">           ee.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">        <span class="meta">@Overrride</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(String s)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onPostExecute(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;unzip success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压失败&quot;</span>);</span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Handler"><a href="#Handler" class="headerlink" title="Handler"></a>Handler</h3><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler myHandler;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI01</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI02</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;02&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI03</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;03&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savaInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">SubThreadCreateHandler</span> <span class="variable">subThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubThreadCreateHandler</span>();</span><br><span class="line">        subThread.start();</span><br><span class="line">        myHandler = <span class="keyword">new</span> <span class="title class_">MyHandler</span>(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//Handler handler = new Handler(Looper.getMainLooper())&#123;&#125;</span></span><br><span class="line">        <span class="comment">//Looper.getMainLooper() 是用来获取主线程的消息循环器（Looper）的静态方法。如果不显式指定消息循环器，它会默认获取主线程的消息循环器。</span></span><br><span class="line">        <span class="type">SubThreadCreateHandler</span> <span class="variable">subThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubThreadCreateHandler</span>();</span><br><span class="line">        subThread.start();</span><br><span class="line">        <span class="comment">//子线程用sendMessage给主线程发消息</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(myHandler);</span><br><span class="line">        myThread.start();</span><br><span class="line">        <span class="comment">//子线程用post给主线程发消息</span></span><br><span class="line">        myHandler.post(<span class="keyword">new</span> <span class="title class_">Runnable</span>)()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">catch</span>(InterruptedException e)</span><br><span class="line">                    &#123;</span><br><span class="line">                        e.printStackTrace;</span><br><span class="line">                    &#125;</span><br><span class="line">                    updateUI01();</span><br><span class="line">                    updateUI02();</span><br><span class="line">                    tv.setText(<span class="string">&quot;i:&quot;</span>+i);</span><br><span class="line">                &#125;</span><br><span class="line">         <span class="comment">//使用 Handler 中的 post 方法，将一个 Runnable 对象提交到 Handler 所关联的消息队列中执行</span></span><br><span class="line">         <span class="comment">//这里的 myHandler 是一个 Handler 对象，通过 post 方法，将一个 Runnable 对象提交到 Handler 所关联的消息队列中。这个 Runnable 对象的 run 方法将会在主线程中执行</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//主线程做完事情后，把结果通过子线程的handler发送给子线程使用</span></span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">        message.what = <span class="number">99</span>;</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bunlde</span>();</span><br><span class="line">        bundle.putString(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这条内容先放入Bundle,然后通过Messsage传递&quot;</span>);</span><br><span class="line">        message.setData(bundle);</span><br><span class="line">        subThred.subHandler.sendMessage(meassage);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyHandler</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span>(MainActivity pMainActivity)</span><br><span class="line">&#123;</span><br><span class="line">    mainActivity = pMainActivity;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NoNull</span> Message msg)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;in handleMessage&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span>(msg.what)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI01();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI02();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mianActivity.updateUI03();</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyThread.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler mh;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mh)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mh = mh;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.run();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();<span class="comment">//这里创建Message对象是用.obtain();</span></span><br><span class="line">            message.what = i;</span><br><span class="line">            mh.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SubThreadCreateHandler.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubThreadCreateHandler</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> SubHandler subHandler;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubHandler</span> (Looper myLooper)&#123;&#125;</span><br><span class="line">        <span class="meta">@Override</span> </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;in subHandler&quot;</span>);</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">data</span> <span class="operator">=</span> msg.getData();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;get String:&quot;</span>+data.getString(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.run();</span><br><span class="line">            Looper.prepare();<span class="comment">//Looper.prepare() 方法用于为当前线程创建一个消息循环器（Looper）</span></span><br><span class="line">            subHandler = <span class="keyword">new</span> <span class="title class_">SubHandler</span>(Looper.myLooper());</span><br><span class="line">            <span class="comment">//subHandler 是一个 SubHandler 对象，通过 new SubHandler(Looper.myLooper()) 创建。这里的 Looper.myLooper() 表示获取当前线程的消息循环器，然后将其作为参数传递给 SubHandler 的构造函数。</span></span><br><span class="line">            Looper.loop();<span class="comment">//Looper.loop() 是一个无限循环，它开始运行消息循环。</span></span><br><span class="line">            </span><br><span class="line">      </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--四大组件</title>
      <link href="/2024/07/19/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/"/>
      <url>/2024/07/19/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="认识安卓四大组件"><a href="#认识安卓四大组件" class="headerlink" title="认识安卓四大组件"></a>认识安卓四大组件</h2><h3 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h3><h4 id="创建一个新的界面的步骤"><a href="#创建一个新的界面的步骤" class="headerlink" title="创建一个新的界面的步骤"></a>创建一个新的界面的步骤</h4><p>1、通过Intent启动</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,SubActivity02.class)</span><br></pre></td></tr></table></figure><p>2、新的界面绑定.xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_sub02)</span><br></pre></td></tr></table></figure><p>3、清单文件注册新的Activity</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SubActivity02&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、新的Activity要继承Activity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity02</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br></pre></td></tr></table></figure><h4 id="Activity界面切换"><a href="#Activity界面切换" class="headerlink" title="Activity界面切换"></a>Activity界面切换</h4><p>1、老方法(通过复写onActivityResult函数来接受返回结果)，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, <span class="meta">@Nullable</span> Intent data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="keyword">if</span>(data == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(resultCode == requestCode &amp;&amp; requestCode == <span class="number">234</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;key1&quot;</span>);</span><br><span class="line">        Log.i(<span class="string">&quot;This is ret&quot;</span>,ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">&#123;</span><br><span class="line">    btn_start = findViewById(R.id.btn_startActivity);</span><br><span class="line">    btn_start.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.onClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);</span><br><span class="line">            stratActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity03.class);</span><br><span class="line">        startActivityForResult(intent, <span class="number">234</span>);<span class="comment">//234是请求码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、新方法接受返回结果(通过ActivityResultLauncher)，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ActivityReustltLauncher</span> <span class="variable">launcher</span> <span class="operator">=</span> registerForActivity(<span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(), <span class="keyword">new</span> <span class="title class_">ActivityResultCallback</span>&lt;Activity&gt;()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(ActivityResult result)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(lotTag, result.getData().getStringExtra(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    btn_startForResult = findViewById(R.id.btn_startActivityGetResult);</span><br><span class="line">    btn_saartForResult.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListerer()&#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity03);</span><br><span class="line">        launcher.launch(intent);</span><br><span class="line">    &#125;);                                                      </span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/*ActivityResultLauncher 和 registerForActivityResult:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ActivityResultLauncher 是一个接口，用于启动目标活动并接收其结果。</span></span><br><span class="line"><span class="comment">registerForActivityResult 是一个新的方法，用于注册一个能够处理特定结果的 ActivityResultLauncher 实例。它接受两个参数：</span></span><br><span class="line"><span class="comment">第一个参数是一个 ActivityResultContract 的实例，用于指定要执行的操作类型。在这里使用的是 ActivityResultContracts.StartActivityForResult()，表示注册一个能够处理 startActivityForResult 操作的 launcher。</span></span><br><span class="line"><span class="comment">第二个参数是一个 ActivityResultCallback&lt;ActivityResult&gt; 的实例，用于处理从目标活动返回的结果。</span></span><br><span class="line"><span class="comment">onActivityResult 方法:</span></span><br><span class="line"><span class="comment">这是注册的 ActivityResultCallback 的实现部分。</span></span><br><span class="line"><span class="comment">当目标活动返回结果时，系统将调用 onActivityResult 方法，并传递一个 ActivityResult 对象作为参数。</span></span><br><span class="line"><span class="comment">在这里，通过 result.getData().getStringExtra(&quot;key1&quot;) 获取从目标活动返回的数据中名为 &quot;key1&quot; 的字符串数据，并将其记录到日志中。*/</span></span><br></pre></td></tr></table></figure><p>SubActivity03.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity03</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br><span class="line">&#123;</span><br><span class="line">    TestView tv;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="built_in">super</span>.onCreate(savadInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_03);</span><br><span class="line">    tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickerListener()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">            intent.setClass(SubActivity03.<span class="built_in">this</span>, MainActivity.class);</span><br><span class="line">            intent.putExtra(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这是结果1，来自SubActivity03&quot;</span>);</span><br><span class="line">            setResult(<span class="number">234</span>, intent);</span><br><span class="line">            SunActivity03.<span class="built_in">this</span>.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p>1、通过startService、stopService，部分代码</p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyService01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_startService = findViewById(R.id.btn_startService);</span><br><span class="line">btn_startService.setOnClickeListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">            startService(intent);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;);</span><br><span class="line">btn_stopService = findViewById(R.id.btn_stopService);</span><br><span class="line">btn_stopService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickLintener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">            stopService(intent);</span><br><span class="line">        &#125;                                    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2、通过bindService和unbindService，部分代码</p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyBindService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ServiceConnection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iBinder <span class="keyword">instanceof</span> MyBindService.MyBinder)</span><br><span class="line">        &#123;</span><br><span class="line">            myBinder = (MyBinderService.MyBinder)iBinder;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(logTag,<span class="string">&quot;onServiceDisconnected&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//componentName 参数表示成功绑定的服务的组件名称</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">btn_bindService = findViewBtId(R.id.btn_bindService);</span><br><span class="line">btn_binService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyBindService.class);</span><br><span class="line">           bindService(intent, conn, Context.BIND_AUTO_CREATE);</span><br><span class="line">       <span class="comment">//Context.BIND_AUTO_CREATE 是一个标志位，表示如果Service还未创建，则在绑定时会自动创建它。</span></span><br><span class="line">       &#125;                              </span><br><span class="line">&#125;);</span><br><span class="line">btn_unBindService = findViewById(R.id.btn_unbindService);</span><br><span class="line">btn_unBindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                unbindService(conn);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//在Android开发中，绑定Service和解绑Service通常需要成对使用，确保在不需要与Service通信时及时解绑，避免资源浪费或内存泄漏。</span></span><br><span class="line">        <span class="comment">//如果未绑定Service就调用 unbindService(conn)，会引发异常，因此通常在执行解绑操作之前需要先确认是否已经绑定了Service</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>MyBindService，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBindService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">logTag</span> <span class="operator">=</span> <span class="string">&quot;qqqqqqqq&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyBinder</span> <span class="variable">binder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyBinder</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyBinder</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(logTag,<span class="string">&quot;in MyBinder&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> MyBinderService <span class="title function_">getServiceBinder</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> MyBinderService.<span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onCreate;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onDertroy;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Nullable</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> binder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onUnbind</span><span class="params">(Intent intent)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(logTag, <span class="string">&quot;onUnbind&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onUnbind(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BroadcastReceiver介绍"><a href="#BroadcastReceiver介绍" class="headerlink" title="BroadcastReceiver介绍"></a>BroadcastReceiver介绍</h3><h4 id="静态注册"><a href="#静态注册" class="headerlink" title="静态注册"></a>静态注册</h4><p>无序广播</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.MyReceiver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--android:exported=&quot;false&quot; 指定了该接收器是否能被其他应用组件调用或者是从外部调用。false 表示这个接收器仅对自己的应用可见，其他应用无法直接调用它。--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;intent-filter&gt; 标签定义了接收器可以处理的广播意图（Intent）过滤器。&lt;action&gt; 标签用于指定接收器要处理的广播动作（Action）。在这个例子中，动作名称是 &quot;golvRuleaaa&quot;。这表示接收器只会对发送这个特定动作的广播进行处理。--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有序广播(设置优先级)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver01&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exprted</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="动态注册-在MainActivity中"><a href="#动态注册-在MainActivity中" class="headerlink" title="动态注册(在MainActivity中)"></a>动态注册(在MainActivity中)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceive01</span>();</span><br><span class="line"><span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceive02</span>();</span><br><span class="line"><span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line"><span class="type">IntentFileter</span> <span class="variable">intentFileter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">intentFliter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver02, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver03, intentFilter);</span><br></pre></td></tr></table></figure><p>有序广播和无序广播，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_sendBroadcast = findViewById(R.id.btn_broadcast);</span><br><span class="line">btn_sendBroadcast = setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyReceiver.class);</span><br><span class="line">            intent.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">            intent.putRxtra(<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;这是无序广播的内容1&quot;</span>);</span><br><span class="line">            sendBroadcast(intent);</span><br><span class="line">        &#125;                                    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line"><span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line"><span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line"><span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">intentFilter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver02, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver03, intentFilter);</span><br><span class="line">btn_orderBroadcast = findViewById(R.id.btn_orderBroadcast);</span><br><span class="line">btn_orderBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnCLickListener)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent.setAction = <span class="string">&quot;guolvRuleaaa&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;这是原始数据&quot;</span>;</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">extData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        sendOrderedBroadcast(intent, <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">MyReceiver</span>(),<span class="literal">null</span>,<span class="number">0</span>,data,extData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sendOrderedBroadcast共有8个参数</span></span><br><span class="line"><span class="comment">/*1、Intent intent：</span></span><br><span class="line"><span class="comment">表示要发送的广播的意图（Intent）。这个意图描述了广播的动作（Action）、数据（Data）、类别（Category）等信息。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">2、String receiverPermission：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定接收者（Broadcast Receiver）的权限。如果指定了权限，则只有持有相同权限的接收者才能接收到这个广播。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">3、BroadcastReceiver resultReceiver：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，表示最终接收广播结果的 BroadcastReceiver。如果为 null，则系统会忽略这个参数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4、Handler scheduler：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定接收者接收广播的消息队列。如果为 null，则系统会使用当前线程的消息队列来处理广播接收者。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">5、int initialCode：</span></span><br><span class="line"><span class="comment">这是一个整型参数，用于指定初始的广播接收者接收到的初始代码值。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">6、String initialData：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，表示初始广播接收者接收到的初始数据。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">7、Bundle initialExtras：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定初始广播接收者接收到的初始扩展数据（Extras）。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">8、String[] initialPermissions：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定初始广播接收者接收到的初始权限。*/</span></span><br></pre></td></tr></table></figure><p>OrderReceiver01.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver01</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver01,&quot;</span>,<span class="string">&quot;接收到内容&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被OrderReceive01修改&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderReceiver02.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver02</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;guolvRuleaaa&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver02&quot;</span>,<span class="string">&quot;接收到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被OrderReceiver02修改&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderReceiver03.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver03</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver03&quot;</span>,<span class="string">&quot;接收到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被OrderReceiver03修改&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Content-Provider"><a href="#Content-Provider" class="headerlink" title="Content Provider"></a>Content Provider</h3><p>在数据库的清单中申请创建权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">permisson</span> <span class="attr">android:name</span>=<span class="string">&quot;myDB.permisson&quot;</span> <span class="attr">android:protectionLevel</span>=<span class="string">&quot;normal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">permisson</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在要使用该数据库的Moudle的清单文件中申请使用权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDB.permission&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;content://a.b.c.db.authority/user&quot;</span>);</span><br><span class="line"><span class="comment">//Uri.parse() 是 Uri 类的静态方法，用于将字符串表示的 URI 解析为 Uri 对象</span></span><br><span class="line">btn_add = findViewById(R.id.btn_add);</span><br><span class="line">btn_add.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(<span class="string">&quot;uid&quot;</span>,uid++);</span><br><span class="line">        valuse.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;hyq&quot;</span>);</span><br><span class="line">        valuse.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">        values.put(<span class="string">&quot;score&quot;</span>,<span class="number">78</span>);</span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">        contentResolver.insert(uri,values);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">btn_del = findViewById(R.id.btn_del);</span><br><span class="line">btn_del.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnclickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">            <span class="type">int</span> <span class="variable">delCount</span> <span class="operator">=</span> contentResolver.delete(uri,<span class="string">&quot;uid&gt;?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;4&quot;</span>&#125;);</span><br><span class="line">            <span class="keyword">if</span>(delCount &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(logTag,<span class="string">&quot;del Count:&quot;</span> + delCount);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用 getContentResolver() 获取到 ContentResolver 实例后，调用其 delete 方法时，它会根据提供的 Uri 找到匹配的 ContentProvider，然后调用该 ContentProvider 中定义的 delete 方法来执行删除操作。这个过程是通过 Android 系统内部的内容提供器机制来实现的。</span></span><br><span class="line">&#125;);</span><br><span class="line">btn_update = findViewById(R.id.btn_update);</span><br><span class="line">btn_update.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ContentValues values= <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        vlaues.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">        <span class="type">ing</span> <span class="variable">updateCount</span> <span class="operator">=</span> contentResolver.update(uri,values,<span class="string">&quot;uid=?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;3&quot;</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span>(updateCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;update Count&quot;</span>+updateCount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;                              </span><br><span class="line">&#125;);</span><br><span class="line">btn_search = findViewById(R.id.btn_search);</span><br><span class="line">btn_search = setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contetnResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursr</span> <span class="operator">=</span> contentResolver.query(uri,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;uid&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;score&quot;</span>&#125;,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span>(cursor == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cursor.moveToNext())</span><br><span class="line">        &#123;</span><br><span class="line">             <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span>                              cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;uid&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;age&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> score= cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;score&quot;</span>));</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;uid=&quot;</span>+uid+<span class="string">&quot;,name=&quot;</span>+name+<span class="string">&quot;,age=&quot;</span>+age+<span class="string">&quot;,score=&quot;</span>+score);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*contentResolver.query(uri, ...)：</span></span><br><span class="line"><span class="comment">contentResolver 是通过 getContentResolver() 方法获取的 ContentResolver 实例，用于与应用程序中的内容提供器进行通信。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">query(uri, ...) 是 ContentResolver 提供的方法，用于执行查询操作。</span></span><br><span class="line"><span class="comment">uri：</span></span><br><span class="line"><span class="comment">uri 是一个统一资源标识符（URI），用于指定要查询的数据集合的位置和结构。在 Android 中，每个内容提供器都有一个唯一的 URI，用于访问其数据。在你的代码中，uri 可能是你在 MainActivity 中定义的某个位置的 URI，用于访问特定的数据表或者特定的数据集合。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">new String[]&#123;&quot;uid&quot;, &quot;name&quot;, &quot;age&quot;, &quot;score&quot;&#125;：</span></span><br><span class="line"><span class="comment">这部分定义了要返回的列集合，即投影。在查询结果中，只会包含这些列的数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">null, null, null：</span></span><br><span class="line"><span class="comment">这三个 null 分别代表查询的选择条件 (selection 参数，类似 SQL 中的 WHERE 子句)，选择条件参数 (selectionArgs 参数)，以及查询结果的排序方式 (sortOrder 参数)。</span></span><br><span class="line"><span class="comment">在这里，它们都是 null，表示查询将返回指定表格的所有数据，没有额外的筛选条件或排序要求。*/</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>DBHelper.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DBHelper</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DBNAME</span> <span class="operator">=</span> <span class="string">&quot;myDbName.db&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">VERSION</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_USER</span> <span class="operator">=</span> <span class="string">&quot;user&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DBHelper</span><span class="params">(<span class="meta">@Nullable</span> Contextt context, <span class="meta">@Nullable</span> String name, <span class="meta">@Nullable</span> SQLiteDatabase.CursorFactory factory, <span class="type">int</span> version)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, DBNAME,factory, VERSION);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStr</span> <span class="operator">=</span> <span class="string">&quot;create table if not exits &quot;</span> + TABLE_USER +</span><br><span class="line">            <span class="string">&quot;(uid INTERGER PRIMARY KEY AUTOINCREMENT,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;name VARCHAR(30),&quot;</span>+</span><br><span class="line">            <span class="string">&quot;age INTERGER,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;score DOUBLE)&quot;</span>;</span><br><span class="line">        <span class="comment">//注意一定要加空格，否则会出错</span></span><br><span class="line">        sqLiteDatabase.execSQL(sqlStr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase,<span class="type">int</span> i,<span class="type">int</span> i1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyProvider.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyProvider</span> <span class="keyword">extends</span> <span class="title class_">ContentProvider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AUTHORITY_PROVIDER</span> <span class="operator">=</span> <span class="string">&quot;a.b.c.db2.authority&quot;</span>;<span class="comment">//定义了内容 提供器的授权信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CODE_PROVIDER_USER</span> <span class="operator">=</span> <span class="number">11</span>;<span class="comment">//用于标识用户表格的 Uri 匹配码</span></span><br><span class="line">    <span class="keyword">private</span> DBHelper dbHelper;</span><br><span class="line">    <span class="keyword">private</span> SqLiteDatabase db;</span><br><span class="line">    uriMatcher = <span class="keyword">new</span> <span class="title class_">UriMatcher</span>(UriMather.NO_MATCH);<span class="comment">//UriMatcher.NO_MATCH 表示没有匹配时的返回值</span></span><br><span class="line">    uriMatcher.addURI(AUTHRITY_PROVIDER,DBHelper.TABLE_USER,CODE_PROVIDER_USER);</span><br><span class="line">    <span class="comment">//addURI(AUTHRITY_PROVIDER, DBHelper.TABLE_USER, CODE_PROVIDER_USER) 将指定的授权和路径模式与匹配码关联起来。在这里，AUTHRITY_PROVIDER 是授权信息，DBHelper.TABLE_USER 是表格名，CODE_PROVIDER_USER 是匹配码。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dbHelper = <span class="keyword">new</span> <span class="title class_">DBHelper</span>(getContext(),<span class="string">&quot;&quot;</span>,<span class="literal">null</span>,<span class="number">1</span>);</span><br><span class="line">        db = dbHelper.getWritableDatabase();</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(1,&#x27;张三&#x27;,19,87)&quot;</span> );</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(2,&#x27;李四&#x27;,18,87)&quot;</span> );</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//onCreate 方法在内容提供器创建时调用。返回 false，表示内容提供器的初始化失败。通常应该在这里进行初始化操作，并返回相应的结果。</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] strings, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] string1, <span class="meta">@Nullable</span> String s1)</span><span class="comment">//@NonNull Uri uri 是一个在Java或Kotlin中常见的注解语法，用于表示参数 uri 不应为 null</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">/*Uri uri：表示要查询的数据的 URI（统一资源标识符）。</span></span><br><span class="line"><span class="comment">String[] strings：表示查询中的投影列（要返回的列）。</span></span><br><span class="line"><span class="comment">String s：表示查询中的选择条件（类似 SQL 中的 WHERE 子句）。</span></span><br><span class="line"><span class="comment">String[] strings1：表示查询中的选择条件参数（用于替换选择条件中的占位符）。</span></span><br><span class="line"><span class="comment">String s1：表示查询结果的排序方式（类似 SQL 中的 ORDER BY 子句）。*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(<span class="meta">@NonNull</span> Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTableName</span><span class="params">(Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(uriMatcher.match(uri)==CODE_PROVIDER_USER)</span><br><span class="line">        &#123;</span><br><span class="line">            tableName = DBHelper.TABLE_USER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tableName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentvalues)</span></span><br><span class="line">    &#123;<span class="comment">//@Nullable ContentValues contentValues：包含要插入的数据的键值对。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tablename))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">insetCount</span> <span class="operator">=</span> db.insert(tableName,<span class="literal">null</span>,contentValues);</span><br><span class="line">        <span class="keyword">if</span>(inserCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;insert ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;insert fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@NonNUll</span> Uri uri, <span class="meta">@Nullabe</span> String s, <span class="meta">@Nullable</span> String[] strings)</span><span class="comment">/*NonNull Uri uri：用于指定要操作的数据的 URI。</span></span><br><span class="line"><span class="comment">@Nullable String s：表示删除操作的选择条件（类似 SQL 中的 WHERE 子句）。</span></span><br><span class="line"><span class="comment">@Nullable String[] strings：表示删除操作的选择条件参数（用于替换选择条件中的占位符）*/</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">deleteCount</span> <span class="operator">=</span> db.delete(tableName,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(deleteCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;delete ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;delete fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deleteCOunt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentValues,<span class="meta">@Nullabel</span> String s,<span class="meta">@Nullable</span> String[] strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateCount</span> <span class="operator">=</span> db.update(tableName,contentValues,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(updateCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;update ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;upadte fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> updateCount;            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础6--NDK编程1</title>
      <link href="/2024/07/18/Android%E5%9F%BA%E7%A1%806-NDK%E7%BC%96%E7%A8%8B1/"/>
      <url>/2024/07/18/Android%E5%9F%BA%E7%A1%806-NDK%E7%BC%96%E7%A8%8B1/</url>
      
        <content type="html"><![CDATA[<h4 id="Android项目中创建Library模块"><a href="#Android项目中创建Library模块" class="headerlink" title="Android项目中创建Library模块"></a>Android项目中创建Library模块</h4><p>步骤：项目名称右键-&gt;New-&gt;Moudle-&gt;Android Library</p><p>编译：</p><p>编译单独模块：选中模块-&gt;Build-&gt;Make Moudle</p><p>旧版本产出位置：模块\build\intermediates\packaged-classed\debug\</p><p>新版本产出位置：模块\build\intermediates\arr_main_jar\debug\</p><h4 id="使用Android-SDK中的dx工具生成"><a href="#使用Android-SDK中的dx工具生成" class="headerlink" title="使用Android SDK中的dx工具生成"></a>使用Android SDK中的dx工具生成</h4><p>dx位置：AndroidSDK根目录\build-tools\28.0.3\dx.bat</p><p>用法：dx.bat–dex–output&#x3D;xx srcDir</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set filename=test2.jar</span><br><span class="line">set srcDir=D:\__job\study20230717-pkgJar\pkgJarForLoad\mylibrary1\build\intermediates\aar_main_jar\debug\</span><br><span class="line">set dx=&quot;D:\Android SDK\build-tools\34.0.0\d8.bat&quot;</span><br><span class="line">del  out\%filename%</span><br><span class="line">call %dx% --dex --output=out\%filename%  %srcDir%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h4 id="使用gradlew生成"><a href="#使用gradlew生成" class="headerlink" title="使用gradlew生成"></a>使用gradlew生成</h4><p>模块内build.gradle添加：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">task makeJar(type:Copy)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">//删除旧的jar</span><br><span class="line"></span><br><span class="line">delete &#x27;build/libs/test.jar&#x27;</span><br><span class="line"></span><br><span class="line">//设置源.jar目录</span><br><span class="line"></span><br><span class="line">from(&#x27;build/intermediates/arr_main_jar/release&#x27;)</span><br><span class="line"></span><br><span class="line">//设置产出目录</span><br><span class="line"></span><br><span class="line">into(&#x27;build/libs/&#x27;)</span><br><span class="line"></span><br><span class="line">//设置源目录内文件过滤</span><br><span class="line"></span><br><span class="line">include(&#x27;classes.jar&#x27;)</span><br><span class="line"></span><br><span class="line">//重命名</span><br><span class="line"></span><br><span class="line">rename(&#x27;classes.jar&#x27;,&#x27;test.jar)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目根目录执行Ctrl+Enter:</p><p>gradlew makeJar</p><h4 id="NDK编程"><a href="#NDK编程" class="headerlink" title="NDK编程"></a>NDK编程</h4><p>创建NDK项目及JNI函数</p><p>创建NDK项目：</p><p>1、下载ndk</p><p>2、创建so项目</p><p>NDK（Native Development Kit）是Android提供的一个工具集，允许开发者使用C或C++等本地语言编写部分Android应用的代码，并通过JNI（Java Native Interface）与Java代码进行交互。NDK主要用于提高应用程序的性能、复用现有的本地代码库以及访问设备硬件等功能</p><p>创建JNI函数</p><p>1、函数命名规则</p><p>2、参数</p><p>JNI（Java Native Interface）是Java提供的一种机制，用于实现Java代码与本地（Native）代码（如C、C++等）之间的交互和通信。它允许Java应用程序调用本地方法（Native Method），也允许本地方法调用Java代码。</p><h4 id="函数签名"><a href="#函数签名" class="headerlink" title="函数签名"></a>函数签名</h4><p>作用：函数的身份证</p><p>方法：javap -s a.b.cjavareflection.Student获取签名</p><p>例子(  descriptor: (Ljava&#x2F;lang&#x2F;String;DJ)I)</p><h4 id="读写SD卡文件"><a href="#读写SD卡文件" class="headerlink" title="读写SD卡文件"></a>读写SD卡文件</h4><p>权限：静态申请权限、动态申请权限、检查自己权限</p><p>读取文件：fopen、fgets、fput、fclose</p><p>MainActivity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.ndk01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.PackageManagerCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.ndk01.databinding.ActivityMainBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">MY_PERMISSIONS_REQUEST_WRITE_CODE</span> <span class="operator">=</span> <span class="number">11</span>;</span><br><span class="line">    <span class="comment">// Used to load the &#x27;ndk01&#x27; library on application startup.</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;ndk01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">testFun</span><span class="params">(String a,Double b,<span class="type">long</span> c)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionsResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="type">int</span>[] grantResults)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="keyword">switch</span>(requestCode)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> MY_PERMISSIONS_REQUEST_WRITE_CODE:</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;写SDCard权限申请成功&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;写SDCard权限申请失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">33</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;这里是申请其他权限的结果&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">        testFun(<span class="string">&quot;aa&quot;</span>,<span class="number">4.5</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Example of a call to a native method</span></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> binding.sampleText;</span><br><span class="line">        tv.setText(stringFromJNI());</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> ContextCompat.checkSelfPermission(MainActivity.<span class="built_in">this</span>, Manifest.permission.WRITE_EXTERNAL_STORAGE);<span class="comment">// ContextCompat这里选Android</span></span><br><span class="line">                <span class="keyword">if</span>(ret == PackageManager.PERMISSION_GRANTED)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;已经有写SDCar的权限&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fp1</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fc</span> <span class="operator">=</span> readSDcardFile(fp1+<span class="string">&quot;b.txt&quot;</span>);</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;文件内容&quot;</span> + fc);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;还没有写SDCar的权限&quot;</span>);</span><br><span class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="built_in">this</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,MY_PERMISSIONS_REQUEST_WRITE_CODE);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * A native method that is implemented by the &#x27;ndk01&#x27; native library,</span></span><br><span class="line"><span class="comment">     * which is packaged with this application.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">stringFromJNI</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">getlength</span><span class="params">(String param)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">readSDcardFile</span><span class="params">(String filepath)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Ndk01&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jni.h</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">extern <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line"><span class="title function_">Java_a_b_c_ndk01_MainActivity_readSDcardFile</span><span class="params">(JNIEnv *env, jobject thiz, jstring filepath)</span> ;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement readSDcardFile()</span></span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk01_MainActivity_readSDcardFile</span><span class="params">(JNIEnv *env, jobject thiz, jstring filepath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span>* filePath = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFChars</span>(filepath,<span class="number">0</span>);</span><br><span class="line">    FILE *fp;</span><br><span class="line">    jstring jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">    <span class="type">char</span> *tmp = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFChars</span>(jstring_ret,<span class="number">0</span>);</span><br><span class="line">    fp = <span class="built_in">fopen</span>(filePath,<span class="string">&quot;r&quot;</span>);<span class="comment">//&quot;r&quot;：只读模式，文件必须存在。</span></span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;fp == NULL, %s&quot;</span>,filePath);</span><br><span class="line">        <span class="keyword">return</span> jstring_ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fgets</span>(buff,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGI</span>(<span class="string">&quot;fgets :%s&quot;</span>,buff)</span><br><span class="line">    &#125;</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringChars</span>(jstring_ret,<span class="built_in">reinterpret_cast</span>&lt;<span class="type">const</span> jchar*&gt;(tmp));</span><br><span class="line">    jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(buff);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JNI-签名规则"><a href="#JNI-签名规则" class="headerlink" title="JNI 签名规则"></a>JNI 签名规则</h3><p>在JNI中，方法签名采用一种特定的格式，用于描述Java方法的参数类型和返回值类型。格式为：</p><ul><li>参数类型：<ul><li><code>Z</code>：boolean</li><li><code>B</code>：byte</li><li><code>C</code>：char</li><li><code>S</code>：short</li><li><code>I</code>：int</li><li><code>J</code>：long</li><li><code>F</code>：float</li><li><code>D</code>：double</li><li><code>Lfully/qualified/ClassName;</code>：对象类型，如 <code>Ljava/lang/String;</code></li><li><code>[Type</code>：数组类型，如 <code>[I</code> 表示 <code>int[]</code></li><li><code>(</code> 和 <code>)</code>：分别用于标识方法的开始和结束</li></ul></li></ul><h4 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h4><p>作用：获取和操作已经装载的类。</p><p>函数：</p><p>1、获取类：</p><p>1.1Class.forName(“类名全路径”)  1.2类名.class c  1.3实例.getClass()</p><p>2、获取方法和属性：</p><p>2.1 类.getDeclareMethods() 2.2类.getDeclaredConstructors()  2.3类.getMethod()  2.4类.getDeclaredFields()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> Student.class;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_study</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;study&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor_Student</span> <span class="operator">=</span> clz.getConstructor(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) constructor_Student.newInstance(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;lisi&quot;</span>,<span class="number">25</span>&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_study.invoke(student,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">77</span>&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;study ret:&quot;</span> + (String) obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">    &#123;</span><br><span class="line">        ee.printStackTrace();</span><br></pre></td></tr></table></figure><p>3、调用方法:</p><p>3.1方法.invoke()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> one.getClass();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_getAge0</span> <span class="operator">=</span> clz.getDeclaredMethod(<span class="string">&quot;getAge&quot;</span>);</span><br><span class="line">        method_getAge0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_getAge</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;getAge&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_getAge.invoke(one,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqq&quot;</span>,<span class="string">&quot;getAge ret&quot;</span>+(<span class="type">int</span>)obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">    &#123;</span><br><span class="line">        ee.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="NDK反射Java层"><a href="#NDK反射Java层" class="headerlink" title="NDK反射Java层"></a>NDK反射Java层</h4><p>作用：NDK层代码可以获取、调用java层方法和变量</p><p>函数：</p><p>1、获取类：</p><p>1.1jclass GetObjectClass(对象)  1.2jclass FindClass(“类名”)</p><p>2、获取方法ID:(javap -s a.b.c.javareflectiontest.Student获取签名)</p><p>2.1jmetthodID GetMethodID(jclass,const char*name,const char(sig))</p><p>2.2jmethodID GetstaticMethodID(jclass clazz,const char*name,const char(sig))</p><p>3、调用方法：</p><p>3.1void CallVoidMethod(jobject obj,jmethodID,methodID,…)</p><p>3.2void CallStaticVoidMethod(jclass clazz,jmethodID,methodID,….)</p><p>3.3jobject CallObjectMethod(JNEnv*,jobject,jmethodID,….)</p><p>4、获取和设置成员变量</p><p>4.1GetFieldID</p><p>4.2GetObjectField</p><p>4.3SetObjectField</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk01_MainActivity_callStaticJavaFunJNI</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass jclass_student2 = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;a/b/c/ndk01/Student&quot;</span>);</span><br><span class="line">    jmethodID jmethodId_calcLength = env-&gt;<span class="built_in">GetStaticMethodID</span>(jclass_student2,<span class="string">&quot;calcLength&quot;</span>, <span class="string">&quot;(Ljava/lang/String;)I&quot;</span>);</span><br><span class="line">    jstring jstring_param = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;hahahaha&quot;</span>);</span><br><span class="line">    jint jint_ret = env-&gt;<span class="built_in">CallStaticIntMethod</span>(jclass_student2,jmethodId_calcLength,jstring_param);</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;ndk call calcLength ret: %d&quot;</span>,jint_ret);</span><br><span class="line">    <span class="keyword">return</span> jstring_param;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础5</title>
      <link href="/2024/07/17/Android%E5%9F%BA%E7%A1%805/"/>
      <url>/2024/07/17/Android%E5%9F%BA%E7%A1%805/</url>
      
        <content type="html"><![CDATA[<h4 id="Binder功能简介"><a href="#Binder功能简介" class="headerlink" title="Binder功能简介"></a>Binder功能简介</h4><p>用途：Binder是一种进程间通信的机制。</p><p>特点：虚拟物理设备驱动，像人血管一样，穿梭在各个组件和进程之间，多进程通信，采用C&#x2F;S架构。</p><p>参与角色：</p><p>Client进程：使用服务的进程需等待Server注册后，再向ServiceManager获取服务。</p><p>Server进程：提供服务的进程。需先向ServiceManager进行注册。</p><p>ServiceManager进程：管理注册过的服务。</p><p>Binder驱动：负责进程之间Binder通信的建立，Binder在进程之间的传递，Binder引用计数管理，数据包在进程之间的传递和交互等一系列底层支持。</p><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><p>安全优势：传统的进程通信方式对于通信双方的身份并没有做出严格的验证，比如Socket通信的IP地址是客户端手动填入，很容易进行伪造。Binder机制从协议本身就支持对通信双方做身份校验，为每个APP分配UID，进程的UID是鉴别进程身份的重要标志，从而大大提高了安全性。</p><p>性能优势：</p><p>共享内存：数据拷贝0次，但复杂且容易产生安全问题</p><p>Binder：数据拷贝1次，兼顾简单已用和安全问题</p><p>传统Socket&#x2F;管道&#x2F;消息队列：数据拷贝2次。</p><h4 id="代码例子并升级代码1"><a href="#代码例子并升级代码1" class="headerlink" title="代码例子并升级代码1"></a>代码例子并升级代码1</h4><p>步骤：</p><p>​服务端：1、继承Service  2、编写AndroidManifest.xml</p><p>​客户端：1、编写Service的连接，并获取远程Ibinder  2、实现绑定Service代码  3、实现获取信息功能的代码</p><h4 id="UseBinderService"><a href="#UseBinderService" class="headerlink" title="UseBinderService"></a>UseBinderService</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Binder</span> <span class="variable">mBinder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binder</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(code == REQUEST_CODE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">                <span class="keyword">if</span>(reply !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    reply.writeInt(age);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">            <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Binder</span> <span class="variable">mBinder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binder</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(code == REQUEST_CODE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">                <span class="keyword">if</span>(reply !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    reply.writeInt(age);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">            <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.UseBinderServer&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyService&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:process</span>=<span class="string">&quot;:server&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.server.student&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="UseBinderClient"><a href="#UseBinderClient" class="headerlink" title="UseBinderClient"></a>UseBinderClient</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    Button btn_bindService,btn_searchAge;</span><br><span class="line">    IBinder binder;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ServiceConnection</span> <span class="variable">serviceConnection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = iBinder;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">bindRemoteService</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;android.intent.action.server.student&quot;</span>;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(action);</span><br><span class="line">        intent.setPackage(<span class="string">&quot;a.b.c.usebinderserver&quot;</span>);<span class="comment">//这里认真点，不要加package</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="built_in">this</span>.bindService(intent, serviceConnection,BIND_AUTO_CREATE);</span><br><span class="line">        Log.i(<span class="string">&quot;ttttt-client&quot;</span>,<span class="string">&quot;bindRemoteService result:&quot;</span> + bt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        tv = findViewById(R.id.tv_view);</span><br><span class="line">        btn_bindService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_searchAge = findViewById(R.id.btn_searchAge);</span><br><span class="line">        btn_bindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                bindRemoteService();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_searchAge.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;tttt-client&quot;</span>,<span class="string">&quot;开始查询&quot;</span>);</span><br><span class="line">                getRemoteAge(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getRemoteAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">data</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">reply</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        data.writeString(name);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(binder == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            binder.transact(REQUEST_CODE,data,reply,<span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> reply.readInt();</span><br><span class="line">            tv.setText(<span class="string">&quot;查询年龄结果：&quot;</span>+age);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">            tv.setText(ee.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">queries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.usebinderserver&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">queries</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.UseBinderClient&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>优化1：</p><p>​服务端：1、继承Service——优化创建Binder类实现传输和数据提供方法  2、编写AndroidManifest.xml</p><p>​客户端：1、编写Service的连接，并获取远程Ibinder——编写代理类管理Binder  2、实现绑定Service代码  3、实现获取信息功能代码——优化编写接口</p><h4 id="UseBinderService-1"><a href="#UseBinderService-1" class="headerlink" title="UseBinderService"></a>UseBinderService</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServerBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span> <span class="keyword">implements</span> <span class="title class_">IStudentInterface</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">        <span class="keyword">if</span> (code == REQUEST_CODE)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">            Log.i(<span class="string">&quot;ttttttt-service&quot;</span>, <span class="string">&quot;recv :&quot;</span>+studentName);</span><br><span class="line">            <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">            Log.i(<span class="string">&quot;ttttttt-service&quot;</span>, <span class="string">&quot;return :&quot;</span>+age);</span><br><span class="line">            <span class="keyword">if</span> (reply != <span class="literal">null</span>)</span><br><span class="line">                reply.writeInt(age);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Integer&gt; info = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span> <span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">23</span>);</span><br><span class="line">        info.put(<span class="string">&quot;lisi&quot;</span>,<span class="number">19</span>);</span><br><span class="line">        info.put(<span class="string">&quot;wangwu&quot;</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> info.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String name,<span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(name,age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ServerBinder.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServerBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span> <span class="keyword">implements</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (code == REQUEST_CODE) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">                <span class="keyword">if</span> (reply != <span class="literal">null</span>) &#123;</span><br><span class="line">                    reply.writeInt(age);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IStudentInterface.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//查询年龄接口</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UseBinderClient-1"><a href="#UseBinderClient-1" class="headerlink" title="UseBinderClient"></a>UseBinderClient</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    Button btn_bindService,btn_searchAge;</span><br><span class="line">    IStudentInterface binder;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ServiceConnection</span> <span class="variable">serviceConnection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = BinderProxy.asInerface(iBinder);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">bindRemoteService</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;android.intent.action.server.student&quot;</span>;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(action);</span><br><span class="line">        intent.setPackage(<span class="string">&quot;a.b.c.usebinderserver&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="built_in">this</span>.bindService(intent, serviceConnection,BIND_AUTO_CREATE);</span><br><span class="line">        Log.i(<span class="string">&quot;ttttt-client&quot;</span>,<span class="string">&quot;bindRemoteService result:&quot;</span> + bt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        tv = findViewById(R.id.tv_view);</span><br><span class="line">        btn_bindService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_searchAge = findViewById(R.id.btn_searchAge);</span><br><span class="line">        btn_bindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                bindRemoteService();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_searchAge.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;tttt-client&quot;</span>,<span class="string">&quot;开始查询&quot;</span>);</span><br><span class="line">                binder.getStudentAge(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BinderProxy.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BinderProxy</span> <span class="keyword">implements</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> IBinder mRemoteBinder;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BinderProxy</span><span class="params">(IBinder mRemoteBinder)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mRemoteBinder = mRemoteBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">data</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">reply</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        data.writeString(name);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(mRemoteBinder== <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> age;</span><br><span class="line">            &#125;</span><br><span class="line">            mRemoteBinder.transact(REQUEST_CODE,data,reply,<span class="number">0</span>);</span><br><span class="line">            age = reply.readInt();</span><br><span class="line">            <span class="keyword">return</span> age;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IStudentInterface <span class="title function_">asInerface</span><span class="params">(IBinder iBinder)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iBinder == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(iBinder <span class="keyword">instanceof</span> IStudentInterface)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (IStudentInterface) iBinder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BinderProxy</span>(iBinder);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IStudetnInterface.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//查询年龄接口</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：Android11及以后的版本要在客户端加上服务端的包名</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">queries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.usebinderserver&quot;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="attr">queries</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在AndroidManifest.xml文件中，<code>&lt;queries&gt;</code>元素是用于声明应用需要的查询信息，这主要用于提高应用的安全性和隐私性，特别是在Android 11（API 级别 30）及更高版本中。<code>&lt;queries&gt;</code>元素允许应用声明它可以查询哪些其他应用的数据或组件，这有助于系统更好地管理应用的权限和可见性。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础4</title>
      <link href="/2024/07/16/Android%E5%9F%BA%E7%A1%804/"/>
      <url>/2024/07/16/Android%E5%9F%BA%E7%A1%804/</url>
      
        <content type="html"><![CDATA[<h4 id="Apache一些常用名命令："><a href="#Apache一些常用名命令：" class="headerlink" title="Apache一些常用名命令："></a>Apache一些常用名命令：</h4><p># 安装服务<br>httpd -k install -n apache</p><p># 启动服务<br>net start apache<br>httpd -k start -n apache</p><p># 关闭服务<br>net stop apache<br>httpd -k stop -n apache</p><p># 重启服务<br>httpd -k restart -n apache</p><p># 卸载服务<br>## 卸载服务时先停止<br>httpd -k stop -n apache<br>## 再卸载服务<br>httpd -k uninstall -n apache</p><h4 id="下载zip文件知识点："><a href="#下载zip文件知识点：" class="headerlink" title="下载zip文件知识点："></a>下载zip文件知识点：</h4><p>(1)使用HttpURLConnection进行http下载</p><p>(2)使用AsyncTask创建异步任务</p><p>(3)申请权限</p><h4 id="将zip文件写到sdcard知识点"><a href="#将zip文件写到sdcard知识点" class="headerlink" title="将zip文件写到sdcard知识点"></a>将zip文件写到sdcard知识点</h4><p>(1)创建保存目录</p><p>(2)写文件</p><p>(3)下载完成返回标志</p><h4 id="解压zip文件到指定目录知识点"><a href="#解压zip文件到指定目录知识点" class="headerlink" title="解压zip文件到指定目录知识点"></a>解压zip文件到指定目录知识点</h4><p>(1)将zip包内文件解压到指定目录</p><p>(2)将zip文件删除</p><p>注意：Android高版本不能使用http协议</p><p>解决方法：清单文件里面添加(application中)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot;</span><br></pre></td></tr></table></figure><p>注意：还需要在清单里面申请使用网络的权限(application外)、读sd卡权限、写sd卡权限、管理sd卡权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testdwonloadzip;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> findViewById(R.id.tv_downResult);</span><br><span class="line">        findViewById(R.id.btn_startDownload).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">DownloadZip</span> <span class="variable">downloadZip</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DownloadZip</span>(tv);</span><br><span class="line">                downloadZip.execute(<span class="string">&quot;http://192.168.31.197/down/test.zip&quot;</span>);<span class="comment">//由于没有下载资源，就不实操了</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        findViewById(R.id.btn_startzip).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">UnzipFile</span> <span class="variable">unzipFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UnzipFile</span>(tv);</span><br><span class="line">                unzipFile.execute(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DownloadZip.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testdwonloadzip;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadZip</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;String,String,String&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DownloadZip</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">doInBackground</span><span class="params">(String... strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">httpURLConnection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        OutputStream outputStream;</span><br><span class="line">        FileOutputStream outputStreamToFle;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(strings[<span class="number">0</span>]);</span><br><span class="line">            httpURLConnection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            httpURLConnection.connect();</span><br><span class="line">            <span class="keyword">if</span> (httpURLConnection.getResponseCode() != HttpURLConnection.HTTP_OK) &#123;</span><br><span class="line">                Log.d(<span class="string">&quot;DownloadZip&quot;</span>, <span class="string">&quot;nor error code&quot;</span> + httpURLConnection.getResponseCode());</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;code error&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            inputStream = httpURLConnection.getInputStream();</span><br><span class="line">            outputStream = httpURLConnection.getOutputStream();</span><br><span class="line"></span><br><span class="line">            <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (dir.exists()) &#123;</span><br><span class="line">                dir.mkdir();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fullFile</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFile);</span><br><span class="line">            <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">            outputStreamToFle = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file.getAbsoluteFile());</span><br><span class="line"></span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> count;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                count = inputStream.read(buffer);</span><br><span class="line">                <span class="keyword">if</span> (count == -<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                outputStreamToFle.write(buffer, <span class="number">0</span>, count);</span><br><span class="line">            &#125;</span><br><span class="line">            outputStreamToFle.close();</span><br><span class="line">            ret = <span class="string">&quot;success&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">            ret = <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(inputStream !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(httpURLConnection!=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    httpURLConnection.disconnect();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">            &#123;</span><br><span class="line">                ee.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(String s)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostExecute(s);</span><br><span class="line">        <span class="keyword">if</span>(ret.equals(<span class="string">&quot;success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载success&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UnzipFile.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testdwonloadzip;</span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipOutputStream;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnzipFile</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ZipInputStream</span> <span class="variable">zipInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UnzipFile</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Object <span class="title function_">doInBackground</span><span class="params">(Object[] objects)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">            <span class="keyword">if</span>(file.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">jieyaDir</span> <span class="operator">=</span> dir.getAbsolutePath();</span><br><span class="line">                inputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                zipInputStream = <span class="keyword">new</span> <span class="title class_">ZipInputStream</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(inputStream));</span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                ZipEntry zipEntry;</span><br><span class="line">                <span class="keyword">while</span>((zipEntry = zipInputStream.getNextEntry())!= <span class="literal">null</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> zipEntry.getName();</span><br><span class="line">                    <span class="keyword">if</span>(zipEntry.isDirectory())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">subDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(jieyaDir + <span class="string">&quot;/&quot;</span>+fileName);</span><br><span class="line">                        subDir.mkdirs();</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">int</span> rCount;</span><br><span class="line"></span><br><span class="line">                    <span class="type">FileOutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(jieyaDir + <span class="string">&quot;/&quot;</span>+fileName);</span><br><span class="line">                    <span class="keyword">while</span>((rCount = zipInputStream.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        fout.write(buffer,<span class="number">0</span>,rCount);</span><br><span class="line">                    &#125;</span><br><span class="line">                    fout.close();</span><br><span class="line">                    zipInputStream.closeEntry();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                zipInputStream.close();</span><br><span class="line">                ret = <span class="string">&quot;unzip success&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="string">&quot;file not exits&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(Object o)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostExecute(o);</span><br><span class="line">        <span class="keyword">if</span>(ret.equals(<span class="string">&quot;unzip success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="认识Handler"><a href="#认识Handler" class="headerlink" title="认识Handler"></a>认识Handler</h4><p>简介：Handler是一套Android消息传递机制，主要用于线程间通信，异步消息处理。</p><p>场景：主线程负责更新UI，子线程干活并反馈给主线程结果</p><p>使用例子：</p><p>1、sendMessage、post区别？</p><p>看一看Handler类源码post函数</p><p>2、主线程handler、子线程handler区别？</p><p>3、Message是个容器，卡车，装箱</p><p>4、先写代码，然后画个图？</p><p>和SDK的消息队列一样</p><h4 id="底层原理：线程同步"><a href="#底层原理：线程同步" class="headerlink" title="底层原理：线程同步"></a>底层原理：线程同步</h4><p>线程同步回顾：</p><p>synchronized、wait()、notify()</p><p>模型：</p><p>生产者消费者</p><h4 id="底层原理：线程同步-缓冲区："><a href="#底层原理：线程同步-缓冲区：" class="headerlink" title="底层原理：线程同步-缓冲区："></a>底层原理：线程同步-缓冲区：</h4><p>具备条件：</p><p>使用synchronized</p><p>有入队操作</p><p>有出队操作</p><p>生产者：Handler</p><p>生产消息：sendMessage post</p><p>目标：Msg.target &#x3D; this</p><p>消费者：Looper</p><p>如何消费：</p><p>1、死循环获取消息loop()</p><p>2、队列获取消息 next()</p><p>3、派发消息 对应Handle的处理函数handleMessage()</p><p>MainActivity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyHandler myHandler;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI01</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI02</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;02&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI03</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;03&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updataUI04</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;04&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        myHandler = <span class="keyword">new</span> <span class="title class_">MyHandler</span>(<span class="built_in">this</span>);</span><br><span class="line">        <span class="type">SubThreadCreateHander</span> <span class="variable">subThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubThreadCreateHander</span>();</span><br><span class="line">        subThread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程</span></span><br><span class="line">        tv =findViewById(R.id.tv_view);</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="literal">false</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//子线程使用sendMessage给主线程发消息</span></span><br><span class="line">                    <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(myHandler);</span><br><span class="line">                    myThread.start();</span><br><span class="line">                    <span class="comment">//子线程使用post给主线程发消息(这里不是很理解)</span></span><br><span class="line">                    myHandler.post(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">try</span> &#123;</span><br><span class="line">                                    Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                                    updateUI01();</span><br><span class="line">                                    updateUI02();</span><br><span class="line">                                    tv.setText(<span class="string">&quot;i:&quot;</span>+i);</span><br><span class="line">                                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//子线程使用sendMessage给主线程发消息</span></span><br><span class="line">                <span class="comment">//MyThread myThread = new MyThread(myHandler);</span></span><br><span class="line">                <span class="comment">//myThread.start();</span></span><br><span class="line">                <span class="comment">//子线程使用post给主线程发消息(这里不是很理解)</span></span><br><span class="line">                <span class="comment">//myHandler.post(new Runnable() &#123;</span></span><br><span class="line"><span class="comment">//                    @Override</span></span><br><span class="line"><span class="comment">//                    public void run()</span></span><br><span class="line"><span class="comment">//                    &#123;</span></span><br><span class="line"><span class="comment">//                        for(int i=0;i&lt;5;i++)</span></span><br><span class="line"><span class="comment">//                        &#123;</span></span><br><span class="line"><span class="comment">//                            try &#123;</span></span><br><span class="line"><span class="comment">//                                Thread.sleep(2000);</span></span><br><span class="line"><span class="comment">//                                updateUI01();</span></span><br><span class="line"><span class="comment">//                                updateUI02();</span></span><br><span class="line"><span class="comment">//                                tv.setText(&quot;i:&quot;+i);</span></span><br><span class="line"><span class="comment">//                            &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                                throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">//                            &#125;</span></span><br><span class="line"><span class="comment">//                        &#125;</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;);</span></span><br><span class="line">                <span class="comment">//主线程做完事情后，把结果通过子线程的handler发送给子线程用</span></span><br><span class="line">                <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">                message.what = <span class="number">99</span>;</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                bundle.putString(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这条内容是先放入Bundle,然后通过Message传递&quot;</span>);</span><br><span class="line">                message.setData(bundle);</span><br><span class="line">                subThread.subHandler.sendMessage(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyHandler</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MainActivity mainActivity;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyHandler</span><span class="params">(MainActivity pmainActivity)</span></span><br><span class="line">    &#123;</span><br><span class="line">        mainActivity = pmainActivity;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        Log.i(<span class="string">&quot;MyHandler&quot;</span>,<span class="string">&quot;in handleMessage&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (msg.what)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI01();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI02();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI03();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updataUI04();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyThread</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler mh;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mh)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mh = mh;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.run();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">            message.what =i;</span><br><span class="line">            mh.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>SubThreadCreateHander</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler mh;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mh)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mh = mh;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.run();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">            message.what =i;</span><br><span class="line">            mh.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Handler总结"><a href="#Handler总结" class="headerlink" title="Handler总结"></a>Handler总结</h4><p>在Android开发中，Handler是一种用于与线程间通信的机制，它允许你发送和处理消息和Runnable对象，从而在不同的线程之间执行代码。主要用途是在后台线程执行耗时操作后，将结果传递给主线程更新UI，或者实现定时任务等功能。</p><h3 id="主要用途和特点："><a href="#主要用途和特点：" class="headerlink" title="主要用途和特点："></a>主要用途和特点：</h3><ol><li><p><strong>线程间通信</strong>：</p><ul><li>在Android中，UI更新必须在主线程(UI线程)中执行，而耗时操作（如网络请求、文件读写等）需要在后台线程执行，为了在这两者之间进行通信，可以使用Handler机制。</li></ul></li><li><p><strong>消息处理和处理机制</strong>：</p><ul><li>Handler可以用来发送消息（Message）或者投递任务（Runnable）到特定的线程消息队列中，这些消息或任务会按照一定的顺序执行。</li></ul></li><li><p><strong>主要组件</strong>：</p><ul><li><strong>Looper</strong>：一个线程本地的消息循环机制，用来不断地从消息队列中取出消息或任务，并将其分发给对应的Handler处理。</li><li><strong>MessageQueue</strong>：用来存放所有待处理的消息或任务。</li><li><strong>HandlerThread</strong>：一种带有Looper的线程类，通常用于后台线程的创建和消息处理。</li></ul></li><li><p><strong>主要方法和用法</strong>：</p><ul><li>**sendMessage(Message)**：将Message对象发送到Handler关联的消息队列中。</li><li>**post(Runnable)**：将Runnable对象发送到Handler关联的消息队列中，用于执行一些任务。</li><li>**handleMessage(Message)**：处理从消息队列中取出的Message对象，通常在Handler的子类中重写这个方法来处理消息。</li></ul></li><li><p>主线程操作：发送消息到主线程，在主线程中使用Handler，可以将消息或任务发送到主线程的消息队列中，以便在主线程上处理UI更新和其他操作。</p><p><strong>示例：</strong></p><p>假设在一个后台线程中执行了一个耗时操作（例如网络请求），操作完成后需要更新UI显示结果。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在主线程中创建Handler，用于处理后台线程发送的消息</span></span><br><span class="line"><span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()) &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        <span class="comment">// 处理消息，更新UI</span></span><br><span class="line">        <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> MESSAGE_NETWORK_RESPONSE:</span><br><span class="line">                <span class="type">String</span> <span class="variable">response</span> <span class="operator">=</span> (String) msg.obj;</span><br><span class="line">                textView.setText(response); <span class="comment">// 更新UI显示网络请求的结果</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 可以处理更多的消息类型</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在后台线程中执行耗时操作，操作完成后发送消息到主线程更新UI</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 模拟网络请求耗时操作</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>); <span class="comment">// 模拟耗时3秒的网络请求</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 网络请求完成后，发送消息给主线程更新UI</span></span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> handler.obtainMessage();</span><br><span class="line">        message.what = MESSAGE_NETWORK_RESPONSE;</span><br><span class="line">        message.obj = <span class="string">&quot;Response from server&quot;</span>; <span class="comment">// 假设这是网络请求返回的数据</span></span><br><span class="line">        handler.sendMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>在这个示例中：</p><ul><li>主线程中创建了一个Handler对象，并重写了<code>handleMessage</code>方法来处理接收到的消息。</li><li>在后台线程中执行了一个模拟的网络请求耗时操作（通过Thread.sleep来模拟），操作完成后通过Handler发送了一个包含网络请求结果的消息到主线程。</li><li>主线程接收到消息后，根据消息的类型（<code>MESSAGE_NETWORK_RESPONSE</code>），更新了TextView的显示内容。</li></ul><p>这样，通过Handler可以实现在后台线程执行耗时操作后，将结果发送到主线程更新UI的功能。</p><h3 id="2-后台线程操作：发送消息到后台线程"><a href="#2-后台线程操作：发送消息到后台线程" class="headerlink" title="2. 后台线程操作：发送消息到后台线程"></a>2. 后台线程操作：发送消息到后台线程</h3><p>尽管主要用途是在主线程和后台线程之间进行通信，但是也可以使用Handler在后台线程之间发送消息。这种情况比较少见，但在特定场景下可能会有用，例如在一个长时间运行的后台线程中执行任务，然后将任务结果或状态消息发送给另一个后台线程</p><p><strong>示例：</strong></p><p>假设有两个后台线程，一个线程负责执行某种计算任务，另一个线程监听并处理计算结果。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建两个Handler，分别用于两个后台线程之间通信</span></span><br><span class="line"><span class="type">Handler</span> <span class="variable">backgroundHandler1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()); <span class="comment">// 用于处理后台任务1</span></span><br><span class="line"><span class="type">Handler</span> <span class="variable">backgroundHandler2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()); <span class="comment">// 用于处理后台任务2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 后台线程1执行计算任务，并将结果发送给后台线程2</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 模拟计算任务</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> performCalculation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将计算结果发送给后台线程2</span></span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> backgroundHandler2.obtainMessage();</span><br><span class="line">        message.what = MESSAGE_CALCULATION_RESULT;</span><br><span class="line">        message.arg1 = result;</span><br><span class="line">        backgroundHandler2.sendMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 后台线程2监听并处理计算结果</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 监听后台线程1发送的消息</span></span><br><span class="line">        backgroundHandler2.post(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">// 处理收到的消息</span></span><br><span class="line">                <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                    <span class="keyword">case</span> MESSAGE_CALCULATION_RESULT:</span><br><span class="line">                        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> msg.arg1;</span><br><span class="line">                        <span class="comment">// 处理计算结果</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="comment">// 可以处理更多的消息类型</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础3</title>
      <link href="/2024/07/15/Android%E5%9F%BA%E7%A1%803/"/>
      <url>/2024/07/15/Android%E5%9F%BA%E7%A1%803/</url>
      
        <content type="html"><![CDATA[<h4 id="Content-Provider-介绍"><a href="#Content-Provider-介绍" class="headerlink" title="Content Provider 介绍"></a>Content Provider 介绍</h4><p>Content Provider属于Android应用程序的组件之一，作为应用程序的组件之一，作为应用程序之间唯一的共享数据的途径，Content Provider为存储和读取数据提供了统一的接口。Content Provider主要的功能就是存储并检索数据以及向其他应用程序提供访问数据的接口。Android系统为一些常见的数据类型(如音乐、视频、图像、手机通讯录联系人信息等)内置了一系列的Content Provider，这些都位于android.provider包下。持有特定的许可，可以在自己开发的应用程序中，可以在自己开发的应用程序中访问这些Content Provider，应用程序可以实现数据共享让自己的数据和其他应用程序共享</p><p>让自己的数据和其他应用程序共享有两种方式：</p><p>创建自己的Content Provider(即继承ContentProvider子类)将自己的数据添加到已有的Content Provider中去</p><p>后者需要保证现有的Content Provider和自己的数据类型相同且具有该Content Provider的写入权限</p><h4 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h4><p>Content Provider将其存储的数据以数据表形式提供给访问者，在数据表中，每一行为一条记录，每一列为具有特定类型和意义的数据。每一条数据记录都包括一个”ID“数值字段，该字段标识一条数据</p><h4 id="访问Content-Provider中的数据："><a href="#访问Content-Provider中的数据：" class="headerlink" title="访问Content Provider中的数据："></a>访问Content Provider中的数据：</h4><p>访问Content Provider中的数据主要ContentResolver对象，ContentResolver可以用来对Content Provider中的数据进行查询query()、插入insert()、修改update()和删除delete()等操作，以查询为例，查询一个Content Provider需要掌握如下的信息：</p><p>唯一标识Content Provider的URI需要访问的数据字段名称该数据字段的数据类型</p><p>查询Content Provider的方法有两个：ContentResolver的query()和Activity对象的managedQuery()</p><h4 id="提供的函数"><a href="#提供的函数" class="headerlink" title="提供的函数"></a>提供的函数</h4><p>query()查询，insert()插入，update()更新,delete()删除，getType()得到数据  类型，onCreate()创建时的回调函数</p><h4 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h4><p>定义一个CONTENT_URI常量</p><p>定义一个类，继承Content Provider</p><p>实现query(),delete(),update(),insert(),onCreate(),getType()方法</p><p>在自己创建的模块的AndroidManifest.xml中创建权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDB.permossion&quot;</span> <span class="attr">android:protectionLevel</span>=<span class="string">&quot;normal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在AndroidManifest中申请权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDb.permisson&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>db AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDb.permisson&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SubActivity02&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SubActivity03&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyService01&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyBindService&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.MyReceiver&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver01&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver03&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DBHelper.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.db2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DBHelper</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DBNAME</span> <span class="operator">=</span> <span class="string">&quot;myDbName.db&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  <span class="type">int</span> <span class="variable">VERSION</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_USER</span> <span class="operator">=</span> <span class="string">&quot;user&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DBHelper</span><span class="params">(<span class="meta">@Nullable</span> Context context, <span class="meta">@Nullable</span> String name, <span class="meta">@Nullable</span> SQLiteDatabase.CursorFactory factory, <span class="type">int</span> version)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, DBNAME, factory, VERSION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStr</span> <span class="operator">=</span> <span class="string">&quot;CREATE TABLE IF NOT EXISTS &quot;</span> + TABLE_USER+<span class="comment">//EXISTS后面一定要加空格</span></span><br><span class="line">                <span class="string">&quot;(uid INTERGER PRIMARY KEY AUTOINCREMENT,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;name VARCHAR(30),&quot;</span>+</span><br><span class="line">                <span class="string">&quot;age INTERGER,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;score DOUBLE)&quot;</span>;</span><br><span class="line">        sqLiteDatabase.execSQL(sqlStr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase, <span class="type">int</span> i, <span class="type">int</span> i1)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyProvider.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.db2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentProvider;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.UriMatcher;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyProvider</span> <span class="keyword">extends</span> <span class="title class_">ContentProvider</span><span class="comment">//MyProvider 类继承自 ContentProvider，这意味着它是一个自定义内容提供器，必须实现一些方法来处理数据的访问请求</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> UriMatcher uriMacher;<span class="comment">//UriMatcher 类型的静态变量，用于匹配 Uri。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AUTHRITY_PROVIDER</span> <span class="operator">=</span> <span class="string">&quot;a.b.c.db2.authority&quot;</span>;<span class="comment">//定义了内容提供器的授权信息，通常是包名加上 &quot;.authority&quot;。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CODE_PROVIDER_USER</span> <span class="operator">=</span> <span class="number">11</span>;<span class="comment">//CODE_PROVIDER_USER: 定义了一个常量，用于标识用户表格的 Uri 匹配码。</span></span><br><span class="line">    <span class="keyword">private</span> DBHelper dbHelper;</span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase db;</span><br><span class="line">    <span class="keyword">static</span></span><br><span class="line">    &#123;</span><br><span class="line">        uriMacher = <span class="keyword">new</span> <span class="title class_">UriMatcher</span>(UriMatcher.NO_MATCH);<span class="comment">//UriMatcher.NO_MATCH 表示没有匹配时的返回值。</span></span><br><span class="line">        uriMacher.addURI(AUTHRITY_PROVIDER,DBHelper.TABLE_USER,CODE_PROVIDER_USER);<span class="comment">//addURI(AUTHRITY_PROVIDER, DBHelper.TABLE_USER, CODE_PROVIDER_USER) 将指定的授权和路径模式与匹配码关联起来。在这里，AUTHRITY_PROVIDER 是授权信息，DBHelper.TABLE_USER 是表格名，CODE_PROVIDER_USER 是匹配码。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dbHelper = <span class="keyword">new</span> <span class="title class_">DBHelper</span>(getContext(),<span class="string">&quot;&quot;</span>,<span class="literal">null</span>,<span class="number">1</span>);</span><br><span class="line">        db = dbHelper.getWritableDatabase();</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(1,&#x27;张三&#x27;,19,87)&quot;</span> );</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(2,&#x27;李四&#x27;,18,87)&quot;</span> );</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//onCreate 方法在内容提供器创建时调用。当前实现直接返回 false，表示内容提供器的初始化失败。通常应该在这里进行初始化操作，并返回相应的结果。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] strings, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] strings1, <span class="meta">@Nullable</span> String s1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(<span class="meta">@NonNull</span> Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTableName</span><span class="params">(Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(uriMacher.match(uri)==CODE_PROVIDER_USER)</span><br><span class="line">        &#123;</span><br><span class="line">            tableName = DBHelper.TABLE_USER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tableName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentValues)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">insertCount</span> <span class="operator">=</span> db.insert(tableName,<span class="literal">null</span>,contentValues);</span><br><span class="line">        <span class="keyword">if</span>(insertCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;insert ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvier&quot;</span>,<span class="string">&quot;insert fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">deleteCount</span> <span class="operator">=</span> db.delete(tableName,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(deleteCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;delete ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;delete fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deleteCount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentValues, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateCount</span> <span class="operator">=</span> db.update(tableName,contentValues,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(updateCount &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;update ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;updata fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> updateCount;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四大组件汇总代码"><a href="#四大组件汇总代码" class="headerlink" title="四大组件汇总代码"></a>四大组件汇总代码</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentResolver;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.IntentFilter;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResult;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultCallback;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultLauncher;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContract;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.MyReceiver;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.OrderReceiver01;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.OrderReceiver02;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.OrderReceiver03;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.service.MyBindService;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.service.MyService01;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    Button btn_start,btn_startForResult;</span><br><span class="line">    Button btn_startService,btn_stopService;</span><br><span class="line">    Button btn_binService,btn_unBindService;</span><br><span class="line">    Button btn_sendBroadcast,btn_orderBroadcast;</span><br><span class="line">    MyBindService.MyBinder myBinder;</span><br><span class="line">    String logtag=<span class="string">&quot;qqqqqq&quot;</span>;</span><br><span class="line">    Button btn_add,btn_del,btn_update,btn_search;</span><br><span class="line">    <span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;content://a.b.c.db.authority/user&quot;</span>);<span class="comment">//Uri.parse() 是 Uri 类的静态方法，用于将字符串表示的 URI 解析为 Uri 对象</span></span><br><span class="line"><span class="comment">//老方法，通过复写onActivityResult函数来接受返回结构</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        super.onActivityResult(requestCode, resultCode, data);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        if(data == null)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if(resultCode == requestCode &amp;&amp; requestCode == 234)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            String ret = data.getStringExtra(&quot;key1&quot;);</span></span><br><span class="line"><span class="comment">//            Log.i(&quot;This is ret&quot;,ret);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;MissingInflatedId&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_start = findViewById(R.id.btn_startActivity);</span><br><span class="line">        btn_start.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);<span class="comment">//第一个参数：谁下发的命令，第二个参数：打开哪个Activity</span></span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 新方法接受返回结果</span></span><br><span class="line">        <span class="type">ActivityResultLauncher</span> <span class="variable">launcher</span> <span class="operator">=</span> registerForActivityResult(<span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(), <span class="keyword">new</span> <span class="title class_">ActivityResultCallback</span>&lt;ActivityResult&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(ActivityResult result)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(logtag,result.getData().getStringExtra(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_startForResult = findViewById(R.id.btn_startActivityGetResult);</span><br><span class="line">        btn_startForResult.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,SubActivity03.class);</span><br><span class="line"><span class="comment">//                startActivityForResult(intent,234);</span></span><br><span class="line">                launcher.launch(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_startService = findViewById(R.id.btn_startService);</span><br><span class="line">        btn_startService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                startService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_stopService = findViewById(R.id.btn_stopService);</span><br><span class="line">        btn_stopService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                stopService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">ServiceConnection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(iBinder <span class="keyword">instanceof</span> MyBindService.MyBinder)</span><br><span class="line">                &#123;</span><br><span class="line">                    myBinder = (MyBindService.MyBinder) iBinder;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Log.i(logtag, <span class="string">&quot;onServiceDisconnected&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        btn_binService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_binService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,MyBindService.class);</span><br><span class="line">                bindService(intent,conn,  Context.BIND_AUTO_CREATE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_unBindService = findViewById(R.id.btn_unbindService);</span><br><span class="line">        btn_unBindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyBindService.class);</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    unbindService(conn);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_sendBroadcast = findViewById(R.id.btn_broadcast);</span><br><span class="line">        btn_sendBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intetnt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyReceiver.class);</span><br><span class="line">                intetnt.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                intetnt.putExtra(<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;这是无序广播内容1&quot;</span>);</span><br><span class="line">                sendBroadcast(intetnt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line">        <span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line">        <span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line">        <span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">        registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver02,intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver03,intentFilter);</span><br><span class="line"></span><br><span class="line">        btn_orderBroadcast = findViewById(R.id.btn_orderBroadcast);</span><br><span class="line">        btn_orderBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;这是原始数据&quot;</span>;</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">extData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line"></span><br><span class="line">                sendOrderedBroadcast(intent,<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">MyReceiver</span>(),<span class="literal">null</span>,<span class="number">0</span>,data,extData);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_add = findViewById(R.id.btn_add);</span><br><span class="line">        btn_add.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">                values.put(<span class="string">&quot;uid&quot;</span>,uid++);</span><br><span class="line">                values.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">                values.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">                values.put(<span class="string">&quot;socre&quot;</span>,<span class="string">&quot;78&quot;</span>);</span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                contentResolver.insert(uri,values);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_del = findViewById(R.id.btn_del);</span><br><span class="line">        btn_del.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                <span class="type">int</span> <span class="variable">delCount</span> <span class="operator">=</span> contentResolver.delete(uri,<span class="string">&quot;uid&gt; ?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;4&quot;</span>&#125;);</span><br><span class="line">                <span class="keyword">if</span>(delCount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;del Count: &quot;</span> + delCount);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_update = findViewById(R.id.btn_update);</span><br><span class="line">        btn_update.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line"></span><br><span class="line">                values.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                <span class="type">int</span> <span class="variable">updateCount</span> <span class="operator">=</span> contentResolver.update(uri,values,<span class="string">&quot;uid=?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;3&quot;</span>&#125;);</span><br><span class="line">                <span class="keyword">if</span>(updateCount&gt;<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;updata Count&quot;</span>+updateCount);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_search = findViewById(R.id.btn_search);</span><br><span class="line">        btn_search.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//select(字段1，字段2，字段3) from tablename where xx=xx&quot;;</span></span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> contentResolver.query(uri,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;uid&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;score&quot;</span>&#125;,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">if</span>(cursor==<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(cursor.moveToNext())</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span> cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;uid&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;age&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> score= cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;score&quot;</span>));</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;uid=&quot;</span>+uid+<span class="string">&quot;,name=&quot;</span>+name+<span class="string">&quot;,age=&quot;</span>+age+<span class="string">&quot;,score=&quot;</span>+score);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Activity生命周期"><a href="#Activity生命周期" class="headerlink" title="Activity生命周期"></a>Activity生命周期</h4><p>activity三种状态：</p><p>(1)active：当Activity运行在屏幕前台(处于当前任务活动栈的最上面)，此时它获取了焦点能响应用户的操作，属于活动状态，同一个时刻只会有一个Activity处于活动(Active)。</p><p>(2)paused：当Activity失去焦点但仍对用户可见(如在它之上有另一个透明的Activity或Toast、AlertDialog等弹出弹窗时)它处于暂停状态。暂停的Activity仍然是存活状态(它保留者所有的状态和成员信息并保持窗口管理器的连接)，但是在系统内存极小时可以被系统杀掉。</p><p>(3)stopped：完全被另一个Activity遮挡时处于停止状态，它仍然在内存中保留着所有的状态和成员信息。这是对用户不可见，当其他地方需要内存时它往往被系统杀掉。</p><h4 id="Activity七个方法"><a href="#Activity七个方法" class="headerlink" title="Activity七个方法"></a>Activity七个方法</h4><p>(1)onCreate()：在Activity创建时调用，通常做一些初始化设置，不可见，只在Activity创建时执行一次</p><p>(2)onStart()：在Activity即将可见时调用，可见，在Activity中多次调用，不在前台，不可交互，初始化工作</p><p>(3)onResume：在Activity获取焦点开始与用户交互时调用，在前台，开启动画和独占设备</p><p>(4)onPause()：在当前Activity被其它Activity覆盖或锁屏时调用，可见，程序状态的保持，独占设备和动画的关闭，以及一些数据的保存最好在onPause中进行，但不能太耗时</p><p>(5)onStop()：在Activity对用户不可见时调用，不可见，其对象还在内存中，系统内存不足时可能不会执行onStop()方法</p><p>(6)onDestroy()：在Activity销毁时调用</p><p>(7)onRestart()：在Activity从停止状态再次启动时调用</p><h4 id="android三个嵌套循环"><a href="#android三个嵌套循环" class="headerlink" title="android三个嵌套循环"></a>android三个嵌套循环</h4><p>(1)Activity完整的生命周期：从第一次调用onCreate()开始直到调用onDestroy()结束。</p><p>(2)Activity的可视生命周期：从调用onStart()到相应的调用onStop()。在这两个方法之间，可以保持显示Activity所需要的资源。如在onStart()注册一个广播接收者监听影响你的UI的改变，在onStop()中注销。</p><p>(3)Activity的前台生命周期：从调用onResume()到相应的调用onPause()。</p><h4 id="Service的生命周期"><a href="#Service的生命周期" class="headerlink" title="Service的生命周期"></a>Service的生命周期</h4><p>Service的完整生命周期从调用onCreate()开始知道调用onDestroy()结束。</p><h4 id="Service有两种使用方法："><a href="#Service有两种使用方法：" class="headerlink" title="Service有两种使用方法："></a>Service有两种使用方法：</h4><p>(1)以调用Context.startService()启动，而以调用Context.stopService结束。这种情况下的Service是通过其他组件调用startService()被创建。这种service方法可以无限地运行下去，必须调用stopSelf()方法或者其他组件调用stopService()来停止它，当service被停止时，系统会销毁它</p><p>(2)以调用Context.bindService()方法建立，以调用Context.unbindService()关闭。这种情况下的Service时通过其他组件(一个客户)调用unbindService()方法来关闭这种连接。一个service可以同时和多个客户绑定，当多个客户都解除绑定之后，系统会销毁service。</p><h4 id="BroadcastReceive广播接收器生命周期"><a href="#BroadcastReceive广播接收器生命周期" class="headerlink" title="BroadcastReceive广播接收器生命周期"></a>BroadcastReceive广播接收器生命周期</h4><p>生命周期只有十秒左右，如果在onReceive()内做超过十秒内的事情，就会报ANR(Application No Response)程序无响应的错误信息。它的生命周期为从回调onReceive()方法开始到该方法返回结果后结束</p><h4 id="一个activity的启动过程"><a href="#一个activity的启动过程" class="headerlink" title="一个activity的启动过程"></a>一个activity的启动过程</h4><p>每一个Activity都处于某一个状态，对于开发者来说，是无法控制其应用程序处于某一个状态的，这些均由系统来完成。</p><p>(1)第一个Activity的启动顺序：onCreate()-&gt;onStart()-&gt;onResume()</p><p>(2)当另一个Activity启动时：第一个Activity onPause()-&gt;第二个Activity onCreate()-&gt;onStart()-&gt;onResume()-&gt;第一个Activity onStop();</p><p>(3)当返回到第一个Activity时：第二个Activity onPause()-&gt;第一个Activity onRestart()-&gt;onStart()-&gt;onResume()-&gt;第二个Activity onStop()-&gt;onDestroy()</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础2</title>
      <link href="/2024/07/14/Android%E5%9F%BA%E7%A1%802/"/>
      <url>/2024/07/14/Android%E5%9F%BA%E7%A1%802/</url>
      
        <content type="html"><![CDATA[<h4 id="Activity的使用"><a href="#Activity的使用" class="headerlink" title="Activity的使用"></a>Activity的使用</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResult;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultCallback;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultLauncher;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContract;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    Button btn_start,btn_startForResult;</span><br><span class="line">    String logtag=<span class="string">&quot;hyqhyqhyq&quot;</span>;</span><br><span class="line"><span class="comment">//老方法，通过复写onActivityResult函数来接受返回结构</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        super.onActivityResult(requestCode, resultCode, data);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        if(data == null)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if(resultCode == requestCode &amp;&amp; requestCode == 234)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            String ret = data.getStringExtra(&quot;key1&quot;);</span></span><br><span class="line"><span class="comment">//            Log.i(&quot;This is ret&quot;,ret);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_start = findViewById(R.id.btn_startActivity);</span><br><span class="line">        btn_start.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);<span class="comment">//第一个参数：谁下发的命令，第二个参数：打开哪个Activity</span></span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 新方法接受返回结果</span></span><br><span class="line">        <span class="type">ActivityResultLauncher</span> <span class="variable">launcher</span> <span class="operator">=</span> registerForActivityResult(<span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(), <span class="keyword">new</span> <span class="title class_">ActivityResultCallback</span>&lt;ActivityResult&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(ActivityResult result)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(logtag,result.getData().getStringExtra(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_startForResult = findViewById(R.id.btn_startActivityGetResult);</span><br><span class="line">        btn_startForResult.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,SubActivity03.class);</span><br><span class="line"><span class="comment">//                startActivityForResult(intent,234);</span></span><br><span class="line">                launcher.launch(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*ActivityResultLauncher 和 registerForActivityResult:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ActivityResultLauncher 是一个接口，用于启动目标活动并接收其结果。</span></span><br><span class="line"><span class="comment">registerForActivityResult 是一个新的方法，用于注册一个能够处理特定结果的 ActivityResultLauncher 实例。它接受两个参数：</span></span><br><span class="line"><span class="comment">第一个参数是一个 ActivityResultContract 的实例，用于指定要执行的操作类型。在这里使用的是 ActivityResultContracts.StartActivityForResult()，表示注册一个能够处理 startActivityForResult 操作的 launcher。</span></span><br><span class="line"><span class="comment">第二个参数是一个 ActivityResultCallback&lt;ActivityResult&gt; 的实例，用于处理从目标活动返回的结果。</span></span><br><span class="line"><span class="comment">onActivityResult 方法:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这是注册的 ActivityResultCallback 的实现部分。</span></span><br><span class="line"><span class="comment">当目标活动返回结果时，系统将调用 onActivityResult 方法，并传递一个 ActivityResult 对象作为参数。</span></span><br><span class="line"><span class="comment">在这里，通过 result.getData().getStringExtra(&quot;key1&quot;) 获取从目标活动返回的数据中名为 &quot;key1&quot; 的字符串数据，并将其记录到日志中。</span></span><br><span class="line"><span class="comment">Log.i(logtag, ...):</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Log.i 是 Android 提供的日志输出方法，用于记录信息级别的日志。</span></span><br><span class="line"><span class="comment">logtag 应该是一个字符串常量，用于标识日志的来源或者类别。*/</span></span><br></pre></td></tr></table></figure><p>activity_main.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_startActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;启动Activity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_startActivityGetResult&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;启动Activity并获取返回结果&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SubActivity02.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity02</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        setContentView(R.layout.activity_sub02);</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        Log.i(<span class="string">&quot;This is SubActivity02&quot;</span>,<span class="string">&quot;SubActivity02 onCreate&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_sub02.xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:id=<span class="string">&quot;@+id/main&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;我是第二个Activity&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;50dp&quot;</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>SubActivity03.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity03</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_sub03);</span><br><span class="line">        tv = findViewById(R.id.tv_setResult);</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setClass(SubActivity03.<span class="built_in">this</span>,MainActivity.class);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这是结果1,来自SubActivity03&quot;</span>);</span><br><span class="line">                setResult(<span class="number">234</span>,intent);</span><br><span class="line">                SubActivity03.<span class="built_in">this</span>.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_sub03.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是第三个Activity&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_setResult&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;50dp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是第三个Activity&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_setResult&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;50dp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Service介绍"><a href="#Service介绍" class="headerlink" title="Service介绍"></a>Service介绍</h4><p>Service是android系统的四大组件之一，是一种长生命周期的，没有可视化界面，运行于后台的一种服务程序</p><h4 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h4><p>(1)Started Service被开启的service通过其他组件调用startService()被创建，这种service可以无限地运行下去，必须调用stopSelf()方法或者其他组件调用stopService()来停止它，当service被停止时，系统会销毁它</p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyService01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_startService = findViewById(R.id.btn_startService);</span><br><span class="line">        btn_startService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                startService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_stopService = findViewById(R.id.btn_stopService);</span><br><span class="line">        btn_stopService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                stopService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>activity_main.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_startService&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;启动Service&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_stopService&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;停止Service&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(2)Bounded Service被绑定地service是当其他组件(一个客户)调用bindService()来创建的，客户可以通过一个IBinder接口和service进行通信，客户可以通过unbindService()方法来关闭这种连接，一个service可以同时和多个客户绑定，当多个客户都解除绑定之后，系统会销毁service </p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyBindService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java </p><p>注意：复制粘贴时，启动哪个activity要注意，这里卡了好久</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_binService = findViewById(R.id.btn_bindService);</span><br><span class="line">   btn_binService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,MyBindService.class);</span><br><span class="line">           bindService(intent,conn, <span class="number">0</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">   btn_unBindService = findViewById(R.id.btn_unbindService);</span><br><span class="line">   btn_unBindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyBindeService.class);</span><br><span class="line">           <span class="keyword">try</span></span><br><span class="line">           &#123;</span><br><span class="line">               unbindService(conn);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">catch</span> (Exception e)</span><br><span class="line">           &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><p>MyBinderService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBindService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyBinder</span> <span class="variable">binder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyBinder</span>();</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">logTag</span> <span class="operator">=</span> <span class="string">&quot;MyBinderService&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyBinder</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(logTag,<span class="string">&quot;in MyBinder&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> MyBindService <span class="title function_">getService</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> MyBindService.<span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> binder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onUnbind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(logTag, <span class="string">&quot;onUnbind&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onUnbind(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="BroadcastReceiver介绍"><a href="#BroadcastReceiver介绍" class="headerlink" title="BroadcastReceiver介绍"></a>BroadcastReceiver介绍</h4><p>BroadcastReceiver(广播接受器)是Android系统的四大组件之一，用于监听 &#x2F; 接受 应用发出的广播消息，并做出响应</p><p>应用场景：不同组件之间通信(包括应用内 &#x2F; 不同应用之间)；与Android系统在特定情况下的通信(如电话呼入时、网络可用时)；多线程通信</p><p>Android广播分为两个角色：广播发送者、广播接受者</p><h4 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h4><p>(Android中的广播使用了设计模式中的观察者模式)：基于消息的发布&#x2F;订阅事件模型</p><p>模型中有3个角色：</p><p>消息订阅者(广播接受者)&#x2F;消息发布者(广播发布者)&#x2F;消息中心(AMS，即Activity Manager Service)</p><p>广播接收者通过Binder机制在AMS注册</p><p>广播发送者通过Binder机制向AMS发送广播</p><p>AMS根据广播发送者要求，在已注册列表中，寻找合适的广播接收者(寻找依据：IntentFilter&#x2F;Permission)</p><p>AMS将广播发送到合适的广播接收者相应的消息循环队列中</p><h4 id="注册的方式分为两种：静态注册、动态注册"><a href="#注册的方式分为两种：静态注册、动态注册" class="headerlink" title="注册的方式分为两种：静态注册、动态注册"></a>注册的方式分为两种：静态注册、动态注册</h4><p>(1)静态注册</p><p>在AndroidManifest.xml里面通过标签声明，当此App首次启动时，系统会自动实例化mBroadReceive类，并注册到系统中，静态注册是常驻广播，不受任何组件生命周期的影响</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.MyReceiver&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span>//android:exported=&quot;false&quot; 指定了该接收器是否能被其他应用组件调用或者是从外部调用。false 表示这个接收器仅对自己的应用可见，其他应用无法直接调用它。</span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span>//<span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span> 标签定义了接收器可以处理的广播意图（Intent）过滤器。<span class="tag">&lt;<span class="name">action</span>&gt;</span> 标签用于指定接收器要处理的广播动作（Action）。在这个例子中，动作名称是 &quot;golvRuleaaa&quot;。这表示接收器只会对发送这个特定动作的广播进行处理。</span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        &lt;/receiver</span><br></pre></td></tr></table></figure><p>(2)动态注册</p><p>在代码中通过调用Context的regisertReceiver()方法进行动态注册BroadReceiver，注册广播后，要在相应位置记得销毁广播，即在onPause()中unregisertReceiver(mBroadcastReceiver)，当此Activity实例化时，会动态将MyBroadcastReceiver注册到系统中，当此Activity销毁时，动态注册的MyBroadReceiver将不再接受到相应的广播</p><p>注意：动态广播最好在Activity中的onResume()注册、onPause注销。</p><p>原因：</p><p>对于动态广播，有注册就必然得有注销，否则会导致内存泄露</p><p>重复注册、重复注销也不允许</p><p>动态注册是非常驻广播，灵活，跟随组件的生命周期变化</p><p>在AndroidManifest.xml中注册，并设置优先级(静态注册)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver01&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver03&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在MainActivity中动态注册</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line"><span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line"><span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line"><span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">intentFilter.addAction(<span class="string">&quot;golvRuleaaa&quot;</span>);</span><br><span class="line">registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver02,intentFilter);</span><br><span class="line">registerReceiver(orderReceiver03,intentFilter);</span><br></pre></td></tr></table></figure><p>MainActivity.java(包括了无序广播和有效广播)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_sendBroadcast = findViewById(R.id.btn_broadcast);</span><br><span class="line">        btn_sendBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intetnt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyReceiver.class);</span><br><span class="line">                intetnt.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                intetnt.putExtra(<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;这是无序广播内容1&quot;</span>);</span><br><span class="line">                sendBroadcast(intetnt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line">        <span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line">        <span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line">        <span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">        registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver02,intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver03,intentFilter);</span><br><span class="line"></span><br><span class="line">        btn_orderBroadcast = findViewById(R.id.btn_orderBroadcast);</span><br><span class="line">        btn_orderBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;这是原始数据&quot;</span>;</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">extData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line"></span><br><span class="line">                sendOrderedBroadcast(intent,<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">MyReceiver</span>(),<span class="literal">null</span>,<span class="number">0</span>,data,extData);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>MyReceiver.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReceiver</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//Log.i(&quot;MyReceiver&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver01&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OrderReceiver01.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver01</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver01&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被修改OrderReceive01修改&quot;</span>);</span><br><span class="line">            <span class="comment">//Log.i(&quot;OrderReceiver01&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderReceiver02.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver02</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver02&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被修改OrderReceive02修改&quot;</span>);</span><br><span class="line">            <span class="comment">//Log.i(&quot;OrderReceiver01&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OrderReceiver03.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver03</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver03&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被修改OrderReceive03修改&quot;</span>);</span><br><span class="line">            <span class="comment">//Log.i(&quot;OrderReceiver01&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础1</title>
      <link href="/2024/07/13/Android%E5%9F%BA%E7%A1%801/"/>
      <url>/2024/07/13/Android%E5%9F%BA%E7%A1%801/</url>
      
        <content type="html"><![CDATA[<h4 id="Android项目结构"><a href="#Android项目结构" class="headerlink" title="Android项目结构"></a>Android项目结构</h4><p>Android:列出我们经常会用到的内容，比如：Java文件，布局文件等等。</p><p>1、mainifests：其中显示的是安卓的全局描述文件。</p><p>2、java：显示java的源码文件。</p><p>3、res：显示的是资源文件，比如常见的类文件，图片资源文件等等。</p><p>Project:列出我们项目当中的全部文件</p><h4 id="创建AVD并启动安卓模拟器"><a href="#创建AVD并启动安卓模拟器" class="headerlink" title="创建AVD并启动安卓模拟器"></a>创建AVD并启动安卓模拟器</h4><p>模拟器就是模拟手机，平板等安卓设备。在这个模拟器上面测试设备，就可以开发出兼容性较好的设备。从而节约我们的开发成本。</p><p>AVD:安卓虚拟设备的简称。可以用于设置模拟器的硬件列表，模拟器的外观，以及支持安卓系统版本等等。模拟器本身没有操作窗口，需要借助AVD才能实现。</p><h4 id="安卓模拟器的基本配置"><a href="#安卓模拟器的基本配置" class="headerlink" title="安卓模拟器的基本配置"></a>安卓模拟器的基本配置</h4><p>将模拟器的使用语言设置成为简体中文</p><p>模拟器设置成可调试</p><h4 id="创建一个按钮"><a href="#创建一个按钮" class="headerlink" title="创建一个按钮"></a>创建一个按钮</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#FF5722&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_test&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;这是一个按钮&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">&quot;60dp&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>注意显示背景颜色要将values下的themes.xml的</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.Test02&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.Test02&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.DarkActionBar.Bridge&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在MainActivity.java中绑定按钮(通过绑定id的方式)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Button btn=findViewById(R.id.btn_test);</span><br></pre></td></tr></table></figure><p>设置按钮点击响应事件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Button btn=findViewById(R.id.btn_test);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                tv.setText(<span class="string">&quot;按钮被点击了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="Android介绍"><a href="#Android介绍" class="headerlink" title="Android介绍"></a>Android介绍</h4><p>Android是一种基于Linux是自由及开放源代码的操纵系统，Android分为四个层，从高层到到底层分别是应用程序层、应用程序框架层、系统运行库层和Linux内核层</p><h4 id="Andorid四大组件"><a href="#Andorid四大组件" class="headerlink" title="Andorid四大组件"></a>Andorid四大组件</h4><p>Android有四大基本组件：Activity、Service服务、BroadcastReceiver广播接收器、Content Provider内容提供者</p><h4 id="Activity介绍"><a href="#Activity介绍" class="headerlink" title="Activity介绍"></a>Activity介绍</h4><p>1、Activity是一个应用程序组件，提供一个屏幕，用户可以用来交互为了完成某项任务</p><p>2、Activity中所有操作系统都与用户密切相关，是一个负责于用户交互的组件，可以通过setConetentwView(View)来显示指定控件</p><p>3、在一个android应用中，一个Activity通常就是一个单独的屏幕，它上面可以显示一些控件也可以监听并处理用户的事件做出响应。Activity之间通过Intent进行通信</p><h4 id="Activity四种基本状态"><a href="#Activity四种基本状态" class="headerlink" title="Activity四种基本状态"></a>Activity四种基本状态</h4><p>(1)Active&#x2F;Running</p><p>一个新的Activity启动入栈后，它显示在屏幕的最前端，处于栈的最顶端(Activity栈顶)，此时它处于可见并可与用户交互的激活状态，叫做活动状态或者运行状态</p><p>(2)Paused</p><p>当Activity失去焦点，被一个新的非全屏的Activity或者一个透明的Activity被放置在栈顶，此时的状态叫做暂停状态(Paused)。此时它依然与窗口管理器保持连接，Activity依然保持活力(保持所有的状态，成员信息，和窗口管理器保持连接)，但是在系统内存极端低下的时候被强行终止掉。所以它依然可见，但已经失去了焦点故不可与用户进行交互。</p><p>(3) Stopped</p><p>如果一个Activity被另外的Activity完全覆盖掉，叫做停止状态(Stopped)。它依然保持所有状态和成员信息，但是它不再可见，所以它的窗口被隐藏，当系统内存需要被用在其他地方的时候，Stopped的Activity将被强行终止掉</p><p>(4)Killed</p><p>如果一个Activity是Paused或者Stopped状态，系统可以将该Activity从内存中删除，Android系统采用两种方式进行删除，要么要求该Activity结束，要么要求终止它的进程。当该Activity再次显示给用户时，它必须重新开始和重置前面的状态</p><h4 id="Activity状态转换："><a href="#Activity状态转换：" class="headerlink" title="Activity状态转换："></a>Activity状态转换：</h4><p>当一个Activity实例被创建、销毁或者启动另外一个Activity时，它在这四种状态之间进行转换，这种转换的发送依赖于用户程序的动作。</p><h4 id="Activity栈"><a href="#Activity栈" class="headerlink" title="Activity栈"></a>Activity栈</h4><p>Android是通过一种Activity栈的方式来管理Activity的，一个Activity的实例决定它在栈中的位置。处于前台的Activity总是在栈的顶端，当前台的Activity因为异常或是其它原因被销毁时，处于栈第二层的Activity将被激活，上浮到栈顶。当新的Activity启动入栈时，原Activity会被压入到栈的第二层。一个Activity在栈中的位置变化反映了它在不同状态间的转换</p><p>通过以下代码将Activity和.xml文件进行绑定</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_main);</span><br></pre></td></tr></table></figure><p>创建一个新的界面的步骤</p><p>1、通过Intent启动</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);<span class="comment">//第一个参数：谁下发的命令，第二个参数：打开哪个Activity</span></span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>2、新的界面绑定.xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_sub02)</span><br></pre></td></tr></table></figure><p>3、清单文件要注册新的Activity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;activity android:name=<span class="string">&quot;.SubActivity02&quot;</span>&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure><p>4、新的Activity要继承Activity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity02</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/12/java%E5%9F%BA%E7%A1%804/"/>
      <url>/2024/07/12/java%E5%9F%BA%E7%A1%804/</url>
      
        <content type="html"><![CDATA[<h4 id="线程的概念"><a href="#线程的概念" class="headerlink" title="线程的概念"></a>线程的概念</h4><p>线程是指在一个进程中执行的独立的、可调度的执行单元。在JAVA中，线程是Thread类的实例，可以通过继承Thread类或实现Runnable接口来创建线程。每个线程都有自己的执行路径和执行状态，可以共享进程的资源，例如内存、文件句柄等，因此线程之间的通信和协作比进程之间更加高效。</p><h4 id="线程的结构"><a href="#线程的结构" class="headerlink" title="线程的结构"></a>线程的结构</h4><p>在JAVA中，线程的结构通常包括ID、程序计数器、寄存器集合、堆栈和状态等。线程ID是一个唯一标识符，用于区分不同的线程。程序计数器用于当前线程的执行的位置，寄存器集合用于保存线程的上下文信息，堆栈用于保存线程的局部变量和方法用栈，状态用于记录线程的执行状态，例如就行、运行、阻塞等。</p><h4 id="线程的创建和启动"><a href="#线程的创建和启动" class="headerlink" title="线程的创建和启动"></a>线程的创建和启动</h4><p>在JAVA中，线程的创建和启动可以通过继承Thread类或实现Runnable接口来实现。例如，可以创建一个继承Thread类的子类，并重写run（）方法来定义线程的执行逻辑，让后通过start（）方法来启动线程。也可以创建一个实现Runnable接口的类，并实现run（）方法来定义线程的执行逻辑，然后通过创建Thread对象并传入Runnable对象来启动线程。</p><h4 id="线程的同步和协作"><a href="#线程的同步和协作" class="headerlink" title="线程的同步和协作"></a>线程的同步和协作</h4><p>在JAVA中，线程的并发执行可能会导致一些问题，例如竞态条件、死锁、饥饿等。为了避免这些问题，需要使用同步机制，例如锁、信号量、条件变量等，来保证线程之间的互斥和协作。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>线程的优点：</p><p>1、提高系统吞吐率 2、提高IO效率 3、充分利用多核资源</p><p>线程的缺点：</p><p>1、安全问题 2、资源竞争 3、上下文切换 4、可靠性</p><h4 id="继承Thread类创建线程"><a href="#继承Thread类创建线程" class="headerlink" title="继承Thread类创建线程"></a>继承Thread类创建线程</h4><p>在Java中，可以通过继承Thread类来创建线程。例如，可以创建一个继承Thread类的子类，并重写run（)方法来定义线程的执行逻辑，然后通过调start（）方法来启动线程。</p><h4 id="线程的生命周期"><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h4><p>在Java中，线程的生命周期通常包括新建、就绪、运行、阻塞和终止等状态。新建状态是指线程对象被创建但还没启动的状态；就绪状态是指线程已经准备好执行但还没获得CPU资源的状态；阻塞状态是指线程因为某些原因暂时停止执行的状态；终止状态是指线程完毕或者因为异常等原因被终止的状态。</p><h4 id="线程的优先级"><a href="#线程的优先级" class="headerlink" title="线程的优先级"></a>线程的优先级</h4><p>在Java中，每个线程都有一个优先级，用于指定线程在竞争CPU资源时的优先级。线程的优先级可以通过setPriority（）方法来设置，取值范围为1~10，其中1为最低优先级，10为最高优先级。线程的优先级并不是绝对的，只是一个相对的概念，具体的调度顺序还受到操作系统和CPU的影响。</p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>继承Thread类是Java中多线程编程的一种常见方式，它可以提高程序的性能和响应速度，但也需要注意线程之间同步和协作，以避免出现问题。了解Java中继承Thread类的多线程编程，可以帮助我们更好地理解并发编程的本质，提高程序的可靠性性能。同时，了解线程的优先级、异常处理、停止和调试等方面的知识，可以帮助我们更好地掌握线程编程的技巧和方法。</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        TestThread01 testThread01_1=<span class="keyword">new</span> <span class="title class_">TestThread01</span>(<span class="number">1</span>,<span class="number">4</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        TestThread01 testThraad01_2=<span class="keyword">new</span> <span class="title class_">TestThread01</span>(<span class="number">1</span>,<span class="number">4</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        testThread01_1.start();</span><br><span class="line">        testThraad01_2.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;main Thread finished&quot;</span>);</span><br><span class="line">        TestThread02 testThread02_1=<span class="keyword">new</span> <span class="title class_">TestThread02</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程状态：&quot;</span>+testThread02_1.getState());</span><br><span class="line">        testThread02_1.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;线程状态：&quot;</span>+testThread02_1.getState());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testThread02_1.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程状态：&quot;</span>+testThread02_1.getState());</span><br><span class="line">        System.out.println(<span class="string">&quot;main Thread finished&quot;</span>);</span><br><span class="line">        TestThread02 testThread02_2=<span class="keyword">new</span> <span class="title class_">TestThread02</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        testThread02_2.setPriority(<span class="number">6</span>);</span><br><span class="line">        testThread02_2.start();</span><br><span class="line">        <span class="type">TestThread03</span> <span class="variable">testThread03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread03</span>();</span><br><span class="line">        testThread03.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        testThread03.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;main Thread finished&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestThread01</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> loopCount;</span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">TestThread01</span><span class="params">(<span class="type">int</span> pId,<span class="type">int</span> pLoopCount,String pName)</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">this</span>.id=pId;</span><br><span class="line">       <span class="built_in">this</span>.loopCount=pLoopCount;</span><br><span class="line">       <span class="built_in">this</span>.setName(pName);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;loopCount;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;Thread Name:&quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;, loop:&quot;</span>+i);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>TestThread02</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread02</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> loopCount;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestThread02</span><span class="params">(<span class="type">int</span> pId,<span class="type">int</span> pLoopCount,String pName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.id=pId;</span><br><span class="line">        <span class="built_in">this</span>.loopCount=pLoopCount;</span><br><span class="line">        <span class="built_in">this</span>.setName(pName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;loopCount;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Thread Name:&quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;, loop:&quot;</span>+i);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestThread03</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread03</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是守护线程吗？&quot;</span>+<span class="built_in">this</span>.isDaemon());</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现Runnable接口"><a href="#实现Runnable接口" class="headerlink" title="实现Runnable接口"></a>实现Runnable接口</h4><h4 id="Runnable接口简介"><a href="#Runnable接口简介" class="headerlink" title="Runnable接口简介"></a>Runnable接口简介</h4><p>1、Runnable接口位于java.lang包中</p><p>2、Runnable接口描述了一个可以作为线程运行的类</p><p>3、只包含一个方法：void run()</p><h4 id="为什么要使用Runnable接口"><a href="#为什么要使用Runnable接口" class="headerlink" title="为什么要使用Runnable接口"></a>为什么要使用Runnable接口</h4><p>1、适用于多线程编程</p><p>2、实现Runnable接口的类可以被多个线程执行</p><p>3、避免Java单继承限制</p><h4 id="如何实现Runnable接口"><a href="#如何实现Runnable接口" class="headerlink" title="如何实现Runnable接口"></a>如何实现Runnable接口</h4><p>1、创建一个类，实现Runnable接口</p><p>2、重写run()方法，定义线程要执行的任务</p><p>3、创建Thread对象，将Runnable实现类的实例作为参数传递</p><p>4、调用Thread对象的start（）方法启动线程</p><h4 id="Runnable接口与Thread类的关系"><a href="#Runnable接口与Thread类的关系" class="headerlink" title="Runnable接口与Thread类的关系"></a>Runnable接口与Thread类的关系</h4><p>Runnable接口通常与Thread类一起使用</p><p>Thread类实现了Runnable接口</p><p>Thread类提供了更多线程管理功能，如设置优先级、线程状态查询等</p><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><p>Runnable接口用于避免单继承局限性</p><p>实现Runnable接口的类更方便</p><p>与Thread类结合使用，实现灵活的线程管理</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">myRunnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line">        myRunnable.run();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myRunnable,<span class="string">&quot;thread01&quot;</span>);</span><br><span class="line">        thread01.start();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myRunnable,<span class="string">&quot;thread02&quot;</span>);</span><br><span class="line">        thread01.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="线程启动"><a href="#线程启动" class="headerlink" title="线程启动"></a>线程启动</h4><p>使用Thread类创建线程</p><p>实现Runnable接口或者继承Thread类</p><p>调用start（）方法启动线程</p><h4 id="线程调度"><a href="#线程调度" class="headerlink" title="线程调度"></a>线程调度</h4><p>线程调度由操作系统管理</p><p>Java提供了线程优先级设置</p><p>优先级范围：1（最低）到10（最高）</p><h4 id="线程挂起"><a href="#线程挂起" class="headerlink" title="线程挂起"></a>线程挂起</h4><p>使用Thread.sleep方法让线程暂停</p><p>使用TimeUnit类让线程暂停</p><p>使用LockSupport让线程变相暂停(注意：先解除休眠再休眠不会进入死循环)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.LockSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t1.setName(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        t1.setPriority(<span class="number">1</span>);</span><br><span class="line">        t2.setPriority(<span class="number">5</span>);</span><br><span class="line">        t3.setPriority(<span class="number">10</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">        <span class="type">MyThreadSleep</span> <span class="variable">myThreadSleep</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThreadSleep</span>();</span><br><span class="line">        myThreadSleep.start();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t4.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        LockSupport.unpark(t4);</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t5.start();</span><br><span class="line">        LockSupport.unpark(t5);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h4><p>线程调度：操作系统管理，Java提供优先级设置</p><p>线程挂起：说了3种</p><h4 id="线程间的通信"><a href="#线程间的通信" class="headerlink" title="线程间的通信"></a>线程间的通信</h4><p>Object:wait()、notify（）和notifyAll方法</p><p>wait（）来自Object</p><p>sleep不会释放锁，需要捕捉异常；wait会释放锁</p><h4 id="使用synchronized和volatile关键字"><a href="#使用synchronized和volatile关键字" class="headerlink" title="使用synchronized和volatile关键字"></a>使用synchronized和volatile关键字</h4><p>volatile修饰变量，多个角色操作同一个变量</p><p>synchronized修饰代码段，可以是块，也可以是方法</p><h4 id="Condition-await-、signal-和signalAll-方法"><a href="#Condition-await-、signal-和signalAll-方法" class="headerlink" title="Condition: await()、signal()和signalAll()方法"></a>Condition: await()、signal()和signalAll()方法</h4><p>使用方法跟wait雷同，升级版</p><p>优势1：多个condition条件</p><p>优势2：不担心唤醒和等待的顺序问题</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testWait</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Supermarket sm= <span class="keyword">new</span> <span class="title class_">Supermarket</span>();</span><br><span class="line"></span><br><span class="line">        Thread[] producers = <span class="keyword">new</span>  <span class="title class_">Thread</span>[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt; producers.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            producers[i] = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Producter</span>(sm),<span class="keyword">new</span> <span class="title class_">String</span>(i+<span class="string">&quot;号生产者&quot;</span>));</span><br><span class="line">            producers[i].start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Thread[] consumers = <span class="keyword">new</span> <span class="title class_">Thread</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt; consumers.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            consumers[i] = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Consumer</span>(sm),<span class="keyword">new</span> <span class="title class_">String</span>(i+<span class="string">&quot;号消费者&quot;</span>));</span><br><span class="line">            consumers[i].start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testCondition</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition01</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition02</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition03</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程执行第一步&quot;</span>);</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                condition01.await();</span><br><span class="line">                System.out.println(<span class="string">&quot;condition01 wake&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">                condition02.signal();</span><br><span class="line">                condition03.await();</span><br><span class="line">                System.out.println(<span class="string">&quot;condition03 wake&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span> (InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            condition01.signal();</span><br><span class="line">            condition02.await();</span><br><span class="line">            System.out.println(<span class="string">&quot;condition02 wake&quot;</span>);</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">            condition03.signal();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//testWait();</span></span><br><span class="line">        testCondition();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Supermarket</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Supermarket</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">curGoodCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">maxGoodCount</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(curGoodCount&lt;maxGoodCount)</span><br><span class="line">        &#123;</span><br><span class="line">            curGoodCount++;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;在加紧生产，货架现有&quot;</span>+curGoodCount+<span class="string">&quot;个商品&quot;</span>);</span><br><span class="line">            notify();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">sub</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(curGoodCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            curGoodCount--;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;又来购物了，还剩&quot;</span>+curGoodCount+<span class="string">&quot;还剩&quot;</span>+curGoodCount+<span class="string">&quot;个商品&quot;</span>);</span><br><span class="line">            notify();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Producer</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Producter</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    Supermarket supermarket;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Producter</span><span class="params">(Supermarket su)</span></span><br><span class="line">    &#123;</span><br><span class="line">        supermarket = su;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            supermarket.add();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Consumer</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    Supermarket supermarket;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(Supermarket su)</span></span><br><span class="line">    &#123;</span><br><span class="line">        supermarket = su;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            supermarket.sub();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    Supermarket supermarket;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(Supermarket su)</span></span><br><span class="line">    &#123;</span><br><span class="line">        supermarket = su;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            supermarket.sub();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="InetAddress类概述"><a href="#InetAddress类概述" class="headerlink" title="InetAddress类概述"></a>InetAddress类概述</h4><p>用途：InetAddress类用于网络编程，它提供了IP地址和主机名之间的映射。</p><p>特点：InetAddress类没有公共构造函数，我们只能通过类的方法来创建其对象。</p><p>InetAddress类的使用</p><p>构造：getByAddress(String host)：此方法接受一个主机名作为参数，返回该主机名的InetAddress对象。</p><p>使用：getHostAddress():此方法返回Inetddress对象的主机名。如果对象是通过IP地址创建的，那么它将返回IP地址作为主机名。</p><p>getLocalHost():此方法返回一个InetAddress对象，该对象表示本地主机。它是获取本地主机名和IP地址的一种快捷方式。</p><p>其它：</p><p>配合NetworkInterface使用</p><p>看不懂、、、对计算机 网络没有概念</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">macBytes2String</span><span class="params">(<span class="type">byte</span>[] buf)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(buf==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;buf.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">tmp</span> <span class="operator">=</span> Integer.toHexString(buf[i]&amp;<span class="number">0xFF</span>);</span><br><span class="line">            <span class="keyword">if</span>(tmp.length()==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString().toUpperCase();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnknownHostException, SocketException &#123;</span><br><span class="line">        <span class="comment">//InetAddress</span></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">inet01</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);<span class="comment">//根据域名获取对应的InetAddress对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Host Name:&quot;</span> + inet01.getHostName());<span class="comment">//获取解析后的主机名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;IP Address:&quot;</span> + inet01.getHostAddress());<span class="comment">//获取解析后的IP地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">inet02</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;36.155.132.76&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Host Name:&quot;</span> + inet02.getHostName());</span><br><span class="line">        System.out.println(<span class="string">&quot;IP Address:&quot;</span> + inet02.getHostAddress());</span><br><span class="line"></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">inet03</span> <span class="operator">=</span> InetAddress.getLocalHost();<span class="comment">//获取本地主机的InetAddress对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Host Name:&quot;</span> + inet03.getHostName());<span class="comment">//获取本地主机的主机名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;IP Address:&quot;</span> + inet03.getHostAddress());<span class="comment">//获取本地主机的IP地址</span></span><br><span class="line">        Enumeration&lt;NetworkInterface&gt; networkInerfaces = NetworkInterface.getNetworkInterfaces();<span class="comment">//获取当前主机上所有网络接口的枚举</span></span><br><span class="line">        <span class="comment">//外层的 while 循环遍历每个网络接口，内层的 while 循环遍历每个接口的InetAddress对象。</span></span><br><span class="line">        <span class="keyword">while</span>(networkInerfaces.hasMoreElements())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">NetworkInterface</span> <span class="variable">nif</span> <span class="operator">=</span> networkInerfaces.nextElement();</span><br><span class="line">            Enumeration&lt;InetAddress&gt;inetAddresses=nif.getInetAddresses();<span class="comment">//获取当前网络接口的所有接口地址</span></span><br><span class="line">            <span class="keyword">while</span>(inetAddresses.hasMoreElements())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">InetAddress</span> <span class="variable">addr</span> <span class="operator">=</span> inetAddresses.nextElement();</span><br><span class="line">                List&lt;InterfaceAddress&gt; interfaceAddress=nif.getInterfaceAddresses();</span><br><span class="line">                System.out.println(interfaceAddress);</span><br><span class="line">                System.out.println(nif.getDisplayName());<span class="comment">//获取网络接口的显示名称</span></span><br><span class="line">                System.out.println(nif.getName());<span class="comment">//获取网络接口的名称</span></span><br><span class="line">                System.out.println(addr.getHostName());<span class="comment">//获取InetAddress对象的主机名</span></span><br><span class="line">                System.out.println(addr.getAddress());<span class="comment">//获取InetAddress对象的原始IP地址</span></span><br><span class="line">                <span class="type">byte</span>[] mac = nif.getHardwareAddress();<span class="comment">//获取网络接口的物理地址（MAC地址</span></span><br><span class="line">                System.out.println(macBytes2String(mac));</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="URL的概念"><a href="#URL的概念" class="headerlink" title="URL的概念"></a>URL的概念</h4><p>URL(统一资源定位器)是互联网上用于秒速信息位置的一种方式。</p><p>他是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。</p><p>结构：<a href="https://blog.csdn.net/xinzi123/arcle/detail8?w=445&id=5">https://blog.csdn.net/xinzi123/arcle/detail8?w=445&amp;id=5</a></p><p>协议：&#x2F;&#x2F;域名:端口&#x2F;目录&#x2F;目录？参数1&#x3D;参数1值&amp;参数2&#x3D;参数2值</p><h4 id="URL的创建"><a href="#URL的创建" class="headerlink" title="URL的创建"></a>URL的创建</h4><p>在Java中，我们可以使用Java.net.URL类来创建URL对象</p><h4 id="同步请求"><a href="#同步请求" class="headerlink" title="同步请求"></a>同步请求</h4><p>同步请求是指客户端发出请求后，必须等待服务器回应才能进行下一步操作。</p><p>在此期间，客户端不能做其他操作，这种方式的好处是编程模型简单，缺点是等待服务器响应的时间可能会很长</p><h4 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h4><p>URL是互联网上的资源地址，java提供了URL类来操作URL</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">            HttpURLConnection conn=(HttpURLConnection) url.openConnection();</span><br><span class="line">            conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept-Charset&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> conn.getResponseCode();</span><br><span class="line">            <span class="keyword">if</span>(responseCode==HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                InputStream inputStream=conn.getInputStream();</span><br><span class="line">                <span class="type">InputStreamReader</span> <span class="variable">inputStreamReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                Stream&lt;String&gt; stringStream = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(inputStreamReader).lines();</span><br><span class="line">                <span class="type">String</span> <span class="variable">streamToString</span> <span class="operator">=</span> stringStream.collect(Collectors.joining());</span><br><span class="line">                System.out.println(streamToString);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;error Code:&quot;</span>+responseCode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">post</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">            HttpURLConnection conn=(HttpURLConnection) url.openConnection();</span><br><span class="line">            conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept-Charset&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">            conn.setDoInput(<span class="literal">true</span>);</span><br><span class="line">            conn.setDoOutput(<span class="literal">true</span>);</span><br><span class="line">            conn.setUseCaches(<span class="literal">false</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(conn.getOutputStream()));</span><br><span class="line">            writer.write(<span class="string">&quot;ddfsadfasdf&quot;</span>);</span><br><span class="line">            writer.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> conn.getResponseCode();</span><br><span class="line">            <span class="keyword">if</span>(responseCode==HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                InputStream inputStream=conn.getInputStream();</span><br><span class="line">                <span class="type">InputStreamReader</span> <span class="variable">inputStreamReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                Stream&lt;String&gt; stringStream = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(inputStreamReader).lines();</span><br><span class="line">                <span class="type">String</span> <span class="variable">streamToString</span> <span class="operator">=</span> stringStream.collect(Collectors.joining());</span><br><span class="line">                System.out.println(streamToString);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;error Code:&quot;</span>+responseCode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">downloadFile</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">            HttpURLConnection conn=(HttpURLConnection) url.openConnection();</span><br><span class="line">            conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept-Charset&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> conn.getResponseCode();</span><br><span class="line">            <span class="keyword">if</span>(responseCode==HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                InputStream inputStream=conn.getInputStream();</span><br><span class="line">                <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;downloadFileDir&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">                &#123;</span><br><span class="line">                    dir.mkdirs();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dir,<span class="string">&quot;fname.html&quot;</span>);</span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> len=-<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>((len=inputStream.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    fos.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">                &#125;</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;error Code:&quot;</span>+responseCode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//同步get请求</span></span><br><span class="line">        <span class="comment">//get();</span></span><br><span class="line">        <span class="comment">//同步post请求</span></span><br><span class="line">        <span class="comment">//post();</span></span><br><span class="line">        <span class="comment">//下载文件</span></span><br><span class="line">        downloadFile();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="异步请求"><a href="#异步请求" class="headerlink" title="异步请求"></a>异步请求</h4><h4 id="Okhttp3的优点"><a href="#Okhttp3的优点" class="headerlink" title="Okhttp3的优点"></a>Okhttp3的优点</h4><p>提供了对HTTP&#x2F;2和SPDY的支持，这使得对同一个主机发出的所有请求都可以共享相同的套接字连接</p><p>如果HTTP&#x2F;2和SPDY不可用，OkHttp会使用连接池来复用连接以提高效率</p><p>提供了对GZIP的默认支持来降低传输内容的大小</p><p>提供了对HTTP响应的缓存机制，可以避免不必要的网络请求</p><p>当网络出现问题是，Okhttp会自动重试一个主机的多个IP地址</p><h4 id="Okhttp3使用教程"><a href="#Okhttp3使用教程" class="headerlink" title="Okhttp3使用教程"></a>Okhttp3使用教程</h4><p>GRADLE引入包</p><p>创建OkHttpClient实例</p><p>简单来说，通过OkHttpClient可以发送一个Http请求，并读取该Http请求的响应，它是一个生产Call的工厂。</p><p>此外，收益于一个共享的响应缓存&#x2F;线程池&#x2F;复用的连接等因素，绝大多数应用使用一个OkHttpClient实例，便可以满足整个应用的Http请求</p><p>GET和POST</p><p>HTTP头部的设置和读取</p><p>HTTP头的数据结构是Map&lt;String,List<String>&gt;类型。也就是说，对于每个HTTP头，可能有多个值。但是大部分HTTP头都只有一个值，只有少部分HTTP头允许多个值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> okhttp3.*;</span><br><span class="line"><span class="keyword">import</span> org.jetbrains.annotations.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.SecureRandom;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyNet</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> OkHttpClient okHttpClient;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyNet</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个 OkHttpClient.Builder 实例，用于配置 OkHttpClient</span></span><br><span class="line">        OkHttpClient.<span class="type">Builder</span> <span class="variable">clientBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder();</span><br><span class="line">        clientBuilder.readTimeout(<span class="number">20</span>, TimeUnit.SECONDS);</span><br><span class="line">        clientBuilder.connectTimeout(<span class="number">5</span>,TimeUnit.SECONDS);</span><br><span class="line">        clientBuilder.writeTimeout(<span class="number">60</span>,TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置自定义的 SSL 套接字工厂</span></span><br><span class="line">        clientBuilder.sslSocketFactory(mySslSocketFactory());</span><br><span class="line">        <span class="comment">// 设置自定义的主机名验证器，这里简单返回 true，表示不进行主机名验证</span></span><br><span class="line">        clientBuilder.hostnameVerifier(<span class="keyword">new</span> <span class="title class_">HostnameVerifier</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">verify</span><span class="params">(String s, SSLSession sslSession)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 构建 OkHttpClient 实例</span></span><br><span class="line">        okHttpClient = clientBuilder.build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义一个内部类 TrustAllCerts，实现 X509TrustManager 接口</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">TrustAllCerts</span> <span class="keyword">implements</span> <span class="title class_">X509TrustManager</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 空实现，表示信任所有客户端证书</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkClientTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 空实现，表示信任所有客户端证书</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkServerTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回空的证书数组，表示不接受任何证书颁发机构的证书</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">X509Certificate</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> SSLSocketFactory <span class="title function_">mySslSocketFactory</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">SSLSocketFactory</span> <span class="variable">sslSocketFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">SSLContext</span> <span class="variable">sslContext</span> <span class="operator">=</span> SSLContext.getInstance(<span class="string">&quot;TLS&quot;</span>);</span><br><span class="line">            sslContext.init(<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">TrustManager</span>[]&#123;<span class="keyword">new</span> <span class="title class_">TrustAllCerts</span>()&#125;,<span class="keyword">new</span> <span class="title class_">SecureRandom</span>());</span><br><span class="line">            sslSocketFactory = sslContext.getSocketFactory();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sslSocketFactory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">interface</span> <span class="title class_">MyCallBack</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">success</span><span class="params">(Call call,Response response)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">failed</span><span class="params">(Call call ,IOException e)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">(String url,MyCallBack myCallBack)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Request.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder();</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> builder.get().url(url).build();</span><br><span class="line">        <span class="type">Call</span> <span class="variable">call</span> <span class="operator">=</span> okHttpClient.newCall(request);</span><br><span class="line">        call.enqueue(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NotNull</span> Call call, <span class="meta">@NotNull</span> IOException e)</span></span><br><span class="line">            &#123;</span><br><span class="line">                myCallBack.failed(call,e);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NotNull</span> Call call, <span class="meta">@NotNull</span> Response response)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">            &#123;</span><br><span class="line">                myCallBack.success(call,response);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">post</span><span class="params">(String url, Map&lt;String,String&gt; bodyMap, MyCallBack myCallBack)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Socket通信"><a href="#Socket通信" class="headerlink" title="Socket通信"></a>Socket通信</h4><p>Socket通信基本步骤</p><p>创建Socket</p><p>绑定Socket到地址和端口</p><p>监听连接</p><p>接受连接</p><p>发送和接受数据</p><p>关闭Socket</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//            DatagramSocket datagramSocket = DatagramSocket(2343);</span></span><br><span class="line">                <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">7890</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;服务器已启动。&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端已经连接:&quot;</span> + socket.getInetAddress().getHostAddress());</span><br><span class="line"></span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">                <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//接收一次数据</span></span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">bytesRead</span> <span class="operator">=</span> inputStream.read(buffer);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">requestData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(buffer, <span class="number">0</span>, bytesRead);</span><br><span class="line">                    System.out.println(<span class="string">&quot;接收到客户端发送的数据：&quot;</span> + requestData);</span><br><span class="line">                    <span class="comment">//根据不同数据，不同格式，走不同的数据处理分支</span></span><br><span class="line">                    <span class="keyword">if</span> (requestData.equals(<span class="string">&quot;exit&quot;</span>))&#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//发送一次数据</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">responseData</span> <span class="operator">=</span> <span class="string">&quot;hello client!&quot;</span>;</span><br><span class="line">                outputStream.write(responseData.getBytes());</span><br><span class="line">                System.out.println(<span class="string">&quot;向客户端发送响应数据:&quot;</span> + responseData);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                socket.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ee)&#123;</span><br><span class="line">                ee.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//            DatagramSocket datagramSocket = DatagramSocket(2343);</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">7890</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;服务器已启动。&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                socket = serverSocket.accept();</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端已经连接:&quot;</span> + socket.getRemoteSocketAddress() + <span class="string">&quot;, 端口:&quot;</span> + socket.getPort());</span><br><span class="line"></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Service</span>(socket)).start();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)&#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Clientv1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Clientv1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;192.168.31.106&quot;</span>, <span class="number">7890</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">            <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//数据源可以是命令行窗口的用户输入，也可以是一个文件里面的内容，也可以是其他数据</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">send1</span> <span class="operator">=</span> <span class="string">&quot;hello server&quot;</span>;</span><br><span class="line">            outputStream.write(send1.getBytes());</span><br><span class="line">            System.out.println(<span class="string">&quot;向服务器发送数据:&quot;</span> + send1);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">send2</span> <span class="operator">=</span> <span class="string">&quot;exit&quot;</span>;</span><br><span class="line">            outputStream.write(send2.getBytes());</span><br><span class="line">            System.out.println(<span class="string">&quot;向服务器发送数据:&quot;</span> + send2);</span><br><span class="line"></span><br><span class="line">            <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">bytesRead</span> <span class="operator">=</span> inputStream.read(buff);</span><br><span class="line">            <span class="type">String</span> <span class="variable">recv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(buff, <span class="number">0</span>, bytesRead);</span><br><span class="line">            System.out.println(<span class="string">&quot;接收到服务器返回数据：&quot;</span> + recv);</span><br><span class="line"></span><br><span class="line">            socket.close();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)&#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Service</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">OutputStream</span> <span class="variable">output</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Socket</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ObjectOutputStream oos= <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">PrintWriter</span> <span class="variable">pw</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Service</span><span class="params">(Socket s)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            input = s.getInputStream();</span><br><span class="line">            output = s.getOutputStream();</span><br><span class="line"></span><br><span class="line">            oos = <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(output);</span><br><span class="line">            oos.writeInt(<span class="number">1314</span>);</span><br><span class="line">            oos.writeDouble(<span class="number">13.14</span>);</span><br><span class="line">            <span class="type">Student</span> <span class="variable">st</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">567</span>);</span><br><span class="line">            oos.writeObject(st);</span><br><span class="line">            oos.flush();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span>  String sName;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> sId;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String sName, <span class="type">int</span> sId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sName = sName;</span><br><span class="line">        <span class="built_in">this</span>.sId = sId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sName=&#x27;&quot;</span> + sName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, sId=&quot;</span> + sId +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础3</title>
      <link href="/2024/07/11/java%E5%9F%BA%E7%A1%803/"/>
      <url>/2024/07/11/java%E5%9F%BA%E7%A1%803/</url>
      
        <content type="html"><![CDATA[<h4 id="异常简介"><a href="#异常简介" class="headerlink" title="异常简介"></a>异常简介</h4><p>Java中的异常又称为例外，是一个程序执行期间发生的事件，它中断正在执行程序的正常指令流。为了能够及时有效地处理程序中的运行错误，必须使用异常类，这可以让程序具有记号的容错性且更加健壮</p><p>在Java中一个异常的产生，主要有如下三种原因：</p><p>1、Java内部错误发生异常，Java虚拟机产生的异常</p><p>2、编写的程序代码中的错误所产生的异常，例如空指针异常、数组越界异常等</p><p>3、通过throw语句手动生成的异常，一般用来告知该方法的调用者一些必要信息</p><p>我们把生成异常对象，并把它提交给运行系统的过程称为抛出（throw）异常。运行时系统在方法的调用堆栈中查找，直到找到能够处理该类型异常的对象，这一个过程为捕获（catch）异常。</p><h4 id="异常分类"><a href="#异常分类" class="headerlink" title="异常分类"></a>异常分类</h4><p>为了能够及时有效地处理程序中的运行错误，Java专门引入了异常类。在Java中所有异常类型都是内置类java.lang.Throwable类的子类，即Throwable位于异常类层次结构的顶层。Throwable类下有连个异常分支Exception和Error</p><p>Throwable类是所有异常和错误的超类，下面有Error和Exception两个子类分别表示错误和异常。其中异常类Exception又分为运行时异常和非运行时异常，这两种异常有很大的区别，也称为不检查异常（Unchecked Exception）和检查异常（Checked Exception）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> m=Integer.parseInt(<span class="string">&quot;334sdfsd&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;m:&quot;</span>+m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> IOException<span class="comment">//throws IOException: 这表明方法可能会抛出IOException异常。</span></span><br><span class="line">    <span class="comment">// 在Java中，如果一个方法可能会抛出检查异常（即必须在方法签名中声明的异常），那么必须使用throws关键字来声明这些异常。</span></span><br><span class="line">    <span class="comment">// 在这个例子中，test2()方法声明可能会抛出IOException异常。</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;IO出问题了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            test();</span><br><span class="line">            test2();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        catch(NumberFormatException numberFormatException)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            numberFormatException.printStackTrace();</span></span><br><span class="line"><span class="comment">//            System.out.println(numberFormatException.getMessage());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">catch</span>(Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//catch (NumberFormatException numberFormatException) &#123; ... &#125;: 如果在 try 块中出现了 NumberFormatException 异常（即字符串无法被解析为整数），则控制流会跳到 catch 块处理异常。</span></span><br><span class="line"><span class="comment">//numberFormatException.printStackTrace();: 这行代码打印异常的跟踪栈信息，显示异常发生的位置和调用序列。</span></span><br><span class="line"><span class="comment">//System.out.println(numberFormatException.getMessage());: 这行代码打印异常的消息。在这种情况下，异常消息通常是描述问题的文本，例如 &quot;For input string: &quot;334dsfs&quot;&quot;，指出哪里出现了问题。</span></span><br></pre></td></tr></table></figure><h4 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h4><p>如果Java提供的内置异常不能满足程序设计的需求，这时我们可以自己设计Java类库或框架，其中包括异常类型。实现自定义异常类需要继承Exception类或其子类，如果自定义运行时异常类需继承RuntimeException类或其子类</p><p>语法形式：</p><p><class>&lt;自定义异常名&gt;<extends><Exception></p><p>编码规范：</p><p>一般将自定义异常类的类名命名为XXXException，其中XXX用来代表该异常的作用</p><h4 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h4><p>自定义异常类一般包含两个二构造方法：一个是无参的默认构造方法，另一个构造方法以字符串的形式接受一个定制的异常消息，并将该消息传递给超类的构造方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> <span class="keyword">throws</span> MyException</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MyException</span>(<span class="string">&quot;分母不能是0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a/b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(div(<span class="number">8</span>,<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (MyException me)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;出现异常，被catch捕捉到&quot;</span>);</span><br><span class="line">            System.out.println(me.getMessage());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;进入finally块&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结尾return前&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="输入数据流与输出数据流"><a href="#输入数据流与输出数据流" class="headerlink" title="输入数据流与输出数据流"></a>输入数据流与输出数据流</h4><p> 什么是I&#x2F;O</p><p>Java中I&#x2F;O操作主要是指使用Java进行输入，输出操作。java所有的I&#x2F;O机制都是基于数据流进行输入输出，这些数据表示了字符或者字节数据的流动序列。Java的I&#x2F;O流提供了读写数据的标准方法。任何Java中表示数据源的对象都会提供以数据流的方式读写它数据的方法</p><h4 id="数据流的基本概念"><a href="#数据流的基本概念" class="headerlink" title="数据流的基本概念"></a>数据流的基本概念</h4><p>数据流：一组有序，有起点和终点的字节的数据序列。包括输入流和输出流。</p><p>输入流（Input Stream）:</p><p>程序从输入流读取数据源。数据源包括外界（键盘、文件、网络、、），即是将数据源读入到程序的通信通道。</p><p>输出流：</p><p>程序向输出流写入数据。将程序中的数据输出到外界（显示器、打印机、文件、网络、、、）的通信通道</p><p>数据流分类：</p><p>1、字节流：数据流中最小的数据单元是字节</p><p>2、字符流：数据流中最小的数据单元是字符，Java中的字符是Unicode编码，一个字符占用两个字节</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        for(int i=0;i&lt; args.length;i++) &#123;</span></span><br><span class="line"><span class="comment">//            //打印命令行参数</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;参数&quot; + i + &quot;:&quot; + args[i]);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">            <span class="comment">//标准io System.in System.out</span></span><br><span class="line"><span class="comment">//        int userInput;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;请输入一个字符:&quot;);</span></span><br><span class="line"><span class="comment">//        try&#123;</span></span><br><span class="line"><span class="comment">//            while((userInput=System.in.read())!=&#x27;q&#x27;)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println((char)userInput);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//        &#125;catch (IOException e)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(e.toString());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="type">InputStreamReader</span> <span class="variable">ir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in);</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(ir);</span><br><span class="line">        String s;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取用户输入的一行字符串</span></span><br><span class="line">           <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               s=in.readLine();</span><br><span class="line">               <span class="keyword">if</span>(s.equals(<span class="string">&quot;exit&quot;</span>))</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               System.out.println(s);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="文件数据流"><a href="#文件数据流" class="headerlink" title="文件数据流"></a>文件数据流</h4><p>流的原理：</p><p>输入流(input):将外部的文件通过流读取到内存中</p><p>输出流(output)：将内存中的文件通过流输出到硬盘等存储设备中</p><p>分类：</p><p>按照操作单位分为：字节流，字符流</p><p>按照流向不同分为：输入流，输出流</p><p>按照角色不同分为：节点流，处理流</p><p>FileInputStream</p><p>1、FIleInputStream(File file):通过打开一个到实际文件的连接来创建一个FIleInputStream对象，该文件通过文件系统中的FIle对象file指定。</p><p>2、FileInputStream(String name):通过打开一个到实际文件的连接来创建一个FileInputStrem对象，该文件通过文件系统中的路径路径名name来指定</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//字节流操作文件</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">byte</span> buff[]=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> cnt=System.in.read(buff);</span><br><span class="line">            FileOutputStream fileOutputStream=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;read.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">            fileOutputStream.write(buff,<span class="number">0</span>,cnt);</span><br><span class="line">            fileOutputStream.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fileInputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;read.txt&quot;</span>);</span><br><span class="line">            <span class="type">byte</span> buffer[]=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> readLen=-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>((readLen= fileInputStream.read(buffer,<span class="number">0</span>,buffer.length))!=-<span class="number">1</span>&amp;&amp; readLen&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">byte</span> tmp[] = <span class="keyword">new</span> <span class="title class_">byte</span>[readLen];</span><br><span class="line">                System.arraycopy(buffer,<span class="number">0</span>,tmp,<span class="number">0</span>,readLen);</span><br><span class="line">                System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(tmp ));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h4><p>IO体系中的二FileReader：</p><p>FileReader是针对字符型文件（后缀.txt）的流，根据定义的不同也可以称其为字符流，结点流，输入流</p><p>FileReader的使用：</p><p>1、实例花一个FIle类用于操作的对象</p><p>2、实例化一个FIleReader类并且将file对象作为参数传入他的构造器中。</p><p>3、用FileReader的方法将数据读入</p><p>FileReader读入数据的方法是read()方法</p><p>-&gt;read()的空参构造器；返回读入的第一个字符并继续往下读，如果读到最后一个元素返回-1</p><p>-&gt;read(char cbuf[])一次读入cbuf中字符个元素的个数如果达到文件末尾返回-1</p><p>4、关闭流close（）;方法流不会自动关闭，必须手动关闭，不然会浪费资源</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.security.jgss.GSSUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//字节流操作文件</span></span><br><span class="line">        <span class="comment">/*try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            byte buff[]=new byte[1024];</span></span><br><span class="line"><span class="comment">            int cnt=System.in.read(buff);</span></span><br><span class="line"><span class="comment">            FileOutputStream fileOutputStream=new FileOutputStream(&quot;read.txt&quot;,true);</span></span><br><span class="line"><span class="comment">            fileOutputStream.write(buff,0,cnt);</span></span><br><span class="line"><span class="comment">            fileOutputStream.close();</span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ioe)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ioe.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        FileInputStream fileInputStream = null;</span></span><br><span class="line"><span class="comment">        try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            fileInputStream = new FileInputStream(&quot;read.txt&quot;);</span></span><br><span class="line"><span class="comment">            byte buffer[]=new byte[1024];</span></span><br><span class="line"><span class="comment">            int readLen=-1;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            while((readLen= fileInputStream.read(buffer,0,buffer.length))!=-1&amp;&amp; readLen&gt;0)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                byte tmp[] = new byte[readLen];</span></span><br><span class="line"><span class="comment">                System.arraycopy(buffer,0,tmp,0,readLen);</span></span><br><span class="line"><span class="comment">                System.out.println(new String(tmp ));</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ioe)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ioe.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="comment">//字符文件操作</span></span><br><span class="line">        <span class="comment">/*try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            File file = new File(&quot;a.txt&quot;);</span></span><br><span class="line"><span class="comment">            FileWriter fileWriter=new FileWriter(file);</span></span><br><span class="line"><span class="comment">            fileWriter.write(&quot;这是文件内容&quot;);</span></span><br><span class="line"><span class="comment">            fileWriter.close();</span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ioe)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ioe.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            File file =new File(&quot;a.txt&quot;);</span></span><br><span class="line"><span class="comment">            FileReader fileReader=new FileReader(file);</span></span><br><span class="line"><span class="comment">            int readLen=-1;</span></span><br><span class="line"><span class="comment">            int ct=-1;</span></span><br><span class="line"><span class="comment">            while ((ct=fileReader.read())!=-1)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                System.out.println((char) ct);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ee)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ee.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="comment">//2种转换</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;read .txt&quot;</span>);</span><br><span class="line">            <span class="type">InputStreamReader</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(input);</span><br><span class="line">            FileOutputStream output=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;b.txt&quot;</span>);</span><br><span class="line">            OutputStreamWriter outputStreamWriter=<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(output);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字节流–过滤流"><a href="#字节流–过滤流" class="headerlink" title="字节流–过滤流"></a>字节流–过滤流</h4><p>缓冲区数据流：</p><p>缓冲区数据流有BufferedInputStream和BufferedOutputStream</p><p>网上错误说法：在关闭一个缓冲区输出流之前，要使用flush（）方法，强制输出剩余数据，确保缓冲区里的所有数据全部写入输出流，错误说法。</p><p>数据数据流：</p><p>之前说的数据流中，处理的数据不是字节就是字节数组，但是有很多时候，不只是只有这两种数据，所以就要用专门的过滤数据流来处理，这里给出DataInputStream，DataOutputStream，他们允许对Java基本类型进行处理。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//缓冲区流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;input.bin&quot;</span>);</span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;out.bin&quot;</span>);</span><br><span class="line">            BufferedInputStream bufferedInputStream=<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(in);</span><br><span class="line">            BufferedOutputStream bufferedOutputStream=<span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(out);</span><br><span class="line">            <span class="type">int</span> data;</span><br><span class="line">            <span class="keyword">while</span>((data= bufferedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bufferedOutputStream.write(data);</span><br><span class="line">            &#125;</span><br><span class="line">            bufferedInputStream.close();</span><br><span class="line">            bufferedOutputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">          <span class="comment">//数据流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataOutputStream dataOutputStream=<span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(out);</span><br><span class="line"></span><br><span class="line">            dataOutputStream.writeInt(<span class="number">123</span>);</span><br><span class="line">            dataOutputStream.writeDouble(<span class="number">3.515</span>);</span><br><span class="line">            dataOutputStream.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">            dataOutputStream.close();</span><br><span class="line">            out.close();</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataInputStream dataInputStream=<span class="keyword">new</span> <span class="title class_">DataInputStream</span>(in);</span><br><span class="line">            <span class="type">int</span> num=dataInputStream.readInt();</span><br><span class="line">            <span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> dataInputStream.readDouble();</span><br><span class="line">            <span class="type">boolean</span> flag=dataInputStream.readBoolean();</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d,%f,%b&quot;</span>,num,pi,flag);</span><br><span class="line">            dataInputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字节流–可持久化"><a href="#字节流–可持久化" class="headerlink" title="字节流–可持久化"></a>字节流–可持久化</h4><p>可持久化就是对象通过描述自己状态的数值来记录自己的过程</p><p>当一个类实现Serializable接口时，表面该类加入了对象串行化协议</p><p>需要注意的是，要使一个java对象可序列化，必须实现Serializable接口。这个接口没有任何方法，只是一个标记接口，用于告诉java虚拟机这个类可以被序列化。</p><p>字节流–管道流、对象流</p><p>管道数据流：PipedOutputStream和PipedInputStream，管道的两端建立连接后就可以通信</p><p>对象流：ObjectOutputStream和ObjectInputStream，将一个对象示例写入文件</p><p>transient关键字用于标记一个变量不需要被序列化</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name,<span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//缓冲区流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;input.bin&quot;</span>);</span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;out.bin&quot;</span>);</span><br><span class="line">            BufferedInputStream bufferedInputStream=<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(in);</span><br><span class="line">            BufferedOutputStream bufferedOutputStream=<span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(out);</span><br><span class="line">            <span class="type">int</span> data;</span><br><span class="line">            <span class="keyword">while</span>((data= bufferedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bufferedOutputStream.write(data);</span><br><span class="line">            &#125;</span><br><span class="line">            bufferedInputStream.close();</span><br><span class="line">            bufferedOutputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数据流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataOutputStream dataOutputStream=<span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(out);</span><br><span class="line"></span><br><span class="line">            dataOutputStream.writeInt(<span class="number">123</span>);</span><br><span class="line">            dataOutputStream.writeDouble(<span class="number">3.515</span>);</span><br><span class="line">            dataOutputStream.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">            dataOutputStream.close();</span><br><span class="line">            out.close();</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataInputStream dataInputStream=<span class="keyword">new</span> <span class="title class_">DataInputStream</span>(in);</span><br><span class="line">            <span class="type">int</span> num=dataInputStream.readInt();</span><br><span class="line">            <span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> dataInputStream.readDouble();</span><br><span class="line">            <span class="type">boolean</span> flag=dataInputStream.readBoolean();</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d,%f,%b&quot;</span>,num,pi,flag);</span><br><span class="line">            dataInputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;objectOut.bin&quot;</span>);</span><br><span class="line">            ObjectOutputStream objectOutputStream=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(out);</span><br><span class="line">            objectOutputStream.writeObject(person01);</span><br><span class="line">            objectOutputStream.close();</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;objectOut.bin&quot;</span>);</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(in);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Person</span> <span class="variable">person02</span> <span class="operator">=</span> (Person) objectInputStream.readObject();</span><br><span class="line">                objectInputStream.close();</span><br><span class="line">                System.out.println(<span class="string">&quot;\r\n&quot;</span>+person02.getName()+person02.getAge()+<span class="string">&quot;,&quot;</span>+person02.getAge());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                objectInputStream.readObject();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>管道</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PipedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PipedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PipedOutputStream</span> <span class="variable">pipedOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedOutputStream</span>();</span><br><span class="line">        <span class="type">PipedInputStream</span> <span class="variable">pipedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedInputStream</span>(pipedOutputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//线程1</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">writeThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pipedOutputStream.write(<span class="string">&quot;hello world&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">            &#123;</span><br><span class="line">                ioe.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//线程2</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">readThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">int</span> data;</span><br><span class="line">                <span class="keyword">while</span>((data=pipedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println((<span class="type">char</span>)data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        writeThread.start();</span><br><span class="line">        readThread.start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writeThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            readThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符流–缓冲区读者写者"><a href="#字符流–缓冲区读者写者" class="headerlink" title="字符流–缓冲区读者写者"></a>字符流–缓冲区读者写者</h4><p>缓冲区的出现，提高了对数据的读写效率，缓冲区要结合流才可以使用，缓冲区是在流的基础上对流的功能进行增强</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PipedOutputStream</span> <span class="variable">pipedOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedOutputStream</span>();</span><br><span class="line">        <span class="type">PipedInputStream</span> <span class="variable">pipedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedInputStream</span>(pipedOutputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//线程1</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">writeThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pipedOutputStream.write(<span class="string">&quot;hello world&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">            &#123;</span><br><span class="line">                ioe.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//线程2</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">readThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">int</span> data;</span><br><span class="line">                <span class="keyword">while</span>((data=pipedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println((<span class="type">char</span>)data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        writeThread.start();</span><br><span class="line">        readThread.start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writeThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            readThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//字符流 缓冲区</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">FileReader</span> <span class="variable">fileReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;test.iml&quot;</span>);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(fileReader);</span><br><span class="line">            String line;</span><br><span class="line">            <span class="type">FileWriter</span> <span class="variable">fileWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;b.iml&quot;</span>);</span><br><span class="line">            <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(fileWriter);</span><br><span class="line">            <span class="keyword">while</span>((line=reader.readLine())!=<span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                writer.write(line+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            writer.close();</span><br><span class="line">            fileReader.close();</span><br><span class="line">            fileWriter.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="File类概述"><a href="#File类概述" class="headerlink" title="File类概述"></a>File类概述</h4><p>java.io.File类:文件和文件目录路径的抽象表示形式，与平台无关</p><p>File类中涉及到的关于文件或文件目录的创建、删除、重命名、修改时间、文件大小等方法，并未涉及到写入或读取文件内容的操作。如果需要读取或写入文件内容，必须使用IO流来完成</p><p>想要在Java程序中表示一个真实存在的文件或目录，那么必须有一个File对象，但是Java程序中的一个File对象，可能没有一个真实存在的文件或目录</p><h4 id="绝对路径-vs-相对路径"><a href="#绝对路径-vs-相对路径" class="headerlink" title="绝对路径 vs 相对路径"></a>绝对路径 vs 相对路径</h4><p>1、绝对路径：是一个固定的路径，从盘符开始</p><p>2、相对路径：是相对于某个位置开始</p><p>main（）方法中的相对路径是相对于当前工程</p><p>单元测试方法中的相对路径是相对于当前模块</p><h4 id="路径分隔符："><a href="#路径分隔符：" class="headerlink" title="路径分隔符："></a>路径分隔符：</h4><p>1、路径中的每级目录之间用一个路径分隔符隔开</p><p>2、路径分隔符和系统有关：</p><p>windows和DOS系统默认使用”\“来表示</p><p>UNIX和URL使用“\”来表示</p><p>3、Java程序支持跨平台运行，因此路径分隔符要慎用。</p><p>为了解决这个隐患，File类提供了一个常量：</p><p>public static final String separator:根据操作系统，动态的提供分隔符。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//File类的使用</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;src/a.txt&quot;</span>);</span><br><span class="line">        System.out.println(file.getAbsoluteFile());</span><br><span class="line">        System.out.println(file.getParent());</span><br><span class="line">        System.out.println(file.getPath());</span><br><span class="line">        System.out.println(file.getCanonicalPath());</span><br><span class="line">        System.out.println(file.canWrite());</span><br><span class="line">        System.out.println(file.isFile());</span><br><span class="line">        System.out.println(file.isDirectory());</span><br><span class="line">        System.out.println(file.getName());</span><br><span class="line">        System.out.println(file.length());</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;最后修改时间&quot;</span>+simpleDateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>(file.lastModified())));</span><br><span class="line">        System.out.println(File.separator);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="随机访问文件"><a href="#随机访问文件" class="headerlink" title="随机访问文件"></a>随机访问文件</h4><p>使用随机访问文件，我们可以从文件读取以及写入文件。使用文件输入和输出流读取和写入时顺序过程。</p><p>使用随机访问文件，可以在文件中的任何位置读取或写入。</p><p>RandomAccessFile类的一个对象可以进行随机文件访问。可以读&#x2F;写字节和所有原始类型的值到一个文件</p><p>RandomAccessFile可以直接使用其readUTF()和writeUTF()方法处理字符串。</p><p>RandomAccessFile类在不在InputStream和OutputStream类的层次结构中。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//File类的使用</span></span><br><span class="line"><span class="comment">//        File file = new File(&quot;src/a.txt&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getAbsoluteFile());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getParent());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getPath());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getCanonicalPath());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.canWrite());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.isFile());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.isDirectory());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getName());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.length());</span></span><br><span class="line"><span class="comment">//        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;最后修改时间&quot;+simpleDateFormat.format(new Date(file.lastModified())));</span></span><br><span class="line"><span class="comment">//        System.out.println(File.separator);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//随机读写文件</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;randomAccessFile.txt&quot;</span>;</span><br><span class="line">       <span class="type">File</span> <span class="variable">fo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">       <span class="keyword">if</span>(!fo.exists())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">RandomAccessFile</span> <span class="variable">randomAccessFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(fo.getPath(),<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">           randomAccessFile.writeInt(<span class="number">1234</span>);</span><br><span class="line">           randomAccessFile.writeDouble(<span class="number">5.67</span>);</span><br><span class="line">           randomAccessFile.writeUTF(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">           randomAccessFile.close();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">RandomAccessFile</span> <span class="variable">randomAccessFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(fo.getPath(),<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">intVal</span> <span class="operator">=</span> randomAccessFile.readInt();</span><br><span class="line">       <span class="type">Double</span> <span class="variable">doubleVal</span> <span class="operator">=</span> randomAccessFile.readDouble();</span><br><span class="line">       System.out.println(<span class="string">&quot;int:&quot;</span>+intVal+<span class="string">&quot;,double&quot;</span>+doubleVal);</span><br><span class="line">       <span class="type">long</span> <span class="variable">cur</span> <span class="operator">=</span> randomAccessFile.getFilePointer();</span><br><span class="line">       randomAccessFile.seek(<span class="number">4</span>);</span><br><span class="line">       randomAccessFile.writeDouble(<span class="number">8.99</span>);</span><br><span class="line">       randomAccessFile.seek(cur);</span><br><span class="line">       randomAccessFile.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">randomAccessFile2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(fo.getPath(),<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">intVal2</span> <span class="operator">=</span> randomAccessFile2.readInt();</span><br><span class="line">        <span class="type">Double</span> <span class="variable">doubleVal2</span> <span class="operator">=</span> randomAccessFile2.readDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;int:&quot;</span>+intVal2+<span class="string">&quot;,double&quot;</span>+doubleVal2);</span><br><span class="line">        <span class="type">long</span> <span class="variable">cur2</span> <span class="operator">=</span> randomAccessFile.getFilePointer();</span><br><span class="line">        randomAccessFile2.seek(<span class="number">4</span>);</span><br><span class="line">        randomAccessFile2.writeDouble(<span class="number">0.00</span>);</span><br><span class="line">        randomAccessFile2.seek(cur);</span><br><span class="line">        randomAccessFile2.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//要注意文件是否已经存在！！！</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础2</title>
      <link href="/2024/07/10/java%E5%9F%BA%E7%A1%802/"/>
      <url>/2024/07/10/java%E5%9F%BA%E7%A1%802/</url>
      
        <content type="html"><![CDATA[<h4 id="多态性，对象转换类型"><a href="#多态性，对象转换类型" class="headerlink" title="多态性，对象转换类型"></a>多态性，对象转换类型</h4><p>父类不能强转成子类</p><h4 id="关键字static"><a href="#关键字static" class="headerlink" title="关键字static"></a>关键字static</h4><p>static关键字表示静态，可以修饰成员变量、方法和代码块。</p><p>static修饰成员变量：</p><p>1、被static修饰的属性所用对象共享同一个值</p><p>2、被static修饰的属性值会被保存在内存的方法区中</p><p>3、当该类的所有对象共享一个资源时，将这个资源设置为静态能够节省内存</p><p>4、静态属性使用类名调用</p><p>5、静态属性也称类属性</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Cat cat01=<span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        Cat cat02=<span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        cat01.name=<span class="string">&quot;小黄&quot;</span>;</span><br><span class="line">        cat01.eat(<span class="string">&quot;面包&quot;</span>);</span><br><span class="line">        Cat.eat(<span class="string">&quot;鱼&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Cat.name=<span class="string">&quot;小白&quot;</span>;</span><br><span class="line">        Cat.eat(<span class="string">&quot;鱼&quot;</span>);</span><br><span class="line">        cat01.eat(<span class="string">&quot;面包&quot;</span>);</span><br><span class="line">        cat02.eat(<span class="string">&quot;饺子&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        cat02.name=<span class="string">&quot;小黑&quot;</span>;</span><br><span class="line">        cat02.eat(<span class="string">&quot;饺子&quot;</span>);</span><br><span class="line">        cat01.eat(<span class="string">&quot;面包&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String food)</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(name+<span class="string">&quot;吃&quot;</span>+food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>static修饰方法:</p><p>1、被static修饰的方法称之为静态方法、类方法</p><p>2、静态方法可以直接使用类名无需实例化对象</p><p>3、静态方法中无法调用普通（实例）属性和方法，因为静态方法中没有this</p><p>4、如果一个不需要访问当前类中的实例成员就可以定义称静态的</p><p>5、静态方法不能被重写</p><h4 id="abstract关键字"><a href="#abstract关键字" class="headerlink" title="abstract关键字"></a>abstract关键字</h4><p>abstract表示抽象的，可以修饰类和方法。</p><h3 id="方法重写规则与包装类型"><a href="#方法重写规则与包装类型" class="headerlink" title="方法重写规则与包装类型"></a>方法重写规则与包装类型</h3><h4 id="重写方法规则一："><a href="#重写方法规则一：" class="headerlink" title="重写方法规则一："></a>重写方法规则一：</h4><p>方法名和形式参数必须具有完全相同的签名，返回类型也必须一致。方法可以改变返回类型，但子类的返回类型必须时父类返回类型的子类型。例如，如果父类的方法返回一个Object，子类的重写方法可以返回一个String，但重写方法不能返回Integer,因为String不是Integer的子类型</p><p>子类重写的方法可以改变其访问权限，比如将父类中的Protected方法重写为public方法</p><p> 子类重写的方法不能抛出比父类中被重写的方法更广泛的异常</p><h4 id="重写方法规则二"><a href="#重写方法规则二" class="headerlink" title="重写方法规则二:"></a>重写方法规则二:</h4><p>如果一个类声明了一个带有final关键字，表明此方法为不可变的，不能被重写</p><p> 子类可以重写父类中被声明为static的方法，但必须保持方法的签名（方法名和参数列表）完全一致</p><p>子类重写的方法可以调用父类中被重写的方法，而且可以使用super关键字在子类中直接调用父类中被重写的方法</p><h4 id="包装类型"><a href="#包装类型" class="headerlink" title="包装类型"></a>包装类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> age=<span class="number">18</span>;</span><br><span class="line">        Integer age2=Integer.valueOf(<span class="number">19</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;age &quot;</span>+age);</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2.intValue());</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2.toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2);</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2.byteValue());<span class="comment">//取位数最低的一字节</span></span><br><span class="line">        Boolean isObj=Boolean.valueOf(age2 <span class="keyword">instanceof</span> Object);</span><br><span class="line">        System.out.println(<span class="string">&quot;isObj:&quot;</span>+isObj.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接口的定义和实现"><a href="#接口的定义和实现" class="headerlink" title="接口的定义和实现"></a>接口的定义和实现</h4><p>接口的关键字：interface</p><p>在定义一个接口时，我们需要把public class xxx 中的class改成interface，即public interface xxx ,这就是定义了一个接口。</p><h4 id="接口中的定义的方法与常量"><a href="#接口中的定义的方法与常量" class="headerlink" title="接口中的定义的方法与常量"></a>接口中的定义的方法与常量</h4><p>在定义方法时，例如我们定义一个run方法与go方法，我们可以写成public abstract void run();和 public abstract void go();但是因为在接口的定义中都是public  abstract，因此我们只需要写：void run();和void go();即可。即直接写：方法类型+方法名（参数 类型）即可。</p><p>在定义常量时，因为接口中所有的常量都是public static void final, 而final类是无法被继承的，所以我们不经常在接口中定义常量</p><p>接口及其实现类，implements关键字</p><p>由于接口仅仅能给我们定义一个方法，无法让我们去实例化（即实现它），因此我们需要再写一个实现类来实现它，而这个实现类的名字就是接口名+Impl</p><p>Impl就是implements，而想要实现接口中的类，就需要重写接口中的所有方法</p><h4 id="接口与继承的不同"><a href="#接口与继承的不同" class="headerlink" title="接口与继承的不同"></a>接口与继承的不同</h4><p>接口为多继承，而extend是单继承，例如我们在这里再定义一个TimerServi的接口，我们可以再UserService实现类中再继承一个TimeService，只要重写TimeService中的方法即可</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> implents UserService, TimeService&#123;&#125;</span><br></pre></td></tr></table></figure><p>Main函数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Cat cat=<span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        cat.sleep();</span><br><span class="line">        cat.hunt();</span><br><span class="line">        cat.playwithme();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Animal接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Pet接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Pet</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">playwithme</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Hunt接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Hunt</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">hunt</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cat类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">implements</span> <span class="title class_">Animal</span>,Hunt,Pet</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;睡觉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hunt</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打猎&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playwithme</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃饭&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="内部类与匿名类"><a href="#内部类与匿名类" class="headerlink" title="内部类与匿名类"></a>内部类与匿名类</h4><p>Java中的类有两种重要的成员，即成员变量和方法。其实Java还允许类有一种成员，即在一个类中声明另一个类，这就是内部类，而包含内部类的类叫做外嵌类</p><p>内部类与外嵌类之间的关系如下：</p><p>内部类可以使用外嵌类的成员变量和方法</p><p>内部类中不可以声明类变量和类方法</p><p>外嵌类可以使用内部类声明对象作为外嵌类的成员</p><p>内部类仅供它的外嵌类使用，其他类不可以用某个类的内部类声明对象</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Farm farm=<span class="keyword">new</span> <span class="title class_">Farm</span>(<span class="string">&quot;红星农场&quot;</span>);</span><br><span class="line">        farm.cow.speak();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Farm类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Farm</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String farmName;</span><br><span class="line">    <span class="keyword">public</span> Cow cow=<span class="keyword">new</span> <span class="title class_">Cow</span>(<span class="number">5</span>,<span class="string">&quot;hyq&quot;</span>);</span><br><span class="line">    Farm(String pFarmName)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.farmName=pFarmName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Cow</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> String cowName;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line">        Cow(<span class="type">int</span> pAge,String pCowName)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">this</span>.age=pAge;</span><br><span class="line">            <span class="built_in">this</span>.cowName=pCowName;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我是&quot;</span>+cowName+<span class="string">&quot;,年龄&quot;</span>+age+<span class="string">&quot;我所在农场: &quot;</span>+farmName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>内部类可以被修饰为static内部类，类是一种数据类型，那么static内部类就是外嵌类中的一种静态数据类型，这样其他类就可以使用static内部类来声明创建对象了。（注意：static内部类不能操作外嵌类中的实例成员变量）</p><h4 id="和类有关的匿名类"><a href="#和类有关的匿名类" class="headerlink" title="和类有关的匿名类"></a>和类有关的匿名类</h4><p>我们可以直接使用一个类的子类的类体创建一个对象。再创建子类对象时，使用的是父类的构造方法和类体，这个类体被认为是子类去掉类声明之后的类体，称作匿名类</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Farm farm=<span class="keyword">new</span> <span class="title class_">Farm</span>(<span class="string">&quot;红星农场&quot;</span>);</span><br><span class="line">        farm.cow.speak();</span><br><span class="line">       Speak speak=<span class="keyword">new</span> <span class="title class_">Speak</span>()</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span></span><br><span class="line">           &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;hello ! 一&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Speak</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;hello ! 二&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Speak类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Speak</span></span><br><span class="line">&#123;</span><br><span class="line">    Speak()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是父类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>匿名对象的引用可以传递给一个匹配的参数，匿名类常用的方式是向方法的参数传值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Main中的代码片段      </span></span><br><span class="line">A a=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.f(<span class="keyword">new</span> <span class="title class_">Speak</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;hello ! 三&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Speak类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Speak</span></span><br><span class="line">&#123;</span><br><span class="line">    Speak()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是父类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="和接口有关的匿名类"><a href="#和接口有关的匿名类" class="headerlink" title="和接口有关的匿名类"></a>和接口有关的匿名类</h4><p>我们可以直接使用接口名和一个类体创建一个匿名对象，这个类体被称为是实现了这个接口的类去掉声明后的类体，称为匿名类。</p><p>如果某个方法的参数是接口类型，那么可以使用接口名和类体组合创建一个匿名对象传递给这个方法的参数，但类体必须重写接口中的所有方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Main中的代码片段 </span></span><br><span class="line"><span class="comment">//和接口有关的匿名类</span></span><br><span class="line">        <span class="type">Cubic</span> <span class="variable">cubic</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cubic</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> x * x * x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(cubic.getCubic(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">Cubic</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> x * x * x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.getCubic(<span class="number">4</span>));</span><br><span class="line"><span class="comment">//Cubic类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Cubic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//传参方法</span></span><br><span class="line">B b=<span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        b.g(<span class="keyword">new</span> <span class="title class_">Cubic</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> x*x*x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="数组声明与定义区别"><a href="#数组声明与定义区别" class="headerlink" title="数组声明与定义区别"></a>数组声明与定义区别</h4><p>对于变量来说，Java 定义就是声明</p><p>例如：int[] a; 我们可说它是定义也可以说它是声明</p><h4 id="定义初始化方法（见下方代码）"><a href="#定义初始化方法（见下方代码）" class="headerlink" title="定义初始化方法（见下方代码）"></a>定义初始化方法（见下方代码）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//数组定义</span></span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">4</span>];</span><br><span class="line">        <span class="type">int</span> arr3_len=<span class="number">5</span>;</span><br><span class="line">        <span class="type">int</span>[] arr3=<span class="keyword">new</span> <span class="title class_">int</span>[arr3_len];</span><br><span class="line">        <span class="comment">//错误演示</span></span><br><span class="line">        <span class="comment">//int[] arr4;</span></span><br><span class="line">        <span class="comment">//arr4=&#123;4,5,6&#125;;  错误原因，定义和初始化必须在一起</span></span><br><span class="line">        <span class="comment">//int[] arr4=new int[]&#123;5,6,7,8&#125; 错误原因，不可指定长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//访问元素</span></span><br><span class="line">        <span class="type">int</span>[] arr4=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">        <span class="type">int</span> one=arr4[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt; arr4.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;arr4 下标&quot;</span>+i+<span class="string">&quot;:&quot;</span>+arr4[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数组的复制 拷贝</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//浅拷贝</span></span><br><span class="line">        <span class="type">int</span>[] arr5=arr4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//深拷贝</span></span><br><span class="line">        <span class="type">int</span>[] arr6= <span class="keyword">new</span> <span class="title class_">int</span>[arr4.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;arr4.length;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            arr6[j]=arr4[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i:arr6)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] arr7=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        System.arraycopy(arr4,<span class="number">0</span>,arr7,<span class="number">1</span>,arr4.length);</span><br><span class="line">        <span class="comment">//不规则数组</span></span><br><span class="line">        <span class="type">int</span>[][] arr8=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>][];</span><br><span class="line">        arr8[<span class="number">0</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">        arr8[<span class="number">1</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        arr8[<span class="number">2</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        arr8[<span class="number">3</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> m=<span class="number">0</span>;m&lt;arr8.length;m++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> n=<span class="number">0</span>;n&lt;arr8[m].length;n++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(arr8[m][n]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>Java.lang.String是java的字符串类. String是一个不可变的对象，所有对String修改的操作都需要构造新的String实例。</p><p>java.lang.StringBuffer与java.lang.StringBuilder是可变的字符串对象，StringBuilder较快但是线程不安全，在对线程安全没有要求时我们通常使用StringBuilder</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span>[] data=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>&#125;;</span><br><span class="line">        String s1= <span class="keyword">new</span> <span class="title class_">String</span>(data);</span><br><span class="line">        String s2= <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;efg&quot;</span>);</span><br><span class="line">        String s3=<span class="string">&quot;hijk&quot;</span>;</span><br><span class="line">        String s4=<span class="string">&quot;lmn&quot;</span>;</span><br><span class="line">        String s5=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        StringBuffer sb=<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s3);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            s5=s3+i;</span><br><span class="line">            sb.append(i);</span><br><span class="line">            System.out.println(s5);</span><br><span class="line">            System.out.println(sb.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><p>集合与数组</p><p>容器的分类：</p><p>Collection：List、Set</p><p>Map：HashMap、HashTable、TreeMap、ConcurrHashMap</p><p>List 有序集合，允许重复的元素</p><p>Set无序集合，不允许重复的元素</p><p>HashMap：采用散列算法来实现，底层用哈希表来存储数据，因此要求键不能重复。线程不安全，HashMap在查找、删除、修改方面效率都非常高。允许key或value为null</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//List</span></span><br><span class="line">        List myList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        myList.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        myList.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        myList.add(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        myList.add(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;myList.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(myList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        Iterator it=myList.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            Object o=it.next();</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;String&gt; aList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        aList.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        <span class="comment">//HashMap</span></span><br><span class="line">        Map&lt;String,String&gt;map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;福建省&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;湖南省&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;海南省&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;String,String&gt; entry:map.entrySet())</span><br><span class="line">        &#123;</span><br><span class="line">            String key=entry.getKey();</span><br><span class="line">            String val=entry.getValue();</span><br><span class="line">            System.out.println(<span class="string">&quot;key&quot;</span>+key+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;val&quot;</span>+val);</span><br><span class="line">        &#125;</span><br><span class="line">        Iterator&lt;Map.Entry&lt;String,String&gt;&gt;entries=map.entrySet().iterator();</span><br><span class="line">        <span class="keyword">while</span>(entries.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            Map.Entry&lt;String,String&gt;entry=entries.next();</span><br><span class="line">            String key= entry.getKey();</span><br><span class="line">            String val=entry.getValue();</span><br><span class="line">            System.out.println(<span class="string">&quot;key&quot;</span>+key+<span class="string">&quot;,val&quot;</span>+val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String oneKey:map.keySet())</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String oneVal:map.values())</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础1</title>
      <link href="/2024/07/09/java%E5%9F%BA%E7%A1%801/"/>
      <url>/2024/07/09/java%E5%9F%BA%E7%A1%801/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h4 id="查看对象在内存中的布局"><a href="#查看对象在内存中的布局" class="headerlink" title="查看对象在内存中的布局"></a>查看对象在内存中的布局</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">import</span> org.openjdk.jol.info.ClassLayout;</span><br><span class="line">System.out.println(ClassLayout.parseInstance(student).toPrintable());</span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>单行：Ctrl + &#x2F;</p><p>多行：Ctrl + shift + &#x2F;  常用于：说明方法作用或一段代码功能</p><p>文档：&#x2F;** 常用于：类定义或公有方法定义的前面</p><h4 id="创建数组类"><a href="#创建数组类" class="headerlink" title="创建数组类"></a>创建数组类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt;arraylist=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br></pre></td></tr></table></figure><p>常量关键字：final</p><p>算数左移（符号位不变，右边补零p&lt;&lt;3）</p><p>算数右移（符号位不变，左边补符号位p&gt;&gt;3）</p><p>逻辑右移（左边补0 p&gt;&gt;&gt;3）</p><h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">q&gt;r?a:b</span><br></pre></td></tr></table></figure><h4 id="instance判断是否是Student类的实例"><a href="#instance判断是否是Student类的实例" class="headerlink" title="instance判断是否是Student类的实例"></a>instance判断是否是Student类的实例</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(s1 <span class="keyword">instanceof</span> student)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.pritln(<span class="string">&quot;s1是student的实例&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>boolean类型的不能转换成其他类型</p><p>在混合运算中，容量小的类型自动转换为大容量的数据类型，排序如下：</p><p>byte,short,char-&gt;int-&gt;long-&gt;float-&gt;double</p><p>byte,short,char之间不会相互转换，他们三者在计算时首先会转换为int类型</p><p>容量大的数据类型转换为容量小的类型时要加上强制转换符</p><p>有多种类型的数据混合运算时，系统首先自动将所有的数据转换成容量最大的那种数据类型，然后进行计算</p><p>默认出现小数都算double</p><p>默认出现数字都算int</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i1=<span class="number">123</span>;</span><br><span class="line">        <span class="type">int</span> i2=<span class="number">456</span>;</span><br><span class="line">        <span class="type">double</span> d1=(i1+i2)*<span class="number">1.2</span>;<span class="comment">//自动类型转换</span></span><br><span class="line">        <span class="type">float</span> f1=(<span class="type">float</span>)((i1+i2)*<span class="number">1.2</span>);</span><br><span class="line">        <span class="type">byte</span> b1=<span class="number">67</span>;</span><br><span class="line">        <span class="type">byte</span> b2=<span class="number">89</span>;</span><br><span class="line">        <span class="type">byte</span> b3=(<span class="type">byte</span>)(b1+b2);</span><br><span class="line">        <span class="type">double</span> d2=<span class="number">1e200</span>;</span><br><span class="line">        System.out.println(d2);</span><br><span class="line">        <span class="type">float</span> f2=(<span class="type">float</span>)(d2);</span><br><span class="line">        System.out.println(f2);<span class="comment">//打印输出 f2 的值。由于 d2 超出了 float 的表示范围，所以 f2 将会是特定的值，通常是 Infinity 或 -Infinity，这取决于 d2 的正负。</span></span><br><span class="line">        <span class="type">float</span> f3=<span class="number">1.23f</span>;</span><br><span class="line">        <span class="type">long</span> l1=<span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> l2=<span class="number">3000000L</span>;</span><br><span class="line">        <span class="type">float</span> f4=l1+l2+f3;</span><br><span class="line">        System.out.println(f4);</span><br><span class="line">        <span class="type">long</span> l3=(<span class="type">long</span>)f4;</span><br><span class="line">        System.out.println(l3);</span><br><span class="line">        <span class="type">byte</span> a=(<span class="type">byte</span>)<span class="number">128</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for循环遍历数组"><a href="#for循环遍历数组" class="headerlink" title="for循环遍历数组"></a>for循环遍历数组</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i:arr)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类的定义格式（移动窗口例子）"><a href="#类的定义格式（移动窗口例子）" class="headerlink" title="类的定义格式（移动窗口例子）"></a>类的定义格式（移动窗口例子）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyFrame myFrame=<span class="keyword">new</span> <span class="title class_">MyFrame</span>();</span><br><span class="line">        myFrame.createWindow();</span><br><span class="line">        myFrame.walk();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFrame</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> selfWidth=<span class="number">500</span>,selfHeigth=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x=<span class="number">200</span>,y=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> screenWidth=<span class="number">0</span>,screenHeigth=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> ScreenWidth=<span class="number">0</span>,ScreenHeight=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> loopCount=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> flagX=<span class="literal">true</span>,flagY=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> Frame frame;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createWindow</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建窗口</span></span><br><span class="line">        frame=<span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;台球窗口例子&quot;</span>);</span><br><span class="line">        <span class="comment">//窗口的可见性</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//窗口的大小</span></span><br><span class="line">        frame.setSize(selfWidth,selfHeigth);</span><br><span class="line">        <span class="comment">//窗口的背景色</span></span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">10</span>,<span class="number">10</span>,<span class="number">200</span>));</span><br><span class="line">        <span class="comment">//窗口位置</span></span><br><span class="line">        frame.setLocation(x,y);</span><br><span class="line">        <span class="comment">//窗口的大小是否可改变</span></span><br><span class="line">        frame.setResizable(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获取屏幕尺寸</span></span><br><span class="line">        Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();</span><br><span class="line">        screenWidth=screenSize.width;</span><br><span class="line">        screenHeigth= screenSize.height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">walk</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            loopCount+=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">4</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span>||(x+selfWidth)&gt;screenWidth)</span><br><span class="line">            &#123;</span><br><span class="line">                flagX=!flagX;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(y&lt;<span class="number">0</span>||(y+selfHeigth)&gt;screenHeigth)</span><br><span class="line">            &#123;</span><br><span class="line">                flagY=!flagY;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flagX)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                x-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flagY)</span><br><span class="line">            &#123;</span><br><span class="line">                y+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                y-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            frame.setLocation(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="继承的基本概念"><a href="#继承的基本概念" class="headerlink" title="继承的基本概念"></a>继承的基本概念</h4><p>访问父类用super.</p><h4 id="访问权限控制"><a href="#访问权限控制" class="headerlink" title="访问权限控制"></a>访问权限控制</h4><p>private：只能在类内部访问（权限要求最高，能被访问的范围越小）。</p><p>default（啥也不写，默认的）：包级权限，可以被同包的其他类访问</p><p>protected:可以被子类访问，也可以被同包的其他类访问到， protected在被同包的类访问的基础上，还能被其他包的子类访 问。</p><p>public：可以在类外部访问（权限要求最低）</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
