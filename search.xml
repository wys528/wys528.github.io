<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AS基本使用</title>
      <link href="/2024/09/25/AS%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/09/25/AS%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Android开发入门"><a href="#Android开发入门" class="headerlink" title="Android开发入门"></a>Android开发入门</h2><p><img src="/../image/third6.png"></p><p><img src="/../image/third7.png"></p><h1 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">35</span></span><br><span class="line">    buildToolsVersion <span class="string">&quot;35.0.0&quot;</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;com.example.demo&quot;</span></span><br><span class="line">        minSdkVersion <span class="number">16</span></span><br><span class="line">        targetSdkVersion <span class="number">35</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">&quot;1.0&quot;</span></span><br><span class="line"></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">        externalNativeBuild &#123;</span><br><span class="line">            cmake &#123;</span><br><span class="line">                cppFlags <span class="string">&#x27;-std=c++11&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles <span class="title function_">getDefaultProguardFile</span><span class="params">(<span class="string">&#x27;proguard-android-optimize.txt&#x27;</span>)</span>, <span class="string">&#x27;proguard-rules.pro&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">    externalNativeBuild &#123;</span><br><span class="line">        cmake &#123;</span><br><span class="line">            path <span class="title function_">file</span><span class="params">(<span class="string">&#x27;src/main/cpp/CMakeLists.txt&#x27;</span>)</span></span><br><span class="line">            version <span class="string">&#x27;3.10.2&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildFeatures &#123;</span><br><span class="line">        viewBinding <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    </span><br><span class="line">    implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.2.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.android.material:material:1.2.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.0.1&#x27;</span></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.+&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.ext:junit:1.1.2&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.espresso:espresso-core:3.3.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.demo&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Demo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/third8.png"></p><h1 id="安卓程序执行路口"><a href="#安卓程序执行路口" class="headerlink" title="安卓程序执行路口"></a>安卓程序执行路口</h1><p><img src="/../image/third9.png"></p><p>如果app带有application的话，执行入口就在application中的android:name所指向的类中，一般的app里面都没有application，加固的app中一般都有application</p><p>application指向的类程序员能控制的最早的类</p><h1 id="基本控件的使用"><a href="#基本控件的使用" class="headerlink" title="基本控件的使用"></a>基本控件的使用</h1><p><img src="/../image/third10.png"></p><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="使用android-onClick-进行绑定点击事件"><a href="#使用android-onClick-进行绑定点击事件" class="headerlink" title="使用android:onClick 进行绑定点击事件"></a>使用android:onClick 进行绑定点击事件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;283dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;71dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.345&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:onClick</span>=<span class="string">&quot;test&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">public void test(View view) &#123;</span><br><span class="line">    Log.d(&quot;xiaojianbang&quot;,&quot;test test&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用id进行绑定"><a href="#使用id进行绑定" class="headerlink" title="使用id进行绑定"></a>使用id进行绑定</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;283dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;71dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.345&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">Button button = binding.button;</span><br><span class="line">button.setOnClickListener(new View.onCLickListener(</span><br><span class="line">@Override</span><br><span class="line">public void onCick(View view)&#123;</span><br><span class="line">Lod.d(&quot;xiaojianbang&quot;,&quot;onClick&quot;);</span><br><span class="line">&#125;</span><br><span class="line">));</span><br></pre></td></tr></table></figure><h3 id="使用多态的方式进行绑定"><a href="#使用多态的方式进行绑定" class="headerlink" title="使用多态的方式进行绑定"></a>使用多态的方式进行绑定</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;283dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;71dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.345&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">Button button = binding.button;</span><br><span class="line">button.newOnClickListener(new MyClick());</span><br><span class="line"></span><br><span class="line">class MyClick implements View.OnClickListener&#123;</span><br><span class="line">@Override</span><br><span class="line">public void onClick(View view)&#123;</span><br><span class="line">Log.d(&quot;xiaojianbang&quot;,onClickMyClick);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="直接让MainActivity实现接口"><a href="#直接让MainActivity实现接口" class="headerlink" title="直接让MainActivity实现接口"></a>直接让MainActivity实现接口</h3><h4 id="有多种按钮时采用这个方法"><a href="#有多种按钮时采用这个方法" class="headerlink" title="有多种按钮时采用这个方法"></a>有多种按钮时采用这个方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity implements </span><br><span class="line"></span><br><span class="line">button.setOnClickListerner(this);</span><br><span class="line"></span><br><span class="line">有多个按钮时，采用view.getId()进行区分</span><br></pre></td></tr></table></figure><h3 id="sdk-tools-bin-uiautomatorviewer-bat可以看到控件id"><a href="#sdk-tools-bin-uiautomatorviewer-bat可以看到控件id" class="headerlink" title="sdk&#x2F;tools&#x2F;bin&#x2F;uiautomatorviewer.bat可以看到控件id"></a>sdk&#x2F;tools&#x2F;bin&#x2F;uiautomatorviewer.bat可以看到控件id</h3><p><img src="/../image/third11.png"></p><p><img src="/../image/third12.png"></p><h2 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a>Toast</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Overrid</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.button:</span><br><span class="line">            Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;onClick&quot;</span>);</span><br><span class="line">            Toast.makeText(Main.<span class="built_in">this</span>,<span class="string">&quot;xiaojianbang&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> binding.textVeiw;</span><br><span class="line"><span class="meta">@Override</span> vodi <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.button:</span><br><span class="line">            Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,MainOnClick);</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>,<span class="string">&quot;xiaojianbang&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">            textView.setText(<span class="string">&quot;lelelele&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在开发的时候，都是采用String.xml来操作字符串</p></li><li><p>在xml文件中，使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:text=&quot;@string/xiao&quot;;</span><br></pre></td></tr></table></figure></li><li><p>在java代码中使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">textView.setText(R.string.xiao)</span><br></pre></td></tr></table></figure></li></ul><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.button():</span><br><span class="line">            Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;onClck&quot;</span>);</span><br><span class="line">            Toast.makeText(MainActivity.<span class="built_in">this</span>,<span class="string">&quot;xiaojianbang&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">            textView.setText(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> editText.getText().toString().trim();</span><br><span class="line">            <span class="keyword">if</span>(TextUtile.isEmpty(username))&#123;</span><br><span class="line">                Log.d(<span class="string">&quot;xiaojiambang&quot;</span>,<span class="string">&quot;username is null&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Log.d(<span class="string">&quot;xiaojianbang&quot;</span>,username);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android常见目录及权限</title>
      <link href="/2024/09/25/android%E5%B8%B8%E8%A7%81%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%9D%83%E9%99%90/"/>
      <url>/2024/09/25/android%E5%B8%B8%E8%A7%81%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Android常用目录"><a href="#Android常用目录" class="headerlink" title="Android常用目录"></a>Android常用目录</h1><p><img src="/../image/third1.png"></p><p><img src="/../image/third2.png"></p><h1 id="Linux权限"><a href="#Linux权限" class="headerlink" title="Linux权限"></a>Linux权限</h1><p><img src="/../image/third3.png"></p><p><img src="/../image/third4.png"></p><p><img src="/../image/third5.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2024/09/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/09/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/Linux1.png"></p><p><img src="/../image/Linux2.png"></p><p><img src="/../image/Linux3.png"></p><p><img src="/../image/Linux4.png"></p><p><img src="/../image/Linux5.png"></p><p><img src="/../image/Linux6.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xjbAndroid</title>
      <link href="/2024/09/22/xjbAndroid/"/>
      <url>/2024/09/22/xjbAndroid/</url>
      
        <content type="html"><![CDATA[<h1 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h1><h2 id="adb工作原理"><a href="#adb工作原理" class="headerlink" title="adb工作原理"></a>adb工作原理</h2><p><img src="/../image/xjbAndroid1.png"></p><h2 id="adb常用命令"><a href="#adb常用命令" class="headerlink" title="adb常用命令"></a>adb常用命令</h2><p><img src="/../image/xjbAndroid2.png"></p><h1 id="真机环境配置"><a href="#真机环境配置" class="headerlink" title="真机环境配置"></a>真机环境配置</h1><p><img src="/../image/xjbAndroid3.png"></p><p><img src="/../image/xjbAndroid4.png"></p><h2 id="谷歌手机工厂镜像"><a href="#谷歌手机工厂镜像" class="headerlink" title="谷歌手机工厂镜像"></a>谷歌手机工厂镜像</h2><p><a href="https://developers.google.com/android/images">https://developers.google.com/android/images</a></p><h2 id="刷机步骤"><a href="#刷机步骤" class="headerlink" title="刷机步骤"></a>刷机步骤</h2><p>1、Bootloader解锁</p><p><img src="/../image/xjbAndroid5.png"></p><p>2、开启开发者选项</p><p><img src="/../image/xjbAndroid6.png"></p><p>3、输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb reboot bootloader;</span><br><span class="line">用fastboot devices进行验证</span><br></pre></td></tr></table></figure><p>4、双击刷机包中的flash_all.bat文件</p><p>5、安装Magsik</p><p>6、使用Magsik修复镜像</p><p>7、将新生成的镜像刷入boot分区</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastboot flash boot C:\Users\Administrator\Desktop\bootnew.img</span><br></pre></td></tr></table></figure><h2 id="root完了之后的步骤"><a href="#root完了之后的步骤" class="headerlink" title="root完了之后的步骤"></a>root完了之后的步骤</h2><p><img src="/../image/xjbAndroid7.png"></p><h1 id="logcat的使用"><a href="#logcat的使用" class="headerlink" title="logcat的使用"></a>logcat的使用</h1><p><img src="/../image/xjbAndroid8.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xjbjava</title>
      <link href="/2024/09/15/xjbjava/"/>
      <url>/2024/09/15/xjbjava/</url>
      
        <content type="html"><![CDATA[<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>\t制表符\n换行符\ \一个\\ “一个”\ ‘一个’</p><h2 id="八大基本数据类型"><a href="#八大基本数据类型" class="headerlink" title="八大基本数据类型"></a>八大基本数据类型</h2><p>数值型：整数类型(byte，short，int，long)、浮点类型(float,double)</p><p>字符型：(char)  char类型为2个字节，本质就是一个数值</p><p>布尔型：(boolean)</p><h3 id="整数型"><a href="#整数型" class="headerlink" title="整数型"></a>整数型</h3><p>byte  1字节 -128~127</p><p>short  2字节</p><p>int  4字节</p><p>long 长整型 8字节 </p><p>出现在代码中的整数，默认为int。声明long常量需后面加L或l</p><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p>float  4字节</p><p>double  8字节</p><p>出现在代码中的小数，默认为double。声明float常量需后面加F或f</p><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><p>char  2字节，可以用来存汉字，char的本质是一个整数，输出的是unicode码对应的字符。如果非要输出一个整数，需要强制转换(int)</p><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h3><p>boolean 1字节</p><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><h3 id="数据类型按精度大小排序"><a href="#数据类型按精度大小排序" class="headerlink" title="数据类型按精度大小排序"></a>数据类型按精度大小排序</h3><p>char -&gt; int -&gt; long -&gt; float -&gt; double</p><p>byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>boolean不转换</p><p>char和short、char和byte之间不进行自动转换</p><p>byte、short、char计算时转换为int类型</p><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><p>包名  全小写</p><p>类名  大驼峰</p><p>变量名、方法名 小驼峰</p><p>常量名 全大写，多个单词用下划线连接</p><h2 id="自增运算"><a href="#自增运算" class="headerlink" title="自增运算"></a>自增运算</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> y++;</span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">y = <span class="number">1</span>;</span><br><span class="line">temp = y;</span><br><span class="line">y = y+<span class="number">1</span>;</span><br><span class="line">c = temp;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">i = i++;</span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">temp = i;</span><br><span class="line">i = i + <span class="number">1</span>;</span><br><span class="line">i = temp;</span><br></pre></td></tr></table></figure><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><p>A  instance  of B 表示A是否是B这个类的对象</p><h3 id="逻辑与短路运算符"><a href="#逻辑与短路运算符" class="headerlink" title="逻辑与短路运算符"></a>逻辑与短路运算符</h3><p>短路&amp;&amp;断路||取反！</p><p>逻辑&amp;逻辑或||逻辑异或^</p><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><p>&amp;不管真假两边都运算</p><p>&amp;&amp;左边为假，右边就不运算</p><p>|不管真假两边都运算</p><p>||左边为真右边就不运算</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//静态初始化</span></span><br><span class="line"><span class="type">char</span>[] chars1 = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span>[] chars2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span> chars3[] = <span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span>[] chars4[] = <span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="comment">//动态初始化</span></span><br><span class="line"><span class="type">char</span>[] chars5 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>];</span><br><span class="line">chars5[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">chars5[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">chars5[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="type">char</span> chars5[] = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>];</span><br><span class="line">chars5[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">chars5[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">chars5[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="type">char</span> chars6[];  <span class="comment">//声明数组</span></span><br><span class="line">chars6 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>]; <span class="comment">//开辟空间</span></span><br><span class="line">chars6[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">chars6[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">chars6[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取数组长度</span></span><br><span class="line"><span class="type">char</span>[] chars7 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> chars7.length;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> [][]arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][];</span><br><span class="line">arr2[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">arr2[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[][] arr3 = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//获取数组长度</span></span><br><span class="line"><span class="type">int</span> <span class="variable">length1</span> <span class="operator">=</span> arr.length;</span><br><span class="line"><span class="type">int</span> <span class="variable">length2</span> <span class="operator">=</span> arr[<span class="number">0</span>].length;</span><br><span class="line"><span class="type">int</span> <span class="variable">length2</span> <span class="operator">=</span> arr[<span class="number">1</span>].length;</span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="type">int</span>[][] arr3 = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;arr3.length;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j&lt;arr3[i].length;j++)&#123;</span><br><span class="line">        System.out.println(arr3[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="十进制转十六进制"><a href="#十进制转十六进制" class="headerlink" title="十进制转十六进制"></a>十进制转十六进制</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">31</span>;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">char</span>[] chars = &#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>&#125;;</span><br><span class="line">        <span class="keyword">while</span>(a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> a%<span class="number">16</span>;</span><br><span class="line">            <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> chars[index];</span><br><span class="line">            stringBuilder.append(temp);</span><br><span class="line">            a/=<span class="number">16</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(stringBuilder.reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java-API中文文档"><a href="#Java-API中文文档" class="headerlink" title="Java API中文文档"></a>Java API中文文档</h3><p><a href="https://www.matools.com/">https://www.matools.com/</a></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><h3 id="静态属性-类属性-与实例属性-对象属性"><a href="#静态属性-类属性-与实例属性-对象属性" class="headerlink" title="静态属性(类属性)与实例属性(对象属性)"></a>静态属性(类属性)与实例属性(对象属性)</h3><p>静态属性，只有一份，可以通过 类名.属性名&#x2F;对象，属性名  来赋值和访问; 实例属性，每个对象都有一份，只能通过对象.属性名来赋值和访问</p><h3 id="静态方法与实例方法-对象方法"><a href="#静态方法与实例方法-对象方法" class="headerlink" title="静态方法与实例方法(对象方法)"></a>静态方法与实例方法(对象方法)</h3><p>静态方法中只能调用静态方法，不能访问实例属性</p><p>实例方法中可以调用静态方法和实例方法，也可以访问静态属性和实例属性</p><h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><p>int sum(int… nums){}</p><p>可变参数，可以当作数组处理</p><p>可变参数的实参可以为0个或任意多个</p><p>可变参数的实参可以为数组</p><p>可变参数的本质就是数组</p><p>可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后一个形参列表中只能出现一个可变参数</p><p><code>@SuppressWarnings(&quot;all&quot;)</code> 是一个 Java 注解，用于抑制编译器在代码中发现的所有警告信息。这个注解通常用于类、方法、字段或局部变量上，目的是阻止编译器显示警告，以便在代码中处理潜在问题时不受警告的干扰。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(sum(<span class="number">5</span>,<span class="number">6</span>));</span><br><span class="line">        <span class="comment">//以数组的方式</span></span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        System.out.println(sum(a));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>... a)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            result += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><h3 id="对象创建流程"><a href="#对象创建流程" class="headerlink" title="对象创建流程"></a>对象创建流程</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">90</span>;</span><br><span class="line">    String name;</span><br><span class="line">    Person(String n,<span class="type">int</span> a)&#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">31</span>);</span><br></pre></td></tr></table></figure><p>加载Person类信息，只会加载一次</p><p>在堆中分配空间(地址)</p><p>完成对象初始化</p><p>​默认初始化  age&#x3D;0 name&#x3D;null</p><p>​显示初始化  age&#x3D;90  name&#x3D;null</p><p>​构造器显示化  age&#x3D;20  name&#x3D;null</p><p>在对象在堆中的地址，返回给p(p是对象名，也可以理解成是对象的引用)</p><h2 id="this-方法"><a href="#this-方法" class="headerlink" title="this(方法)"></a>this(方法)</h2><p>this(实参列表)</p><p>用于构造方法之间的访问，必须是构造器中的第一个语句</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String name)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>(name,<span class="number">30</span>);</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    System.out.println(<span class="built_in">this</span>.name);</span><br><span class="line">    System.out.println(<span class="built_in">this</span>.hashCode());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String dnamem,<span class="type">int</span> age)</span>&#123;</span><br><span class="line">    Cat.age = age;</span><br><span class="line">    System.out.println(<span class="string">&quot;Cat&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><p><img src="/../image/xjbjava1.png"></p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">balance</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Strng <span class="title function_">getPassword</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(password == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;密码设置不能为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(password.length() == <span class="number">6</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.password = password;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;密码必须等于6位&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBalance</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> balance;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBalance</span><span class="params">(<span class="type">double</span> balance)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(balance&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;余额必须大于20&quot;</span>);       </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.balance = balance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String naem)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(name == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;名字不能为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.name != <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;名字只能修改一次&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(name.length()&lt;<span class="number">2</span>||name.length()&gt;<span class="number">4</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;名字长度需要在2-4位&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.name = name;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>Java是单继承机制，子类只能直接继承一个父类，所有类都是Object类的一个子类，Ctrl + h 可查看继承关系</p><h4 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojiangbang.java;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">shenghuofei</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getShenghuofei</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shenghuofei;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShenghuofei</span><span class="params">(<span class="type">double</span> shenghuofei)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.shenghuofei = shenghuofei</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java"><a href="#Teacher-java" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">gongzi</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getGongzi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gongzi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGongzi</span><span class="params">(<span class="type">double</span> gongzi)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gongzi = gongzi;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>()&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.setName(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        student.setAge(<span class="number">20</span>);</span><br><span class="line">        student.setShenghuofei(<span class="number">100</span>);</span><br><span class="line">        System.out.println(student.getName())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="父类构造器"><a href="#父类构造器" class="headerlink" title="父类构造器"></a>父类构造器</h2><p>当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器super();</p><p>如果父类没有提供无参的构造器，则须在子类的构造器中用super去指定使用父类的哪个构造器super(参数列表)</p><p>父类构造器的调用不限于直接父类，一直往上追溯到Object类(顶级父类)</p><h4 id="注意：super-和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法"><a href="#注意：super-和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法" class="headerlink" title="注意：super()和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法"></a>注意：super()和this都只能放在构造器第一行，因此这两个方法不能共存在一个构造器，子类的每一个构造方法，都需要先访问父类的构造方法</h4><h4 id="Main-java-1"><a href="#Main-java-1" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojiangbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(Stirng[] args)</span>&#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;umr&quot;</span>,<span class="number">30</span>,<span class="literal">true</span>,<span class="number">100</span>);</span><br><span class="line">        System.out.println(student.getName());</span><br><span class="line">        </span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>,<span class="literal">true</span>,<span class="number">200</span>);</span><br><span class="line">        System.out.println(teacher.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Person-java-1"><a href="#Person-java-1" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">boolean</span> sex)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person 有参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person 无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java-1"><a href="#Teacher-java-1" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">gongzi</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Teacher 无参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">boolean</span> sex,<span class="type">double</span> gongzi)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.gongzi = gongzi;</span><br><span class="line">        System.out.println(<span class="string">&quot;Teacher 有参构造器&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getGongzi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gongzi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGongzi</span><span class="params">(<span class="type">double</span> gongzi)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gongzi = gongzi;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Student-java-1"><a href="#Student-java-1" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">shenghuofei</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">boolean</span> sex,<span class="type">double</span> shenghuofei)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.shenghuofei = shenghuofei;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student 有参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Studnet 无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getShenghuofei</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shenghuofei;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShenghuofei</span><span class="params">(<span class="type">double</span> shenghuofei)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.shenghuofei = shenghuofei;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="super"><a href="#super" class="headerlink" title="super"></a>super</h2><h3 id="super的作用"><a href="#super的作用" class="headerlink" title="super的作用"></a>super的作用</h3><ul><li>子类和父类具有同名属性和方法时，默认使用子类的同名属性和方法。为了访问父类的属性或方法，必须通过super来调用</li><li>super代表父类对象的引用，用于访问父类对象的属性、方法、构造器、</li></ul><h3 id="访问父类的属性-收访问修饰符影响"><a href="#访问父类的属性-收访问修饰符影响" class="headerlink" title="访问父类的属性(收访问修饰符影响)"></a>访问父类的属性(收访问修饰符影响)</h3><ul><li>super.属性名</li></ul><h3 id="访问父类的方法-受访问修饰符的影响"><a href="#访问父类的方法-受访问修饰符的影响" class="headerlink" title="访问父类的方法(受访问修饰符的影响)"></a>访问父类的方法(受访问修饰符的影响)</h3><ul><li>super.方法名(参数列表)</li></ul><h3 id="访问父类的构造器"><a href="#访问父类的构造器" class="headerlink" title="访问父类的构造器"></a>访问父类的构造器</h3><ul><li>super(参数列表)</li></ul><h2 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h2><h3 id="方法重写的特点"><a href="#方法重写的特点" class="headerlink" title="方法重写的特点"></a>方法重写的特点</h3><ul><li>方法重写也叫方法覆盖</li><li>子类方法的名称、参数，与父类完全相同</li><li>子类方法的返回类型和父类方法的返回类型一样，或者父类返回类型的子类，比如父类返回类型时Object，子类方法返回类型是String</li><li>子类方法不能缩小父类方法的访问权限，可以扩大</li></ul><h3 id="重载与重写的区别"><a href="#重载与重写的区别" class="headerlink" title="重载与重写的区别"></a>重载与重写的区别</h3><p>重载：同一个类中，方法名相同，但参数类型、个数或顺序不同，与返回值无关，与修饰符无关</p><p>重写：父类和子类中，方法名相同，参数相同，子类返回类型与父类返回类型一样或者是其子类，子类不能缩小父类的访问范围</p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h4 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h4><p>可以定义多个，与静态属性初始化优先级一样，按定义顺序执行</p><p>随着类加载而执行，只执行一次，执行时机比普通代码块早</p><h3 id="普通代码块"><a href="#普通代码块" class="headerlink" title="普通代码块"></a>普通代码块</h3><p>可以定义多个，与实例属性初始化优先级一样，按定义顺序执行</p><p>随着对象创建而执行，提高构造器代码复用性，每次创建对象都会执行</p><p>先调用父类构造器，接着调用普通代码块，再调用本类构造器</p><h3 id="创建对象时的调用顺序"><a href="#创建对象时的调用顺序" class="headerlink" title="创建对象时的调用顺序"></a>创建对象时的调用顺序</h3><p>1、父类的静态代码块和静态属性</p><p>2、子类的静态代码块和静态属性</p><p>3、父类的普通代码块和普通属性初始化</p><p>4、父类的构造方法</p><p>5、子类的普通代码块和普通属性初始化</p><p>6、子类的构造方法</p><h4 id="静态代码块只能调用静态成员，普通代码块可以调用任意成员"><a href="#静态代码块只能调用静态成员，普通代码块可以调用任意成员" class="headerlink" title="静态代码块只能调用静态成员，普通代码块可以调用任意成员"></a>静态代码块只能调用静态成员，普通代码块可以调用任意成员</h4><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><h4 id="Person-java-2"><a href="#Person-java-2" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java-2"><a href="#Teacher-java-2" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Person-java-3"><a href="#Person-java-3" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java-2"><a href="#Main-java-2" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        test(person);</span><br><span class="line">        test(teacher);</span><br><span class="line">        test(student);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Person p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Person p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Student p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Student p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Teacher p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Teacher p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多态参数"><a href="#多态参数" class="headerlink" title="多态参数"></a>多态参数</h3><p>参数定义成父类类型，就可以传任意子类类型进去</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        test(person);</span><br><span class="line">        test(teacher);</span><br><span class="line">        test(student);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Person p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Person p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="向上转型"><a href="#向上转型" class="headerlink" title="向上转型"></a>向上转型</h3><ul><li>语法：父类类型  引用名 &#x3D; new 子类类型()；</li><li>父类应用指向子类对象</li><li>编译类型看左边，运行类型看右边</li><li>可以调用父类中的所有成员(受访问修饰符影响)</li><li>调用的时候，子类有就用子类的成员，子类没有就找父类的成员(就近原则)</li><li>不能调用子类中的特有成员</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        test(person1);</span><br><span class="line">        test(person2);</span><br><span class="line">        test(person3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(Person p)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test(Person p)&quot;</span>);</span><br><span class="line">        System.out.println(p.callPlay());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>多态的前提：两个对象(类)存在继承关系</li><li>属性的值看编译类型</li><li>只要编译能通过，方法都是看运行类型，属性看编译类型</li><li>instanceOf 比较操作符，用于判断对象的运行类型是否为xx类型或是xx类型的子类型</li><li>要调用子类中特有成员，还需要向下转型(其实就是强转)，转回实际类型，瞎转会报错</li></ul><h3 id="多态数组"><a href="#多态数组" class="headerlink" title="多态数组"></a>多态数组</h3><p>数组的定义类型位父类类型，里面保存的实际元素类型为子类类型</p><p>创建1个Person、Student、Teacher对象，都放到一个数组中，遍历该数组成员，调用callPlay方法遍历过程中调用Student、Teacher对象，都放到一个数组中，遍历该数组成员，调用callPlay方法</p><h4 id="Person-java-4"><a href="#Person-java-4" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Student-java-2"><a href="#Student-java-2" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;study&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Teacher-java-3"><a href="#Teacher-java-3" class="headerlink" title="Teacher.java"></a>Teacher.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">callPlay</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">teach</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;teach&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java-3"><a href="#Main-java-3" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    </span><br><span class="line">    Person[] p = <span class="keyword">new</span> <span class="title class_">Person</span>[]&#123;person1,person2,person3&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;p.length;i++)&#123;</span><br><span class="line">        System.out.println(p[i].callPlay());</span><br><span class="line">        <span class="keyword">if</span>(p[i] <span class="keyword">instanceof</span> Student)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> (Student) p[i];</span><br><span class="line">            s.study();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p[i] <span class="keyword">instanceof</span> Teacher)&#123;</span><br><span class="line">            <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> (Teacher) p[i];</span><br><span class="line">            t.teach();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p[i] <span class="keyword">instanceof</span> Person)&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态绑定机制"><a href="#动态绑定机制" class="headerlink" title="动态绑定机制"></a>动态绑定机制</h2><ul><li>当调用对象方法的时候，该方法会和该对象的内存地址&#x2F;运行类型绑定</li><li>当调用对象属性时，没有动态绑定机制，以就近原则为准</li></ul><h2 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h2><ul><li>&#x3D;&#x3D; 既可以判断基本类型，也可以判断引用类型，基本类型判断值，应用类型判断地址</li><li>equals是Object类中的方法，只能判断引用类型，默认判断的是地址是否相等，子类一般会重写equals方法，用于判断内容是否相等，比如Integer、String</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        System.out.println(a==b);</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(student==student1);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">        System.out.println(aa.equals(<span class="string">&quot;xiaojianbang&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">aaa</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">bbb</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        System.out.println(aaa.equals(bbb));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意：字符串都放在字符串常量池中"><a href="#注意：字符串都放在字符串常量池中" class="headerlink" title="注意：字符串都放在字符串常量池中"></a>注意：字符串都放在字符串常量池中</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">p1.name=<span class="string">&quot;xiaojiangbang&quot;</span>;</span><br><span class="line">p2.name=<span class="string">&quot;xiaojiangbang&quot;</span>;</span><br><span class="line">p1.name==p2.name;为真</span><br></pre></td></tr></table></figure><h2 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString"></a>toString</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">tostring</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getClass().getName()+<span class="string">&quot;@&quot;</span>+Integer.toHexString(hashCode());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>默认返回：全类名+@+哈希值的十六进制</li><li>子类往往重写toString方法，用于返回对象的属性信息</li><li>当直接输出一个对象时，toString方法会被默认的调用</li></ul><h2 id="finalize"><a href="#finalize" class="headerlink" title="finalize"></a>finalize</h2><ul><li>子类可以重写该方法，做一些释放资源的操作</li><li>某个对象没有任何引用时，垃圾回收机制就会销毁该对象，销毁前先调用finalize方法</li><li>垃圾回收机制什么时候调用，由系统来决定</li><li>也可以通过System.gc()主动触发垃圾回收机制，但不一定是立马回收</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.gc();</span><br></pre></td></tr></table></figure><h2 id="final"><a href="#final" class="headerlink" title="final"></a>final</h2><h3 id="final应用场景"><a href="#final应用场景" class="headerlink" title="final应用场景"></a>final应用场景</h3><ul><li>不希望类被继承</li><li>不希望类的属性值被修改(常量)</li><li>不希望父类的方法被子类覆盖&#x2F;重写(override)</li><li>不希望局部变量(参数)被修改(局部常量)</li></ul><h4 id="final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值"><a href="#final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值" class="headerlink" title="final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值"></a>final修饰实例属性，可以在定义时、构造器中、普通代码块中赋初值</h4><h4 id="final修饰静态属性，可以在定义时、静态代码块中赋初值"><a href="#final修饰静态属性，可以在定义时、静态代码块中赋初值" class="headerlink" title="final修饰静态属性，可以在定义时、静态代码块中赋初值"></a>final修饰静态属性，可以在定义时、静态代码块中赋初值</h4><h3 id="final注意事项"><a href="#final注意事项" class="headerlink" title="final注意事项"></a>final注意事项</h3><ul><li>final修饰属性，必须赋值，并且不能再次修改</li><li>final可以修饰类、属性、方法和局部变量(参数)，不能修饰构造器</li><li>包装类(Integer、Double、Float、Boolean)和String都是final类</li><li>final修饰类，不能被继承，但是可以实例化对象</li><li>final和static搭配使用，不会加载类</li></ul><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>abstract只能修饰类和方法</li><li>用abstract关键字来修饰一个类时，这个类就叫抽象类</li><li>用abstract关键字来修饰一个方法时，这个方法就是抽象方法</li></ul><h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>抽象类可以有任意成员，可以被继承，可以没有抽象方法</li><li>抽象类不能被实例化</li><li>有了抽象方法，则这个类必须声明为abstract</li><li>继承了抽象类，则必须实现抽象类的所有抽象方法，除非它们自己也声明为abstract类</li><li>抽象方法是不能用private、final、static来修饰</li></ul><h4 id="C-java"><a href="#C-java" class="headerlink" title="C.java"></a>C.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">C</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">job</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">calc</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始计算...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        job();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;计算结束...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="A-java"><a href="#A-java" class="headerlink" title="A.java"></a>A.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">job</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">            result+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="B-java"><a href="#B-java" class="headerlink" title="B.java"></a>B.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">C</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">job</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                result += i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">interface 接口名&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">&#125;</span><br><span class="line">class 类名 implements 接口名&#123;</span><br><span class="line">    必须实现接口的所有抽象方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jdk7.0前接口里的所有方法都是抽象方法，jdk8.0后接口可以有静态方法(static)、默认方法(default)，可以有具体实现</p><h4 id="USB接口"><a href="#USB接口" class="headerlink" title="USB接口"></a>USB接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">USB</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">default</span> <span class="keyword">void</span> <span class="title function_">moren</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;USB接口的默认方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">jingtai</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;USB接口的静态方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Mouse-java"><a href="#Mouse-java" class="headerlink" title="Mouse.java"></a>Mouse.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mouse</span> <span class="keyword">implements</span> <span class="title class_">USB</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;鼠标开始工作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘停止工作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Keyboard-java"><a href="#Keyboard-java" class="headerlink" title="Keyboard.java"></a>Keyboard.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Keyboard</span> <span class="keyword">implements</span> <span class="title class_">USB</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘开始工作了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;键盘结束工作了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Main-java-4"><a href="#Main-java-4" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Computer.work(<span class="keyword">new</span> <span class="title class_">Mouse</span>());</span><br><span class="line">        Computer.work(<span class="keyword">new</span> <span class="title class_">Keyboard</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(USB usb)</span>&#123;</span><br><span class="line">        usb.start();</span><br><span class="line">        usb.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(USB usb)</span>&#123;</span><br><span class="line">        usb.start();</span><br><span class="line">        usb.stop();</span><br><span class="line">        usb.moren();</span><br><span class="line">        USB.jingtai();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接口注意事项"><a href="#接口注意事项" class="headerlink" title="接口注意事项"></a>接口注意事项</h3><ul><li>接口不能被实例化</li><li>接口的修饰符只能是public和默认，这点和类的修饰符是一样的</li><li>一个接口不能继承其它的类，但是可以继承多个别的接口，用” ,” 隔开</li><li>接口中的方法都是public方法，抽象方法可以不用abstract修饰</li><li>一个普通类实现接口，就必须将接口的所有方法都实现</li><li>抽象类实现接口，可以不用实现接口的方法</li><li>一个类同时可以实现多个接口</li><li>接口中的属性都是public static final 修饰符int a &#x3D; 1;实际上是public static final int a &#x3D; 1;(必须初始化)接口中属性的访问形式：接口名.属性名</li></ul><h3 id="接口的多态传递"><a href="#接口的多态传递" class="headerlink" title="接口的多态传递"></a>接口的多态传递</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">B</span>&#123;&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">implements</span> <span class="title class_">A</span>&#123;&#125;</span><br><span class="line"><span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C</span>();</span><br><span class="line"><span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C</span>();</span><br></pre></td></tr></table></figure><h2 id="IDEA快捷键"><a href="#IDEA快捷键" class="headerlink" title="IDEA快捷键"></a>IDEA快捷键</h2><p><img src="/../image/xjbjava2.jpg"></p><p><img src="/../image/xjbjava3.jpg"></p><h2 id="成员内部类"><a href="#成员内部类" class="headerlink" title="成员内部类"></a>成员内部类</h2><p><img src="/../image/xjbjava4.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">void</span> main(String[] args)&#123;</span><br><span class="line">        <span class="comment">//外部其他类访问内部类</span></span><br><span class="line">        <span class="comment">//第一种方式,通过类的函数返回值</span></span><br><span class="line">        <span class="type">OuterClass</span> <span class="variable">outerclass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> outerClass.test();</span><br><span class="line">        System.out.println(innerClass.getClass().getName());</span><br><span class="line">        <span class="comment">//第二种方式</span></span><br><span class="line">        <span class="type">OuterClass</span> <span class="variable">outClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> outerClass.<span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;PHP&quot;</span>);</span><br><span class="line">        System.out.pringln(innerClass.getClass.getName());</span><br><span class="line"></span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        innerClass.abc();</span><br><span class="line">        System.out.println(outerClass.getClass());</span><br><span class="line">        System.out.println(outerClass.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> InnerClass <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">InnerClass</span> <span class="variable">innnerClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;python&quot;</span>);</span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        <span class="keyword">return</span> innerClass;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass static block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OuterClass</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">InnerClass</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">abc</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="comment">//访问外部类的name</span></span><br><span class="line">            System.out.println(OuterClass.<span class="built_in">this</span>.name);</span><br><span class="line">            <span class="comment">//默认为内部类的name</span></span><br><span class="line">            System.out.println(name);</span><br><span class="line">            System.out.println(sex);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;InnerClass block&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">InnerClass</span><span class="params">(String language)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.language = language;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h2><p><img src="/../image/xjbjava5.png"></p><ul><li>静态内部类不能访问外部类的非静态成员，非静态方法可以调用静态方法和非静态方法，静态方法只能调用静态方法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//外部其他类访问静态内部类</span></span><br><span class="line">        <span class="comment">//第一种方式，通过函数</span></span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> OuterClass.getInnerClass();</span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        </span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">php</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>.InnerClass(<span class="string">&quot;PHP&quot;</span>);</span><br><span class="line">        System.out.println(OuterClass.sex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> InnerClass <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">InnerClass</span> <span class="variable">innerClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;python&quot;</span>);</span><br><span class="line">        System.out.println(innerClass.language);</span><br><span class="line">        <span class="keyword">return</span> innerClass;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass static block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OuterClass</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> InnerClass <span class="title function_">getInnerClass</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">abc</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;InnerClass block&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">InnerClass</span><span class="params">(String language)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.language = language;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="局部内部类"><a href="#局部内部类" class="headerlink" title="局部内部类"></a>局部内部类</h2><p><img src="/../image/xjbjava6.png"></p><p>  局部内部类不能定义静态成员</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojiangbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="type">OuterClass</span> <span class="variable">xiaojianbang</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">    xiaojianbang.getInnerClass();</span><br><span class="line">    xiaojianbang.getInnerClass1();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OuterClass</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;OuterClass static block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OuterClass</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getInnerClass</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">InnerClass</span>&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">sex</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">abc</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                System.out.println(sex);</span><br><span class="line">                <span class="comment">//访问外部成员</span></span><br><span class="line">                System.out.println(OuterClass.<span class="built_in">this</span>.name);</span><br><span class="line">                System.out.println(OuterCLass.sex);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;InnerClass block&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">InnerClass</span><span class="params">(String language)</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.language = language;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">InnerClass</span> <span class="variable">php</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InnerClass</span>(<span class="string">&quot;PHP&quot;</span>);</span><br><span class="line">        php.abc();</span><br><span class="line">        System.out.prinln(php.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h2><p><img src="/../image/xjbjava7.png"></p><p>内部匿名类不能定义静态成员，只有当匿名类别类处于外部类里面的时候，才能使用外部类.this.xxx访问外部类的示例成员</p><h4 id="接口USB-java"><a href="#接口USB-java" class="headerlink" title="接口USB.java"></a>接口USB.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">USB</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽象类USB2-java"><a href="#抽象类USB2-java" class="headerlink" title="抽象类USB2.java"></a>抽象类USB2.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">USB2</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java-5"><a href="#Main-java-5" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">computer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        computer.work(<span class="keyword">new</span> <span class="title class_">USB</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;键盘开始工作了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;键盘停止工作了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        computer.work(<span class="keyword">new</span> <span class="title class_">USB</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;鼠标开始工作了&quot;</span>);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;鼠标结束工作&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="type">USB2</span> <span class="variable">usb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">USB2</span>()&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;umr&quot;</span>;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(name);</span><br><span class="line">                System.out.println(USB2.name);</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部类start&quot;</span>);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部类stop&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        usb2.start();</span><br><span class="line">        usb2.stop();</span><br><span class="line">        System.out.println(usb2.getClass().getName());</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">USB2</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部类start2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;基于抽象类的匿名内部了stop2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(USB usb)</span>&#123;</span><br><span class="line">        ubs.start();</span><br><span class="line">        usb.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举类"><a href="#枚举类" class="headerlink" title="枚举类"></a>枚举类</h2><p><img src="/../image/xjbjava8.png"></p><h3 id="自定义枚举类"><a href="#自定义枚举类" class="headerlink" title="自定义枚举类"></a>自定义枚举类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>()&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(StandardCharset.UTF_8);</span><br><span class="line">        System.out.println(Season.SPRING);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Season</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">desc</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SPRING1</span> <span class="operator">=</span> <span class="string">&quot;春天&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">SPRING</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;春天&quot;</span>,<span class="string">&quot;暖和&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">SUMMER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;夏天&quot;</span>,<span class="string">&quot;很热&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">AUTUMN</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;秋天&quot;</span>,<span class="string">&quot;凉爽&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Season</span> <span class="variable">WINTER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Season</span>(<span class="string">&quot;冬天&quot;</span>,<span class="string">&quot;很冷&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Season&#123;&quot;</span> + <span class="string">&quot;name=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&quot;, desc=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="系统提供的枚举类（枚举对象必须放在枚举类的第一行）"><a href="#系统提供的枚举类（枚举对象必须放在枚举类的第一行）" class="headerlink" title="系统提供的枚举类（枚举对象必须放在枚举类的第一行）"></a>系统提供的枚举类（枚举对象必须放在枚举类的第一行）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(Season.SPRING);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Season</span>&#123;</span><br><span class="line">    <span class="comment">//使用无参构造器创建枚举对象，则小括号可以省略</span></span><br><span class="line">    xxxx,SPRING(<span class="string">&quot;春天&quot;</span>，<span class="string">&quot;暖和&quot;</span>),SUMMER(<span class="string">&quot;夏天&quot;</span>，<span class="string">&quot;很热&quot;</span>)，AUTUMN(<span class="string">&quot;秋天&quot;</span>,<span class="string">&quot;凉爽&quot;</span>),WINTER(<span class="string">&quot;冬天&quot;</span>,<span class="string">&quot;很冷&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">desc</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">(String name, String desc)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Season&#123;&quot;</span> + <span class="string">&quot;name=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&quot;, desc=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="enum相关方法"><a href="#enum相关方法" class="headerlink" title="enum相关方法"></a>enum相关方法</h3><p><img src="/../image/xjbjava9.png"></p><h4 id="使用Javap反编译Season-class"><a href="#使用Javap反编译Season-class" class="headerlink" title="使用Javap反编译Season.class"></a>使用Javap反编译Season.class</h4><p><img src="/../image/xjbjava10.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Season</span> <span class="variable">autumn</span> <span class="operator">=</span> Season.AUTUMN;</span><br><span class="line">        <span class="comment">// name()返回枚举对象的名字</span></span><br><span class="line">        System.out.println(autumn);</span><br><span class="line">        System.out.println(autumn.name());</span><br><span class="line">        <span class="comment">//ordinal()返回枚举对象的次序/编号，从0开始编号</span></span><br><span class="line">        System.out.println(autumn.ordinal());</span><br><span class="line">        <span class="comment">//values()返回定义的所有枚举对象</span></span><br><span class="line">        Season[] seasons = Season.values();</span><br><span class="line">        <span class="comment">//valueOf()将字符串转换成枚举对象，字符串必须为已有枚举对象名，否则报异常</span></span><br><span class="line">        <span class="type">Season</span> <span class="variable">autumn1</span> <span class="operator">=</span> Season.valueOf(<span class="string">&quot;AUTUMN&quot;</span>);</span><br><span class="line">        System.out.println(Season.SUMMER.compareTo(Season.AUTUMN));<span class="comment">//SUMMER的位置减去AUTUMN的位置</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Season</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SPRING(<span class="string">&quot;春天&quot;</span>,<span class="string">&quot;暖和&quot;</span>),SUMMER(<span class="string">&quot;夏天&quot;</span>,<span class="string">&quot;很热&quot;</span>),AUTUMN(<span class="string">&quot;秋天&quot;</span>,<span class="string">&quot;凉爽&quot;</span>),WINTER(<span class="string">&quot;冬天&quot;</span>,<span class="string">&quot;很冷&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">desc</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Season</span><span class="params">(String name,String desc)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Season&#123;&quot;</span> + <span class="string">&quot;name=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&quot;, desc=&quot;</span> + <span class="string">&#x27;\&#x27;&#x27;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p><img src="/../image/xjbjava11.png"></p><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p><img src="/../image/xjbjava12.png">  </p><p><img src="/../image/xjbjava13.png"></p><h2 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h2><p><img src="/../image/xjbjava14.png"></p><p><img src="/../image/xjbjava15.png"></p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p><img src="/../image/xjbjava16.png" alt=" "></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&quot;xiaojianbang&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">char</span>[] chars = a.toCharArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> Arrays.toString(chars);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串编码"><a href="#字符串编码" class="headerlink" title="字符串编码"></a>字符串编码</h2><p><img src="/../image/xjbjava17.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xerces.internal.impl.dv.util.HexBin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小肩膀8888&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(name.getBytes(StandardCharsets.UTF_8),StandardCharsets.ISO_8859_1);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] bytes = name.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> Arrays.toString(bytes);</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(bytes.length);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] ISO_bytes = name.getBytes(StandardCharsets.ISO_8859_1);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ISO_s1</span> <span class="operator">=</span> Arrays.toString(ISO_bytes);</span><br><span class="line">        System.out.println(ISO_s1);</span><br><span class="line">        System.out.println(ISO_bytes.length);</span><br><span class="line"></span><br><span class="line">       <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小肩膀8888&quot;</span>;</span><br><span class="line">        <span class="type">char</span>[] chars = name.toCharArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> Arrays.toString(chars);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;小肩膀8888&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ISO_s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(name.getBytes(StandardCharsets.UTF_8), StandardCharsets.ISO_8859_1);</span><br><span class="line">        System.out.println(ISO_s);</span><br><span class="line">        String UTF8_s= <span class="keyword">new</span> <span class="title class_">String</span>(ISO_s.getBytes(StandardCharsets.ISO_8859_1), StandardCharsets.UTF_8);</span><br><span class="line">        System.out.println(UTF8_s);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] str_iso_bytes = ISO_s.getBytes(StandardCharsets.ISO_8859_1);</span><br><span class="line">        <span class="type">byte</span>[] str_utf8_bytes = UTF8_s.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        System.out.println(Arrays.toString(str_iso_bytes));</span><br><span class="line">        System.out.println(Arrays.toString(str_utf8_bytes));</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">HexEncodeStr</span> <span class="operator">=</span> HexBin.encode(str_utf8_bytes);</span><br><span class="line">        System.out.println(HexEncodeStr);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] decode = HexBin.decode(HexEncodeStr);</span><br><span class="line">        System.out.println(Arrays.toString(decode));    </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="StringBuffer"><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h2><p><img src="/../image/xjbjava18.png"></p><h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p><img src="/../image/xjbjava19.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Integer[] aa = <span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">1</span>,<span class="number">2000</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">99</span>,<span class="number">95</span>,<span class="number">65</span>,<span class="number">33</span>,<span class="number">65</span>,<span class="number">200</span>,<span class="number">900</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(aa));</span><br><span class="line"></span><br><span class="line">        Arrays.sort(aa);</span><br><span class="line">        System.out.println(Arrays.toString(aa));</span><br><span class="line"></span><br><span class="line">        Arrays.sort(aa ,<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="type">int</span>)o1 -(<span class="type">int</span>)o2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BigInteger"><a href="#BigInteger" class="headerlink" title="BigInteger"></a>BigInteger</h2><p><img src="/../image/xjbjava20.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">bigInteger1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;1234567895243532452345341242341234213&quot;</span>);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">bigInteger2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">add</span> <span class="operator">=</span> bigInteger1.add(bigInteger2);</span><br><span class="line">        System.out.println(add);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">sub</span> <span class="operator">=</span> bigInteger1.subtract(bigInteger2);</span><br><span class="line">        System.out.println(sub);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">mul</span> <span class="operator">=</span> bigInteger1.multiply(bigInteger2);</span><br><span class="line">        System.out.println(mul);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">div</span> <span class="operator">=</span> bigInteger1.divide(bigInteger2);</span><br><span class="line">        System.out.println(div);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><p><img src="/../image/xjbjava21.png"></p><h2 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h2><p><img src="/../image/xjbjava22.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Collection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"></span><br><span class="line">        collection.add(<span class="number">100</span>);</span><br><span class="line">        collection.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        collection.add(<span class="literal">false</span>);</span><br><span class="line">        collection.add(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        collection.remove(<span class="literal">null</span>);</span><br><span class="line">        System.out.println(collection);</span><br><span class="line">        collection.remove(<span class="number">1</span>);</span><br><span class="line">        System.out.println(collection);</span><br><span class="line"></span><br><span class="line">        System.out.println(collection.contains(<span class="literal">null</span>));</span><br><span class="line">        System.out.println(collection.size());</span><br><span class="line">        System.out.println(collection.isEmpty());</span><br><span class="line"></span><br><span class="line">        collection.clear();</span><br><span class="line">        <span class="type">Collection</span> <span class="variable">collection2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        collection2.add(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        collection2.add(<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        collection2.add(<span class="string">&quot;xiaojianbang3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        collection.addAll(collection2);</span><br><span class="line">        System.out.println(collection);</span><br><span class="line"></span><br><span class="line">        System.out.println(collection.containsAll(collection2));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p><img src="/../image/xjbjava23.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.add(<span class="number">2</span>,<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">        <span class="type">List</span> <span class="variable">list2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list2.add(<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        list2.add(<span class="string">&quot;umr2&quot;</span>);</span><br><span class="line">        list2.add(<span class="string">&quot;rw2&quot;</span>);</span><br><span class="line">        list2.add(<span class="number">2</span>,<span class="string">&quot;umr2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list2.addAll(<span class="number">0</span>,list);</span><br><span class="line">        System.out.println(list2);</span><br><span class="line"></span><br><span class="line">        System.out.println(list.get(<span class="number">2</span>));</span><br><span class="line">        System.out.println(list2.indexOf(<span class="string">&quot;umr&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(list2.lastIndexOf(<span class="string">&quot;umr2&quot;</span>));</span><br><span class="line"></span><br><span class="line">        list.remove(<span class="string">&quot;umr2&quot;</span>);</span><br><span class="line">        list2.set(<span class="number">1</span>,<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        list2.subList(<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//包含左边不包含右边</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="List的遍历"><a href="#List的遍历" class="headerlink" title="List的遍历"></a>List的遍历</h2><p><img src="/../image/xjbjava24.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        list.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator</span> <span class="operator">=</span> list.iterator();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">next</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">        System.out.println(next);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">next2</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">        System.out.println(next2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">nexted</span> <span class="operator">=</span>  iterator.next();</span><br><span class="line">            System.out.println(nexted);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Object o : list) &#123;</span><br><span class="line">            System.out.println(o);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;list.size(); i++) &#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h2><p><img src="/../image/xjbjava25.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">arrayList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        arrayList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;<span class="number">11</span>;i++)&#123;</span><br><span class="line">            arrayList.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h2><p><img src="/../image/xjbjava26.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Vector</span> <span class="variable">vector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vector</span>(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;<span class="number">11</span>;i++)&#123;</span><br><span class="line">            vector.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(vector);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h2><p><img src="/../image/xjbjava27.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">xiaojianbang</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Node</span> <span class="variable">rw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        <span class="type">Node</span> <span class="variable">umr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        xiaojianbang.next = rw;</span><br><span class="line">        rw.next = umr;</span><br><span class="line">        umr.prev = rw;</span><br><span class="line">        rw.prev = xiaojianbang;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">first</span> <span class="operator">=</span> xiaojianbang;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">last</span> <span class="operator">=</span> umr;</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">temp</span> <span class="operator">=</span> first;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        temp = last;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.prev;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">java</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        java.prev = rw;</span><br><span class="line">        java.next = umr;</span><br><span class="line">        umr.prev = java;</span><br><span class="line">        rw.next = java;</span><br><span class="line"></span><br><span class="line">        temp = first;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        temp = last;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">            temp = temp.prev;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Node prev;</span><br><span class="line">    <span class="keyword">public</span> Node next;</span><br><span class="line">    <span class="keyword">public</span> Object item;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Node</span><span class="params">(Object item)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.item = item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Node&#123;&quot;</span> + <span class="string">&quot;item=&quot;</span> + item + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LinkedList-1"><a href="#LinkedList-1" class="headerlink" title="LinkedList"></a>LinkedList</h2><p><img src="/../image/xjbjava28.png"></p><h2 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h2><p><img src="/../image/xjbjava29.png"></p><p><img src="/../image/xjbjava30.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br><span class="line">        hashSet.add(<span class="number">1</span>);</span><br><span class="line">        hashSet.add(<span class="number">2</span>);</span><br><span class="line">        hashSet.add(<span class="number">3</span>);</span><br><span class="line">        hashSet.add(<span class="number">4</span>);</span><br><span class="line">        hashSet.add(<span class="number">5</span>);</span><br><span class="line">        hashSet.add(<span class="number">6</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiao&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaoxiao&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">            System.out.println(hashSet);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator</span> <span class="operator">=</span> hashSet.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">next</span> <span class="operator">=</span>  iterator.next();</span><br><span class="line">            System.out.println(next);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Object o : hashSet)&#123;</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组链表"><a href="#数组链表" class="headerlink" title="数组链表"></a>数组链表</h2><p><img src="/../image/xjbjava31.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Node[] nodes = <span class="keyword">new</span> <span class="title class_">Node</span>[<span class="number">16</span>];</span><br><span class="line">        <span class="type">Node</span> <span class="variable">xiaojianbang</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        nodes[<span class="number">2</span>] = xiaojianbang;</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">umr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line">        xiaojianbang.next = umr;</span><br><span class="line"></span><br><span class="line">        <span class="type">Node</span> <span class="variable">rw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        umr.next = rw;</span><br><span class="line"></span><br><span class="line">        System.out.println(nodes);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Object item;</span><br><span class="line">    <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Node</span><span class="params">(Object tiem)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.item = tiem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Node&#123;&quot;</span> +<span class="string">&quot;item&quot;</span> + item + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HashSet练习题"><a href="#HashSet练习题" class="headerlink" title="HashSet练习题"></a>HashSet练习题</h2><p><img src="/../image/xjbjava32.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">31</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="number">31</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;rw&quot;</span>,<span class="number">30</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;rw&quot;</span>,<span class="number">30</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;umr&quot;</span>,<span class="number">29</span>));</span><br><span class="line">        hashSet.add(<span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;umr&quot;</span>,<span class="number">29</span>));</span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == o) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="literal">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> (A) o;</span><br><span class="line">        <span class="keyword">return</span> age == a.age &amp;&amp; Objects.equals(name, a.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(name, age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;A&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h2><p><img src="/../image/xjbjava33.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>() ;</span><br><span class="line"></span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojianban&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojian&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;xiaojia&quot;</span>);</span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Map接口特点"><a href="#Map接口特点" class="headerlink" title="Map接口特点"></a>Map接口特点</h2><p><img src="/../image/xjbjava34.png"></p><h2 id="Map接口常用方法"><a href="#Map接口常用方法" class="headerlink" title="Map接口常用方法"></a>Map接口常用方法</h2><p><img src="/../image/xjbjava35.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        hashMap.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        hashMap.put(integer,<span class="literal">null</span>);</span><br><span class="line">        hashMap.remove(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        hashMap.get(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">        System.out.println(hashMap.get(<span class="string">&quot;pass&quot;</span>));</span><br><span class="line">        System.out.println(hashMap.size());</span><br><span class="line">        System.out.println(hashMap.isEmpty());</span><br><span class="line">        hashMap.clear();</span><br><span class="line">        System.out.println(hashMap);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HaspMap的遍历"><a href="#HaspMap的遍历" class="headerlink" title="HaspMap的遍历"></a>HaspMap的遍历</h2><p><img src="/../image/xjbjava36.png"></p><p><img src="/../image/xjbjava37.png"></p><p><img src="/../image/xjbjava38.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">hashMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        hashMap.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        hashMap.put(integer,<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="type">Set</span> <span class="variable">set</span> <span class="operator">=</span> hashMap.keySet();</span><br><span class="line">        System.out.println(set.getClass());</span><br><span class="line">        set.forEach(<span class="keyword">new</span> <span class="title class_">Consumer</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">accept</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">                System.out.println(key + <span class="string">&quot;-&quot;</span> + hashMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;000000000000000000000000000000000000000&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Object key : set) &#123;</span><br><span class="line">            System.out.println(key + <span class="string">&quot;-&quot;</span> + hashMap.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator1</span> <span class="operator">=</span> set.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator1.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">key</span> <span class="operator">=</span>  iterator1.next();</span><br><span class="line">            System.out.println(key + <span class="string">&quot;-&quot;</span> + hashMap.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line">        <span class="comment">//valuse用Collection，因为可能会有重复</span></span><br><span class="line">        <span class="type">Collection</span> <span class="variable">values</span> <span class="operator">=</span> hashMap.values();</span><br><span class="line">        <span class="keyword">for</span>(Object value : values) &#123;</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator2</span> <span class="operator">=</span> values.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator2.hasNext()) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span>  iterator2.next();</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Set</span> <span class="variable">set1</span> <span class="operator">=</span> hashMap.entrySet();</span><br><span class="line">        <span class="keyword">for</span>(Object o : set1)&#123;</span><br><span class="line">            Map.<span class="type">Entry</span> <span class="variable">entry</span> <span class="operator">=</span> (Map.Entry) o;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;-&quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h2><p><img src="/../image/xjbjava39.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>();</span><br><span class="line">        hashtable.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        hashtable.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        hashtable.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        hashtable.put(integer,<span class="number">2</span>);</span><br><span class="line">        System.out.println(hashtable);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p><img src="/../image/xjbjava40.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.put(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;a12345678&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;code&quot;</span>,<span class="number">123456</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);</span><br><span class="line">        prop.put(integer,<span class="number">2</span>);</span><br><span class="line">        System.out.println(prop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h2><p><img src="/../image/xjbjava41.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TreeSet</span> <span class="variable">treeSet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeSet</span>(<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (((String)o1).length()-((String)o2).length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        treeSet.add(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;xxxxxx&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;rbe&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;uad&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;umr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(treeSet);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h2><p><img src="/../image/xjbjava42.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TreeMap</span> <span class="variable">treeMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeMap</span>(<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (((String)o1).length()-((String)o2).length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        treeMap.put(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;xxxxxx&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;rw&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;rbe&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;uad&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;umr&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        treeMap.put(<span class="string">&quot;xiaojianbang&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        System.out.println(treeMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Collections工具类"><a href="#Collections工具类" class="headerlink" title="Collections工具类"></a>Collections工具类</h2><p><img src="/../image/xjbjava43.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">arrayList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>(<span class="number">9</span>);</span><br><span class="line">        arrayList.add(<span class="number">100</span>);</span><br><span class="line">        arrayList.add(<span class="number">200</span>);</span><br><span class="line">        arrayList.add(<span class="number">300</span>);</span><br><span class="line">        arrayList.add(<span class="number">400</span>);</span><br><span class="line">        arrayList.add(<span class="number">500</span>);</span><br><span class="line">        arrayList.add(<span class="number">600</span>);</span><br><span class="line">        arrayList.add(<span class="number">700</span>);</span><br><span class="line">        arrayList.add(<span class="number">800</span>);</span><br><span class="line">        arrayList.add(<span class="number">900</span>);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        Collections.reverse(arrayList);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">            Collections.shuffle(arrayList);</span><br><span class="line">            System.out.println(arrayList);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.sort(arrayList);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.sort(arrayList, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Object&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (Integer)o1 - ((Integer)o2);<span class="comment">//从小到大</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.swap(arrayList, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">max</span> <span class="operator">=</span> Collections.max(arrayList);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">max2</span> <span class="operator">=</span> Collections.max(arrayList,<span class="keyword">new</span> <span class="title class_">Comparator</span>() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Object o1, Object o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="type">int</span>)o2 - ((<span class="type">int</span>)o1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">frequency</span> <span class="operator">=</span> Collections.frequency(arrayList,<span class="number">900</span>);</span><br><span class="line">        System.out.println(frequency);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ArrayList</span> <span class="variable">new_arrayList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>(arrayList.size());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrayList.size(); i++)&#123;</span><br><span class="line">            new_arrayList.add(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Collections.copy(new_arrayList, arrayList);</span><br><span class="line">        System.out.println(new_arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collections.replaceAll(new_arrayList, <span class="number">1000</span>,<span class="number">200</span>);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;100&quot;</span>));</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="集合使用的选择"><a href="#集合使用的选择" class="headerlink" title="集合使用的选择"></a>集合使用的选择</h2><p><img src="/../image/xjbjava44.png"></p><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><p><img src="/../image/xjbjava45.png"></p><p><img src="/../image/xjbjava46.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;( );</span><br><span class="line">        arrayList.add(<span class="number">1334</span>);</span><br><span class="line">        arrayList.add(<span class="number">100</span>);</span><br><span class="line">        arrayList.add(<span class="number">200</span>);</span><br><span class="line">        arrayList.add(<span class="number">300</span>);</span><br><span class="line">        arrayList.add(<span class="number">400</span>);</span><br><span class="line">        arrayList.add(<span class="number">500</span>);</span><br><span class="line">        arrayList.add(<span class="number">600</span>);</span><br><span class="line">        arrayList.add(<span class="number">700</span>);</span><br><span class="line">        arrayList.add(<span class="number">800</span>);</span><br><span class="line">        arrayList.add(<span class="number">900</span>);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;==========================&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Collections.sort(arrayList, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Integer o1, Integer o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o1 -o2;<span class="comment">//从小到大</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(arrayList);</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        People&lt;String&gt; stringPeople = <span class="keyword">new</span> <span class="title class_">People</span>&lt;String&gt;( );<span class="comment">//右边的String可以省略</span></span><br><span class="line">        System.out.println(stringPeople.test(<span class="string">&quot;xiaojianbang&quot;</span>));</span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;( );</span><br><span class="line">        hashMap.put(<span class="string">&quot;user1&quot;</span>, <span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;user2&quot;</span>, <span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;user3&quot;</span>, <span class="string">&quot;xiaojianbang3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;Map.Entry&lt;String, String&gt;&gt; set = hashMap.entrySet( );</span><br><span class="line">        Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = set.iterator( );</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            Map.Entry&lt;String, String&gt; next =  iterator.next();</span><br><span class="line">            System.out.println(next.getKey() + <span class="string">&quot; &quot;</span> + next.getValue( ));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>&lt;X&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> X name;</span><br><span class="line">    <span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义泛型类"><a href="#自定义泛型类" class="headerlink" title="自定义泛型类"></a>自定义泛型类</h3><p><img src="/../image/xjbjava48.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;&#123;all&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        People&lt;String,Integer,Boolean&gt; people = <span class="keyword">new</span> <span class="title class_">People</span>&lt;&gt;();</span><br><span class="line">        System.out.println(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        people.names = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xxxx&quot;</span>,<span class="string">&quot;yyyy&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>&lt;X,R,W&gt;&#123;</span><br><span class="line">    <span class="keyword">public</span> X name;</span><br><span class="line">    <span class="keyword">public</span> R age;</span><br><span class="line">    <span class="keyword">public</span> W sex;</span><br><span class="line">    <span class="keyword">public</span> X[] names;</span><br><span class="line">    <span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义泛型接口"><a href="#自定义泛型接口" class="headerlink" title="自定义泛型接口"></a>自定义泛型接口</h3><p><img src="/../image/xjbjava49.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or</span></span><br><span class="line"><span class="comment">// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        People&lt;String,Integer,Boolean&gt; people = <span class="keyword">new</span> <span class="title class_">People</span>&lt;&gt;();</span><br><span class="line">        System.out.println(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        people.names = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xxxx&quot;</span>,<span class="string">&quot;yyyy&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>&lt;X,R,W&gt; <span class="keyword">implements</span> <span class="title class_">IUSB</span>&lt;String,Integer,Boolean&gt;&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> X name;</span><br><span class="line">    <span class="keyword">public</span> R age;</span><br><span class="line">    <span class="keyword">public</span> W sex;</span><br><span class="line">    <span class="keyword">public</span> X[] names;</span><br><span class="line">    <span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">(String a, Integer b, Boolean c)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(String a, Integer b, Boolean c)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> IUSB.<span class="built_in">super</span>.test2(a, b, c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">IUSB</span>&lt;X,R,W&gt;&#123;</span><br><span class="line">    <span class="comment">//接口中定义的属性默认是静态</span></span><br><span class="line">    X <span class="title function_">test1</span><span class="params">(X a,R b,W c)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span> X <span class="title function_">test2</span><span class="params">(X a,R b,W c)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义泛型方法"><a href="#自定义泛型方法" class="headerlink" title="自定义泛型方法"></a>自定义泛型方法</h3><p><img src="/../image/xjbjava50.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//泛型方法</span></span><br><span class="line"><span class="keyword">public</span>&lt;T,S&gt; T <span class="title function_">test</span><span class="params">(T a, S b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*泛型类型参数：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;T, S&gt; 是方法的泛型类型参数，表示这个方法可以使用类型 T 和 S。在方法内部，你可以使用这两个类型，但在这个方法的实现中并没有用到它们。</span></span><br><span class="line"><span class="comment">方法参数：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">X a 和 R b 是方法的参数，类型分别是 X 和 R。这意味着你需要传入 X 类型的对象和 R 类型的对象。</span></span><br><span class="line"><span class="comment">返回值：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">方法的返回值类型是 X，所以它将返回一个 X 类型的对象。在这个例子中，它返回了参数 a。</span></span><br><span class="line"><span class="comment">可能的错误：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果 X 和 R 是类或接口，那么这个方法的参数和返回类型是可以的。但是泛型类型 T 和 S 在这个方法体内并没有实际使用，这可能是个设计上的疏忽。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用了泛型的方法</span></span><br><span class="line"><span class="keyword">public</span> X <span class="title function_">test</span><span class="params">(X a,R b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>泛型方法可以是静态，但是如果用了类声明的方法，就不能静态了</li></ul><h3 id="泛型通配符"><a href="#泛型通配符" class="headerlink" title="泛型通配符"></a>泛型通配符</h3><p><img src="/../image/xjbjava51.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaojianbang.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>()&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> throwsClassNotFoundException&#123;</span><br><span class="line">        test1(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;());</span><br><span class="line">        test1(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;());</span><br><span class="line">        </span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        test2(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;A&gt;());</span><br><span class="line">        test2(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;B&gt;());</span><br><span class="line">        test2(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;C&gt;());</span><br><span class="line">        </span><br><span class="line">        test3(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;A&gt;());</span><br><span class="line">        test3(<span class="keyword">new</span> <span class="title class_">ArrayLIst</span>&lt;Object&gt;());</span><br><span class="line">        test3(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;?&gt; test1(List&lt;?&gt; a)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;?&gt; test2(List&lt;? <span class="keyword">extends</span> <span class="title class_">A</span>&gt; a)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    publci <span class="keyword">static</span> List&lt;?&gt; test3(List&lt;? <span class="built_in">super</span> A&gt; a)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Properties读配置文件"><a href="#Properties读配置文件" class="headerlink" title="Properties读配置文件"></a>Properties读配置文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath(); <span class="comment">//这行代码的作用是获取当前工作目录的规范路径。</span></span><br><span class="line"><span class="comment">/*解析代码</span></span><br><span class="line"><span class="comment">new File(&quot;&quot;):</span></span><br><span class="line"><span class="comment">创建一个 File 对象，表示当前工作目录。传入空字符串 &quot;&quot; 时，File 构造函数会默认指向当前工作目录。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">getCanonicalPath():</span></span><br><span class="line"><span class="comment">调用 getCanonicalPath() 方法会返回该文件的规范路径，这个路径是绝对的，并且经过解析，去掉了任何冗余部分（例如 . 和 ..）。</span></span><br><span class="line"><span class="comment">最终效果*/</span></span><br></pre></td></tr></table></figure><h4 id="新建一个demo-properties"><a href="#新建一个demo-properties" class="headerlink" title="新建一个demo.properties"></a>新建一个demo.properties</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">class = <span class="type">Xiaojianbang</span></span><br><span class="line"><span class="variable">method</span> <span class="operator">=</span> printInfo</span><br></pre></td></tr></table></figure><h4 id="Hello-java"><a href="#Hello-java" class="headerlink" title="Hello.java"></a>Hello.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.Util.Porperties;</span><br><span class="line"><span class="keyword">import</span> java.util.Porperties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Flie</span>(<span class="string">&quot;&quot;</span>).getCanoncalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStrem</span>(filePath));</span><br><span class="line">        String <span class="keyword">class</span> <span class="title class_">Name</span> = (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><p><img src="/../image/xjbjava52.png"></p><p><img src="/../image/xjbjava53.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMEthod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    pubilc <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23346534&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 1234534&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Class的获取"><a href="#Class的获取" class="headerlink" title="Class的获取"></a>Class的获取</h2><p><img src="/../image/xjbjava54.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="哪些有Class对象"><a href="#哪些有Class对象" class="headerlink" title="哪些有Class对象"></a>哪些有Class对象</h2><p><img src="/../image/xjbjava55.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FIle</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        propertie.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaoijanbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">         System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line">        </span><br><span class="line">         System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射创建对象"><a href="#反射创建对象" class="headerlink" title="反射创建对象"></a>反射创建对象</h2><p><img src="/../image/xjbjava56.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span>constructor.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredConstructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>);</span><br><span class="line">        System.out.println(o3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射操作属性"><a href="#反射操作属性" class="headerlink" title="反射操作属性"></a>反射操作属性</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(methodName);</span><br><span class="line">        method.invoke(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span>constructor.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredConstructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        System.out.println(o3);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> xiaojianbang.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        nameField.set(o3,<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        name = (String) nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">sexField</span> <span class="operator">=</span> xiaojianbang.getDeclaredField(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        sexField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        sexField.set(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">        sex = (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo2</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射操作方法"><a href="#反射操作方法" class="headerlink" title="反射操作方法"></a>反射操作方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载类</span></span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojianbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span>constructor.newInstance(<span class="string">&quot;xiaojianbang&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line"></span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredConstructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        System.out.println(o3);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> xiaojianbang.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        nameField.set(o3,<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        name = (String) nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">sexField</span> <span class="operator">=</span> xiaojianbang.getDeclaredField(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        sexField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        sexField.set(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">        sex = (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo2</span> <span class="operator">=</span> xiaojianbang.getMethod(<span class="string">&quot;printInfo2&quot;</span>, String.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> (String) printInfo2.invoke(o3,<span class="string">&quot;这是传入的参数&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo1</span> <span class="operator">=</span> xiaojianbang.getDeclaredMethod(<span class="string">&quot;printInfo1&quot;</span>);</span><br><span class="line">        printInfo1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        printInfo1.invoke(<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printInfo2</span><span class="params">(String a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这是返回值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Class类对象的其他方法"><a href="#Class类对象的其他方法" class="headerlink" title="Class类对象的其他方法"></a>Class类对象的其他方法</h2><p><img src="/../image/xjbjava57.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>).getCanonicalPath() + File.separator + <span class="string">&quot;src\\demo.properties&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath));</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> (String) properties.get(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(className + <span class="string">&quot;.&quot;</span> + methodName);</span><br><span class="line">        </span><br><span class="line">        Class&lt;?&gt; cls = Class.forName(className);</span><br><span class="line">        Class&lt;?&gt; cls1 = Xiaojianbang.class;</span><br><span class="line">        Class&lt;?&gt; cls2 = <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass();</span><br><span class="line">        Class&lt;?&gt; cls3 = Xiaojiangbang.class.getClassLoader().loadClass(className);</span><br><span class="line">        Class&lt;?&gt; cls4  <span class="keyword">new</span> <span class="title class_">Xiaojianbang</span>().getClass().getClassLoader().loadClass(className);</span><br><span class="line">        System.out.println(cls1);</span><br><span class="line">        System.out.println(cls2);</span><br><span class="line">        System.out.println(cls3);</span><br><span class="line">        System.out.println(cls4);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.TYPE);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">DemoI</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;lelele&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.printInfo1();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>));</span><br><span class="line">        System.out.println(Class.forName(<span class="string">&quot;Xiaojianbang$Demo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello$1&quot;</span>);</span><br><span class="line">        System.out.println(DemoI.class);</span><br><span class="line">        System.out.println(Thread.State.class);</span><br><span class="line">        System.out.println(SuppressWarnings.class);</span><br><span class="line">        System.out.println(<span class="type">int</span>.class);</span><br><span class="line">        System.out.println(Integer.class);</span><br><span class="line">        System.out.println(<span class="keyword">void</span>.class);</span><br><span class="line">        String[] str1 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;;</span><br><span class="line">        String[][] str2 = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;xiaojianbang&quot;</span>&#125;&#125;;</span><br><span class="line">        System.out.println(str1.getClass().getName());</span><br><span class="line">        System.out.println(String[].class);</span><br><span class="line">        System.out.println(String[][].class);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> xiaojianbang.newInstance();</span><br><span class="line">        System.out.println(o1);</span><br><span class="line">        </span><br><span class="line">        Constructor&lt;?&gt; consrtuctor = xiaojianbang.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span> constructor.newInstance(<span class="string">&quot;xiaojainbang&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        System.out.println(o2);</span><br><span class="line">        </span><br><span class="line">        Constructor&lt;?&gt; constructor1 = xiaojianbang.getDeclaredCostructor(String.class);</span><br><span class="line">        constructor1.setAccessible(<span class="literal">true</span>);<span class="comment">//关闭访问检查</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o3</span> <span class="operator">=</span> constructor1.newInstance(<span class="string">&quot;xiaojianbang1&quot;</span>);</span><br><span class="line">        System.out.prinln(o3);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> xiaojianbang.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        nameField.set(o3,<span class="string">&quot;xiaojianbang2&quot;</span>);</span><br><span class="line">        name = (String) nameField.get(o3);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Field</span> <span class="variable">sexField</span> <span class="operator">=</span> xiaojianbang.getDeclaedField(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">        sexField.etAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">sex</span> <span class="operator">=</span> (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        sexField.set(<span class="literal">null</span>,<span class="literal">true</span>);</span><br><span class="line">        sex = (<span class="type">boolean</span>)sexField.get(o3);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">        System.out.println(<span class="string">&quot;================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo2</span> <span class="operator">=</span> xiaojianbang.getMethod(<span class="string">&quot;printInfo2&quot;</span>,String.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> (String) printInfo.invoke(o3,<span class="string">&quot;这是传入的参数&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Method</span> <span class="variable">printInfo1</span> <span class="operator">=</span> xiaojianbang.getDeclaredMethod(<span class="string">&quot;printInfo10&quot;</span>);</span><br><span class="line">        printInfo1.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        printFinf1.invoke(<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(xiaojianbang.getSuperclass());</span><br><span class="line">        System.out.println(DemoI.class.getInterfaces());</span><br><span class="line">        Class&lt;?&gt; []interfaces = xiaojianbang.getInterfaces();</span><br><span class="line">        System.out.println(interfaces.length);</span><br><span class="line">        System.out.println(interfaces[<span class="number">0</span>]);</span><br><span class="line">        Class&lt;?&gt; [] classes = xiaojianbang.getDeclaredClasses();</span><br><span class="line">        System.out.println(classes.length);        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span> <span class="keyword">implements</span> <span class="title class_">DemoI</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo10</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printInfo2</span><span class="params">(String a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这是返回值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打印类的结构信息"><a href="#打印类的结构信息" class="headerlink" title="打印类的结构信息"></a>打印类的结构信息</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line">    <span class="meta">@SuprressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Class&lt;?&gt; xiaojianbang = Class.forName(<span class="string">&quot;Xiaojianbang&quot;</span>);</span><br><span class="line">        Field[] declaredFields = xiaojianbang.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span>(Field declaredField:declaredFields)&#123;</span><br><span class="line">            System.out.println(declaredField.getName());</span><br><span class="line">            System.out.println(declaredField.getModifiers());</span><br><span class="line">            System.out.println(declaredField.getType());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Modifier.isPrivate(<span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Method[] declaredMethods = xiaojianbang.getDeclaredMethod();</span><br><span class="line">        <span class="keyword">for</span>(Method declaredMethod : declaredMehtods)&#123;</span><br><span class="line">            System.out.println(declaredMethod.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        Constructor&lt;?&gt;[] declaredConstructor = xiaojianbang.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span>(Constructor deeclaredConstructor : declaredCOnstructors)&#123;</span><br><span class="line">            System.out.prinln(declaredConstructor.getName());</span><br><span class="line">        &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;==================================&quot;</span>);</span><br><span class="line">        Class&lt;?&gt; superclass = xiaojianbang.getSuperclass();</span><br><span class="line">        superclass.getDeclaredFields();</span><br><span class="line">        superclass.getDeclaredMethods();</span><br><span class="line">        superclass.getDeclaredConstructors();</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt;[] interfaces = xiaojianbang.getInterfaces();</span><br><span class="line">        Class&lt;?&gt;[] declaredClasses = xiaojianbang.getDeclaredClasses();</span><br><span class="line">        declaredClasses[<span class="number">0</span>].getDeclaredFields();</span><br><span class="line">        declaredClasses[<span class="number">0</span>].getDeclaredMethods();</span><br><span class="line">        declaredClasses[<span class="number">0</span>].getDeclaredConstructors();</span><br><span class="line">        Class&lt;?&gt;[] declaredClasses1 = declaredClasses[<span class="number">0</span>].getDeclaredClasses();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Xiaojianbang</span> <span class="keyword">implements</span> <span class="title class_">DemoI</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Xiaojianbang</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo10</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;qq: 23458757&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">printInfo2</span><span class="params">(String a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;VX: 12345678&quot;</span>+a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;这是返回值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printInfo1</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Demo</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Xiaojianbang&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Fragment</title>
      <link href="/2024/09/05/Fragment/"/>
      <url>/2024/09/05/Fragment/</url>
      
        <content type="html"><![CDATA[<h2 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h2><h3 id="Fragment的产生"><a href="#Fragment的产生" class="headerlink" title="Fragment的产生"></a>Fragment的产生</h3><p><img src="/../image/Fragment1.png"></p><h3 id="什么是Fragment"><a href="#什么是Fragment" class="headerlink" title="什么是Fragment"></a>什么是Fragment</h3><p><img src="/../image/Fragment2.png"></p><h3 id="Fragment的使用方法"><a href="#Fragment的使用方法" class="headerlink" title="Fragment的使用方法"></a>Fragment的使用方法</h3><h4 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentbase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentbase.BlankFragment1&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:id</span>=<span class="string">&quot;@id/fragment1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="BlankFragment1-java"><a href="#BlankFragment1-java" class="headerlink" title="BlankFragment1.java"></a>BlankFragment1.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentbase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> View root;</span><br><span class="line">    <span class="keyword">private</span> TextView textView;</span><br><span class="line">    <span class="keyword">private</span> Button button;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)&#123;</span><br><span class="line">            root = inflater.inflate(R.layout.fragment_blank1, container, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        textView = root.findViewById(R.id.btn);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">                textView.setText(<span class="string">&quot;Yes, I am, and you?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fragment-blank1-xml"><a href="#fragment-blank1-xml" class="headerlink" title="fragment_blank1.xml"></a>fragment_blank1.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textview&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;How are you?&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在activity中简单的添加两个fragment"><a href="#在activity中简单的添加两个fragment" class="headerlink" title="在activity中简单的添加两个fragment"></a>在activity中简单的添加两个fragment</h3><h4 id="activity-main-xml-1"><a href="#activity-main-xml-1" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentbase.BlankFragment1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentbase.BlankFragment2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fragment2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragment的产生-1"><a href="#Fragment的产生-1" class="headerlink" title="Fragment的产生"></a>Fragment的产生</h3><h4 id="动态添加Fragment"><a href="#动态添加Fragment" class="headerlink" title="动态添加Fragment"></a>动态添加Fragment</h4><p>JDK17以上版本无法使用switch的解决方法：</p><p><img src="/../image/Fragment3.png"></p><h4 id="MainActivity-java-1"><a href="#MainActivity-java-1" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentTransaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener &#123;</span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> Button btn2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        btn = findViewById(R.id.btn); <span class="comment">// 使用正确的 ID</span></span><br><span class="line">        btn.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        btn2 = findViewById(R.id.btn_2); <span class="comment">// 处理其他按钮</span></span><br><span class="line">        btn2.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> <span class="title class_">BlankFragment1</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> R.id.btn_2:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> <span class="title class_">ItemFragment</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">replaceFragment</span><span class="params">(Fragment fragment)</span> &#123;</span><br><span class="line">        <span class="type">FragmentManager</span> <span class="variable">fragmentManager</span> <span class="operator">=</span> getSupportFragmentManager();</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">transaction</span> <span class="operator">=</span> fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.framelayout,fragment);</span><br><span class="line">        transaction.addToBackStack(<span class="literal">null</span>);<span class="comment">//添加到同一个栈中，这样用户可以按返回键时回到之前的状态。</span></span><br><span class="line">        <span class="comment">/*replace(int containerViewId, Fragment fragment) 是 FragmentTransaction 类中的一个方法，用于将一个 Fragment 替换到指定的容器中。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">containerViewId: 这是一个 int 类型的参数，表示容器的资源 ID。这个容器通常是一个 FrameLayout 或者其他可以承载 Fragment 的视图组件。你在布局文件中定义这个容器时会为它分配一个 ID（在这个例子中是 R.id.framelayout）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">fragment: 这是你希望替换到容器中的新的 Fragment 实例。这个 Fragment 对象是你要显示的新内容或界面。*/</span></span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="BlankFragment1"><a href="#BlankFragment1" class="headerlink" title="BlankFragment1"></a>BlankFragment1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A simple &#123;<span class="doctag">@link</span> Fragment&#125; subclass.</span></span><br><span class="line"><span class="comment"> * Use the &#123;<span class="doctag">@link</span> BlankFragment1#newInstance&#125; factory method to</span></span><br><span class="line"><span class="comment"> * create an instance of this fragment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></span><br><span class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM1</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM2</span> <span class="operator">=</span> <span class="string">&quot;param2&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></span><br><span class="line">    <span class="keyword">private</span> String mParam1;</span><br><span class="line">    <span class="keyword">private</span> String mParam2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use this factory method to create a new instance of</span></span><br><span class="line"><span class="comment">     * this fragment using the provided parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment BlankFragment1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlankFragment1 <span class="title function_">newInstance</span><span class="params">(String param1, String param2)</span> &#123;</span><br><span class="line">        <span class="type">BlankFragment1</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_PARAM1, param1);</span><br><span class="line">        args.putString(ARG_PARAM2, param2);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_blank1, container, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ItemFragment"><a href="#ItemFragment" class="headerlink" title="ItemFragment"></a>ItemFragment</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.fragmentmangers.placeholder.PlaceholderContent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A fragment representing a list of Items.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ItemFragment</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Customize parameter argument names</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_COLUMN_COUNT</span> <span class="operator">=</span> <span class="string">&quot;column-count&quot;</span>;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Customize parameters</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">mColumnCount</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Mandatory empty constructor for the fragment manager to instantiate the</span></span><br><span class="line"><span class="comment">     * fragment (e.g. upon screen orientation changes).</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ItemFragment</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Customize parameter initialization</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unused&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ItemFragment <span class="title function_">newInstance</span><span class="params">(<span class="type">int</span> columnCount)</span> &#123;</span><br><span class="line">        <span class="type">ItemFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemFragment</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putInt(ARG_COLUMN_COUNT, columnCount);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mColumnCount = getArguments().getInt(ARG_COLUMN_COUNT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> inflater.inflate(R.layout.fragment_item_list, container, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the adapter</span></span><br><span class="line">        <span class="keyword">if</span> (view <span class="keyword">instanceof</span> RecyclerView) &#123;</span><br><span class="line">            <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> view.getContext();</span><br><span class="line">            <span class="type">RecyclerView</span> <span class="variable">recyclerView</span> <span class="operator">=</span> (RecyclerView) view;</span><br><span class="line">            <span class="keyword">if</span> (mColumnCount &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">                recyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(context));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                recyclerView.setLayoutManager(<span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>(context, mColumnCount));</span><br><span class="line">            &#125;</span><br><span class="line">            recyclerView.setAdapter(<span class="keyword">new</span> <span class="title class_">MyItemRecyclerViewAdapter</span>(PlaceholderContent.ITEMS));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MyItemRecyclerViewAdapter-java"><a href="#MyItemRecyclerViewAdapter-java" class="headerlink" title="MyItemRecyclerViewAdapter.java"></a>MyItemRecyclerViewAdapter.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.fragmentmangers.placeholder.PlaceholderContent.PlaceholderItem;</span><br><span class="line"><span class="keyword">import</span> a.b.c.fragmentmangers.databinding.FragmentItemBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> RecyclerView.Adapter&#125; that can display a &#123;<span class="doctag">@link</span> PlaceholderItem&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">TODO:</span> Replace the implementation with code for your data type.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyItemRecyclerViewAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;MyItemRecyclerViewAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;PlaceholderItem&gt; mValues;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyItemRecyclerViewAdapter</span><span class="params">(List&lt;PlaceholderItem&gt; items)</span> &#123;</span><br><span class="line">        mValues = items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(FragmentItemBinding.inflate(LayoutInflater.from(parent.getContext()), parent, <span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        holder.mItem = mValues.get(position);</span><br><span class="line">        holder.mIdView.setText(mValues.get(position).id);</span><br><span class="line">        holder.mContentView.setText(mValues.get(position).content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mValues.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> TextView mIdView;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> TextView mContentView;</span><br><span class="line">        <span class="keyword">public</span> PlaceholderItem mItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(FragmentItemBinding binding)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(binding.getRoot());</span><br><span class="line">            mIdView = binding.itemNumber;</span><br><span class="line">            mContentView = binding.content;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.toString() + <span class="string">&quot; &#x27;&quot;</span> + mContentView.getText() + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-2"><a href="#activity-main-xml-2" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;change&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;replace&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/framelayout&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00BCD4&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-blank1-xml-1"><a href="#fragment-blank1-xml-1" class="headerlink" title="fragment_blank1.xml"></a>fragment_blank1.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.BlankFragment1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> Update blank fragment layout --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-item-xml"><a href="#fragment-item-xml" class="headerlink" title="fragment_item.xml"></a>fragment_item.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/item_number&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-item-list-xml"><a href="#fragment-item-list-xml" class="headerlink" title="fragment_item_list.xml"></a>fragment_item_list.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/list&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.fragmentmangers.ItemFragment&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layoutManager</span>=<span class="string">&quot;LinearLayoutManager&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.ItemFragment&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:listitem</span>=<span class="string">&quot;@layout/fragment_item&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Activity与Fragment通信"><a href="#Activity与Fragment通信" class="headerlink" title="Activity与Fragment通信"></a>Activity与Fragment通信</h3><p><img src="/../image/Fragment4.png"></p><p>使用Bundle</p><h4 id="MainActivity-java-2"><a href="#MainActivity-java-2" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.btn:</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">            bundle.putString(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">            <span class="type">BlankFragment1</span> <span class="variable">bf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">            bf.setArguments(bundle);</span><br><span class="line">            replaceFragment(bf);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BlankFragment1-java-1"><a href="#BlankFragment1-java-1" class="headerlink" title="BlankFragment1.java"></a>BlankFragment1.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getArguments();</span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">    Log.i(<span class="string">&quot;lele&quot;</span>,string);</span><br><span class="line">    <span class="keyword">if</span>(getArguments()!=<span class="literal">null</span>)&#123;</span><br><span class="line">        mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">        mParam2 = getArguments().getString(ARG_PAEAM2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fragment动态添加与管理的总结"><a href="#fragment动态添加与管理的总结" class="headerlink" title="fragment动态添加与管理的总结"></a>fragment动态添加与管理的总结</h3><p><img src="/../image/Fragment5.png"></p><h3 id="Fragment与activity通信的接口方案"><a href="#Fragment与activity通信的接口方案" class="headerlink" title="Fragment与activity通信的接口方案"></a>Fragment与activity通信的接口方案</h3><ul><li>原生方案：Bundle</li><li>Java语言中类与类之间通信常用方案：接口</li></ul><h4 id="MainActivity-java-3"><a href="#MainActivity-java-3" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentTransaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> Button btn2;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        btn = findViewById(R.id.btn_2);</span><br><span class="line">        btn2.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn:</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                bundle.putString(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">                BlankFragment1(bundle);</span><br><span class="line">                bf.setFragmentCallback(<span class="keyword">new</span> <span class="title class_">IFragmentCallback</span>()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMsgToActivity</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="built_in">this</span>,msg,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> String <span class="title function_">getMsgFromActivity</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;hello, I am from MainActivity&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                                     </span><br><span class="line">                &#125;);</span><br><span class="line">                replaceFragment(bf);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> R.id.btn_2:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> <span class="title class_">ItemFragment</span>());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">replaceFragment</span><span class="params">(Fragment fragment)</span>&#123;</span><br><span class="line">        <span class="type">FragmentManager</span> <span class="variable">fragmentManager</span> <span class="operator">=</span> getSupportFragmentManager();</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">transaction</span> <span class="operator">=</span> fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.framelayout,fragment);</span><br><span class="line">        transaction.addToBackStack(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="IFragmentCallback-java"><a href="#IFragmentCallback-java" class="headerlink" title="IFragmentCallback.java"></a>IFragmentCallback.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IFragmentCallback</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sendMsgToActivity</span><span class="params">(String string)</span>;</span><br><span class="line">    String <span class="title function_">getMsgFromActivity</span><span class="params">(String msg)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BlankFragment1-java-2"><a href="#BlankFragment1-java-2" class="headerlink" title="BlankFragment1.java"></a>BlankFragment1.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A simple &#123;<span class="doctag">@link</span> Fragment&#125; subclass.</span></span><br><span class="line"><span class="comment"> * Use the &#123;<span class="doctag">@link</span> BlankFragment1#newInstance&#125; factory method to</span></span><br><span class="line"><span class="comment"> * create an instance of this fragment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></span><br><span class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM1</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM2</span> <span class="operator">=</span> <span class="string">&quot;param2&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></span><br><span class="line">    <span class="keyword">private</span> String mParam1;</span><br><span class="line">    <span class="keyword">private</span> String mParam2;</span><br><span class="line">    <span class="keyword">private</span> View rootview;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use this factory method to create a new instance of</span></span><br><span class="line"><span class="comment">     * this fragment using the provided parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment BlankFragment1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlankFragment1 <span class="title function_">newInstance</span><span class="params">(String param1, String param2)</span> &#123;</span><br><span class="line">        <span class="type">BlankFragment1</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_PARAM1, param1);</span><br><span class="line">        args.putString(ARG_PARAM2, param2);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getArguments();</span><br><span class="line">        <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">        Log.i(<span class="string">&quot;lele&quot;</span>,string);</span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">if</span>(rootview == <span class="literal">null</span>)&#123;</span><br><span class="line">            rootview = inflater.inflate(R.layout.fragment_blank1, container, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> rootview.findViewById(R.id.btn_3);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="comment">//fragmentCallback.sendMsgToActivity(&quot;hello, I`m from Fragment&quot;);</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> fragmentCallback.getMsgFromActivity(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">                Toast.makeText(BlankFragment1.<span class="built_in">this</span>.getContext(),message,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> rootview;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IFragmentCallback fragmentCallback;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFragmentCallback</span><span class="params">(IFragmentCallback callback)</span>&#123;</span><br><span class="line">        fragmentCallback = callback;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-3"><a href="#activity-main-xml-3" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;change&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;replace&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/framelayout&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00BCD4&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-blank-xml"><a href="#fragment-blank-xml" class="headerlink" title="fragment_blank.xml"></a>fragment_blank.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.BlankFragment1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> Update blank fragment layout --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;数据传递&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-item-xml-1"><a href="#fragment-item-xml-1" class="headerlink" title="fragment_item.xml"></a>fragment_item.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/item_number&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;@dimen/text_margin&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">&quot;?attr/textAppearanceListItem&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fragment生命周期"><a href="#Fragment生命周期" class="headerlink" title="Fragment生命周期"></a>Fragment生命周期</h3><p><img src="/../image/Fragment6.png"></p><p><img src="/../image/Fragment7.png"></p><p>onAttach()用来与Activity进行绑定，onCreate()对Bundle进行解析，onCreateView()进行ui进行解析，必须要重构的数据要在onResume()中获取，创建的时候从小到大，销毁的时候从大到小</p><p>加入些调试信息观察生命周期</p><h4 id="BlankFragment1-1"><a href="#BlankFragment1-1" class="headerlink" title="BlankFragment1"></a>BlankFragment1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.fragmentmangers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A simple &#123;<span class="doctag">@link</span> Fragment&#125; subclass.</span></span><br><span class="line"><span class="comment"> * Use the &#123;<span class="doctag">@link</span> BlankFragment1#newInstance&#125; factory method to</span></span><br><span class="line"><span class="comment"> * create an instance of this fragment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment1</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename parameter arguments, choose names that match</span></span><br><span class="line">    <span class="comment">// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM1</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_PARAM2</span> <span class="operator">=</span> <span class="string">&quot;param2&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;BlankFragment1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types of parameters</span></span><br><span class="line">    <span class="keyword">private</span> String mParam1;</span><br><span class="line">    <span class="keyword">private</span> String mParam2;</span><br><span class="line">    <span class="keyword">private</span> View rootview;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Required empty public constructor</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use this factory method to create a new instance of</span></span><br><span class="line"><span class="comment">     * this fragment using the provided parameters.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param1 Parameter 1.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param2 Parameter 2.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new instance of fragment BlankFragment1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Rename and change types and number of parameters</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlankFragment1 <span class="title function_">newInstance</span><span class="params">(String param1, String param2)</span> &#123;</span><br><span class="line">        <span class="type">BlankFragment1</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment1</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_PARAM1, param1);</span><br><span class="line">        args.putString(ARG_PARAM2, param2);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAttach</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onAttach(context);</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;onAttach: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getArguments();</span><br><span class="line">        <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> bundle.getString(<span class="string">&quot;lele&quot;</span>);</span><br><span class="line">        Log.i(<span class="string">&quot;lele&quot;</span>,string);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (getArguments() != <span class="literal">null</span>) &#123;</span><br><span class="line">            mParam1 = getArguments().getString(ARG_PARAM1);</span><br><span class="line">            mParam2 = getArguments().getString(ARG_PARAM2);</span><br><span class="line">        &#125;</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onCrate: &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line">        <span class="keyword">if</span>(rootview == <span class="literal">null</span>)&#123;</span><br><span class="line">            rootview = inflater.inflate(R.layout.frament_blank1,container,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> rootview.findViewById(R.id.btn_3);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="comment">//fragmentCallback.sendMsgToActivity(&quot;hello, I`m from Fragment&quot;);</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> fragmentCallback.getMsgFromActivity(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">                Toast.makeText(BlankFragment1.<span class="built_in">this</span>.getContext(),message,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onCreateView:&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> rootview;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onResume:&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPause</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onPause();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onPause&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onStop();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onStop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroyView();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onDestroView&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;onDestory&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IFragmentCallback fragmentCallback;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFragmentCallback</span><span class="params">(IFragmentCallback callback)</span>&#123;</span><br><span class="line">        fragmentCallback = callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fragment生命周期注意事项‘"><a href="#Fragment生命周期注意事项‘" class="headerlink" title="Fragment生命周期注意事项‘"></a>Fragment生命周期注意事项‘</h3><p><img src="/../image/Fragment8.png"></p><h3 id="ViewPager2基本应用"><a href="#ViewPager2基本应用" class="headerlink" title="ViewPager2基本应用"></a>ViewPager2基本应用</h3><h4 id="MainActivity-java-4"><a href="#MainActivity-java-4" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.viewpagerandfragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager2.widget.ViewPager2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        </span><br><span class="line">        <span class="type">ViewPager2</span> <span class="variable">viewPager</span> <span class="operator">=</span> findViewById(R.id.viewPager);</span><br><span class="line">        <span class="type">ViewPagerAdapter</span> <span class="variable">viewPagerAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ViewPagerAdapter</span>();</span><br><span class="line">        viewPager.setAdapter(viewPagerAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ViewPagerAdaper-java"><a href="#ViewPagerAdaper-java" class="headerlink" title="ViewPagerAdaper.java"></a>ViewPagerAdaper.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.viewpagerandfragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.constraintlayout.widget.ConstraintLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;ViewPagerAdapter.ViewPagerViewHolder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; titles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    ViewPagerAdapter()&#123;</span><br><span class="line">        titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">         titles.add(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;lelel&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewPagerViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent,<span class="type">int</span> viewType)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewPagerViewHolder</span>(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_pager,parent,flase));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*详细解释</span></span><br><span class="line"><span class="comment">LayoutInflater.from(parent.getContext())</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">LayoutInflater 是一个 Android 类，用于从 XML 布局文件中创建视图对象。from(parent.getContext()) 获取一个 LayoutInflater 实例，使用的是 parent 视图组的上下文 (Context)。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">通过 parent.getContext() 获取 Context，因为 LayoutInflater 需要一个 Context 对象来访问资源并膨胀布局。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">.inflate(R.layout.item_pager, parent, false)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">inflate 方法用于将 XML 布局文件转换成实际的视图对象。这里，它将 R.layout.item_pager 布局文件中的视图膨胀成一个 View 对象。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">R.layout.item_pager 是布局资源的 ID，代表你要膨胀的布局文件。item_pager.xml 中定义的视图将被加载到内存中。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">parent 是 ViewGroup，它指定了布局的父视图组。在膨胀布局时，将这个 parent 传递进去可以确保正确设置视图的布局参数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">false 表示膨胀后的视图不会立即被附加到 parent 上。将其设置为 false 可以防止布局在膨胀时立刻附加到父视图，这样通常可以更好地控制视图的布局过程。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">new ViewPagerViewHolder(...)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">使用膨胀出来的 View 对象来创建一个新的 ViewPagerViewHolder 实例。ViewPagerViewHolder 是你定义的 RecyclerView.ViewHolder 子类，用于在 RecyclerView 中持有和管理视图。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在 ViewPagerViewHolder 的构造函数中，传入膨胀后的视图（itemView）用于初始化持有者的视图引用。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">作用</span></span><br><span class="line"><span class="comment">这段代码的整体作用是创建一个新的 ViewPagerViewHolder 实例，并将其与通过 item_pager.xml 膨胀出的视图相关联。ViewPagerViewHolder 负责持有和管理 RecyclerView 中每个项的视图。在 onCreateViewHolder 方法中，你使用这段代码来为 RecyclerView 创建并返回一个新的视图持有者对象。</span></span><br><span class="line"><span class="comment">总结</span></span><br><span class="line"><span class="comment">膨胀布局：从 XML 布局文件 item_pager.xml 中膨胀出一个视图。</span></span><br><span class="line"><span class="comment">创建持有者：使用膨胀出的视图创建一个 ViewPagerViewHolder 实例。</span></span><br><span class="line"><span class="comment">返回持有者：将创建的视图持有者返回给 RecyclerView。</span></span><br><span class="line"><span class="comment">这样，RecyclerView 就可以使用这个视图持有者来显示和管理列表项。*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NoNull</span> viewPagerViewHold holder,<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        holder.mTv.setText(tiltles.get(positon));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Ovrride</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewPagerViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecycleView</span>.ViewHolder&#123;</span><br><span class="line">        TextView mTv;</span><br><span class="line">        ConstraintLayout mContainer;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewPagerViewHolder</span><span class="params">(<span class="meta">@NoNull</span> View itemView)</span>&#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            </span><br><span class="line">            mContainer = itemView.findViewById(R.id.container);</span><br><span class="line">            mTv = itemView.findViewById(R.id.tvTitle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-4"><a href="#activity-main-xml-4" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager2.widget.ViewPager2</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/viewPager&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#03A9F4&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.viewpager2.widget.ViewPager2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="item-pager-xml"><a href="#item-pager-xml" class="headerlink" title="item_pager.xml"></a>item_pager.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvTitle&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;lele&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ViewPager2页面的切换"><a href="#ViewPager2页面的切换" class="headerlink" title="ViewPager2页面的切换"></a>ViewPager2页面的切换</h3><p>在color.xml文件中定义颜色</p><h4 id="color-xml"><a href="#color-xml" class="headerlink" title="color.xml"></a>color.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;black&quot;</span>&gt;</span>#FF000000<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;white&quot;</span>&gt;</span>#FFFFFFFF<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;red&quot;</span>&gt;</span>#FF4411<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>#6200EE<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>#03DAC5<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>#3700B3<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="ViewPagerAdapter-java"><a href="#ViewPagerAdapter-java" class="headerlink" title="ViewPagerAdapter.java"></a>ViewPagerAdapter.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.viewpagerandfragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.constraintlayout.widget.ConstraintLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecycleView</span>.Adapter&lt;ViewPagerAdater.ViewPagerViewHolder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; titles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; colors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    ViewPagerAdapter()&#123;</span><br><span class="line">                titles.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;8&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;9&quot;</span>);</span><br><span class="line">        titles.add(<span class="string">&quot;10&quot;</span>);</span><br><span class="line"></span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.colorAccent);</span><br><span class="line">        colors.add(R.color.black);</span><br><span class="line">        colors.add(R.color.red);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.colorPrimaryDark);</span><br><span class="line">        colors.add(R.color.white);</span><br><span class="line">        colors.add(R.color.colorAccent);</span><br><span class="line">        colors.add(R.color.red);</span><br><span class="line">        colors.add(R.color.colorAccent);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewPagerViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGruop parent,<span class="type">int</span> viewType)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewPagerViewHolder</span>(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_pager,parent,<span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewPagerViewHolder holder,<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        holder.mTv.setText(titles.get(position));</span><br><span class="line">        holder.mContainer.setBackgroumdResource(colors.get(position));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewPagerViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViwHolder&#123;</span><br><span class="line">        TextView mTv;</span><br><span class="line">        ConstrainLayout mContainer;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewPagerViewHolder</span><span class="params">(<span class="meta">@NonNUll</span> View itemView)</span>&#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            </span><br><span class="line">            mContainer = itemView.findViewById(R.id.container);</span><br><span class="line">            mTv = itemView.finViewById(R.id.tvTitle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fragment与ViewPager合集"><a href="#Fragment与ViewPager合集" class="headerlink" title="Fragment与ViewPager合集"></a>Fragment与ViewPager合集</h3><h4 id="MainActivity-java-5"><a href="#MainActivity-java-5" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.wechatpage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager2.widget.ViewPager2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    ViewPager2 viewPager;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ininPager();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initPager</span><span class="params">()</span>&#123;</span><br><span class="line">        viewPager = findViewById(R.id.id_viewpager);</span><br><span class="line">        ArrayList&lt;Fragment&gt; fragment=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;微信聊天&quot;</span>));</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;通讯录&quot;</span>));</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;聊天&quot;</span>));</span><br><span class="line">        fragments.add(BlankFragment.newInstance(<span class="string">&quot;发现&quot;</span>));</span><br><span class="line">        fragments.add(BlankFrament.newInstance(<span class="string">&quot;我&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="type">MyFragmentPagerAdapter</span> <span class="variable">pagerAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyFragmentPagerAdapter</span>(getSupportFragment(),getLifecycle(),fragments);</span><br><span class="line">        viewPager.setAdapter(pagerAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MyFragmentPagerAdapter-java"><a href="#MyFragmentPagerAdapter-java" class="headerlink" title="MyFragmentPagerAdapter.java"></a>MyFragmentPagerAdapter.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFragmentPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">FragmentStateAdapter</span>&#123;</span><br><span class="line">    List&lt;Fragment&gt;fragmenList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFragmentPagerAdapter</span><span class="params">(<span class="meta">@NonNull</span> FragmentManager fragmentManager,<span class="meta">@NonNull</span> Lifecycle,List&lt;Fragment&gt;fragments)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(fragmentManager,lifecycle);</span><br><span class="line">        fragmetnList=fragments;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Fragment <span class="title function_">createFragment</span><span class="params">(<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fragmentList.get(position);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fragmentList.size(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BlankFragment-java"><a href="#BlankFragment-java" class="headerlink" title="BlankFragment.java"></a>BlankFragment.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlankFragment</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span>&#123;</span><br><span class="line">    View rootView;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ARG_TEXT</span> <span class="operator">=</span> <span class="string">&quot;param1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String mTextString;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BlankFragment</span><span class="params">()</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BlanFragment <span class="title function_">newInstance</span><span class="params">(String param1)</span>&#123;</span><br><span class="line">        <span class="type">BlankFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlankFragment</span>();</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(ARG_TEXT,param1);</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span>(getArguments!=<span class="literal">null</span>)&#123;</span><br><span class="line">            mTextString = getArguments().getString(ARG_TEXT);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(rootView = <span class="literal">null</span>)&#123;</span><br><span class="line">            rootView = inflater.inflate(R.layout.fragment_blank,container,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        initView();</span><br><span class="line">        <span class="keyword">return</span> rootView;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> rootView.findViewById(R.id.text);</span><br><span class="line">        textView.seetText(mTextString);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main-xml-5"><a href="#activity-main-xml-5" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h4><p>注意：orientation要设置，否则无法正常显示</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager2.widget.ViewPager2</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/id_viewpager&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="fragment-blank-xml-1"><a href="#fragment-blank-xml-1" class="headerlink" title="fragment_blank.xml"></a>fragment_blank.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.BlankFragment&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- <span class="doctag">TODO:</span> Update blank fragment layout --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;36sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/text&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/hello_blank_fragment&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ViewPager-fragment模仿微信页面"><a href="#ViewPager-fragment模仿微信页面" class="headerlink" title="ViewPager+fragment模仿微信页面"></a>ViewPager+fragment模仿微信页面</h3><p><strong><code>android:layout_gravity</code></strong>: 控制视图相对于其父视图的位置。</p><p><strong><code>android:gravity</code></strong>: 控制视图内部内容的位置和对齐方式。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ViewPager</title>
      <link href="/2024/09/03/ViewPager/"/>
      <url>/2024/09/03/ViewPager/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/ViewPager.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.viewpager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.ViewPager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">LayoutInflater</span> <span class="variable">lf</span> <span class="operator">=</span> getLayoutInflater().from(<span class="built_in">this</span>);<span class="comment">//getLayoutInflater().from(this) 获取 LayoutInflater 实例，用于动态加载布局文件。</span></span><br><span class="line">        <span class="type">View</span> <span class="variable">view1</span> <span class="operator">=</span> lf.inflate(R.layout.layout1,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">View</span> <span class="variable">view2</span> <span class="operator">=</span> lf.inflate(R.layout.layout2,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">View</span> <span class="variable">view3</span> <span class="operator">=</span> lf.inflate(R.layout.layout3,<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//inflate(R.layout.layout1, null) 从布局文件 layout1.xml 中加载视图对象 view1。同样的操作也用于 layout2 和 layout3，生成视图对象 view2 和 view3。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;View&gt; viewList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        viewList.add(view1);</span><br><span class="line">        viewList.add(view2);</span><br><span class="line">        viewList.add(view3);</span><br><span class="line"></span><br><span class="line">        <span class="type">ViewPager</span> <span class="variable">viewPager</span> <span class="operator">=</span> findViewById(R.id.vp);</span><br><span class="line">        <span class="type">MyAdapter</span> <span class="variable">myAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAdapter</span>(viewList);</span><br><span class="line">        viewPager.setAdapter(myAdapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myAdapter</span><br><span class="line"><span class="keyword">package</span> a.b.c.viewpager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.PagerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdapter</span> <span class="keyword">extends</span> <span class="title class_">PagerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;View&gt; mListView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">instantiateItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        container.addView(mListView.get(position),<span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*索引参数的作用</span></span><br><span class="line"><span class="comment">索引为 0：表示将视图添加到父视图的最前面（即在所有其他视图之前）。在大多数情况下，0 作为索引是常见的做法，特别是在 ViewPager 中，因为 ViewPager 通常只包含一个子视图，而不会有其他视图在其上方或下方。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">索引为其他值：如果使用不同的索引值，视图将被添加到父视图中指定的索引位置。例如，如果索引为 1，视图将被添加到第二个位置（如果父视图已经有其他视图）。*/</span></span><br><span class="line">        <span class="keyword">return</span> mListView.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAdapter</span><span class="params">(List&lt;View&gt; mListView)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.mListView = mListView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mListView.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isViewFromObject</span><span class="params">(<span class="meta">@NonNull</span> View view, <span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> view == object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position, <span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        container.removeView(mListView.get(position));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager.widget.ViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/vp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff00ffff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ffff00ff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff0000ff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout3&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#ff0000ff&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;layout3&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单位和尺寸</title>
      <link href="/2024/09/02/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B8/"/>
      <url>/2024/09/02/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B8/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B81.png"></p><p><img src="/../image/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B82.png"></p><p><img src="/../image/%E5%8D%95%E4%BD%8D%E5%92%8C%E5%B0%BA%E5%AF%B83.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.layoutparams;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//setContentView(R.layout.activity_main);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">LinearLayout</span> <span class="variable">linearLayout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayout</span>(<span class="built_in">this</span>);</span><br><span class="line">        LinearLayout.<span class="type">LayoutParams</span> <span class="variable">layoutParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayout</span>.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,</span><br><span class="line">                ViewGroup.LayoutParams.MATCH_PARENT);</span><br><span class="line">        linearLayout.setLayoutParams(layoutParams);</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextView</span>(<span class="built_in">this</span>);</span><br><span class="line">        textView.setText(<span class="string">&quot;我是文本&quot;</span>);</span><br><span class="line">        textView.setBackgroundColor(<span class="number">0xffff0000</span>);</span><br><span class="line">        LinearLayout.<span class="type">LayoutParams</span> <span class="variable">textLayoutParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayout</span>.LayoutParams(<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        textView.setLayoutParams(textLayoutParams);</span><br><span class="line">        linearLayout.addView(textView);</span><br><span class="line">        setContentView(linearLayout);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>动画</title>
      <link href="/2024/09/02/%E5%8A%A8%E7%94%BB/"/>
      <url>/2024/09/02/%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<p><img src="/../image/%E5%8A%A8%E7%94%BB1.png"></p><h2 id="逐帧动画"><a href="#逐帧动画" class="headerlink" title="逐帧动画"></a>逐帧动画</h2><p>定义：把几张图片快速播放形成的一个效果</p><p><img src="/../image/%E5%8A%A8%E7%94%BB2.png"></p><p><img src="/../image/%E5%8A%A8%E7%94%BB3.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.lele_anim;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.AnimationDrawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savadInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstance);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        <span class="type">RelativeLayout</span> <span class="variable">relativeLaout</span> <span class="operator">=</span> findViewById(R.id.rl);</span><br><span class="line">        </span><br><span class="line">        <span class="type">AnimationDrawable</span> <span class="variable">anim</span> <span class="operator">=</span> (AnimationDrawable) relativeLayoutl.getBackground();</span><br><span class="line">        relativeLayout.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCLick</span><span class="params">(View view)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                    anim.start();</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    anim.stop();</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/frame&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/rl&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">   </span><br><span class="line">frame</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">animation-list</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/tx&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;120&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/bg&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;120&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">animation-list</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="补间动画"><a href="#补间动画" class="headerlink" title="补间动画"></a>补间动画</h2><p>定义：我们设置一个初始值以及结束值，然后设置一个变化时间，安卓会自动给我们补全</p><p><img src="/../image/%E5%8A%A8%E7%94%BB4.png"></p><p>创建一个文件夹</p><p><img src="/../image/%E5%B8%83%E5%B1%8011.png"></p><p>new 一个Animation Resource File</p><p><img src="/../image/%E5%B8%83%E5%B1%8012.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.animtweened;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.AnimationDrawable;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Animation;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.AnimationUtils;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">ImageView</span> <span class="variable">imageView</span> <span class="operator">=</span> findViewById(R.id.iv);</span><br><span class="line"></span><br><span class="line">        imageView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="comment">//通过加载xml动画设置文件来创建一个Animation对象</span></span><br><span class="line">                透明度</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.alpha);</span><br><span class="line">   旋转</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.rotate);</span><br><span class="line">                缩放</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.scale);</span><br><span class="line">                平移</span><br><span class="line">                <span class="type">Animation</span> <span class="variable">animation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(MainActivity.<span class="built_in">this</span>,R.anim.translate);</span><br><span class="line">                imageView.startAnimation(animation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">alpha.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alpha</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromAlpha</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toAlpha</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;2000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">rotate.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rotate</span> <span class="attr">android:fromDegrees</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toDegrees</span>=<span class="string">&quot;360&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;2000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">scale.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scale</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;2000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXScale</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYScale</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotX</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:pivotY</span>=<span class="string">&quot;50%&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXScale</span>=<span class="string">&quot;0.5&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYScale</span>=<span class="string">&quot;0.5&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line">translate.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">translate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromXDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fromYDelta</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toXDelta</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:toYDelta</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性动画"><a href="#属性动画" class="headerlink" title="属性动画"></a>属性动画</h2><p><img src="/../image/%E5%8A%A8%E7%94%BB6.png"></p><p><img src="/../image/%E5%8A%A8%E7%94%BB7.png"></p><p><img src="/../image/%E5%8A%A8%E7%94%BB8.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.animproperty;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.animation.Animator;</span><br><span class="line"><span class="keyword">import</span> android.animation.AnimatorListenerAdapter;</span><br><span class="line"><span class="keyword">import</span> android.animation.ObjectAnimator;</span><br><span class="line"><span class="keyword">import</span> android.animation.ValueAnimator;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">ValueAnimator</span> <span class="variable">valueAnimator</span> <span class="operator">=</span> ValueAnimator.ofFloat(<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line">        valueAnimator.setDuration(<span class="number">2000</span>);</span><br><span class="line">        valueAnimator.addUpdateListener(<span class="keyword">new</span> <span class="title class_">ValueAnimator</span>.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationUpdate</span><span class="params">(<span class="meta">@NonNull</span> ValueAnimator valueAnimator)</span> &#123;</span><br><span class="line">                <span class="type">float</span> <span class="variable">value</span> <span class="operator">=</span> (<span class="type">float</span>) valueAnimator.getAnimatedValue();</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onAnimationUpdate: &quot;</span> + value );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        valueAnimator.start();</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> findViewById(R.id.tv);</span><br><span class="line">        <span class="type">ObjectAnimator</span> <span class="variable">objectAnimator</span> <span class="operator">=</span> ObjectAnimator.ofFloat(textView,<span class="string">&quot;alpha&quot;</span>,<span class="number">0f</span>,<span class="number">1f</span>);</span><br><span class="line">        objectAnimator.setDuration(<span class="number">40000</span>);</span><br><span class="line">        objectAnimator.start();</span><br><span class="line">        objectAnimator.addListener(<span class="keyword">new</span> <span class="title class_">Animator</span>.AnimatorListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationStart</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationEnd</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationCancel</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationRepeat</span><span class="params">(<span class="meta">@NonNull</span> Animator animator)</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        objectAnimator.addListener(<span class="keyword">new</span> <span class="title class_">AnimatorListenerAdapter</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAnimationStart</span><span class="params">(Animator animation)</span> &#123;</span><br><span class="line">                <span class="built_in">super</span>.onAnimationStart(animation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ListView and RecyclerView</title>
      <link href="/2024/09/01/ListView-and-RecyclerView/"/>
      <url>/2024/09/01/ListView-and-RecyclerView/</url>
      
        <content type="html"><![CDATA[<h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.lelelistview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savaInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">100</span>；i++)&#123;</span><br><span class="line">            <span class="type">Bean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bean</span>();</span><br><span class="line">            bean.setName(<span class="string">&quot;lele&quot;</span>+i);</span><br><span class="line">            data.add(bean);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">ListView</span> <span class="variable">listView</span> <span class="operator">=</span> findViewById(R.id.lv);</span><br><span class="line">        listView.setAdapt(<span class="keyword">new</span> <span class="title class_">MyAdapter</span>(data,<span class="built_in">this</span>));</span><br><span class="line">        <span class="comment">/*setAdapter是ListView的一个方法，用于将适配器(Adapter)设置到ListView上，适配器负责将数据绑定到ListView的视图中。适配器从数据源获取数据，并将每项数据呈现为ListView中的每一个试图项。调用setAdapter后，ListView会通过适配器来管理何显示数据项。*/</span></span><br><span class="line">        listView.setOnItemClickListenner(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemClickListener())&#123;</span><br><span class="line">            <span class="meta">@override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="type">int</span> i, <span class="type">long</span> l)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onItemClick:&quot;</span> + i );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bean</span><br><span class="line"><span class="keyword">package</span> a.b.c.lelelistview;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Bean</span> &#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyAdapter</span><br><span class="line">  </span><br><span class="line"><span class="keyword">package</span> a.b.c.lelelistview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAdapter</span><span class="params">(List&lt;Bean&gt; data, Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> i, View view, View ViewGroup viewGroup)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(view == <span class="literal">null</span>)&#123;</span><br><span class="line">            view = LayoutInflater.from(context).inflate(R.layout.list_item,viewGroup,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">textView</span> <span class="operator">=</span> view.findViewById(R.id.tv);</span><br><span class="line">        tevtView.setText(data.get(i).getName());</span><br><span class="line">        </span><br><span class="line">        Log.e(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;getView: &quot;</span>+i);</span><br><span class="line">        <span class="keyword">return</span> view</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">list_item.xml</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">activity_main.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/lv&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="优化View-getView方法"><a href="#优化View-getView方法" class="headerlink" title="优化View getView方法"></a>优化View getView方法</h3><p><strong>性能优化</strong>：</p><ul><li><strong>避免重复查找</strong>：<code>findViewById</code> 是一个性能开销较大的操作。通过缓存视图的引用在 <code>ViewHolder</code> 中，可以避免在每次调用 <code>getView</code> 时重复查找视图。</li><li><strong>提高效率</strong>：<code>ViewHolder</code> 模式可以减少视图查找操作的次数，从而提高列表项的渲染速度和整体性能。</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> i, View view, ViewGroup viewGroup)</span>&#123;</span><br><span class="line">    ViewHolder viewHolder;</span><br><span class="line">    <span class="keyword">if</span>(view == <span class="literal">null</span>)&#123;</span><br><span class="line">        viewHolder = <span class="keyword">new</span> <span class="title class_">ViewHolder</span>();</span><br><span class="line">        view = LayoutInflater.from(context).inflate(R.layout.list_item,viewGroup,<span class="literal">false</span>);</span><br><span class="line">        viewHolder.testView = view.findViewById(R.id.tv);</span><br><span class="line">        view.setTag(viewHolder);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        viewHolder = (ViewHolder) view.getTag();</span><br><span class="line">    &#125;</span><br><span class="line">    viewHolder.textView.setText(data.get(i).getName());</span><br><span class="line">    </span><br><span class="line">    Log.e(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;getView:&quot;</span>+i);</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span>&#123;</span><br><span class="line">    TextView textView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h2><p><img src="/../image/cyclerview.png"></p><p>使用时要先导入依赖包</p><p><img src="/../image/recyclerview2.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line">    <span class="keyword">package</span> a.b.c.myrecycleview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.GridLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.StaggeredGridLayoutManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)&#123;</span><br><span class="line">            <span class="type">Bean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bean</span>();</span><br><span class="line">            bean.setName(<span class="string">&quot;lele&quot;</span> + i);</span><br><span class="line">            data.add(bean);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">RecyclerView</span> <span class="variable">recyclerView</span> <span class="operator">=</span> findViewById(R.id.rv);</span><br><span class="line">          <span class="comment">/*设置布局管理器：</span></span><br><span class="line"><span class="comment">LinearLayoutManager：RecyclerView 的布局管理器，用于定义列表项的排列方式。这里使用 LinearLayoutManager，它将列表项垂直排列。</span></span><br><span class="line"><span class="comment">recyclerView.setLayoutManager(linearLayoutManager);：将 LinearLayoutManager 设置为 RecyclerView 的布局管理器。*/</span></span><br><span class="line">        <span class="comment">//第一种</span></span><br><span class="line">        <span class="type">LinearLayoutManager</span> <span class="variable">linearLayoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(<span class="built_in">this</span>);</span><br><span class="line">        recyclerView.setLayoutManager(linearLayoutManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二种</span></span><br><span class="line">        <span class="type">GridLayoutManager</span> <span class="variable">gridLayoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GridLayoutManager</span>(<span class="built_in">this</span>, <span class="number">3</span>);</span><br><span class="line">        recyclerView.setLayoutManager(gridLayoutManager);</span><br><span class="line">        <span class="comment">//第三种</span></span><br><span class="line">        <span class="type">StaggeredGridLayoutManager</span> <span class="variable">staggeredGridLayoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StaggeredGridLayoutManager</span>(<span class="number">3</span>, LinearLayout.VERTICAL);</span><br><span class="line">        recyclerView.setLayoutManager(staggeredGridLayoutManager);</span><br><span class="line">        <span class="type">MyAdapter</span> <span class="variable">myAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAdapter</span>(data,<span class="built_in">this</span>);</span><br><span class="line">        recyclerView.setAdapter(myAdapter);</span><br><span class="line"></span><br><span class="line">        myAdapter.setRecyclerItemClickListener(<span class="keyword">new</span> <span class="title class_">MyAdapter</span>.OnRecyclerItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onRecyclerItemClick: &quot;</span> + position );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyAdapter</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">package</span> a.b.c.myrecycleview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;MyAdapter.MyViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Bean&gt; data;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MyAdapter.MyViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> View.inflate(context,R.layout.recycleview_item,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyViewHolder</span>(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> MyAdapter.MyViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        holder.tv.setText(data.get(position).getName());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data == <span class="literal">null</span>?<span class="number">0</span>:data.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">        <span class="keyword">private</span> TextView tv;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            tv = itemView.findViewById(R.id.tv);</span><br><span class="line">            itemView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(mOnItemClickListener!=<span class="literal">null</span>)&#123;</span><br><span class="line">                        mOnItemClickListener.onRecyclerItemClick(getAdapterPosition());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAdapter</span><span class="params">(List&lt;Bean&gt; data, Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnRecyclerItemClickListener</span>&#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnRecyclerItemClickListener mOnItemClickListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRecyclerItemClickListener</span><span class="params">(OnRecyclerItemClickListener listener)</span>&#123;</span><br><span class="line">        mOnItemClickListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/rv&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">recycleview_item</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">没问题，我们再一步步解释一下点击 RecyclerView 中项的事件是如何处理的。假设你的 RecyclerView 列表项点击后，在 MainActivity 中有代码来处理这个事件，我们将详细拆解整个过程。</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 用户点击 RecyclerView 中的项</span><br><span class="line">当用户点击 RecyclerView 中的一个项时，系统会触发这个项的点击事件。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 点击事件传递到 ViewHolder</span><br><span class="line">在 MyAdapter 中，你有一个 ViewHolder 类，它代表 RecyclerView 中的每一个项。ViewHolder 的构造函数中设置了点击事件监听器：</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">复制代码</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(itemView);</span><br><span class="line">        tv = itemView.findViewById(R.id.tv);</span><br><span class="line">        itemView.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mOnItemClickListener != <span class="literal">null</span>) &#123;</span><br><span class="line">                    mOnItemClickListener.onRecyclerItemClick(getAdapterPosition());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">解释：</span><br><span class="line">itemView.setOnClickListener：这里为每个 RecyclerView 项的 itemView 设置了点击监听器。</span><br><span class="line">getAdapterPosition()：这个方法返回当前项在适配器中的位置（即点击了哪个项）。</span><br><span class="line">mOnItemClickListener.onRecyclerItemClick(getAdapterPosition())：这个方法会被调用，前提是 mOnItemClickListener 不为 <span class="literal">null</span>。</span><br><span class="line"><span class="number">3.</span> 适配器中的监听器</span><br><span class="line">mOnItemClickListener 是在 MyAdapter 类中定义的一个接口，允许你在外部设置点击事件的处理逻辑。你在 MainActivity 中实现了这个接口：</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">复制代码</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnRecyclerItemClickListener</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">4.</span> 设置监听器</span><br><span class="line">在 MainActivity 中，你创建了一个 MyAdapter 实例，并设置了点击事件的监听器：</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">复制代码</span><br><span class="line"><span class="type">MyAdapter</span> <span class="variable">myAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAdapter</span>(data, <span class="built_in">this</span>);</span><br><span class="line">myAdapter.setRecyclerItemClickListener(<span class="keyword">new</span> <span class="title class_">MyAdapter</span>.OnRecyclerItemClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRecyclerItemClick</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onRecyclerItemClick: &quot;</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">解释：</span><br><span class="line">setRecyclerItemClickListener：这个方法将 MainActivity 中的监听器实现赋值给 MyAdapter 中的 mOnItemClickListener。</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">MyAdapter</span>.OnRecyclerItemClickListener()：创建了一个匿名内部类，它实现了 OnRecyclerItemClickListener 接口，并定义了点击事件的具体处理逻辑（这里是打印日志）。</span><br><span class="line"><span class="number">5.</span> 事件处理流程</span><br><span class="line">当用户点击某个 RecyclerView 项时，事件处理流程如下：</span><br><span class="line"></span><br><span class="line">触发点击事件：用户点击 RecyclerView 中的一个项。</span><br><span class="line">ViewHolder 中处理点击事件：</span><br><span class="line">itemView 的点击事件触发了 View.OnClickListener 中的 onClick 方法。</span><br><span class="line">onClick 方法检查 mOnItemClickListener 是否为 <span class="literal">null</span>。如果不是 <span class="literal">null</span>，调用 mOnItemClickListener.onRecyclerItemClick(getAdapterPosition())。</span><br><span class="line">调用 MainActivity 中的点击事件处理方法：</span><br><span class="line">mOnItemClickListener 实际上是 MainActivity 中设置的具体实现。因此，onRecyclerItemClick(<span class="type">int</span> position) 方法会被调用，position 是被点击项的位置。</span><br><span class="line">这会在 MainActivity 中执行你定义的点击事件处理逻辑，例如打印日志。</span><br><span class="line">为什么 mOnItemClickListener 不是 <span class="literal">null</span></span><br><span class="line">在 MainActivity 中，你通过调用 setRecyclerItemClickListener 方法并传递了一个实现了 OnRecyclerItemClickListener 接口的对象来初始化 mOnItemClickListener。</span><br><span class="line">因此，当点击事件发生时，mOnItemClickListener 不为 <span class="literal">null</span>，能够正确调用 onRecyclerItemClick 方法。</span><br><span class="line">总结</span><br><span class="line">用户点击 RecyclerView 的项。</span><br><span class="line">ViewHolder 的点击事件监听器触发，并检查 mOnItemClickListener。</span><br><span class="line">mOnItemClickListener 调用 MainActivity 中定义的点击事件处理逻辑。</span><br><span class="line">MainActivity 中的 onRecyclerItemClick 方法执行，处理点击事件。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android布局</title>
      <link href="/2024/08/31/Android%E5%B8%83%E5%B1%80/"/>
      <url>/2024/08/31/Android%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="LinearLayout"><a href="#LinearLayout" class="headerlink" title="LinearLayout"></a>LinearLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%801.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffffff&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000ff&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="RelativeLayout"><a href="#RelativeLayout" class="headerlink" title="RelativeLayout"></a>RelativeLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%803.png"></p><p><img src="/../image/%E5%B8%83%E5%B1%804.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rl1&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="FrameLayout"><a href="#FrameLayout" class="headerlink" title="FrameLayout"></a>FrameLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%805.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foreground</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foregroundGravity</span>=<span class="string">&quot;right|bottom&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00ff00&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000ff&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="TableLayout"><a href="#TableLayout" class="headerlink" title="TableLayout"></a>TableLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%806.png"></p><p>注意：要有空间剩余时拉伸才有效，有控件超出空间时，收缩才有效。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:collapseColumns</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:stretchColumns</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shrinkColumns</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第三个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第四个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第三个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第四个&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_column</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_span</span>=<span class="string">&quot;23&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="GridLayout"><a href="#GridLayout" class="headerlink" title="GridLayout"></a>GridLayout</h2><p><img src="/../image/%E5%B8%83%E5%B1%809.png"></p><p><img src="/../image/%E5%B8%83%E5%B1%8010.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridLayout</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第一个&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第二个&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第三个&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;第四个&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ConstrainLayout"><a href="#ConstrainLayout" class="headerlink" title="ConstrainLayout"></a>ConstrainLayout</h2><p>直接在Design界面进行操作就行了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android控件</title>
      <link href="/2024/08/29/Android%E6%8E%A7%E4%BB%B6/"/>
      <url>/2024/08/29/Android%E6%8E%A7%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2><h3 id="基础属性详解"><a href="#基础属性详解" class="headerlink" title="基础属性详解"></a>基础属性详解</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B61.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#CDDC39&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">&quot;normal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;lele&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>string这种使用方式不是规范的，规范的使用方式为，在app&#x2F;src&#x2F;main&#x2F;res&#x2F;values&#x2F;strings.xml下添加</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>AndroidBasis<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;tv_one&quot;</span>&gt;</span>lele<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再以这样的方式使用</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:text=&quot;@string/tv_one&quot;</span><br></pre></td></tr></table></figure><p>color有8位数字组成，前两位代表透明度，后六位分别代表红绿蓝的程度</p><h3 id="带阴影的TextView"><a href="#带阴影的TextView" class="headerlink" title="带阴影的TextView"></a>带阴影的TextView</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B62.png"></p><p>为了使效果明显去掉背景颜色</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;444dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;848dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowColor</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowRadius</span>=<span class="string">&quot;3.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDx</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDy</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">&quot;normal&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现跑马灯效果的TextView"><a href="#实现跑马灯效果的TextView" class="headerlink" title="实现跑马灯效果的TextView"></a>实现跑马灯效果的TextView</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B63.png"></p><p>基本设置</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;444dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;848dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ellipsize</span>=<span class="string">&quot;marquee&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowColor</span>=<span class="string">&quot;#2196F3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDx</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowDy</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowRadius</span>=<span class="string">&quot;3.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">&quot;normal&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="三种方式使TextView获取焦点"><a href="#三种方式使TextView获取焦点" class="headerlink" title="三种方式使TextView获取焦点"></a>三种方式使TextView获取焦点</h4><h5 id="第一种：点击获得焦点"><a href="#第一种：点击获得焦点" class="headerlink" title="第一种：点击获得焦点"></a>第一种：点击获得焦点</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">添加  android:clickable=&quot;true&quot;</span><br></pre></td></tr></table></figure><h5 id="第二种：自定义一个类，调用isFocused"><a href="#第二种：自定义一个类，调用isFocused" class="headerlink" title="第二种：自定义一个类，调用isFocused()"></a>第二种：自定义一个类，调用isFocused()</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">自定义一个类，调用isFocused()</span><br><span class="line">MyTextView:</span><br><span class="line"><span class="keyword">package</span> a.b.c.mytextview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTextView</span> <span class="keyword">extends</span> <span class="title class_">TextView</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyTextView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr, <span class="type">int</span> defStyleRes)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr, defStyleRes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFocused</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">    &lt;a.b.c.mytextview.MyTextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/tv_one&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;444dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;848dp&quot;</span></span><br><span class="line">        android:ellipsize=<span class="string">&quot;marquee&quot;</span></span><br><span class="line">        android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:marqueeRepeatLimit=<span class="string">&quot;marquee_forever&quot;</span></span><br><span class="line">        android:shadowColor=<span class="string">&quot;#2196F3&quot;</span></span><br><span class="line">        android:shadowDx=<span class="string">&quot;10.0&quot;</span></span><br><span class="line">        android:shadowDy=<span class="string">&quot;10.0&quot;</span></span><br><span class="line">        android:shadowRadius=<span class="string">&quot;3.0&quot;</span></span><br><span class="line">        android:singleLine=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;@string/tv_one&quot;</span></span><br><span class="line">        android:textColor=<span class="string">&quot;@color/white&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;30sp&quot;</span></span><br><span class="line">        android:textStyle=<span class="string">&quot;normal&quot;</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="第三种：添加标签"><a href="#第三种：添加标签" class="headerlink" title="第三种：添加标签"></a>第三种：添加标签</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">结尾添加 &lt;requestFocus&gt;</span><br></pre></td></tr></table></figure><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="StateListDrawable"><a href="#StateListDrawable" class="headerlink" title="StateListDrawable"></a>StateListDrawable</h3><p><img src="/../image/%E6%8E%A7%E4%BB%B64.png"></p><p>改变背景颜色直接使用 android:background&#x3D;”@color&#x2F;black”是没有效果的，需要修改themes.xml文件</p><p><img src="/../image/%E6%8E%A7%E4%BB%B65.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B66.png"></p><h4 id="更换背景图片"><a href="#更换背景图片" class="headerlink" title="更换背景图片"></a>更换背景图片</h4><p><img src="/../image/%E6%8E%A7%E4%BB%B67.png"></p><p>导入图片</p><p><img src="/../image/%E6%8E%A7%E4%BB%B68.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是按钮&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/btn_selector&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/baseline_10k_24&quot;</span> <span class="attr">android:state_pressed</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/baseline_arrow_circle_down_24&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="更换背景图片颜色"><a href="#更换背景图片颜色" class="headerlink" title="更换背景图片颜色"></a>更换背景图片颜色</h4><p>创建color文件</p><p><img src="/../image/%E6%8E%A7%E4%BB%B69.png"></p><p>创建ColorResourec File</p><p><img src="/../image/%E6%8E%A7%E4%BB%B610.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/btn_selector&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:backgroundTint</span>=<span class="string">&quot;@color/btn_color_selector&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是按钮&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Button事件处理"><a href="#Button事件处理" class="headerlink" title="Button事件处理"></a>Button事件处理</h3><h4 id="点击事件、长按事件、触摸事件"><a href="#点击事件、长按事件、触摸事件" class="headerlink" title="点击事件、长按事件、触摸事件"></a>点击事件、长按事件、触摸事件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.mybutton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;lele&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> findViewById(R.id.btn);</span><br><span class="line">        <span class="comment">//设置点击事件</span></span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            ;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onClick: &quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//设置长按事件</span></span><br><span class="line">        btn.setOnLongClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnLongClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onLongClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onLongClick: &quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//设置触摸事件</span></span><br><span class="line">        btn.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View view, MotionEvent motionEvent)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onTouch: &quot;</span>+ motionEvent.getAction() );</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若是将OnTouch的返回值改为true，另外两个都不会执行，称为事件被OnTouch消费了；若是将OnLongClick改为true，OnTouch会执行，OnClick不会执行</p><p>另一种代替OnClick的方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:onClick=&quot;leleOnclick&quot;</span><br><span class="line">在MainActivity中创造此方法</span><br><span class="line">public void leleOnclick(View view)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B611.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myedittext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> EditText edt_test;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> findViewById(R.id.btn_get);</span><br><span class="line">        edt_test = findViewById(R.id.edt);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> edt_test.getText().toString();</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;输入的内容 &quot;</span>+text );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColorHint</span>=<span class="string">&quot;#03A9F4&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">&quot;phone&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/edt&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawableLeft</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">&quot;textPassword&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawablePadding</span>=<span class="string">&quot;30dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingLeft</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;获取内容&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_get&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B612.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B613.png"></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>  <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">&quot;fitXY&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxHeight</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxWidth</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B614.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myprogressbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ProgressBar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar progressBar;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar progressBar2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        progressBar = findViewById(R.id.pb);</span><br><span class="line">        progressBar2 = findViewById(R.id.pb2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">leleClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(progressBar.getVisibility() == View.GONE)&#123;</span><br><span class="line">            progressBar.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            progressBar.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">load</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">progress</span> <span class="operator">=</span> progressBar2.getProgress();</span><br><span class="line">        progress+=<span class="number">10</span>;</span><br><span class="line">        progressBar2.setProgress(progress);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>  <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/pb&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;显示或隐藏进度条&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;leleClick&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/pb2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;lele&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;模拟下载&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;load&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Notification与NotificationManager"><a href="#Notification与NotificationManager" class="headerlink" title="Notification与NotificationManager"></a>Notification与NotificationManager</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B615.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B616.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B617.png"></p><p><img src="/../image/%E6%8E%A7%E4%BB%B618.png"></p><p>简单来说就是通知的小图标不能带颜色，标题、文本内容、小图标是必须要设置的</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.mynotification;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Notification;</span><br><span class="line"><span class="keyword">import</span> android.app.NotificationChannel;</span><br><span class="line"><span class="keyword">import</span> android.app.NotificationManager;</span><br><span class="line"><span class="keyword">import</span> android.app.PendingIntent;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.NotificationCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> NotificationManager manager;</span><br><span class="line">    <span class="keyword">private</span> Notivication notification;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);<span class="comment">//这个用于将应用程序显示到屏幕边缘</span></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">        <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODE<span class="number">.0</span>)&#123;</span><br><span class="line">            <span class="type">NotificationChanner</span> <span class="variable">channer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationChanner</span>(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;测试通知&quot;</span>,NotificationManager.IMPORTANCE_HIGH);</span><br><span class="line">            manager.createNofificationChanner(channel);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, NotificationActivity.class);</span><br><span class="line">        <span class="type">PendingIntent</span> <span class="variable">pendingIntent</span> <span class="operator">=</span> PendingIntent.getActivity(</span><br><span class="line">            <span class="built_in">this</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            intent,</span><br><span class="line">            PendingIntent.FLAG_IMMUTABLE</span><br><span class="line">            <span class="comment">/*标志使用</span></span><br><span class="line"><span class="comment">PendingIntent.FLAG_IMMUTABLE：创建一个不可变的 PendingIntent，这意味着意图内容不会被更改。</span></span><br><span class="line"><span class="comment">PendingIntent.FLAG_MUTABLE：创建一个可变的 PendingIntent，这意味着意图内容可以在某些情况下被更改。*/</span></span><br><span class="line">        );</span><br><span class="line">        notification = <span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.Builder(<span class="built_in">this</span>,<span class="string">&quot;lele&quot;</span>)</span><br><span class="line">            .setContentTitle(<span class="string">&quot;官方通知&quot;</span>)</span><br><span class="line">            .setContentText(<span class="string">&quot;人生若只如初见，何事秋风悲画扇&quot;</span>)</span><br><span class="line">            .setSmallIcon(R.drabable.baseline_android_24)</span><br><span class="line">            .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.ceshi1))</span><br><span class="line">            .setColor(Color.parseCOlor(<span class="string">&quot;#ff0000&quot;</span>))</span><br><span class="line">            .setContentIntent(pendingIntent)</span><br><span class="line">            .setAutoCancel(<span class="literal">true</span>)</span><br><span class="line">            .build();</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendNotification</span><span class="params">(View view)</span>&#123;</span><br><span class="line">            manager.notify(<span class="number">1</span>,notification);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cacelNotification</span><span class="params">(View view)</span>&#123;</span><br><span class="line">            manager.cancel(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;发送通知&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;sendNotification&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;cacelNotification&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;取消通知&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">NotificationActivity</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> a.b.c.mynotification;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NotificationActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        Log.e(<span class="string">&quot;lele&quot;</span>,<span class="string">&quot;onCreate: 进入NotificationActivity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Toolbar"><a href="#Toolbar" class="headerlink" title="Toolbar"></a>Toolbar</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B619.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.mytoolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.widget.Toolbar;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">Toolbar</span> <span class="variable">toolbar</span> <span class="operator">=</span> findViewById(R.id.tb);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        toolbar.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.d(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: toolbar被点击了&quot;</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Toolbar</span> <span class="variable">toolbar2</span> <span class="operator">=</span> findViewById(R.id.tb2);</span><br><span class="line"></span><br><span class="line">        toolbar2.setNavigationIcon(R.drawable.baseline_arrow_back_24);</span><br><span class="line">        toolbar2.setTitle(<span class="string">&quot;标题&quot;</span>);</span><br><span class="line">        toolbar2.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: toolbar2被点击了&quot;</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tb&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;410dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:logo</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navigationIcon</span>=<span class="string">&quot;@drawable/baseline_arrow_back_24&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:subtitle</span>=<span class="string">&quot;子标题&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:subtitleTextColor</span>=<span class="string">&quot;#00ffff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;标题&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleMarginStart</span>=<span class="string">&quot;90dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;#ff0000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tb2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;410dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;410dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navigationIcon</span>=<span class="string">&quot;@drawable/baseline_arrow_back_24&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;标题&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    &lt;/<span class="attr">androidx.appcompat.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AlertDialog"><a href="#AlertDialog" class="headerlink" title="AlertDialog"></a>AlertDialog</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B621.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.myalertdialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.DialogInterface;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AlertDialog;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;lele&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">click</span><span class="params">(View view)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> <span class="variable">dialogView</span> <span class="operator">=</span> getLayoutInflater().inflate(R.layout.dialog_view,<span class="literal">null</span>);</span><br><span class="line">        AlertDialog.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(<span class="built_in">this</span>);</span><br><span class="line">        builder.setIcon(R.drawable.ic_launcher_foreground)</span><br><span class="line">                .setTitle(<span class="string">&quot;我是对话框&quot;</span>)</span><br><span class="line">                .setMessage(<span class="string">&quot;你好啊&quot;</span>)</span><br><span class="line">                .setPositiveButton(<span class="string">&quot;确定&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        Log.e(TAG, <span class="string">&quot;onClick: 点击了确定&quot;</span> );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setNegativeButton(<span class="string">&quot;取消&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        Log.e(TAG, <span class="string">&quot;onClick: 点击了取消&quot;</span> );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setNeutralButton(<span class="string">&quot;中间&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        Log.e(TAG, <span class="string">&quot;onClick: 点击了中间&quot;</span> );</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setView(dialogView)</span><br><span class="line">                .create()</span><br><span class="line">                .show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;click&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;显示对话框&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">dialog_view.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_launcher_foreground&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;今天天气怎么样&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PopupWindow"><a href="#PopupWindow" class="headerlink" title="PopupWindow"></a>PopupWindow</h2><p><img src="/../image/%E6%8E%A7%E4%BB%B622.png"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MainActivity</span><br><span class="line"><span class="keyword">package</span> a.b.c.mypopupwindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.PopupWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clidk</span><span class="params">(View view)</span>&#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">popupView</span> <span class="operator">=</span> getLayoutInflater().inflaer(R.layout.popup_view,<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn1</span> <span class="operator">=</span> popupView.findViewById(R.id.btn1);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn2</span> <span class="operator">=</span> poputView.findViewById(R.id.btn2);</span><br><span class="line">        </span><br><span class="line">        <span class="type">PopupWindow</span> <span class="variable">popupWindow</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PopupWindow</span>(popupView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CPNTENT,<span class="literal">true</span>);</span><br><span class="line">        popupWindow.setBackgroundDrawable(getResources().getDrawable(R.drawable.tx));</span><br><span class="line">        </span><br><span class="line">        popupWindow.showAsDropDown(view);</span><br><span class="line">        </span><br><span class="line">                btn1.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: 你是住在上海吗&quot;</span> );</span><br><span class="line">                popupWindow.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn2.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                Log.e(<span class="string">&quot;lele&quot;</span>, <span class="string">&quot;onClick: 你是住在北京吗&quot;</span> );</span><br><span class="line">                popupWindow.dismiss();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">activity_main</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;click&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;弹出PopupWindow&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">popup_view</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;上海&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;北京&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础项目</title>
      <link href="/2024/08/28/Java%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/08/28/Java%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Animal类"><a href="#Animal类" class="headerlink" title="Animal类"></a>Animal类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> visitCount;</span><br><span class="line">    <span class="keyword">private</span> LocalDate latestVisitDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">int</span> visitCount, LocalDate latestVisitDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.visitCount = visitCount;</span><br><span class="line">        <span class="built_in">this</span>.latestVisitDate = latestVisitDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;顾客 [name=&quot;</span> + name + <span class="string">&quot;, visitCount=&quot;</span> + visitCount + <span class="string">&quot;, latestVisitDate=&quot;</span> + latestVisitDate + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AnimalNotFoundException"><a href="#AnimalNotFoundException" class="headerlink" title="AnimalNotFoundException"></a>AnimalNotFoundException</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> visitCount;</span><br><span class="line">    <span class="keyword">private</span> LocalDate latestVisitDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">int</span> visitCount, LocalDate latestVisitDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.visitCount = visitCount;</span><br><span class="line">        <span class="built_in">this</span>.latestVisitDate = latestVisitDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;顾客 [name=&quot;</span> + name + <span class="string">&quot;, visitCount=&quot;</span> + visitCount + <span class="string">&quot;, latestVisitDate=&quot;</span> + latestVisitDate + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AnimalShop"><a href="#AnimalShop" class="headerlink" title="AnimalShop"></a>AnimalShop</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AnimalShop</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">buyAnimal</span><span class="params">(Animal animal)</span> <span class="keyword">throws</span> InsufficientBalanceException;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">serveCustomer</span><span class="params">(Customer customer)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">closeShop</span><span class="params">(LocalDate date)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age, gender, <span class="number">200.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;猫猫 [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;, gender=&quot;</span> + gender + <span class="string">&quot;, price=&quot;</span> + price + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ChineseRualDog"><a href="#ChineseRualDog" class="headerlink" title="ChineseRualDog"></a>ChineseRualDog</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChineseRuralDog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isVaccineInjected;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChineseRuralDog</span><span class="params">(String name, <span class="type">int</span> age, String gender, <span class="type">boolean</span> isVaccineInjected)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age, gender, <span class="number">100.0</span>); <span class="comment">// 价格100元</span></span><br><span class="line">        <span class="built_in">this</span>.isVaccineInjected = isVaccineInjected;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;中华田园犬 [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;, gender=&quot;</span> + gender +</span><br><span class="line">                <span class="string">&quot;, isVaccineInjected=&quot;</span> + isVaccineInjected + <span class="string">&quot;, price=&quot;</span> + price + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Customer"><a href="#Customer" class="headerlink" title="Customer"></a>Customer</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> visitCount;</span><br><span class="line">    <span class="keyword">private</span> LocalDate latestVisitDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">int</span> visitCount, LocalDate latestVisitDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.visitCount = visitCount;</span><br><span class="line">        <span class="built_in">this</span>.latestVisitDate = latestVisitDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;顾客 [name=&quot;</span> + name + <span class="string">&quot;, visitCount=&quot;</span> + visitCount + <span class="string">&quot;, latestVisitDate=&quot;</span> + latestVisitDate + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="InsufficientBalanceException"><a href="#InsufficientBalanceException" class="headerlink" title="InsufficientBalanceException"></a>InsufficientBalanceException</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsufficientBalanceException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InsufficientBalanceException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MyAnimalShop"><a href="#MyAnimalShop" class="headerlink" title="MyAnimalShop"></a>MyAnimalShop</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAnimalShop</span> <span class="keyword">implements</span> <span class="title class_">AnimalShop</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> balance;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Animal&gt; animalList;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Customer&gt; customerList;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isOpen;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyAnimalShop</span><span class="params">(<span class="type">double</span> initialBalance)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.balance = initialBalance;</span><br><span class="line">        <span class="built_in">this</span>.animalList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.customerList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.isOpen = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buyAnimal</span><span class="params">(Animal animal)</span> <span class="keyword">throws</span> InsufficientBalanceException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;商店已歇业！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (balance &lt; animal.price) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InsufficientBalanceException</span>(<span class="string">&quot;余额不足，无法购买此动物！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        animalList.add(animal);</span><br><span class="line">        balance -= animal.price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serveCustomer</span><span class="params">(Customer customer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;商店已歇业！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        customerList.add(customer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (animalList.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AnimalNotFoundException</span>(<span class="string">&quot;店内没有动物可供购买！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> animalList.remove(<span class="number">0</span>); <span class="comment">// 出售第一只动物</span></span><br><span class="line">        balance += animal.price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">closeShop</span><span class="params">(LocalDate date)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;商店已歇业！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        isOpen = <span class="literal">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;店内客户信息:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Customer customer : customerList) &#123;</span><br><span class="line">            System.out.println(customer);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;今天的利润是: &quot;</span> + balance);</span><br><span class="line">        customerList.clear(); <span class="comment">// 清空客户列表</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Rabbit</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Rabbit</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age, gender, <span class="number">150.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;兔子 [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;, gender=&quot;</span> + gender + <span class="string">&quot;, price=&quot;</span> + price + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MyAnimalShop</span> <span class="variable">shop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAnimalShop</span>(<span class="number">500.0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 买入动物</span></span><br><span class="line">            shop.buyAnimal(<span class="keyword">new</span> <span class="title class_">ChineseRuralDog</span>(<span class="string">&quot;旺财&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>, <span class="literal">true</span>));</span><br><span class="line">            shop.buyAnimal(<span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;喵喵&quot;</span>, <span class="number">2</span>, <span class="string">&quot;女&quot;</span>));</span><br><span class="line">            shop.buyAnimal(<span class="keyword">new</span> <span class="title class_">Rabbit</span>(<span class="string">&quot;小兔&quot;</span>, <span class="number">1</span>, <span class="string">&quot;中&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 招待客户</span></span><br><span class="line">            shop.serveCustomer(<span class="keyword">new</span> <span class="title class_">Customer</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">1</span>, LocalDate.now()));</span><br><span class="line">            shop.serveCustomer(<span class="keyword">new</span> <span class="title class_">Customer</span>(<span class="string">&quot;李四&quot;</span>, <span class="number">2</span>, LocalDate.now()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 关闭商店</span></span><br><span class="line">            shop.closeShop(LocalDate.now());</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目7</title>
      <link href="/2024/08/26/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7-1/"/>
      <url>/2024/08/26/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目7</title>
      <link href="/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7/"/>
      <url>/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">31</span> 字符串循环左移</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 白洪欢</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入一个字符串和一个非负整数N，要求将字符串循环左移N次。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中给出一个不超过<span class="number">100</span>个字符长度的、以回车结束的非空字符串；第<span class="number">2</span>行给出非负整数N。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出循环左移N次后的字符串。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">Hello World!</span><br><span class="line"><span class="number">2</span></span><br><span class="line">输出样例：</span><br><span class="line">llo World!He</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> str.length();</span><br><span class="line">        N=N%len;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> str.substring(N)+str.substring(<span class="number">0</span>,N);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">32</span> 说反话-加强版</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">测试输入包含一个测试用例，在一行内给出总长度不超过<span class="number">500</span> <span class="number">000</span>的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用若干个空格分开。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">每个测试用例的输出占一行，输出倒序后的句子，并且保证单词间只有<span class="number">1</span>个空格。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">Hello World   Here I Come</span><br><span class="line">输出样例：</span><br><span class="line">Come I Here World Hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取整行输入</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine().trim();  <span class="comment">// 去除首尾空格</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 StringTokenizer 分隔单词，并过滤掉多余的空格</span></span><br><span class="line">        <span class="type">StringTokenizer</span> <span class="variable">tokenizer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(input);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历所有单词并将它们逆序添加到 StringBuilder 中</span></span><br><span class="line">        String[] words = <span class="keyword">new</span> <span class="title class_">String</span>[tokenizer.countTokens()];</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> words.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (tokenizer.hasMoreTokens()) &#123;</span><br><span class="line">            words[index--] = tokenizer.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拼接单词</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; words.length; i++) &#123;</span><br><span class="line">            result.append(words[i]);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; words.length - <span class="number">1</span>) &#123;</span><br><span class="line">                result.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">33</span> 有理数加法</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，计算两个有理数的和。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中按照a1/b1 a2/b2的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按照a/b的格式输出两个有理数的和。注意必须是该有理数的最简分数形式，若分母为<span class="number">1</span>，则只输出分子。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">1</span>/<span class="number">3</span> <span class="number">1</span>/<span class="number">6</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">1</span>/<span class="number">2</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分割输入的分数</span></span><br><span class="line">        String[] fractions = input.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        String[] fraction1 = fractions[<span class="number">0</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        String[] fraction2 = fractions[<span class="number">1</span>].split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取分子和分母</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> Integer.parseInt(fraction1[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b1</span> <span class="operator">=</span> Integer.parseInt(fraction1[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> Integer.parseInt(fraction2[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b2</span> <span class="operator">=</span> Integer.parseInt(fraction2[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算和的分子和分母</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">numerator</span> <span class="operator">=</span> a1 * b2 + a2 * b1;</span><br><span class="line">        <span class="type">int</span> <span class="variable">denominator</span> <span class="operator">=</span> b1 * b2;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 化简分数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">gcd</span> <span class="operator">=</span> gcd(numerator, denominator);</span><br><span class="line">        numerator /= gcd;</span><br><span class="line">        denominator /= gcd;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        <span class="keyword">if</span> (denominator == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(numerator);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(numerator + <span class="string">&quot;/&quot;</span> + denominator);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求最大公约数的函数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> b;</span><br><span class="line">            b = a % b;</span><br><span class="line">            a = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">34</span> 通讯录的录入与显示</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。</span><br><span class="line">本题要求编写程序，录入N条记录，并且根据要求显示任意某条记录。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第一行给出正整数N（≤<span class="number">10</span>）；随后N行，每行按照格式姓名 生日 性别 固话 手机给出一条记录。其中姓名是不超过<span class="number">10</span>个字符、不包含空格的非空字符串；生日按yyyy/mm/dd的格式给出年月日；性别用M表示“男”、F表示“女”；固话和手机均为不超过<span class="number">15</span>位的连续数字，前面有可能出现+。</span><br><span class="line"></span><br><span class="line">在通讯录记录输入完成后，最后一行给出正整数K，并且随后给出K个整数，表示要查询的记录编号（从<span class="number">0</span>到N−<span class="number">1</span>顺序编号）。数字间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">对每一条要查询的记录编号，在一行中按照姓名 固话 手机 性别 生日的格式输出该记录。若要查询的记录不存在，则输出Not Found。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">3</span></span><br><span class="line">Chris <span class="number">1984</span>/<span class="number">03</span>/<span class="number">10</span> F +<span class="number">86181779452</span> <span class="number">13707010007</span></span><br><span class="line">LaoLao <span class="number">1967</span>/<span class="number">11</span>/<span class="number">30</span> F 057187951100 +<span class="number">8618618623333</span></span><br><span class="line">QiaoLin <span class="number">1980</span>/<span class="number">01</span>/<span class="number">01</span> M <span class="number">84172333</span> <span class="number">10086</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">7</span></span><br><span class="line">输出样例：</span><br><span class="line">LaoLao 057187951100 +<span class="number">8618618623333</span> F <span class="number">1967</span>/<span class="number">11</span>/<span class="number">30</span></span><br><span class="line">Not Found</span><br><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">struct data&#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line">struct man&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">    struct data barthday;</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">char</span> dianhua[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> phone[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> flag;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    struct man human[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        human[i].flag=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s %d/%d/%d %c %s %s&quot;</span>,human[i].name,</span><br><span class="line">              &amp;human[i].barthday.year,</span><br><span class="line">              &amp;human[i].barthday.month,</span><br><span class="line">              &amp;human[i].barthday.day</span><br><span class="line">             ,&amp;human[i].sex</span><br><span class="line">             ,human[i].dianhua</span><br><span class="line"> ,human[i].phone);</span><br><span class="line">       human[i].flag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">            <span class="keyword">if</span>(human[num].flag==<span class="number">1</span>)&#123;</span><br><span class="line">            printf(<span class="string">&quot;%s %s %s %c %02d/%02d/%02d&quot;</span>,human[num].name,<span class="comment">//输出数字不满两位有前导0</span></span><br><span class="line">                  human[num].dianhua,</span><br><span class="line">                  human[num].phone,</span><br><span class="line">                  human[num].sex,</span><br><span class="line">                  human[num].barthday.year,</span><br><span class="line">                  human[num].barthday.month,</span><br><span class="line">                  human[num].barthday.day);</span><br><span class="line">                  <span class="keyword">if</span>(i!=k-<span class="number">1</span>)&#123;</span><br><span class="line">                    printf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                  &#125; </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                printf(<span class="string">&quot;Not Found&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(i!=k-<span class="number">1</span>)&#123;</span><br><span class="line">                    printf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">35</span> 有理数均值</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，计算N个有理数的平均值。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入第一行给出正整数N（≤<span class="number">100</span>）；第二行中按照a1/b1 a2/b2 …的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按照a/b的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为<span class="number">1</span>，则只输出分子。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span>/<span class="number">2</span> <span class="number">1</span>/<span class="number">6</span> <span class="number">3</span>/<span class="number">6</span> -<span class="number">5</span>/<span class="number">10</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">1</span>/<span class="number">6</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Method to simplify fractions</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">simplify</span><span class="params">(<span class="type">int</span>[] fraction)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> fraction[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> fraction[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> Math.min(x, y);</span><br><span class="line">        <span class="keyword">while</span> (tmp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % tmp == <span class="number">0</span> &amp;&amp; y % tmp == <span class="number">0</span>) &#123;</span><br><span class="line">                fraction[<span class="number">0</span>] /= tmp;</span><br><span class="line">                fraction[<span class="number">1</span>] /= tmp;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt(); <span class="comment">// Number of fractions</span></span><br><span class="line">        String[] firstFraction = scanner.next().split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">zfz</span> <span class="operator">=</span> Integer.parseInt(firstFraction[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">zfm</span> <span class="operator">=</span> Integer.parseInt(firstFraction[<span class="number">1</span>]);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] fraction = &#123;zfz, zfm&#125;;</span><br><span class="line">        simplify(fraction);</span><br><span class="line">        zfz = fraction[<span class="number">0</span>];</span><br><span class="line">        zfm = fraction[<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            String[] currentFraction = scanner.next().split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> Integer.parseInt(currentFraction[<span class="number">0</span>]);</span><br><span class="line">            <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> Integer.parseInt(currentFraction[<span class="number">1</span>]);</span><br><span class="line">            </span><br><span class="line">            zfz = zfz * b + zfm * a;</span><br><span class="line">            zfm *= b;</span><br><span class="line">            </span><br><span class="line">            fraction[<span class="number">0</span>] = zfz;</span><br><span class="line">            fraction[<span class="number">1</span>] = zfm;</span><br><span class="line">            simplify(fraction);</span><br><span class="line">            zfz = fraction[<span class="number">0</span>];</span><br><span class="line">            zfm = fraction[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        zfm *= n; <span class="comment">// Multiply denominator by n to calculate average</span></span><br><span class="line">        fraction[<span class="number">0</span>] = zfz;</span><br><span class="line">        fraction[<span class="number">1</span>] = zfm;</span><br><span class="line">        simplify(fraction);</span><br><span class="line">        zfz = fraction[<span class="number">0</span>];</span><br><span class="line">        zfm = fraction[<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (zfm == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(zfz);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (zfz == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(zfz + <span class="string">&quot;/&quot;</span> + zfm);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目6</title>
      <link href="/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE6/"/>
      <url>/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">26</span> 单词长度</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">你的程序要读入一行文本，其中以空格分隔为若干个单词，以.结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如it<span class="string">&#x27;s算一个单词，长度为4。注意，行中可能出现连续的空格；最后的.不计算在内。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输入格式：</span></span><br><span class="line"><span class="string">输入在一行中给出一行文本，以.结束</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提示：用scanf(&quot;%c&quot;,...);来读入一个字符，直到读到.为止。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输出格式：</span></span><br><span class="line"><span class="string">在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输入样例：</span></span><br><span class="line"><span class="string">It&#x27;</span>s great to see you here.</span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> scanner.nextLine().trim();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (line.isEmpty() || line.equals(<span class="string">&quot;.&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>); <span class="comment">// Print an empty line for empty input</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (line.endsWith(<span class="string">&quot;.&quot;</span>)) &#123;</span><br><span class="line">            line = line.substring(<span class="number">0</span>, line.length() - <span class="number">1</span>).trim(); <span class="comment">// Remove the trailing dot and trim spaces</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] words = line.split(<span class="string">&quot;\\s+&quot;</span>); <span class="comment">// Split by one or more whitespace characters</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!word.isEmpty()) &#123; <span class="comment">// Check to avoid empty words</span></span><br><span class="line">                result.append(word.length()).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Remove the trailing space and print the result</span></span><br><span class="line">        <span class="keyword">if</span> (result.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result.setLength(result.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">27</span> 冒泡法排序</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−<span class="number">1</span>个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。</span><br><span class="line"></span><br><span class="line">本题要求对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果数列。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中给出N和K（<span class="number">1</span>≤K&lt;N≤<span class="number">100</span>），在第<span class="number">2</span>行中给出N个待排序的整数，数字间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span> <span class="number">4</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取N和K</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">K</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取N个整数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            array[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行冒泡排序，直到第K遍</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">pass</span> <span class="operator">=</span> <span class="number">0</span>; pass &lt; K; pass++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N - pass - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i] &gt; array[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="comment">// 交换array[i]和array[i + 1]</span></span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> array[i];</span><br><span class="line">                    array[i] = array[i + <span class="number">1</span>];</span><br><span class="line">                    array[i + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出第K遍后的结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">28</span> 猴子选大王</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">一群猴子要选新猴王。新猴王的选择方法是：让N只候选猴子围成一圈，从某位置起顺序编号为<span class="number">1</span>~N号。从第<span class="number">1</span>号开始报数，每轮从<span class="number">1</span>报到<span class="number">3</span>，凡报到<span class="number">3</span>的猴子即退出圈子，接着又从紧邻的下一只猴子开始同样的报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给一个正整数N（≤<span class="number">1000</span>）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出当选猴王的编号。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">11</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">7</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个链表来存储猴子的编号</span></span><br><span class="line">        List&lt;Integer&gt; monkeys = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            monkeys.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 当前报数的位置</span></span><br><span class="line">        <span class="keyword">while</span> (monkeys.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            index = (index + <span class="number">2</span>) % monkeys.size(); <span class="comment">// 计算要淘汰的猴子的索引 (报到3)</span></span><br><span class="line">            monkeys.remove(index); <span class="comment">// 移除该猴子</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出最后剩下的猴子的编号</span></span><br><span class="line">        System.out.println(monkeys.get(<span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">29</span> 删除字符串中的子串</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 白洪欢</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入<span class="number">2</span>个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在<span class="number">2</span>行中分别给出不超过<span class="number">80</span>个字符长度的、以回车结束的<span class="number">2</span>个非空字符串，对应S1和S2。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">Tomcat is a male ccatat</span><br><span class="line">cat</span><br><span class="line">输出样例：</span><br><span class="line">Tom is a male </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取第一个字符串 S1</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">S1</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="comment">// 读取第二个字符串 S2</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">S2</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理删除操作</span></span><br><span class="line">        <span class="keyword">while</span> (S1.contains(S2)) &#123;</span><br><span class="line">            S1 = S1.replace(S2, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(S1);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">30</span> 字符串的冒泡排序</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">我们已经知道了将N个整数按从小到大排序的冒泡排序法。本题要求将此方法用于字符串序列，并对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果序列。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中给出N和K（<span class="number">1</span>≤K&lt;N≤<span class="number">100</span>），此后N行，每行包含一个长度不超过<span class="number">10</span>的、仅由小写英文字母组成的非空字符串。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出冒泡排序法扫描完第K遍后的中间结果序列，每行包含一个字符串。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line">best</span><br><span class="line">cat</span><br><span class="line">east</span><br><span class="line">a</span><br><span class="line">free</span><br><span class="line">day</span><br><span class="line">输出样例：</span><br><span class="line">best</span><br><span class="line">a</span><br><span class="line">cat</span><br><span class="line">day</span><br><span class="line">east</span><br><span class="line">free</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">K</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.nextLine();</span><br><span class="line">        String[] strings = <span class="keyword">new</span> <span class="title class_">String</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            strings[i] = scanner.nextLine();</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; K; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j= <span class="number">0</span>;j&lt;N-i-<span class="number">1</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(strings[j].compareTo(strings[j+<span class="number">1</span>]) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> strings[j];</span><br><span class="line">                    strings[j] = strings[j+<span class="number">1</span>];</span><br><span class="line">                    strings[j+<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String s : strings)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目5</title>
      <link href="/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE5/"/>
      <url>/2024/08/25/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">21</span> 求特殊方程的正整数解</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 张彤彧</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求对任意给定的正整数N，求方程X </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> +Y </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> =N的全部正整数解。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出正整数N（≤<span class="number">10000</span>）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出方程X </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> +Y </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> =N的全部正整数解，其中X≤Y。每组解占<span class="number">1</span>行，两数字间以<span class="number">1</span>空格分隔，按X的递增顺序输出。如果没有解，则输出No Solution。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">884</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">10</span> <span class="number">28</span></span><br><span class="line"><span class="number">20</span> <span class="number">22</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">11</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">No Solution</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">foundSolution</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历可能的 X 值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>; x &lt;= Math.sqrt(N); x++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> x * x;</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> N - x2;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算 Y</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">int</span>) Math.sqrt(y2);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 检查 Y 是否满足条件</span></span><br><span class="line">            <span class="keyword">if</span> (y * y == y2 &amp;&amp; x &lt;= y) &#123;</span><br><span class="line">                System.out.println(x + <span class="string">&quot; &quot;</span> + y);</span><br><span class="line">                foundSolution = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果没有找到解</span></span><br><span class="line">        <span class="keyword">if</span> (!foundSolution) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">22</span> 龟兔赛跑</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈建海</span><br><span class="line">单位 浙江大学</span><br><span class="line">乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进<span class="number">3</span>米，兔子每分钟前进<span class="number">9</span>米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑<span class="number">10</span>分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息<span class="number">30</span>分钟，否则继续跑<span class="number">10</span>分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出比赛时间T（分钟）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出比赛的结果：乌龟赢输出<span class="meta">@_</span>@，兔子赢输出^_^，平局则输出-_-；后跟<span class="number">1</span>空格，再输出胜利者跑完的距离。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">242</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="meta">@_</span>@ <span class="number">726</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">int</span> <span class="variable">turtle</span> <span class="operator">=</span> <span class="number">0</span>,rabbit =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rest</span> <span class="operator">=</span> -<span class="number">1</span>,run=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">while</span>(minute--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            turtle +=<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">if</span>(run-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                rabbit+=<span class="number">9</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(run ==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(rabbit&gt;turtle &amp;&amp; rest!=<span class="number">0</span>)&#123;</span><br><span class="line">                    rest =  <span class="number">30</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    run = <span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(rest--==<span class="number">0</span>)&#123;</span><br><span class="line">                run =<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(turtle&gt;rabbit)&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;@_@ %d&quot;</span>,turtle);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(rabbit &gt; turtle)&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;^_^ %d&quot;</span>,rabbit);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;-_- %d&quot;</span>,rabbit);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">23</span> 币值转换</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈建海</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入一个整数（位数不超过<span class="number">9</span>位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如<span class="number">23108</span>元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字<span class="number">0</span>-<span class="number">9</span>，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是<span class="number">23108</span>元应被转换输出为“cWdQbBai”元。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个不超过<span class="number">9</span>位的非负整数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">813227345</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">iYbQdBcScWhQdBeSf</span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">6900</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">gQjB</span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">long</span> <span class="variable">num</span> <span class="operator">=</span> scanner.nextLong();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 数字字符和单位字符</span></span><br><span class="line">        <span class="type">char</span>[] number = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>&#125;;</span><br><span class="line">        <span class="type">char</span>[] unit = &#123;<span class="string">&#x27;\0&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将数字按位拆分</span></span><br><span class="line">        <span class="keyword">while</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            a[i++] = (<span class="type">int</span>) (num % <span class="number">10</span>);</span><br><span class="line">            num /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        i--; <span class="comment">// 索引调整到最后一个非零位</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (i &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                result.append(number[a[i]]);</span><br><span class="line">                result.append(unit[i]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">4</span> &amp;&amp; (a[<span class="number">5</span>] != <span class="number">0</span> || a[<span class="number">6</span>] != <span class="number">0</span> || a[<span class="number">7</span>] != <span class="number">0</span>)) &#123;</span><br><span class="line">                    result.append(<span class="string">&#x27;W&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ((i - <span class="number">1</span>) &gt;= <span class="number">0</span> &amp;&amp; a[i - <span class="number">1</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">                    result.append(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">24</span> 约分最简分式</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">分数可以表示为分子/分母的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如<span class="number">6</span>/<span class="number">12</span>可以被约分为<span class="number">1</span>/<span class="number">2</span>。当分子大于分母时，不需要表达为整数又分数的形式，即<span class="number">11</span>/<span class="number">8</span>还是<span class="number">11</span>/<span class="number">8</span>；而当分子分母相等时，仍然表达为<span class="number">1</span>/<span class="number">1</span>的分数形式。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个分数，分子和分母中间以斜杠/分隔，如：<span class="number">12</span>/<span class="number">34</span>表示<span class="number">34</span>分之<span class="number">12</span>。分子和分母都是正整数（不包含<span class="number">0</span>，如果不清楚正整数的定义的话）。</span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">对于C语言，在scanf的格式字符串中加入/，让scanf来处理这个斜杠。</span><br><span class="line">对于Python语言，用a,b=map(<span class="type">int</span>, input().split(<span class="string">&#x27;/&#x27;</span>))这样的代码来处理这个斜杠。</span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用分子/分母的形式表示分数。如</span><br><span class="line"><span class="number">5</span>/<span class="number">6</span>表示<span class="number">6</span>分之<span class="number">5</span>。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">66</span>/<span class="number">120</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">11</span>/<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算最大公约数的递归函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解析输入分数</span></span><br><span class="line">        String[] parts = input.split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">numerator</span> <span class="operator">=</span> Integer.parseInt(parts[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">denominator</span> <span class="operator">=</span> Integer.parseInt(parts[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算最大公约数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">gcdValue</span> <span class="operator">=</span> gcd(numerator, denominator);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 约分分子和分母</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">simplifiedNumerator</span> <span class="operator">=</span> numerator / gcdValue;</span><br><span class="line">        <span class="type">int</span> <span class="variable">simplifiedDenominator</span> <span class="operator">=</span> denominator / gcdValue;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出最简分式</span></span><br><span class="line">        System.out.println(simplifiedNumerator + <span class="string">&quot;/&quot;</span> + simplifiedDenominator);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">25</span> 念数字</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出fu字。十个数字对应的拼音如下：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>: ling</span><br><span class="line"><span class="number">1</span>: yi</span><br><span class="line"><span class="number">2</span>: er</span><br><span class="line"><span class="number">3</span>: san</span><br><span class="line"><span class="number">4</span>: si</span><br><span class="line"><span class="number">5</span>: wu</span><br><span class="line"><span class="number">6</span>: liu</span><br><span class="line"><span class="number">7</span>: qi</span><br><span class="line"><span class="number">8</span>: ba</span><br><span class="line"><span class="number">9</span>: jiu</span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个整数，如：<span class="number">1234</span>。</span><br><span class="line"></span><br><span class="line">提示：整数包括负数、零和正数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如</span><br><span class="line">yi er san si。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">-<span class="number">600</span></span><br><span class="line">输出样例：</span><br><span class="line">fu liu ling ling</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义数字到拼音的映射</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] PINYIN = &#123;</span><br><span class="line">        <span class="string">&quot;ling&quot;</span>, <span class="string">&quot;yi&quot;</span>, <span class="string">&quot;er&quot;</span>, <span class="string">&quot;san&quot;</span>, <span class="string">&quot;si&quot;</span>, <span class="string">&quot;wu&quot;</span>, <span class="string">&quot;liu&quot;</span>, <span class="string">&quot;qi&quot;</span>, <span class="string">&quot;ba&quot;</span>, <span class="string">&quot;jiu&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理负数</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">if</span> (input.charAt(<span class="number">0</span>) == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            result.append(<span class="string">&quot;fu &quot;</span>);</span><br><span class="line">            input = input.substring(<span class="number">1</span>); <span class="comment">// 去掉负号</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理每个数字</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> input.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(ch)) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">digit</span> <span class="operator">=</span> ch - <span class="string">&#x27;0&#x27;</span>; <span class="comment">// 将字符转换为对应的数字</span></span><br><span class="line">                result.append(PINYIN[digit]).append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 移除最后一个多余的空格</span></span><br><span class="line">        <span class="keyword">if</span> (result.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result.setLength(result.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目4</title>
      <link href="/2024/08/24/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE4/"/>
      <url>/2024/08/24/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">16</span> 求符合给定条件的整数集</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">给定不超过<span class="number">6</span>的正整数A，考虑从A开始的连续<span class="number">4</span>个数字。请输出所有由它们组成的无重复数字的<span class="number">3</span>位数。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出A。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出满足条件的的<span class="number">3</span>位数，要求从小到大，每行<span class="number">6</span>个整数。整数间以空格分隔，但行末不能有多余空格。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">2</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">234</span> <span class="number">235</span> <span class="number">243</span> <span class="number">245</span> <span class="number">253</span> <span class="number">254</span></span><br><span class="line"><span class="number">324</span> <span class="number">325</span> <span class="number">342</span> <span class="number">345</span> <span class="number">352</span> <span class="number">354</span></span><br><span class="line"><span class="number">423</span> <span class="number">425</span> <span class="number">432</span> <span class="number">435</span> <span class="number">452</span> <span class="number">453</span></span><br><span class="line"><span class="number">523</span> <span class="number">524</span> <span class="number">532</span> <span class="number">534</span> <span class="number">542</span> <span class="number">543</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLOutput;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">A</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> x,y,z;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        A = sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="keyword">if</span>(A&gt;<span class="number">0</span>&amp;&amp;A&lt;<span class="number">7</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(x = A;x&lt;A+<span class="number">4</span>;x++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(y = A;y&lt;A+<span class="number">4</span>;y++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(z = A;z&lt;A+<span class="number">4</span>;z++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(x!=y&amp;&amp;y!=z&amp;&amp;z!=x)&#123;</span><br><span class="line">                            System.out.printf(<span class="string">&quot;%d%d%d&quot;</span>,x,y,z);</span><br><span class="line">                            count++;</span><br><span class="line">                            <span class="keyword">if</span>(count!=<span class="number">0</span>&amp;&amp;count%<span class="number">6</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                                System.out.println();</span><br><span class="line">                            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">17</span> 爬动的蠕虫</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 C课程组</span><br><span class="line">单位 浙江大学</span><br><span class="line">一条蠕虫长<span class="number">1</span>寸，在一口深为N寸的井的底部。已知蠕虫每<span class="number">1</span>分钟可以向上爬U寸，但必须休息<span class="number">1</span>分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？</span><br><span class="line"></span><br><span class="line">这里要求不足<span class="number">1</span>分钟按<span class="number">1</span>分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为<span class="number">0</span>）。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中顺序给出<span class="number">3</span>个正整数N、U、D，其中D&lt;U，N不超过<span class="number">100</span>。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出蠕虫爬出井的时间，以分钟为单位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">12</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">U</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">D</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">time</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(height&lt;N)&#123;</span><br><span class="line">            height+=U;</span><br><span class="line">            time++;</span><br><span class="line">            <span class="keyword">if</span>(height&gt;=N)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            height -= D;</span><br><span class="line">            time++;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(time);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">18</span> 二分法求多项式单根</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">二分法求函数根的原理为：如果连续函数f(x)在区间[a,b]的两个端点取值异号，即f(a)f(b)&lt;<span class="number">0</span>，则它在这个区间内至少存在<span class="number">1</span>个根r，即f(r)=<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">二分法的步骤为：</span><br><span class="line"></span><br><span class="line">检查区间长度，如果小于给定阈值，则停止，输出区间中点(a+b)/<span class="number">2</span>；否则</span><br><span class="line">如果f(a)f(b)&lt;<span class="number">0</span>，则计算中点的值f((a+b)/<span class="number">2</span>)；</span><br><span class="line">如果f((a+b)/<span class="number">2</span>)正好为<span class="number">0</span>，则(a+b)/<span class="number">2</span>就是要求的根；否则</span><br><span class="line">如果f((a+b)/<span class="number">2</span>)与f(a)同号，则说明根在区间[(a+b)/<span class="number">2</span>,b]，令a=(a+b)/<span class="number">2</span>，重复循环；</span><br><span class="line">如果f((a+b)/<span class="number">2</span>)与f(b)同号，则说明根在区间[a,(a+b)/<span class="number">2</span>]，令b=(a+b)/<span class="number">2</span>，重复循环。</span><br><span class="line">本题目要求编写程序，计算给定<span class="number">3</span>阶多项式f(x)=a </span><br><span class="line"><span class="number">3</span></span><br><span class="line">​</span><br><span class="line"> x </span><br><span class="line"><span class="number">3</span></span><br><span class="line"> +a </span><br><span class="line"><span class="number">2</span></span><br><span class="line">​</span><br><span class="line"> x </span><br><span class="line"><span class="number">2</span></span><br><span class="line"> +a </span><br><span class="line"><span class="number">1</span></span><br><span class="line">​</span><br><span class="line"> x+a </span><br><span class="line"><span class="number">0</span></span><br><span class="line">​</span><br><span class="line"> 在给定区间[a,b]内的根。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在第<span class="number">1</span>行中顺序给出多项式的<span class="number">4</span>个系数a </span><br><span class="line"><span class="number">3</span></span><br><span class="line">​</span><br><span class="line"> 、a </span><br><span class="line"><span class="number">2</span></span><br><span class="line">​</span><br><span class="line"> 、a </span><br><span class="line"><span class="number">1</span></span><br><span class="line">​</span><br><span class="line"> 、a </span><br><span class="line"><span class="number">0</span></span><br><span class="line">​</span><br><span class="line"> ，在第<span class="number">2</span>行中顺序给出区间端点a和b。题目保证多项式在给定区间内存在唯一单根。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出该多项式在该区间内的根，精确到小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">3</span> -<span class="number">1</span> -<span class="number">3</span> <span class="number">1</span></span><br><span class="line">-<span class="number">0.5</span> <span class="number">0.5</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">0.33</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 定义多项式函数 f(x) = a3*x^3 + a2*x^2 + a1*x + a0</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">polynomial</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> a3, <span class="type">double</span> a2, <span class="type">double</span> a1, <span class="type">double</span> a0)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a3 * x * x * x + a2 * x * x + a1 * x + a0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取多项式系数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">a3</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">a2</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">a1</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">a0</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取区间端点</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算多项式在端点的值</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">fa</span> <span class="operator">=</span> polynomial(a, a3, a2, a1, a0);</span><br><span class="line">        <span class="type">double</span> <span class="variable">fb</span> <span class="operator">=</span> polynomial(b, a3, a2, a1, a0);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查区间端点是否是根</span></span><br><span class="line">        <span class="keyword">if</span> (Math.abs(fa) &lt; <span class="number">1e-7</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>, a);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Math.abs(fb) &lt; <span class="number">1e-7</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>, b);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查端点值的符号是否异号</span></span><br><span class="line">        <span class="keyword">if</span> (fa * fb &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The function does not have a root in the given interval.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置精度阈值</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">epsilon</span> <span class="operator">=</span> <span class="number">1e-6</span>; <span class="comment">// 精度阈值，确保结果精确到小数点后两位</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 二分法过程</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">mid</span> <span class="operator">=</span> a;</span><br><span class="line">        <span class="keyword">while</span> ((b - a) / <span class="number">2</span> &gt; epsilon) &#123;</span><br><span class="line">            mid = (a + b) / <span class="number">2</span>;</span><br><span class="line">            <span class="type">double</span> <span class="variable">fmid</span> <span class="operator">=</span> polynomial(mid, a3, a2, a1, a0);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (Math.abs(fmid) &lt; <span class="number">1e-7</span>) &#123; <span class="comment">// 如果中点的值非常接近0</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (fa * fmid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                b = mid;</span><br><span class="line">                fb = fmid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                a = mid;</span><br><span class="line">                fa = fmid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 输出结果，精确到小数点后两位</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f\n&quot;</span>, mid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span><span class="number">-19</span> 支票面额</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">一个采购员去银行兑换一张y元f分的支票，结果出纳员错给了f元y分。采购员用去了n分之后才发觉有错，于是清点了余额尚有<span class="number">2</span>y元<span class="number">2</span>f分，问该支票面额是多少？</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出小于<span class="number">100</span>的正整数n。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按格式y.f输出该支票的原始面额。如果无解，则输出No Solution。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">23</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">25.51</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">22</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">No Solution</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,flag=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">100</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i+j*<span class="number">100</span>-n==j*<span class="number">2</span>+i*<span class="number">2</span>*<span class="number">100</span>)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&#x27;.&#x27;</span>&lt;&lt;j,flag=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">if</span>(flag)cout&lt;&lt;<span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">20</span> 打印九九口诀表</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 徐镜春</span><br><span class="line">单位 浙江大学</span><br><span class="line">下面是一个完整的下三角九九口诀表：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">5</span>=<span class="number">5</span>   <span class="number">2</span>*<span class="number">5</span>=<span class="number">10</span>  <span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span>  <span class="number">4</span>*<span class="number">5</span>=<span class="number">20</span>  <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">6</span>=<span class="number">6</span>   <span class="number">2</span>*<span class="number">6</span>=<span class="number">12</span>  <span class="number">3</span>*<span class="number">6</span>=<span class="number">18</span>  <span class="number">4</span>*<span class="number">6</span>=<span class="number">24</span>  <span class="number">5</span>*<span class="number">6</span>=<span class="number">30</span>  <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">7</span>=<span class="number">7</span>   <span class="number">2</span>*<span class="number">7</span>=<span class="number">14</span>  <span class="number">3</span>*<span class="number">7</span>=<span class="number">21</span>  <span class="number">4</span>*<span class="number">7</span>=<span class="number">28</span>  <span class="number">5</span>*<span class="number">7</span>=<span class="number">35</span>  <span class="number">6</span>*<span class="number">7</span>=<span class="number">42</span>  <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">8</span>=<span class="number">8</span>   <span class="number">2</span>*<span class="number">8</span>=<span class="number">16</span>  <span class="number">3</span>*<span class="number">8</span>=<span class="number">24</span>  <span class="number">4</span>*<span class="number">8</span>=<span class="number">32</span>  <span class="number">5</span>*<span class="number">8</span>=<span class="number">40</span>  <span class="number">6</span>*<span class="number">8</span>=<span class="number">48</span>  <span class="number">7</span>*<span class="number">8</span>=<span class="number">56</span>  <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">9</span>=<span class="number">9</span>   <span class="number">2</span>*<span class="number">9</span>=<span class="number">18</span>  <span class="number">3</span>*<span class="number">9</span>=<span class="number">27</span>  <span class="number">4</span>*<span class="number">9</span>=<span class="number">36</span>  <span class="number">5</span>*<span class="number">9</span>=<span class="number">45</span>  <span class="number">6</span>*<span class="number">9</span>=<span class="number">54</span>  <span class="number">7</span>*<span class="number">9</span>=<span class="number">63</span>  <span class="number">8</span>*<span class="number">9</span>=<span class="number">72</span>  <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span>  </span><br><span class="line">本题要求对任意给定的一位正整数N，输出从<span class="number">1</span>*<span class="number">1</span>到N*N的部分口诀表。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个正整数N（<span class="number">1</span>≤N≤<span class="number">9</span>）。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出下三角N*N部分口诀表，其中等号右边数字占<span class="number">4</span>位、左对齐。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">4</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>   </span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入的正整数 N</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 遍历每一行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="comment">// 遍历每一列</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                <span class="comment">// 计算乘法表的结果</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> i * j;</span><br><span class="line">                <span class="comment">// 打印乘法表的格式，结果占4个字符宽度并左对齐</span></span><br><span class="line">                System.out.printf(<span class="string">&quot;%d*%d=%-4d&quot;</span>, j, i, result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 打印每一行之后换行</span></span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目3</title>
      <link href="/2024/08/23/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE3/"/>
      <url>/2024/08/23/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">12</span> 两个数的简单计算器</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 沈睿</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求编写一个简单计算器程序，可根据输入的运算符，对<span class="number">2</span>个整数进行加、减、乘、除或求余运算。题目保证输入和输出均不超过整型范围。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中依次输入操作数<span class="number">1</span>、运算符、操作数<span class="number">2</span>，其间以<span class="number">1</span>个空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">当运算符为+、-、*、/、%时，在一行输出相应的运算结果。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出ERROR。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line">-<span class="number">7</span> / <span class="number">2</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">-<span class="number">3</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">3</span> &amp; <span class="number">6</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">ERROR</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">        String[] parts = input.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(parts.length !=<span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">operator</span> <span class="operator">=</span> parts[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            num1 = Integer.parseInt(parts[<span class="number">0</span>]);</span><br><span class="line">            num2 = Integer.parseInt(parts[<span class="number">2</span>]);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(NumberFormatException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span>(operator)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                System.out.println(num1 + num2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                System.out.println(num1 - num2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                System.out.println(num1 * num2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span>(num2 == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.println(num1 / num2);</span><br><span class="line">                &#125;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;%&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span>(num2 == <span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.println(num1%num2);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">13</span> 日K蜡烛图</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 陈建海</span><br><span class="line">单位 浙江大学</span><br><span class="line">股票价格涨跌趋势，常用蜡烛图技术中的K线图来表示，分为按日的日K线、按周的周K线、按月的月K线等。以日K线为例，每天股票价格从开盘到收盘走完一天，对应一根蜡烛小图，要表示四个价格：开盘价格Open（早上刚刚开始开盘买卖成交的第<span class="number">1</span>笔价格）、收盘价格Close（下午收盘时最后一笔成交的价格）、中间的最高价High和最低价Low。</span><br><span class="line"></span><br><span class="line">如果Close&lt;Open，表示为“BW-Solid”（即“实心蓝白蜡烛”）；如果Close&gt;Open，表示为“R-Hollow”（即“空心红蜡烛”）；如果Open等于Close，则为“R-Cross”（即“十字红蜡烛”）。如果Low比Open和Close低，称为“Lower Shadow”（即“有下影线”），如果High比Open和Close高，称为“Upper Shadow”（即“有上影线”）。请编程序，根据给定的四个价格组合，判断当日的蜡烛是一根什么样的蜡烛。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">4</span>个正实数，分别对应Open、High、Low、Close，其间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出日K蜡烛的类型。如果有上、下影线，则在类型后加上with 影线类型。如果两种影线都有，则输出with Lower Shadow and Upper Shadow。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">5.110</span> <span class="number">5.250</span> <span class="number">5.100</span> <span class="number">5.105</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">BW-Solid with Lower Shadow and Upper Shadow</span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">5.110</span> <span class="number">5.110</span> <span class="number">5.110</span> <span class="number">5.110</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">R-Cross</span><br><span class="line">输入样例<span class="number">3</span>：</span><br><span class="line"><span class="number">5.110</span> <span class="number">5.125</span> <span class="number">5.112</span> <span class="number">5.126</span></span><br><span class="line">输出样例<span class="number">3</span>：</span><br><span class="line">R-Hollow</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        String[] prices = line.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将输入的字符串转换为浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">open</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">high</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">low</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">2</span>]);</span><br><span class="line">        <span class="type">double</span> <span class="variable">close</span> <span class="operator">=</span> Double.parseDouble(prices[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断蜡烛的基本类型</span></span><br><span class="line">        String candleType;</span><br><span class="line">        <span class="keyword">if</span> (close &lt; open) &#123;</span><br><span class="line">            candleType = <span class="string">&quot;BW-Solid&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (close &gt; open) &#123;</span><br><span class="line">            candleType = <span class="string">&quot;R-Hollow&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            candleType = <span class="string">&quot;R-Cross&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查影线的存在</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasLowerShadow</span> <span class="operator">=</span> low &lt; Math.min(open, close);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasUpperShadow</span> <span class="operator">=</span> high &gt; Math.max(open, close);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成输出结果</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(candleType);</span><br><span class="line">        <span class="keyword">if</span> (hasLowerShadow &amp;&amp; hasUpperShadow) &#123;</span><br><span class="line">            result.append(<span class="string">&quot; with Lower Shadow and Upper Shadow&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hasLowerShadow) &#123;</span><br><span class="line">            result.append(<span class="string">&quot; with Lower Shadow&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hasUpperShadow) &#123;</span><br><span class="line">            result.append(<span class="string">&quot; with Upper Shadow&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">14</span> 求整数段和</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">给定两个整数A和B，输出从A到B的所有整数以及这些数的和。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">2</span>个整数A和B，其中−<span class="number">100</span>≤A≤B≤<span class="number">100</span>，其间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">首先顺序输出从A到B的所有整数，每<span class="number">5</span>个数字占一行，每个数字占<span class="number">5</span>个字符宽度，向右对齐。最后在一行中按Sum = X的格式输出全部数字的和X。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">-<span class="number">3</span> <span class="number">8</span></span><br><span class="line">输出样例：</span><br><span class="line">   -<span class="number">3</span>   -<span class="number">2</span>   -<span class="number">1</span>    <span class="number">0</span>    <span class="number">1</span></span><br><span class="line">    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span></span><br><span class="line">    <span class="number">7</span>    <span class="number">8</span></span><br><span class="line">Sum = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">A</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">B</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A; i &lt;= B; i++)&#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A; i &lt;= B; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(count !=<span class="number">0</span> &amp;&amp; count%<span class="number">5</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%5d&quot;</span>,i);</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;Sum = &quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">15</span> 计算圆周率</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">根据下面关系式，求圆周率的值，直到最后一项的值小于给定阈值。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span></span><br><span class="line">π</span><br><span class="line">​</span><br><span class="line"> =<span class="number">1</span>+ </span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">​</span><br><span class="line"> + </span><br><span class="line"><span class="number">3</span>×<span class="number">5</span></span><br><span class="line"><span class="number">2</span>!</span><br><span class="line">​</span><br><span class="line"> + </span><br><span class="line"><span class="number">3</span>×<span class="number">5</span>×<span class="number">7</span></span><br><span class="line"><span class="number">3</span>!</span><br><span class="line">​</span><br><span class="line"> +⋯+ </span><br><span class="line"><span class="number">3</span>×<span class="number">5</span>×<span class="number">7</span>×⋯×(2n+<span class="number">1</span>)</span><br><span class="line">n!</span><br><span class="line">​</span><br><span class="line"> +⋯</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出小于<span class="number">1</span>的阈值。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出满足阈值条件的近似圆周率，输出到小数点后<span class="number">6</span>位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">0.01</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">3.132157</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">double</span> t= in.nextDouble();</span><br><span class="line">        <span class="type">double</span> sum=<span class="number">1.0</span>;</span><br><span class="line">        <span class="type">double</span> pi=<span class="number">1.0</span>;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(pi&gt;t)&#123;</span><br><span class="line">            pi=pi*i/(<span class="number">2</span>*i+<span class="number">1</span>);</span><br><span class="line">            sum +=pi;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.6f&quot;</span>,sum*<span class="number">2</span>);<span class="comment">//这里一定要进行格式化，java不要仅仅局限于print和println的输出方式</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目2</title>
      <link href="/2024/08/18/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE2/"/>
      <url>/2024/08/18/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">7</span> <span class="number">12</span>-<span class="number">24</span>小时制</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">编写一个程序，要求用户输入<span class="number">24</span>小时制的时间，然后显示<span class="number">12</span>小时制的时间。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出带有中间的:符号（半角的冒号）的<span class="number">24</span>小时制的时间，如<span class="number">12</span>:<span class="number">34</span>表示<span class="number">12</span>点<span class="number">34</span>分。当小时或分钟数小于<span class="number">10</span>时，均没有前导的零，如<span class="number">5</span>:<span class="number">6</span>表示<span class="number">5</span>点零<span class="number">6</span>分。</span><br><span class="line"></span><br><span class="line">提示：在scanf的格式字符串中加入:，让scanf来处理这个冒号。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个时间对应的<span class="number">12</span>小时制的时间，数字部分格式与输入的相同，然后跟上空格，再跟上表示上午的字符串AM或表示下午的字符串PM。如<span class="number">5</span>:<span class="number">6</span> PM表示下午<span class="number">5</span>点零<span class="number">6</span>分。注意，在英文的习惯中，中午<span class="number">12</span>点被认为是下午，所以<span class="number">24</span>小时制的<span class="number">12</span>:<span class="number">00</span>就是<span class="number">12</span>小时制的<span class="number">12</span>:<span class="number">0</span> PM；而<span class="number">0</span>点被认为是第二天的时间，所以是<span class="number">0</span>:<span class="number">0</span> AM。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">21</span>:<span class="number">11</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">9</span>:<span class="number">11</span> PM</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取24小时制的时间</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">inputTime</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用 split 方法分割时间字符串</span></span><br><span class="line">        String[] timeParts = inputTime.split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> Integer.parseInt(timeParts[<span class="number">0</span>]); <span class="comment">// 小时部分</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> Integer.parseInt(timeParts[<span class="number">1</span>]); <span class="comment">// 分钟部分</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 确定AM或PM以及调整小时</span></span><br><span class="line">        String period;</span><br><span class="line">        <span class="keyword">if</span> (hour &gt;= <span class="number">12</span>) &#123;</span><br><span class="line">            period = <span class="string">&quot;PM&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (hour &gt; <span class="number">12</span>) &#123;</span><br><span class="line">                hour -= <span class="number">12</span>; <span class="comment">// 将13-23时转换为1-11时</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hour == <span class="number">0</span>) &#123;</span><br><span class="line">                hour = <span class="number">12</span>; <span class="comment">// 处理24小时制的0点，即12:xx AM</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            period = <span class="string">&quot;AM&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (hour == <span class="number">0</span>) &#123;</span><br><span class="line">                hour = <span class="number">0</span>; <span class="comment">// 处理24小时制的0点，即12:xx AM</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 格式化输出</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%d:%d %s\n&quot;</span>, hour, minute, period);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">8</span> 超速判断</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 杨起帆</span><br><span class="line">单位 浙大城市学院</span><br><span class="line">模拟交通警察的雷达测速仪。输入汽车速度，如果速度超出<span class="number">60</span> mph，则显示“Speeding”，否则显示“OK”。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">1</span>个不超过<span class="number">500</span>的非负整数，即雷达测到的车速。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出测速仪显示结果，格式为：Speed: V - S，其中V是车速，S或者是Speeding、或者是OK。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">40</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line">Speed: <span class="number">40</span> - OK</span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">75</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line">Speed: <span class="number">75</span> - Speeding</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">v</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(v &lt;= <span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Speed: &quot;</span>+v+<span class="string">&quot; - &quot;</span>+<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Speed: &quot;</span>+v+<span class="string">&quot; - &quot;</span>+<span class="string">&quot;Speeding&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">9</span> 用天平找小球</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 C课程组</span><br><span class="line">单位 浙江大学</span><br><span class="line">三个球A、B、C，大小形状相同且其中有一个球与其他球重量不同。要求找出这个不一样的球。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">3</span>个正整数，顺序对应球A、B、C的重量。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出唯一的那个不一样的球。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line">输出样例：</span><br><span class="line">C</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取输入</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">weightA</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">weightB</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">weightC</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        scanner.close();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 找出不一样的球</span></span><br><span class="line">        <span class="keyword">if</span> (weightA != weightB &amp;&amp; weightA != weightC) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weightB != weightA &amp;&amp; weightB != weightC) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weightC != weightA &amp;&amp; weightC != weightB) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">10</span> 计算工资</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 沈睿</span><br><span class="line">单位 浙江大学</span><br><span class="line">某公司员工的工资计算方法如下：一周内工作时间不超过<span class="number">40</span>小时，按正常工作时间计酬；超出<span class="number">40</span>小时的工作时间部分，按正常工作时间报酬的<span class="number">1.5</span>倍计酬。员工按进公司时间分为新职工和老职工，进公司不少于<span class="number">5</span>年的员工为老职工，<span class="number">5</span>年以下的为新职工。新职工的正常工资为<span class="number">30</span>元/小时，老职工的正常工资为<span class="number">50</span>元/小时。请按该计酬方式计算员工的工资。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">2</span>个正整数，分别为某员工入职年数和周工作时间，其间以空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行输出该员工的周薪，精确到小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">5</span> <span class="number">40</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">2000.00</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">3</span> <span class="number">50</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">1650.00</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">double</span> money=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(age&gt;=<span class="number">5</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(hour &gt;= <span class="number">40</span>)&#123;</span><br><span class="line">                money=<span class="number">50</span>*<span class="number">40</span>*<span class="number">1.0</span>+<span class="number">1.5</span>*(hour-<span class="number">40</span>)*<span class="number">1.0</span>*<span class="number">50</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                money = <span class="number">50</span> * hour*<span class="number">1.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(hour &gt;= <span class="number">40</span>)&#123;</span><br><span class="line">                money = <span class="number">30</span>*<span class="number">40</span>*<span class="number">1.0</span>+<span class="number">1.5</span>*(hour-<span class="number">40</span>)*<span class="number">1.0</span>*<span class="number">30</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                money = <span class="number">30</span> * hour*<span class="number">1.0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f&quot;</span>,money);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">11</span> 分段计算居民水费</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 沈睿</span><br><span class="line">单位 浙江大学</span><br><span class="line">为鼓励居民节约用水，自来水公司采取按用水量阶梯式计价的办法，居民应交水费y（元）与月用水量x（吨）相关：当x不超过<span class="number">15</span>吨时，y=4x/<span class="number">3</span>；超过后，y=<span class="number">2.</span>5x−<span class="number">17.5</span>。请编写程序实现水费的计算。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出非负实数x。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行输出应交的水费，精确到小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例<span class="number">1</span>：</span><br><span class="line"><span class="number">12</span></span><br><span class="line">输出样例<span class="number">1</span>：</span><br><span class="line"><span class="number">16.00</span></span><br><span class="line">输入样例<span class="number">2</span>：</span><br><span class="line"><span class="number">16</span></span><br><span class="line">输出样例<span class="number">2</span>：</span><br><span class="line"><span class="number">22.50</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">double</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=<span class="number">15</span>)&#123;</span><br><span class="line">            y = <span class="number">1.0</span>*<span class="number">4</span>*x/<span class="number">3</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            y = <span class="number">2.5</span>*x-<span class="number">17.5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f&quot;</span>,y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span><span class="number">-1</span> 简单输出整数</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求实现一个函数，对给定的正整数N，打印从<span class="number">1</span>到N的全部正整数。</span><br><span class="line"></span><br><span class="line">函数接口定义：</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span> <span class="params">( <span class="type">int</span> N )</span>;</span><br><span class="line">其中N是用户传入的参数。该函数必须将从<span class="number">1</span>到N的全部正整数顺序打印出来，每个数字占<span class="number">1</span>行。</span><br><span class="line"></span><br><span class="line">裁判测试程序样例：</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span> <span class="params">( <span class="type">int</span> N )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    PrintN( N );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">3</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">    </span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span> <span class="params">( <span class="type">int</span> N )</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础题目1</title>
      <link href="/2024/08/17/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE1/"/>
      <url>/2024/08/17/Java%E5%9F%BA%E7%A1%80%E9%A2%98%E7%9B%AE1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">1</span> 厘米换算英尺英寸</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">如果已知英制长度的英尺foot和英寸inch的值，那么对应的米是(foot+inch/<span class="number">12</span>)×<span class="number">0.3048</span>。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了<span class="number">1</span>英尺等于<span class="number">12</span>英寸。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出<span class="number">1</span>个正整数，单位是厘米。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。英寸的值应小于<span class="number">12</span>。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">170</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">5</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cm</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        cm=sc.nextInt();</span><br><span class="line">        <span class="type">double</span> <span class="variable">m</span> <span class="operator">=</span> cm/<span class="number">100.0</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalinch</span> <span class="operator">=</span> m/<span class="number">0.3048</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">inch</span> <span class="operator">=</span> (<span class="type">int</span>)totalinch;</span><br><span class="line">        <span class="type">int</span> <span class="variable">feet</span> <span class="operator">=</span> (<span class="type">int</span>)((totalinch-inch)*<span class="number">12</span>);</span><br><span class="line">        System.out.print(inch+<span class="string">&quot; &quot;</span>+feet);</span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">2</span> 然后是几点</span><br><span class="line">分数 <span class="number">15</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">有时候人们用四位数字表示一个时间，比如 <span class="number">1106</span> 表示 <span class="number">11</span> 点零 <span class="number">6</span> 分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。</span><br><span class="line"></span><br><span class="line">读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，例如 <span class="number">5</span> 点 <span class="number">30</span> 分表示为 <span class="number">530</span>；<span class="number">0</span> 点 <span class="number">30</span> 分表示为 <span class="number">030</span>。注意，第二个数字表示的分钟数可能超过 <span class="number">60</span>，也可能是负数。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出 <span class="number">2</span> 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即 <span class="number">5</span> 点 <span class="number">30</span> 分表示为 <span class="number">530</span>；<span class="number">0</span> 点 <span class="number">30</span> 分表示为 <span class="number">030</span>。流逝的分钟数可能超过 <span class="number">60</span>，也可能是负数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。题目保证起始时间和终止时间在同一天内。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">1120</span> <span class="number">110</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1310</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取输入的起始时间和流逝的分钟数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">time1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">minutesPassed</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 拆分起始时间为小时和分钟</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">startHour</span> <span class="operator">=</span> time1/<span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">startMinute</span> <span class="operator">=</span> time1%<span class="number">100</span>;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算起始时间的总分钟数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalMinutes</span> <span class="operator">=</span> startHour*<span class="number">60</span>+startMinute;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算新的总分钟数</span></span><br><span class="line">        totalMinutes += minutesPassed;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算新的小时和分钟</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">newHour</span> <span class="operator">=</span> totalMinutes/<span class="number">60</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">newMinute</span> <span class="operator">=</span> totalMinutes%<span class="number">60</span>;</span><br><span class="line">         <span class="comment">// 处理小时数，确保在0到23之间</span></span><br><span class="line">        newHour = newHour%<span class="number">24</span>;</span><br><span class="line">        newMinute = newMinute%<span class="number">60</span>;</span><br><span class="line">              <span class="comment">// 处理分钟数，确保在0到59之间</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 格式化输出，确保小时和分钟都是两位数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%d%02d%n&quot;</span>,newHour,newMinute);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">3</span> 逆序的三位数</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">程序每次读入一个正<span class="number">3</span>位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的<span class="number">0</span>时，输出不应带有前导的<span class="number">0</span>。比如输入<span class="number">700</span>，输出应该是<span class="number">7</span>。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">每个测试是一个<span class="number">3</span>位的正整数。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出按位逆序的数。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">123</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">321</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> m%<span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> m/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> m/<span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> a*<span class="number">100</span>+b*<span class="number">10</span>+c;</span><br><span class="line">        sc.close();</span><br><span class="line">        System.out.print(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">4</span> BCD解密</span><br><span class="line">分数 <span class="number">10</span></span><br><span class="line">作者 翁恺</span><br><span class="line">单位 浙江大学</span><br><span class="line">BCD数是用一个字节来表达两位十进制的数，每四个比特表示一位。所以如果一个BCD数的十六进制是<span class="number">0x12</span>，它表达的就是十进制的<span class="number">12</span>。但是小明没学过BCD，把所有的BCD数都当作二进制数转换成十进制输出了。于是BCD的<span class="number">0x12</span>被输出成了十进制的<span class="number">18</span>了！</span><br><span class="line"></span><br><span class="line">现在，你的程序要读入这个错误的十进制数，然后输出正确的十进制数。提示：你可以把<span class="number">18</span>转换回<span class="number">0x12</span>，然后再转换回<span class="number">12</span>。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中给出一个[<span class="number">0</span>, <span class="number">153</span>]范围内的正整数，保证能转换回有效的BCD数，也就是说这个整数转换成十六进制时不会出现A-F的数字。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">输出对应的十进制数。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">18</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">12</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">incorrect</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        incorrect = sc.nextInt();</span><br><span class="line">        sc.close();</span><br><span class="line">        <span class="type">int</span> <span class="variable">lowbyte</span> <span class="operator">=</span> incorrect &amp; <span class="number">0x0F</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">highbyte</span> <span class="operator">=</span> (<span class="type">int</span>)(incorrect &gt;&gt; <span class="number">4</span>)&amp;<span class="number">0x0F</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">correct</span> <span class="operator">=</span> highbyte*<span class="number">10</span>+lowbyte;</span><br><span class="line">        System.out.println(correct);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">5</span> 表格输出</span><br><span class="line">分数 <span class="number">5</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，按照规定格式输出表格。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">本题目没有输入。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">要求严格按照给出的格式输出下列表格：</span><br><span class="line"></span><br><span class="line">------------------------------------</span><br><span class="line">Province      <span class="title function_">Area</span><span class="params">(km2)</span>   Pop.(10K)</span><br><span class="line">------------------------------------</span><br><span class="line">Anhui         <span class="number">139600.00</span>   <span class="number">6461.00</span></span><br><span class="line">Beijing        <span class="number">16410.54</span>   <span class="number">1180.70</span></span><br><span class="line">Chongqing      <span class="number">82400.00</span>   <span class="number">3144.23</span></span><br><span class="line">Shanghai        <span class="number">6340.50</span>   <span class="number">1360.26</span></span><br><span class="line">Zhejiang      <span class="number">101800.00</span>   <span class="number">4894.00</span></span><br><span class="line">------------------------------------</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Province      Area(km2)   Pop.(10K)&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Anhui         139600.00   6461.00&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Beijing        16410.54   1180.70&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Chongqing      82400.00   3144.23&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Shanghai        6340.50   1360.26&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Zhejiang      101800.00   4894.00&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>-<span class="number">6</span> 混合类型数据格式化输入</span><br><span class="line">分数 <span class="number">5</span></span><br><span class="line">作者 乔林</span><br><span class="line">单位 清华大学</span><br><span class="line">本题要求编写程序，顺序读入浮点数<span class="number">1</span>、整数、字符、浮点数<span class="number">2</span>，再按照字符、整数、浮点数<span class="number">1</span>、浮点数<span class="number">2</span>的顺序输出。</span><br><span class="line"></span><br><span class="line">输入格式：</span><br><span class="line">输入在一行中顺序给出浮点数<span class="number">1</span>、整数、字符、浮点数<span class="number">2</span>，其间以<span class="number">1</span>个空格分隔。</span><br><span class="line"></span><br><span class="line">输出格式：</span><br><span class="line">在一行中按照字符、整数、浮点数<span class="number">1</span>、浮点数<span class="number">2</span>的顺序输出，其中浮点数保留小数点后<span class="number">2</span>位。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">2.12</span> <span class="number">88</span> c <span class="number">4.7</span></span><br><span class="line">输出样例：</span><br><span class="line">c <span class="number">88</span> <span class="number">2.12</span> <span class="number">4.70</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取输入</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">float1</span> <span class="operator">=</span> sc.nextDouble(); <span class="comment">// 读取第一个浮点数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">integer</span> <span class="operator">=</span> sc.nextInt();      <span class="comment">// 读取整数</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">character</span> <span class="operator">=</span> sc.next().charAt(<span class="number">0</span>); <span class="comment">// 读取字符</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">float2</span> <span class="operator">=</span> sc.nextDouble(); <span class="comment">// 读取第二个浮点数</span></span><br><span class="line"></span><br><span class="line">        sc.close(); <span class="comment">// 关闭 Scanner</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按照指定格式输出</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%c %d %.2f %.2f\n&quot;</span>, character, integer, float1, float2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">6</span><span class="number">-10</span> 阶乘计算升级版</span><br><span class="line">分数 <span class="number">20</span></span><br><span class="line">作者 陈越</span><br><span class="line">单位 浙江大学</span><br><span class="line">本题要求实现一个打印非负整数阶乘的函数。</span><br><span class="line"></span><br><span class="line">函数接口定义：</span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Factorial</span> <span class="params">( <span class="type">const</span> <span class="type">int</span> N )</span>;</span><br><span class="line">其中N是用户传入的参数，其值不超过<span class="number">1000</span>。如果N是非负整数，则该函数必须在一行中打印出N!的值，否则打印“Invalid input”。</span><br><span class="line"></span><br><span class="line">裁判测试程序样例：</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Factorial</span> <span class="params">( <span class="type">const</span> <span class="type">int</span> N )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    Print_Factorial(N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br><span class="line">输入样例：</span><br><span class="line"><span class="number">15</span></span><br><span class="line">输出样例：</span><br><span class="line"><span class="number">1307674368000</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Factorial</span><span class="params">(<span class="type">int</span> N)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (N &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid input\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化存储阶乘结果的数组</span></span><br><span class="line">    <span class="type">int</span> factorial[<span class="number">10000</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 阶乘的初始值是 1 (即 1! = 1)</span></span><br><span class="line">    <span class="type">int</span> length = <span class="number">1</span>;</span><br><span class="line">    factorial[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算阶乘</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="type">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 逐位乘以当前的数 i</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">            <span class="type">int</span> product = factorial[j] * i + carry;</span><br><span class="line">            factorial[j] = product % <span class="number">10</span>; <span class="comment">// 存储当前位</span></span><br><span class="line">            carry = product / <span class="number">10</span>;        <span class="comment">// 进位</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理最后的进位</span></span><br><span class="line">        <span class="keyword">while</span> (carry &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            factorial[length] = carry % <span class="number">10</span>;</span><br><span class="line">            carry /= <span class="number">10</span>;</span><br><span class="line">            length++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印结果（从高位到低位）</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, factorial[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java1</title>
      <link href="/2024/08/15/java1/"/>
      <url>/2024/08/15/java1/</url>
      
        <content type="html"><![CDATA[<h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>1.随便新建一个文件夹，存放代码</p><p>2.新建一个Java文件</p><ul><li><p>文件后缀名为.java</p></li><li><p>Hello.java</p></li><li><p>【注意点】系统可能没有显示文件后缀名</p></li></ul><p>3.编写代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;Hello,World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.编译javac java文件，会生成一个class文件</p><p>5.运行class文件，java class文件</p><p><img src="/../image/java1.png"></p><h2 id="可能会遇到的情况"><a href="#可能会遇到的情况" class="headerlink" title="可能会遇到的情况"></a>可能会遇到的情况</h2><p>1.每个单词的大小写不能出现问题，<strong>Java是大小写敏感的</strong>；</p><p>2.尽量使用英文；</p><p>3.文件名和类名必须保持一直，并且首字母大写</p><p>4.符号使用了中文的</p><h2 id="Scanner的使用"><a href="#Scanner的使用" class="headerlink" title="Scanner的使用"></a>Scanner的使用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;使用next方式接收:&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出的内容为：&quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;使用nextLine方式接受：&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出内容为：&quot;</span>+str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数据：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;输出的内容为：&quot;</span>+str);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            i = scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的数字为：&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是整数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入小数：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextFloat())&#123;</span><br><span class="line">            f = scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的小数为：&quot;</span>+f);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是浮点数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">                <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">                sum += x;</span><br><span class="line">                m++;</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入了第&quot;</span> + m + <span class="string">&quot;个数据,当前结果sum=&quot;</span> + sum);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(m + <span class="string">&quot;个数的和为&quot;</span> + sum);</span><br><span class="line">            System.out.println(m + <span class="string">&quot;个数的平均值是&quot;</span> + (sum / m));</span><br><span class="line">            scanner.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if结构"><a href="#if结构" class="headerlink" title="if结构"></a>if结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ifDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;Hello&quot;</span>))&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;End&quot;</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ifDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(score&gt;<span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="switch结构"><a href="#switch结构" class="headerlink" title="switch结构"></a>switch结构</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">switchDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (grade) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;再接再厉&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;挂科&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">switchDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;秦疆&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (name) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;秦疆&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;秦疆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;狂神&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;狂神&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;弄啥嘞&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="whlie循环"><a href="#whlie循环" class="headerlink" title="whlie循环"></a>whlie循环</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">whileDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">whileDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">            sum = sum + i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum1</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum2</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                sum1+=i;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sum2+=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;奇数和为：&quot;</span>+sum1);</span><br><span class="line">        System.out.println(<span class="string">&quot;偶数和为：&quot;</span>+sum2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i%(<span class="number">5</span>*<span class="number">3</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;*&quot;</span>+j+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">forDemo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] numbers = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LabelDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        outer:<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">101</span>;i&lt;<span class="number">150</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>;j&lt;i/<span class="number">2</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i%j==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">continue</span> outer;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">5</span>;j&gt;i;j--)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> max(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a==b&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">            result = a;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result = b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>方法名称必须相同</li><li>参数列表必须不同(个数不同、或类型不同、参数排列顺序不同等)</li><li>方法的返回类型可用相同也可以不相同</li><li>仅仅返回类型不同不足以成为方法的重载</li></ul><h3 id="实现理论"><a href="#实现理论" class="headerlink" title="实现理论"></a>实现理论</h3><p>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错</p><h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><ul><li>JDK1.5开始，Java支持传递同类型的可变参数给一个方法</li><li>在方法声明中，在知道参数类型后加一个省略号(…)</li><li>一个方法中只能指定一个可变参数，它必须是方法的最后一个参数。任何普通的参数必须在它之前声明</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        printMax(<span class="number">32</span>,<span class="number">43</span>,<span class="number">67</span>,<span class="number">36</span>,<span class="number">26</span>);</span><br><span class="line">        printMax(<span class="keyword">new</span> <span class="title class_">double</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMax</span><span class="params">(<span class="type">double</span>... numbers)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(numbers == <span class="literal">null</span> || numbers.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> numbers[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(max &lt; numbers[i]) &#123;</span><br><span class="line">                max = numbers[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(multiple(<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">multiple</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a ==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a*multiple(a-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] nums;</span><br><span class="line">        nums = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            nums[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum = &quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLOutput;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] array=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line">        System.out.println(array[<span class="number">0</span>][<span class="number">0</span>])&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>市面app加固情况</title>
      <link href="/2024/08/14/%E5%B8%82%E9%9D%A2app%E5%8A%A0%E5%9B%BA%E6%83%85%E5%86%B5/"/>
      <url>/2024/08/14/%E5%B8%82%E9%9D%A2app%E5%8A%A0%E5%9B%BA%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<p>可用jadx自带的反混淆</p><p><img src="/../image/appfhx.png"></p><h4 id="下载wallbreaker"><a href="#下载wallbreaker" class="headerlink" title="下载wallbreaker"></a>下载wallbreaker</h4><p>用于绕过软件的保护机制</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hluwa/Wallbreaker</span><br></pre></td></tr></table></figure><h4 id="加载wallbreaker"><a href="#加载wallbreaker" class="headerlink" title="加载wallbreaker"></a>加载wallbreaker</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin load /root/桌面/lesson4/Wallbreaker</span><br></pre></td></tr></table></figure><h4 id="查询类"><a href="#查询类" class="headerlink" title="查询类"></a>查询类</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin wallbreaker objectsearch app.huawei.auto.message.ui.MessageMainActivity</span><br></pre></td></tr></table></figure><h4 id="查询类的结构"><a href="#查询类的结构" class="headerlink" title="查询类的结构"></a>查询类的结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin wallbreaker objectdump 0x2b5a(0x2b5a为搜索出来的编号)</span><br></pre></td></tr></table></figure><h4 id="使用github-frida-fart"><a href="#使用github-frida-fart" class="headerlink" title="使用github frida_fart"></a>使用github frida_fart</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hanbinglengyue/FART</span><br></pre></td></tr></table></figure><h4 id="使用frida-fart反射脱壳"><a href="#使用frida-fart反射脱壳" class="headerlink" title="使用frida_fart反射脱壳"></a>使用frida_fart反射脱壳</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查找</span><br><span class="line">find /root/桌面/lesson4/FART/frida_fart -name &quot;frida_fart_reflection.js&quot;</span><br><span class="line">在vscode的终端中</span><br><span class="line">frida -UF -l /root/桌面/lesson4/FART/frida_fart/frida_fart_reflection.js </span><br><span class="line">执行fart函数</span><br><span class="line">fart()</span><br></pre></td></tr></table></figure><p>这个一直失败，实在无法解决</p><h4 id="使用frida-fart-hook方式"><a href="#使用frida-fart-hook方式" class="headerlink" title="使用frida_fart hook方式"></a>使用frida_fart hook方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida -U -f app.huawei.motor -l /root/桌面/lesson4/FART/frida_fart/frida_fart_hook.js --no-pause</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>了解APP加固技术</title>
      <link href="/2024/08/14/%E4%BA%86%E8%A7%A3APP%E5%8A%A0%E5%9B%BA%E6%8A%80%E6%9C%AF/"/>
      <url>/2024/08/14/%E4%BA%86%E8%A7%A3APP%E5%8A%A0%E5%9B%BA%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>这个不知道讲了什么。。。蛮记录下</p><h2 id="常见混淆"><a href="#常见混淆" class="headerlink" title="常见混淆"></a>常见混淆</h2><h3 id="资源混淆"><a href="#资源混淆" class="headerlink" title="资源混淆"></a>资源混淆</h3><p><a href="https://github.com/shwenzhang/AndResGuard">https://github.com/shwenzhang/AndResGuard</a></p><h3 id="代码混淆"><a href="#代码混淆" class="headerlink" title="代码混淆"></a>代码混淆</h3><h4 id="ProGuard"><a href="#ProGuard" class="headerlink" title="ProGuard"></a>ProGuard</h4><p>ProGuard是一个开源的Java代码混淆器，在Android中一提起ProGuard,我们通常第一想到的是用来混淆代码的，其实它的功能并不仅限于此，有以下四个功能：<br>（1）压缩(Shrink):侦测并移除代码中无用的类、字段、方法和特性<br>（2）优化(<a href="https://so.csdn.net/so/search?q=Optimize&spm=1001.2101.3001.7020">Optimize</a>):对字节码进行优化，移除无用的指令<br>（3）混淆(Obfuscate):使用a,b,c,d这样简短而无意义的名称，对类、字段和方法进行重命名<br>（4）预检(Preverify):在Java平台上对处理后的代码进行预检</p><h3 id="字符串加解密"><a href="#字符串加解密" class="headerlink" title="字符串加解密"></a>字符串加解密</h3><p><a href="https://mp.weixin.qq.com/s/SRv1Oar87w1iKuDXS4oaew">https://mp.weixin.qq.com/s/SRv1Oar87w1iKuDXS4oaew</a></p><h4 id="ollvm混淆"><a href="#ollvm混淆" class="headerlink" title="ollvm混淆"></a>ollvm混淆</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p> OLLVM是一个流行的代码混淆工具，常用于国内移动安全领域。其主要混淆技术包括控制流平坦化、虚假控制流和指令替代，这些方法能有效提高代码的反逆向工程能力。开发者可以通过GitHub上的源码研究其实现细节，学习如何利用OLLVM来保护自己的代码</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FRIDA轻量化内存脱壳</title>
      <link href="/2024/08/13/FRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98%E8%84%B1%E5%A3%B3/"/>
      <url>/2024/08/13/FRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98%E8%84%B1%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<h4 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/pyenv/pyenv.git ~/.pyenv</span><br><span class="line">echo &#x27;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;command -v pyenv &gt;/dev/null || export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;eval &quot;$(pyenv init -)&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">exec &quot;$SHELL&quot;</span><br></pre></td></tr></table></figure><h4 id="安装pyenv版本"><a href="#安装pyenv版本" class="headerlink" title="安装pyenv版本"></a>安装pyenv版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyenv install 3.8.0</span><br><span class="line">pyenv local system 让python变成系统版本</span><br><span class="line">（安装失败）</span><br><span class="line">apt update</span><br><span class="line">apt install -y libbz2-dev libreadline-dev libssl-dev zlib1g-dev</span><br><span class="line">查看版本</span><br><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><h4 id="安装frida"><a href="#安装frida" class="headerlink" title="安装frida"></a>安装frida</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install frida==12.8.0</span><br><span class="line">pip install frida-tools==5.3.0</span><br><span class="line">pip install objection==1.8.4</span><br><span class="line">frida --version</span><br><span class="line">frdia-ps --version</span><br><span class="line">objection version</span><br><span class="line">直接安装最新的</span><br><span class="line">pip install objection</span><br></pre></td></tr></table></figure><h4 id="将jadx加入环境"><a href="#将jadx加入环境" class="headerlink" title="将jadx加入环境"></a>将jadx加入环境</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打开文件</span><br><span class="line">nano ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=$PATH:/root/桌面/jadx/bin&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="使用命令将手机中的apk放到虚拟机"><a href="#使用命令将手机中的apk放到虚拟机" class="headerlink" title="使用命令将手机中的apk放到虚拟机"></a>使用命令将手机中的apk放到虚拟机</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/Android/data/com.coolapk.market/files/Download/鸿蒙智行-1.2.4.310-120403100-941817.apk</span><br></pre></td></tr></table></figure><h4 id="连接到目标应用，启动交互式通话"><a href="#连接到目标应用，启动交互式通话" class="headerlink" title="连接到目标应用，启动交互式通话"></a>连接到目标应用，启动交互式通话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objection -g app.huawei.motor explore</span><br></pre></td></tr></table></figure><h4 id="推送-frida-server-到-Android-设备"><a href="#推送-frida-server-到-Android-设备" class="headerlink" title="推送 frida-server 到 Android 设备"></a>推送 <code>frida-server</code> 到 Android 设备</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push /root/下载/frida-inject-12.11.8-android-arm64 /data/local/tmp</span><br></pre></td></tr></table></figure><h4 id="设置权限并启动-frida-server，一定一定要给权限，否则会报错误ProcessNotFoundError-unable-to-find-process-with-name-‘system-server’"><a href="#设置权限并启动-frida-server，一定一定要给权限，否则会报错误ProcessNotFoundError-unable-to-find-process-with-name-‘system-server’" class="headerlink" title="设置权限并启动 frida-server，一定一定要给权限，否则会报错误ProcessNotFoundError: unable to find process with name ‘system_server’"></a>设置权限并启动 <code>frida-server</code>，一定一定要给权限，否则会报错误ProcessNotFoundError: unable to find process with name ‘system_server’</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell &quot;chmod 755 /data/local/tmp/frida-server-12.8.0-android-arm64&quot;</span><br><span class="line">adb shell &quot;su -c &#x27;/data/local/tmp/frida-server-12.8.0-android-arm64 &amp;&#x27;&quot;</span><br><span class="line">使用以下命令检查正在监听的端口</span><br><span class="line">adb shell netstat -an | grep 27042</span><br><span class="line">通过 ps 命令列出所有进程，并手动查找可能占用端口的进程</span><br><span class="line">adb shell ps | grep frida-server</span><br><span class="line">一旦找出占用端口的进程 PID（假设是 1234），可以终止它：</span><br><span class="line"> adb shell su -c &#x27;kill -9 1234&#x27;</span><br></pre></td></tr></table></figure><h4 id="特别注意下，objection-g-app-huawei-motor-explore没反应的原因是Objection依赖有问题"><a href="#特别注意下，objection-g-app-huawei-motor-explore没反应的原因是Objection依赖有问题" class="headerlink" title="特别注意下，objection -g app.huawei.motor explore没反应的原因是Objection依赖有问题"></a>特别注意下，objection -g app.huawei.motor explore没反应的原因是Objection依赖有问题</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install --upgrade objection</span><br></pre></td></tr></table></figure><h4 id="列出所有activity"><a href="#列出所有activity" class="headerlink" title="列出所有activity"></a>列出所有activity</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android hooking list activities</span><br></pre></td></tr></table></figure><h4 id="启动某个activity"><a href="#启动某个activity" class="headerlink" title="启动某个activity"></a>启动某个activity</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android intent launch_activity app.huawei.auto.im.ui.chat.SearchChatRecordActivity</span><br></pre></td></tr></table></figure><h4 id="配置dexdump"><a href="#配置dexdump" class="headerlink" title="配置dexdump"></a>配置dexdump</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hluwa/FRIDA_DEXDump ~/Downloads/FRIDA-DEXDump</span><br></pre></td></tr></table></figure><h4 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg -i /root/下载/code_1.92.1-1723066302_amd64.deb</span><br><span class="line">处理依赖问题</span><br><span class="line">apt-get install -f</span><br><span class="line">以root用户运行</span><br><span class="line">code --no-sandbox --user-data-dir=/root/.vscode-data</span><br></pre></td></tr></table></figure><h4 id="使用frida-dexdump"><a href="#使用frida-dexdump" class="headerlink" title="使用frida-dexdump"></a>使用frida-dexdump</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">frida-dexdump -FU</span><br></pre></td></tr></table></figure><h4 id="打开当前目录"><a href="#打开当前目录" class="headerlink" title="打开当前目录"></a>打开当前目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">thunar .</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep -ril &quot;MainActivity&quot;</span><br></pre></td></tr></table></figure><h4 id="读文件大小"><a href="#读文件大小" class="headerlink" title="读文件大小"></a>读文件大小</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">du -h 0xc18a0000.dex</span><br><span class="line">解释命令部分</span><br><span class="line">du：du（disk usage）是一个用于显示文件和目录的磁盘使用情况的命令行工具。它可以计算和显示指定文件或目录的磁盘使用空间。</span><br><span class="line"></span><br><span class="line">-h：这是一个选项，表示“human-readable”（人类可读的格式）。它使 du 以易于阅读的格式显示文件或目录的大小（例如，使用 KB、MB、GB 等单位）。</span><br><span class="line"></span><br><span class="line">0xc18a0000.dex：这是一个文件名。在这个例子中，0xc18a0000.dex 是你想要检查其大小的文件。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>体验FRIDA轻量化内存dump脱壳</title>
      <link href="/2024/08/11/%E4%BD%93%E9%AA%8CFRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98dump%E8%84%B1%E5%A3%B3/"/>
      <url>/2024/08/11/%E4%BD%93%E9%AA%8CFRIDA%E8%BD%BB%E9%87%8F%E5%8C%96%E5%86%85%E5%AD%98dump%E8%84%B1%E5%A3%B3/</url>
      
        <content type="html"><![CDATA[<h4 id="切换python版本"><a href="#切换python版本" class="headerlink" title="切换python版本"></a>切换python版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyenv local 3.8.0</span><br><span class="line">pyenv local 3.8.5</span><br></pre></td></tr></table></figure><h4 id="启动jeb"><a href="#启动jeb" class="headerlink" title="启动jeb"></a>启动jeb</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若是权限不够要赋予权限</span><br><span class="line">chmod +x jeb_linux.sh</span><br><span class="line"></span><br><span class="line">./jeb_linux.sh</span><br></pre></td></tr></table></figure><h4 id="使用命令将手机中的apk放到虚拟机"><a href="#使用命令将手机中的apk放到虚拟机" class="headerlink" title="使用命令将手机中的apk放到虚拟机"></a>使用命令将手机中的apk放到虚拟机</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/Android/data/com.coolapk.market/files/Download/鸿蒙智行-1.2.4.310-120403100-941817.apk</span><br></pre></td></tr></table></figure><h4 id="将jadx加入环境变量"><a href="#将jadx加入环境变量" class="headerlink" title="将jadx加入环境变量"></a>将jadx加入环境变量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;export PATH=$PATH:/root/桌面/jadx-1.2.0/bin&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="用jadx打开"><a href="#用jadx打开" class="headerlink" title="用jadx打开"></a>用jadx打开</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jadx-gui 鸿蒙智行-1.2.4.310-120403100-941817.apk</span><br></pre></td></tr></table></figure><p>frida-server缺失了就去下，注意要下Android的arm64，否则无法执行下面指令</p><h4 id="连接到目标应用，启动交互式通话"><a href="#连接到目标应用，启动交互式通话" class="headerlink" title="连接到目标应用，启动交互式通话"></a>连接到目标应用，启动交互式通话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objection -g app.huawei.motor explore</span><br></pre></td></tr></table></figure><h4 id="列出所有activity"><a href="#列出所有activity" class="headerlink" title="列出所有activity"></a>列出所有activity</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android hooking list activityies</span><br></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 解压 APK 文件</span><br><span class="line">unzip /root/桌面/鸿蒙智行-1.2.4.310-120403100-941817.apk -d /root/桌面/鸿蒙智行</span><br><span class="line">2. 找到 DEX 文件</span><br><span class="line">find /root/桌面/鸿蒙智行 -name &quot;*.dex&quot;</span><br><span class="line">3. 使用 frida-dexdump 分析 DEX 文件</span><br><span class="line">frida-dexdump -f /root/桌面/鸿蒙智行/classes.dex</span><br><span class="line">确保将 classes.dex 替换为你实际找到的 DEX 文件的路径。</span><br></pre></td></tr></table></figure><h4 id="如果需要使用-root-用户"><a href="#如果需要使用-root-用户" class="headerlink" title="如果需要使用 root 用户"></a>如果需要使用 <code>root</code> 用户</h4><p>如果你必须以 <code>root</code> 用户身份启动 VS Code（尽管不推荐），你可以使用 <code>--no-sandbox</code> 参数。运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo code --no-sandbox --user-data-dir=$HOME/.vscode-data</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>逆向环境配置</title>
      <link href="/2024/08/10/%E9%80%86%E5%90%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/08/10/%E9%80%86%E5%90%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="install-vmtools"><a href="#install-vmtools" class="headerlink" title="install vmtools"></a>install vmtools</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /media/cdrom0</span><br><span class="line"></span><br><span class="line">cp /media/cdrom0/VMwareTools-*.tar.gz ~/</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">tar -zxvf VMwareTools-*.tar.gz</span><br><span class="line"></span><br><span class="line">cd vmware-tools-distrib</span><br><span class="line">sudo ./vmware-install.pl</span><br><span class="line">或者：</span><br><span class="line">sudo apt install open-vm-tools-desktop -y</span><br></pre></td></tr></table></figure><h3 id="更新时区"><a href="#更新时区" class="headerlink" title="更新时区"></a>更新时区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure><h3 id="切换中文"><a href="#切换中文" class="headerlink" title="切换中文"></a>切换中文</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg-reconfigure locales</span><br><span class="line">重启</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="回退到bash"><a href="#回退到bash" class="headerlink" title="回退到bash"></a>回退到bash</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/bash</span><br></pre></td></tr></table></figure><h3 id="下载Android-studio"><a href="#下载Android-studio" class="headerlink" title="下载Android studio"></a>下载Android studio</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.1.1.12/android-studio-2024.1.1.12-linux.tar.gz</span><br></pre></td></tr></table></figure><h3 id="启动Android-studio"><a href="#启动Android-studio" class="headerlink" title="启动Android studio"></a>启动Android studio</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要在bin目录下</span><br><span class="line">./studio.sh</span><br></pre></td></tr></table></figure><h4 id="启动jadx"><a href="#启动jadx" class="headerlink" title="启动jadx"></a>启动jadx</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要在bin目录下</span><br><span class="line">./jadx-gui</span><br></pre></td></tr></table></figure><h4 id="添加Android-SDK路径"><a href="#添加Android-SDK路径" class="headerlink" title="添加Android SDK路径"></a>添加Android SDK路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;export ANDROID_HOME=/root/Android/Sdk&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=$PATH:$ANDROID_HOME/platform-tools&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="启动jeb"><a href="#启动jeb" class="headerlink" title="启动jeb"></a>启动jeb</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提权</span><br><span class="line">chmod +x +jeb_linux.sh</span><br><span class="line">启动</span><br><span class="line">./jeb_linux.sh</span><br></pre></td></tr></table></figure><h4 id="添加jadx路径"><a href="#添加jadx路径" class="headerlink" title="添加jadx路径"></a>添加jadx路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;export PATH=$PATH:/root/Desktop/jeb/bin&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Smali汇编</title>
      <link href="/2024/08/09/Smali%E6%B1%87%E7%BC%96/"/>
      <url>/2024/08/09/Smali%E6%B1%87%E7%BC%96/</url>
      
        <content type="html"><![CDATA[<h2 id="Smali"><a href="#Smali" class="headerlink" title="Smali"></a>Smali</h2><h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><p>Smali是用于Dalvik(Android虚拟机)的反汇编程序实现，汇编工具(将Smali代码汇编为dex文件)为smali.jar。</p><p>Smali支持注解、调试信息、行数信息等Java的基本特性，可以说是很接近Java编译在JVM上的中间语言了，一般用来做Android程序的逆向工程</p><h3 id="Smali基础"><a href="#Smali基础" class="headerlink" title="Smali基础"></a>Smali基础</h3><p>下面的内容涉及一些Smali编程的结构和基本语法</p><h4 id="Smali文件结构"><a href="#Smali文件结构" class="headerlink" title="Smali文件结构"></a>Smali文件结构</h4><p>一个Smali文件对应的是一个Java的类，更准确的说是一个.class文件，如果有内部类，需要写成ClassName$InnerClassA、ClassName$InnerClassB…这样的形式</p><h4 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h4><p><img src="/../image/Smali%E6%B1%87%E7%BC%96.png"></p><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>Object类型，即引用类型的对象，在引用时，使用L开头，后面紧跟着的是完整的包名，比如：java.lang.String对应的Smali语法则是Ljava&#x2F;lang&#x2F;String</p><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>数组定义比较有意思，一维数组在类型的左边加一个方括号，比如：[I等同于Java的int[]]，每多一维就加一个方括号，最多可以设置255维</p><h4 id="方法声明及调用"><a href="#方法声明及调用" class="headerlink" title="方法声明及调用"></a>方法声明及调用</h4><p>官方Wiki中给出的Smali引用的方法的模板如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lpackage/name/ObjectName;-&gt;MethodName(III)Z</span><br></pre></td></tr></table></figure><p>第一部分Lpackage&#x2F;name&#x2F;ObjectName；用于声明具体的类型，以便JVM寻找</p><p>第二部分MethodName(III)Z，其中MethodName为具体的方法名，()中的字符，表示了参数数量和类型，即3个int型参数，Z为返回值的类型，即返回Boolean类型</p><p>由于方法的参数列表没有使用逗号这样的分隔符进行划分，所有只能从左到右，根据类型定义来区分参数个数，这一点需要比较仔细来观察</p><p>如果需要调用构造方法，则MethodName为：<init></p><h4 id="寄存器声明及使用"><a href="#寄存器声明及使用" class="headerlink" title="寄存器声明及使用"></a>寄存器声明及使用</h4><p>在Smali中，如果需要存储变量，必须先声明足够数量的寄存器，一个寄存器可以存储32位长的的类型，比如Int，而两个寄存器可以存储64位长度类型的数据，比如Long或Double</p><p>声明可使用的寄存器数量的方式为：.registers N，N代表需要的寄存器的总个数，同时，还有一个关键字.locals，它用于声明非参数的寄存器的个数(包含在registers声明的个数当中)，也叫做本地寄存器，只在一个方法内有效，但不常用，一般使用registers即可</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.method private test(I)V</span><br><span class="line">    .registers 4  # 声明总共需要使用4个寄存器</span><br><span class="line"></span><br><span class="line">    const-string v0, &quot;LOG&quot;  # 将v0寄存器赋值为字符串常量&quot;LOG&quot;</span><br><span class="line"></span><br><span class="line">    move v1, p1  # 将int型参数的值赋给v1寄存器</span><br><span class="line"></span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br></pre></td></tr></table></figure><h4 id="如何确定需要使用的寄存器的个数"><a href="#如何确定需要使用的寄存器的个数" class="headerlink" title="如何确定需要使用的寄存器的个数"></a>如何确定需要使用的寄存器的个数</h4><p>由于非static方法，需要占用一个寄存器以保存this指针，那么这类方法的寄存器个数，最低就为1，如过还需要处理传入的参数，则需要再次叠加，此时还需要考虑Double和Float这种需要占用两个寄存器的参数类型，举例来看：</p><p>如果一个Java方法声明如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">myMethod(nt p1, float p2, boolean p3)</span><br></pre></td></tr></table></figure><p>那么对应的Smali则为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">method LMyObject;-&gt;myMethod(IJZ)V</span><br></pre></td></tr></table></figure><p>此时，寄存器的对应情况如下：</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%962.png"></p><p>那么最少需要的寄存器的个数则为：5</p><p>如果方法内含有常量、变量等定义，则需要根据情况增加寄存器个数，数量只要满足需求，保证需求要获取的值不被后面复制冲掉即可，方法有：存入类中的字段中(存入后，寄存器可被重新赋值)，或者长期占用一个寄存器</p><h4 id="Dalvik指令集"><a href="#Dalvik指令集" class="headerlink" title="Dalvik指令集"></a>Dalvik指令集</h4><p>移位操作</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%963.png"></p><p>返回操作</p><p>用于返回值，对应Java中的return语句</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%964.png"></p><p>常量操作</p><p>用于声明常量，比如字符串常量(仅声明，String a &#x3D; “abc”这种语句包含声明和赋值)</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%965.png"></p><p>调用操作</p><p>用于调用方法，基本格式：invoke-kind{vC，vD，vE，vF，vG}，meth@BBBB，其中，BBBB代表方法引用(参见上面介绍的方法定义及其调用)，vC~G为需要的参数，根据顺序一一对应</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%966.png"></p><p>判断操作：</p><p>判断操作用来比较一个寄存器中的值，是否与目标寄存器中的值相等或不等，对应Java中的if语句，格式为：if-[test] v1,v2, [condition]，其衍生操作还有专门与0进行比较的if-[test]z v1, [condition]，其中[condition]为符合判断结果后的跳转条件，需要提前定义好。判断操作也通常和goto配合使用，用来实现循环或者if-else语句<br><img src="/../image/Smali%E6%B1%87%E7%BC%967.png"></p><p>需要注意的是，在Java中编写的if语句，往往在对应的Smali中，会变成相反的判断逻辑，如下面所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private void test() &#123;</span><br><span class="line">    int a = 0;</span><br><span class="line">    int b = 1;</span><br><span class="line">    String result;</span><br><span class="line">    if (a &gt; b) &#123;</span><br><span class="line">        result = &quot;a great than b&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        result = &quot;a less than or equals b&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的Java代码逻辑很简单——一个很简单的if语句，为了在Smali中看的更清楚，我只做了字符串赋值操作。下面是对应的Smali代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.method private test()V</span><br><span class="line">    .registers 4</span><br><span class="line"></span><br><span class="line">    .line 24</span><br><span class="line">    const/4 v0, 0x0</span><br><span class="line"></span><br><span class="line">    .line 25</span><br><span class="line">    .local v0, &quot;a&quot;:I</span><br><span class="line">    const/4 v1, 0x1</span><br><span class="line"></span><br><span class="line">    .line 27</span><br><span class="line">    .local v1, &quot;b&quot;:I</span><br><span class="line">    if-le v0, v1, :cond_7</span><br><span class="line"></span><br><span class="line">    .line 28</span><br><span class="line">    const-string v2, &quot;a great than b&quot;</span><br><span class="line"></span><br><span class="line">    .line 28</span><br><span class="line">    .local v2, &quot;result&quot;:Ljava/lang/String;</span><br><span class="line">    goto :goto_9</span><br><span class="line"></span><br><span class="line">    .line 30</span><br><span class="line">    .end local v2    # &quot;result&quot;:Ljava/lang/String;</span><br><span class="line">    :cond_7</span><br><span class="line">    const-string v2, &quot;a less than or equals b&quot;</span><br><span class="line"></span><br><span class="line">    .line 32</span><br><span class="line">    .restart local v2    # &quot;result&quot;:Ljava/lang/String;</span><br><span class="line">    :goto_9</span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br></pre></td></tr></table></figure><p>属性操作：<br>属性操作的分为：取值（get）和赋值（put）</p><p>目标类型分为：数组（array）、实例（instance）和静态（static）三种，对应的缩写前缀就是a、i、s</p><p>长度类型分为：默认（什么都不写）、wide（宽，64位）、object（对象）、boolean、byte、char、short（后面几种就不解释了，和Java一致）</p><p>指令格式：[指令名] [源寄存器], [目标字段所在对象寄存器], [字段指针]，示例代码如下，操作是为int型的类成员变量mIntA赋值为100：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const/16 v0, 0x64</span><br><span class="line"></span><br><span class="line">iput v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mIntA:I</span><br></pre></td></tr></table></figure><p><img src="/../image/Smali%E6%B1%87%E7%BC%968.png"></p><p>举例：</p><p>以下Java代码是进行的是最基本的类成员变量的赋值、取值操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private String mStringA;</span><br><span class="line">private int mIntA;</span><br><span class="line">private Activity mActivityA;</span><br><span class="line"></span><br><span class="line">public void fieldTest() &#123;</span><br><span class="line">    mStringA = &quot;Put String to mStringA&quot;;</span><br><span class="line">    mIntA = 100;</span><br><span class="line">    mActivityA = this;</span><br><span class="line"></span><br><span class="line">    int len = mStringA.length();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的Smali代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># instance fields</span><br><span class="line">.field private mActivityA:Landroid/app/Activity;</span><br><span class="line"></span><br><span class="line">.field private mIntA:I</span><br><span class="line"></span><br><span class="line">.field private mStringA:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line"># virtual methods</span><br><span class="line">.method public fieldTest()V</span><br><span class="line">    .registers 2</span><br><span class="line"></span><br><span class="line">    .line 55</span><br><span class="line">    const-string v0, &quot;Put String to mStringA&quot;</span><br><span class="line"></span><br><span class="line">    iput-object v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mStringA:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    .line 56</span><br><span class="line">    const/16 v0, 0x64</span><br><span class="line"></span><br><span class="line">    iput v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mIntA:I</span><br><span class="line"></span><br><span class="line">    .line 57</span><br><span class="line">    iput-object p0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mActivityA:Landroid/app/Activity;</span><br><span class="line"></span><br><span class="line">    .line 59</span><br><span class="line">    iget-object v0, p0, Lcom/coderyuan/smali/MainActivity;-&gt;mStringA:Ljava/lang/String;</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;v0&#125;, Ljava/lang/String;-&gt;length()I</span><br><span class="line"></span><br><span class="line">    move-result v0</span><br><span class="line"></span><br><span class="line">    .line 60</span><br><span class="line">    .local v0, &quot;len&quot;:I</span><br><span class="line">    return-void</span><br><span class="line">.end method</span><br></pre></td></tr></table></figure><p>其他指令</p><p><img src="/../image/Smali%E6%B1%87%E7%BC%969.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>root</title>
      <link href="/2024/08/09/root/"/>
      <url>/2024/08/09/root/</url>
      
        <content type="html"><![CDATA[<h2 id="root"><a href="#root" class="headerlink" title="root"></a>root</h2><p>1、adb reboot bootloader</p><p>2、fastboot boot recovery.img</p><p>3、清除</p><p>4、重启</p><p>5、adb push magisk.apk &#x2F;data&#x2F;locla&#x2F;tmp&#x2F;a.zip</p><p>6、fastboot boot recover.img</p><p>7、install</p><p>8、重启</p><p>9、修改语言，卸载magisk应用，重新安装magisk的apk</p><p>10、选择安装，直接安装，重启</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dex反编译工具的安装和使用</title>
      <link href="/2024/08/08/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/08/08/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="jadx的安装和使用"><a href="#jadx的安装和使用" class="headerlink" title="jadx的安装和使用"></a>jadx的安装和使用</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>jadx可以一键把apk文件还原成Java代码，使用起来很简单，功能强大，还具有一些附加功能可以辅助代码追查，其主要具有如下几个功能：</p><p>1、除了反编译apk文件，还可以反编译jar、class、dex、arr、等文件和zip文件中的Dalvik字节码</p><p>2、解码AndroidManifest.xml文件和一些来自resources.arsc中的资源文件</p><p>3、一些apk文件在打包过程中增加了java代码的混淆机制，对比jadx提供反混淆的支持。</p><p>jadx本身是一个命令行工具，仅仅通过jadx这个命令就可以反编译一个apk文件。除此之外，它也可以有配套的图形化界面工具——jadx-gui。</p><p>安装过程就略过了</p><h4 id="jadx命令"><a href="#jadx命令" class="headerlink" title="jadx命令"></a>jadx命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jadx xxx.apk -d xxx，运行完成后本地会生成一个xxx文件夹</span><br></pre></td></tr></table></figure><h4 id="jadx-gui的使用方法"><a href="#jadx-gui的使用方法" class="headerlink" title="jadx-gui的使用方法"></a>jadx-gui的使用方法</h4><p>jadx-gui是一个图形界面工具，它就像一个IDE，支持很多方便快捷的交互式操作</p><h4 id="保存为Gradle项目"><a href="#保存为Gradle项目" class="headerlink" title="保存为Gradle项目"></a>保存为Gradle项目</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8.png"></p><p>导出后的项目目录结构和我们在 jadx-gui 界面里看到的结构基本一致，这个项目是可以被 Android Studio 工具打开的，打开之后的代码一般没办法直接运行，因为毕竟整个项目是反编译出来的，不太可能完全还原出开发版本的 Andriod 项目。</p><h4 id="文本搜索"><a href="#文本搜索" class="headerlink" title="文本搜索"></a>文本搜索</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A82.png"></p><h4 id="查找方法的声明"><a href="#查找方法的声明" class="headerlink" title="查找方法的声明"></a>查找方法的声明</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A83.png"></p><h4 id="反混淆"><a href="#反混淆" class="headerlink" title="反混淆"></a>反混淆</h4><p><img src="/../image/dex%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A85.png"></p><p>反混淆能进一步提升代码的还原度，从而让我们更方便地推敲代码中的逻辑</p><h4 id="JEB的简介"><a href="#JEB的简介" class="headerlink" title="JEB的简介"></a>JEB的简介</h4><p>JEB 是由 PNF 软件(PNF Software) 机构开发的一款专业的反编译 Android App 的工具，适用于逆向和审计工程，功能非常强大。</p><p>功能：</p><p>1、可以对Android App和Dalvik(Android虚拟机，类似Java中的JVM)字节码执行精确和快速的反编译操作</p><p>2、内置的分析模块可以对高度尕的代码提供虚拟层次化重构，对分析代码很有帮助</p><p>3、可以对接JEB API来执行一些逆向任务，支持用Java和Python编写自动化逆向脚本</p><p>安装过程略过</p><p>进入JEB解压目录，windows下双击jeb_wincon.bat，按照弹窗generate a license，即可正常使用。设置中文</p><p>具体使用还没有办法实操</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>adb</title>
      <link href="/2024/08/08/adb/"/>
      <url>/2024/08/08/adb/</url>
      
        <content type="html"><![CDATA[<h2 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Android调试桥(adb)是一种功能多样的命令行工具，它可以让你与设备进行通信，adb命令可以用于执行各种设备操作(例如安装和调试应用)，并提供对Unix shell(可用来再设备上运行各种命令)的访问权限，它是一种C&#x2F;S架构的程序，包括以下三个组件：</p><p>1、客户端：主要用于发送命令，adb client在开发机器上运行，我们可以通过adb命令从命令行终端调用客户端，它主要的工作是解析像push、shell、install等命令的参数，做必要的预处理，然后转移为指令或数据，发送给adb server。</p><p>2、守护程序(adbd)：是运行在Android设备(真机&#x2F;模拟器)后台的一个进程，它是由init进程启动的，并且系统一开机就以及启动，它主要作用是出来来自adb server的命令行请求，然后获取对应Android设备的信息，再将结果返回给adb server。</p><p>3、服务器：是运行再开发机器上的一个后台进程，它有两个作用：1、检测usb端口感知设备的连接和拔出，以及模拟器实例的启动或停止；2、将adb client的请求通过usb或者tcp的方式发送到对应的abdb上。</p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>当我们启动某个ADB客户端的时候，客户端会先检查是否有ADB服务器正在运行。如果没有，它将启动服务器进程。服务器在启动后会与本地TCP端口5037绑定，并监听ADB客户端发出的命令，所有ADB客户端均通过端口5037与ADB服务器通信。然后，服务器会与所有正在运行的设备建立连接。它通过扫描5555到5585之间(该范围供前16个模拟器使用)的奇数号端口查找模拟器。服务器一旦发现ADB守护进程(adbd)，便会与相应的端口建立连接。</p><p>所有的Client通过TCP端口号5037进行与Server通信，而Server创建local socket与remote socket，前者用于Client通信，后者用于远端进行通信，emulator(模拟器)通过TCP，real device则通过usb。服务器于所有设备均建立连接后，你便可以使用adb命令访问这些设备，由于服务器管理于设备的连接，并处理来自多个adb客户端的命令，因此你可以从任意客户端(或从某个脚本)控制任意设备。</p><p>举个例子：</p><p>1、我们通过Android Studio 工具或者命令行界面直接或间接的调用某个abd命令，比如adb install或者adb devices</p><p>2、adb进程会fork出一个子进程作为adb server，而这个fork出的进程将常驻PC端，监听来自Client端的请求</p><p>3、adb server查找当前连接的真机或者模拟器，并接受来自Client端发出的请求</p><p>4、adb server处理请求：如果是本地能直接处理的请求比如：adb devices就直接处理，如果是本地处理不了的请求就会转发给连接的真机或者模拟器来进行处理，可以通过数据线和TCP&#x2F;IP的方式通信</p><p>5、位于真机或者模拟器后台的adbd进程接受到请求后，通过JDWP协议转发给对应的Java虚拟机进程处理</p><p>6、abdb将处理后的结果返回给adb server</p><p>7、adb server再将结果返回给Client，这时候我们就在命令行界面中看到展示结果就了</p><h3 id="adb的配置"><a href="#adb的配置" class="headerlink" title="adb的配置"></a>adb的配置</h3><p>将sdk的platform-tools配置到环境变量中</p><p><img src="/../image/adb.png"></p><h4 id="ADB常见命令及选项"><a href="#ADB常见命令及选项" class="headerlink" title="ADB常见命令及选项"></a>ADB常见命令及选项</h4><p>adb help&#x2F;adb –help 查看帮助</p><p>adb version 显示adb版本及所在路径</p><p>adb devices 显示连接的设备列表</p><p>adb devices -l，列举所有设备，-l表示长输出，包含设备名称等信息。</p><p>adb push 文件路径 目标路径(以&#x2F;开头)推送电脑的文件到手机</p><p>adb pull 文件路径(手机)本地路径(PC，可选)拉取手机的文件到电脑</p><p>adb shell 进入到手机的Linux控制台</p><p>adb install [-lrstsdg] <file>(xxx.apk)通过adb安装app</p><p>参数说明如下：</p><p>-l：直接锁定app</p><p>-r：替换已存在的app，也就是说强制安装</p><p>-t：允许安装测试包</p><p>-s：把app安装到sd卡上</p><p>-d：允许降版本安装(只针对调试版本的app有用)</p><p>-g：安装时获取所有的权限(只有6.0系统可用)</p><p>adb uninstall包名 通过adb卸载app，借助jadx工具查看App7的包名，然后执行adb uninstall命令卸载App例如：adb uninstall com.kanxue.app</p><p>adb start-server 确保启动adb server</p><p>adb kill-server停止adb server</p><p>adb get-serialno获取设备唯一的序列号(如打开app通过该值判断是否重复打开)</p><p>adb get-state 获取设备的状态</p><p>设备的状态有3中：device、offline、unknown、说明如下：</p><p>1、device：设备正常连接、</p><p>2、offline：连接出现异常，设备无响应</p><p>3、unknown：没有连接设备</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>题目3</title>
      <link href="/2024/08/08/%E9%A2%98%E7%9B%AE3/"/>
      <url>/2024/08/08/%E9%A2%98%E7%9B%AE3/</url>
      
        <content type="html"><![CDATA[<h3 id="CFF-100"><a href="#CFF-100" class="headerlink" title="CFF_100"></a>CFF_100</h3><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><p><a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/CFF2016-%E7%88%AC%E6%A5%BC%E6%A2%AF">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/CFF2016-%E7%88%AC%E6%A5%BC%E6%A2%AF</a></p><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>查看题目是需要我们点击到对应层数显示flag</p><p><img src="/../image/CFF_100.png"></p><p>setClickable()函数作用是设置控件点击无效，但是可以点击，颜色不会变灰色，也就是右边的按钮如果可以点击，那么就能够显示flag了</p><p><img src="/../image/CFF_1002.png"></p><p>输入命令java -jar apktool_2.6.1.jar d CFF_100.apk对apk文件进行解包</p><p><img src="/../image/CFF1003.png"></p><p>找到setClickable函数</p><p><img src="/../image/CFF1004.png"></p><p><img src="/../image/CFF1005.png"></p><p>推测v5和v3即为true或false的标记位，v3一直为0x1，v5一直为0x0，因此考虑修改v5为0x1</p><p><img src="/../image/CFF1006.png"></p><p>再输入命令java -jar apktool_2.6.1.jar b CFF_100进行重打包</p><p><img src="/../image/CFF1007.png"></p><p>这里进行重打包时有问题，以我目前水平还是无法解决</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DD-Androideasy and smali</title>
      <link href="/2024/08/08/DD-Androideasy-and-smali/"/>
      <url>/2024/08/08/DD-Androideasy-and-smali/</url>
      
        <content type="html"><![CDATA[<h3 id="DD-Android-Easy"><a href="#DD-Android-Easy" class="headerlink" title="DD-Android Easy"></a>DD-Android Easy</h3><h4 id="链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-DD-20-20Android-20Easy"><a href="#链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-DD-20-20Android-20Easy" class="headerlink" title="链接：https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/DD%20-%20Android%20Easy"></a>链接：<a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/DD%20-%20Android%20Easy">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/DD%20-%20Android%20Easy</a></h4><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>下载完成后发现是.zip格式，将后缀改为.apk格式，安装到模拟器中，发现是输入注册码的题目</p><p><img src="/../image/DD-AndroidEasy.png"></p><p>用jeb打开分析</p><p><img src="/../image/DD-AndroidEasy2.png"></p><p>可以看出只要得到字符串i的值便可以得到flag</p><h4 id="解密脚本："><a href="#解密脚本：" class="headerlink" title="解密脚本："></a>解密脚本：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = [-<span class="number">40</span>, -<span class="number">62</span>, <span class="number">107</span>, <span class="number">66</span>, -<span class="number">126</span>, <span class="number">103</span>, -<span class="number">56</span>, <span class="number">77</span>, <span class="number">122</span>, -<span class="number">107</span>, -<span class="number">24</span>, -<span class="number">127</span>, <span class="number">72</span>, -<span class="number">63</span>, -<span class="number">98</span>, <span class="number">64</span>, -<span class="number">24</span>, -<span class="number">5</span>, -<span class="number">49</span>, -<span class="number">26</span>, <span class="number">79</span>, -<span class="number">70</span>, -<span class="number">26</span>, -<span class="number">81</span>, <span class="number">120</span>, <span class="number">25</span>, <span class="number">111</span>, -<span class="number">100</span>, -<span class="number">23</span>, -<span class="number">9</span>, <span class="number">122</span>, -<span class="number">35</span>, <span class="number">66</span>, -<span class="number">50</span>, -<span class="number">116</span>, <span class="number">3</span>, -<span class="number">72</span>, <span class="number">102</span>, -<span class="number">45</span>, -<span class="number">85</span>, <span class="number">0</span>, <span class="number">126</span>, -<span class="number">34</span>, <span class="number">62</span>, <span class="number">83</span>, -<span class="number">34</span>, <span class="number">48</span>, -<span class="number">111</span>, <span class="number">61</span>, -<span class="number">9</span>, -<span class="number">51</span>, <span class="number">114</span>, <span class="number">20</span>, <span class="number">81</span>, -<span class="number">126</span>, -<span class="number">18</span>, <span class="number">27</span>, -<span class="number">115</span>, -<span class="number">76</span>, -<span class="number">116</span>, -<span class="number">48</span>, -<span class="number">118</span>, -<span class="number">10</span>, -<span class="number">102</span>, -<span class="number">106</span>, <span class="number">113</span>, -<span class="number">104</span>, <span class="number">98</span>, -<span class="number">109</span>, <span class="number">74</span>, <span class="number">48</span>, <span class="number">47</span>, -<span class="number">100</span>, -<span class="number">88</span>, <span class="number">121</span>, <span class="number">22</span>, -<span class="number">63</span>, -<span class="number">32</span>, -<span class="number">20</span>, -<span class="number">41</span>, -<span class="number">27</span>, -<span class="number">20</span>, -<span class="number">118</span>, <span class="number">100</span>, -<span class="number">76</span>, <span class="number">70</span>, -<span class="number">49</span>, -<span class="number">39</span>, -<span class="number">27</span>, -<span class="number">106</span>, -<span class="number">13</span>, -<span class="number">108</span>, <span class="number">115</span>, -<span class="number">87</span>, -<span class="number">1</span>, -<span class="number">22</span>, -<span class="number">53</span>, <span class="number">21</span>, -<span class="number">100</span>, <span class="number">124</span>, -<span class="number">95</span>, -<span class="number">40</span>, <span class="number">62</span>, -<span class="number">69</span>, <span class="number">29</span>, <span class="number">56</span>, -<span class="number">53</span>, <span class="number">85</span>, -<span class="number">48</span>, <span class="number">25</span>, <span class="number">37</span>, -<span class="number">78</span>, <span class="number">11</span>, -<span class="number">110</span>, -<span class="number">24</span>, -<span class="number">120</span>, -<span class="number">82</span>, <span class="number">6</span>, -<span class="number">94</span>, -<span class="number">101</span>]</span><br><span class="line">q = [-<span class="number">57</span>, -<span class="number">90</span>, <span class="number">53</span>, -<span class="number">71</span>, -<span class="number">117</span>, <span class="number">98</span>, <span class="number">62</span>, <span class="number">98</span>, <span class="number">101</span>, -<span class="number">96</span>, <span class="number">36</span>, <span class="number">110</span>, <span class="number">77</span>, -<span class="number">83</span>, -<span class="number">121</span>, <span class="number">2</span>, -<span class="number">48</span>, <span class="number">94</span>, -<span class="number">106</span>, -<span class="number">56</span>, -<span class="number">49</span>, -<span class="number">80</span>, -<span class="number">1</span>, <span class="number">83</span>, <span class="number">75</span>, <span class="number">66</span>, -<span class="number">44</span>, <span class="number">74</span>, <span class="number">2</span>, -<span class="number">36</span>, -<span class="number">42</span>, -<span class="number">103</span>, <span class="number">6</span>, -<span class="number">115</span>, -<span class="number">40</span>, <span class="number">69</span>, -<span class="number">107</span>, <span class="number">85</span>, -<span class="number">78</span>, -<span class="number">49</span>, <span class="number">54</span>, <span class="number">78</span>, -<span class="number">26</span>, <span class="number">15</span>, <span class="number">98</span>, -<span class="number">70</span>, <span class="number">8</span>, -<span class="number">90</span>, <span class="number">94</span>, -<span class="number">61</span>, -<span class="number">84</span>, <span class="number">64</span>, <span class="number">112</span>, <span class="number">51</span>, -<span class="number">29</span>, -<span class="number">34</span>, <span class="number">126</span>, -<span class="number">21</span>, -<span class="number">126</span>, -<span class="number">71</span>, -<span class="number">31</span>, -<span class="number">24</span>, -<span class="number">60</span>, -<span class="number">2</span>, -<span class="number">81</span>, <span class="number">66</span>, -<span class="number">84</span>, <span class="number">85</span>, -<span class="number">91</span>, <span class="number">10</span>, <span class="number">84</span>, <span class="number">70</span>, -<span class="number">8</span>, -<span class="number">63</span>, <span class="number">26</span>, <span class="number">126</span>, -<span class="number">76</span>, -<span class="number">104</span>, -<span class="number">123</span>, -<span class="number">71</span>, -<span class="number">126</span>, -<span class="number">62</span>, -<span class="number">23</span>, <span class="number">11</span>, -<span class="number">39</span>, <span class="number">70</span>, <span class="number">14</span>, <span class="number">59</span>, -<span class="number">101</span>, -<span class="number">39</span>, -<span class="number">124</span>, <span class="number">91</span>, -<span class="number">109</span>, <span class="number">102</span>, -<span class="number">49</span>, <span class="number">21</span>, <span class="number">105</span>, <span class="number">0</span>, <span class="number">37</span>, -<span class="number">128</span>, -<span class="number">57</span>, <span class="number">117</span>, <span class="number">110</span>, -<span class="number">115</span>, -<span class="number">86</span>, <span class="number">56</span>, <span class="number">25</span>, -<span class="number">46</span>, -<span class="number">55</span>, <span class="number">7</span>, -<span class="number">125</span>, <span class="number">109</span>, <span class="number">76</span>, <span class="number">104</span>, -<span class="number">15</span>, <span class="number">82</span>, -<span class="number">53</span>, <span class="number">18</span>, -<span class="number">28</span>, -<span class="number">24</span>]</span><br><span class="line">bArr = []</span><br><span class="line">i2=<span class="number">0</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">i3=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(p)):</span><br><span class="line">    bArr.append(p[i]^q[i])</span><br><span class="line">b=bArr[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">while</span> bArr[b+i2]!=<span class="number">0</span>:</span><br><span class="line">    i2+=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i3&lt;i2:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(bArr[b+i3])</span><br><span class="line">    i3+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行得到 <a href="mailto:&#x66;&#108;&#97;&#103;&#x44;&#68;&#67;&#84;&#70;&#45;&#51;&#97;&#100;&#x36;&#x30;&#x38;&#x31;&#x31;&#x64;&#x38;&#x37;&#x63;&#52;&#97;&#50;&#x64;&#x62;&#97;&#x30;&#101;&#102;&#x36;&#x35;&#49;&#x62;&#x32;&#100;&#x39;&#x33;&#x34;&#55;&#x36;&#x40;&#100;&#x69;&#x64;&#105;&#99;&#x68;&#117;&#120;&#105;&#x6e;&#x67;&#x2e;&#x63;&#111;&#109;">&#x66;&#108;&#97;&#103;&#x44;&#68;&#67;&#84;&#70;&#45;&#51;&#97;&#100;&#x36;&#x30;&#x38;&#x31;&#x31;&#x64;&#x38;&#x37;&#x63;&#52;&#97;&#50;&#x64;&#x62;&#97;&#x30;&#101;&#102;&#x36;&#x35;&#49;&#x62;&#x32;&#100;&#x39;&#x33;&#x34;&#55;&#x36;&#x40;&#100;&#x69;&#x64;&#105;&#99;&#x68;&#117;&#120;&#105;&#x6e;&#x67;&#x2e;&#x63;&#111;&#109;</a></p><p><img src="/../image/DD-AndroidEasy3.png"></p><h3 id="smali"><a href="#smali" class="headerlink" title="smali"></a>smali</h3><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><p><a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/smali">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/smali</a></p><p>直接用jeb打开分析</p><p><img src="/../image/smalictf1.png"></p><p>分析看出是2次base64，一次AES，直接使用python编写脚本</p><h4 id="解密脚本：-1"><a href="#解密脚本：-1" class="headerlink" title="解密脚本："></a>解密脚本：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">cipher = <span class="string">&quot;sSNnx1UKbYrA1+MOrdtDTA==&quot;</span></span><br><span class="line">cipher = base64.b64decode(cipher)</span><br><span class="line">key = <span class="string">&quot;cGhyYWNrICBjdGYgMjAxNg==&quot;</span></span><br><span class="line">key = base64.b64decode(key)</span><br><span class="line">cryptor = AES.new(key,AES.MODE_ECB)</span><br><span class="line">flag = cryptor.decrypt(cipher)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行得到flag：b’PCTF{Sm4liRiver}’</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Androideasy&amp;simplecheck</title>
      <link href="/2024/08/08/Androideasy-simplecheck/"/>
      <url>/2024/08/08/Androideasy-simplecheck/</url>
      
        <content type="html"><![CDATA[<h3 id="androideasy"><a href="#androideasy" class="headerlink" title="androideasy"></a>androideasy</h3><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><h4 id="https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-androideasy"><a href="#https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-androideasy" class="headerlink" title="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/androideasy"></a><a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/androideasy">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/androideasy</a></h4><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>文件下载后发现是zip格式，将后缀改为.apk然后用jeb打开进行分析</p><p><img src="/../image/androideasy.png"></p><p>对于一般比较简单的题目，我们只需要找到函数的入口，即MainActivity中onCreate方法下的onClick点击事件，因为是找注册码(flag)，那就肯定有一个按钮负责判断注册码是正确，这个按钮的点击事件是否正确，这个按钮的点击事件就是用onClick实现的，所以大部分这种题目直接找onClick就对了。我们双击之后可以看到以下代码，这里是smali代码。</p><p>java代码如下</p><p><img src="/../image/androideasy2.png"></p><p>这里是要调用MainActivity的check()函数来判断flag是否正确，我们直接定位到check()函数</p><p><img src="/../image/androideasy3.png"></p><p>分析函数内容，可以看出数组v0即是我们输入的注册码，根据if语句可以确定注册码的长度和s[]数组一样有31位，下面又有一个if语句判断即为我们的关键语句：s[i]&#x3D;&#x3D;chars[i]^23</p><p>因为flag字符都是ASCII码在0-127中，所以我们只需用python进行爆破</p><h4 id="解密脚本："><a href="#解密脚本：" class="headerlink" title="解密脚本："></a>解密脚本：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = &#123;<span class="number">113</span>, <span class="number">123</span>, <span class="number">118</span>, <span class="number">112</span>, <span class="number">108</span>, <span class="number">94</span>, <span class="number">99</span>, <span class="number">72</span>, <span class="number">38</span>, <span class="number">68</span>, <span class="number">72</span>, <span class="number">87</span>, <span class="number">89</span>, <span class="number">72</span>, <span class="number">36</span>, <span class="number">118</span>, <span class="number">100</span>, <span class="number">78</span>, <span class="number">72</span>, <span class="number">87</span>, <span class="number">121</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">39</span>, <span class="number">62</span>, <span class="number">94</span>, <span class="number">62</span>, <span class="number">38</span>, <span class="number">107</span>, <span class="number">115</span>, <span class="number">106</span>&#125;</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">31</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span>(s[m]==i^<span class="number">23</span>):</span><br><span class="line">            flag+=i</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h3 id="simplecheck"><a href="#simplecheck" class="headerlink" title="simplecheck"></a>simplecheck</h3><h4 id="链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-simplecheck"><a href="#链接：https-github-com-ThunderJie-CTF-Practice-tree-master-CTF-Andorid-20Reverse-simplecheck" class="headerlink" title="链接：https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/simplecheck"></a>链接：<a href="https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/simplecheck">https://github.com/ThunderJie/CTF-Practice/tree/master/CTF-Andorid%20Reverse/simplecheck</a></h4><h4 id="解题思路：-1"><a href="#解题思路：-1" class="headerlink" title="解题思路："></a>解题思路：</h4><p>因为是.apk文件，直接放入雷电模拟器里面运行一下，非常简单，这是一个判断注册码的题目</p><p><img src="/../image/simplecheck.png"></p><p>用jeb打开分析，看看MainActivity里面的内容</p><p><img src="/../image/simplecheck2.png"></p><p>这里通过a方法来判断正确与否，所以我们主要研究a方法</p><p><img src="/../image/simplecheck3.png"></p><p>可以看到我们的输入即为iArr，通过爆破即可得到flag</p><h4 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="number">0</span>, <span class="number">146527998</span>, <span class="number">205327308</span>, <span class="number">94243885</span>, <span class="number">138810487</span>, <span class="number">408218567</span>, <span class="number">77866117</span>, <span class="number">71548549</span>, <span class="number">563255818</span>, <span class="number">559010506</span>, <span class="number">449018203</span>, <span class="number">576200653</span>, <span class="number">307283021</span>, <span class="number">467607947</span>, <span class="number">314806739</span>, <span class="number">341420795</span>, <span class="number">341420795</span>, <span class="number">469998524</span>, <span class="number">417733494</span>, <span class="number">342206934</span>, <span class="number">392460324</span>, <span class="number">382290309</span>, <span class="number">185532945</span>, <span class="number">364788505</span>, <span class="number">210058699</span>, <span class="number">198137551</span>, <span class="number">360748557</span>, <span class="number">440064477</span>, <span class="number">319861317</span>, <span class="number">676258995</span>, <span class="number">389214123</span>, <span class="number">829768461</span>, <span class="number">534844356</span>, <span class="number">427514172</span>, <span class="number">864054312</span>]</span><br><span class="line">b = [<span class="number">13710</span>, <span class="number">46393</span>, <span class="number">49151</span>, <span class="number">36900</span>, <span class="number">59564</span>, <span class="number">35883</span>, <span class="number">3517</span>, <span class="number">52957</span>, <span class="number">1509</span>, <span class="number">61207</span>, <span class="number">63274</span>, <span class="number">27694</span>, <span class="number">20932</span>, <span class="number">37997</span>, <span class="number">22069</span>, <span class="number">8438</span>, <span class="number">33995</span>, <span class="number">53298</span>, <span class="number">16908</span>, <span class="number">30902</span>, <span class="number">64602</span>, <span class="number">64028</span>, <span class="number">29629</span>, <span class="number">26537</span>, <span class="number">12026</span>, <span class="number">31610</span>, <span class="number">48639</span>, <span class="number">19968</span>, <span class="number">45654</span>, <span class="number">51972</span>, <span class="number">64956</span>, <span class="number">45293</span>, <span class="number">64752</span>, <span class="number">37108</span>]</span><br><span class="line">c = [<span class="number">38129</span>, <span class="number">57355</span>, <span class="number">22538</span>, <span class="number">47767</span>, <span class="number">8940</span>, <span class="number">4975</span>, <span class="number">27050</span>, <span class="number">56102</span>, <span class="number">21796</span>, <span class="number">41174</span>, <span class="number">63445</span>, <span class="number">53454</span>, <span class="number">28762</span>, <span class="number">59215</span>, <span class="number">16407</span>, <span class="number">64340</span>, <span class="number">37644</span>, <span class="number">59896</span>, <span class="number">41276</span>, <span class="number">25896</span>, <span class="number">27501</span>, <span class="number">38944</span>, <span class="number">37039</span>, <span class="number">38213</span>, <span class="number">61842</span>, <span class="number">43497</span>, <span class="number">9221</span>, <span class="number">9879</span>, <span class="number">14436</span>, <span class="number">60468</span>, <span class="number">19926</span>, <span class="number">47198</span>, <span class="number">8406</span>, <span class="number">64666</span>]</span><br><span class="line">d = [<span class="number">0</span>, -<span class="number">341994984</span>, -<span class="number">370404060</span>, -<span class="number">257581614</span>, -<span class="number">494024809</span>, -<span class="number">135267265</span>, <span class="number">54930974</span>, -<span class="number">155841406</span>, <span class="number">540422378</span>, -<span class="number">107286502</span>, -<span class="number">128056922</span>, <span class="number">265261633</span>, <span class="number">275964257</span>, <span class="number">119059597</span>, <span class="number">202392013</span>, <span class="number">283676377</span>, <span class="number">126284124</span>, -<span class="number">68971076</span>, <span class="number">261217574</span>, <span class="number">197555158</span>, -<span class="number">12893337</span>, -<span class="number">10293675</span>, <span class="number">93868075</span>, <span class="number">121661845</span>, <span class="number">167461231</span>, <span class="number">123220255</span>, <span class="number">221507</span>, <span class="number">258914772</span>, <span class="number">180963987</span>, <span class="number">107841171</span>, <span class="number">41609001</span>, <span class="number">276531381</span>, <span class="number">169983906</span>, <span class="number">276158562</span>]</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">1</span>,<span class="number">34</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span>((a[m] == b[m]*i*i+c[m]*i+d[m] )<span class="keyword">and</span>(a[m]==(b[m-<span class="number">1</span>]*i*i)+c[m-<span class="number">1</span>]*i+d[m-<span class="number">1</span>])):</span><br><span class="line">            flag+=<span class="built_in">chr</span>(i)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>运行得到flag：flag{MAth_i&amp;_GOOd_DON7_90V_7hInK?(自己添加一个})</p><p><img src="/../../../../Hexo-Blog/blog-demo/source/image/simplecheck4.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android常见风险2</title>
      <link href="/2024/08/06/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A92/"/>
      <url>/2024/08/06/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A92/</url>
      
        <content type="html"><![CDATA[<h2 id="安卓常见风险"><a href="#安卓常见风险" class="headerlink" title="安卓常见风险"></a>安卓常见风险</h2><h3 id="Android重打包风险"><a href="#Android重打包风险" class="headerlink" title="Android重打包风险"></a>Android重打包风险</h3><p>风险：插入广告、扣费</p><p>防范措施：使用一些混淆工具，阻止反编译，加壳</p><h3 id="敏感数据明文保存风险"><a href="#敏感数据明文保存风险" class="headerlink" title="敏感数据明文保存风险"></a>敏感数据明文保存风险</h3><p>含义：对app来说重要的数据</p><p>防范措施：不能放在公共区域</p><h3 id="组件越权风险"><a href="#组件越权风险" class="headerlink" title="组件越权风险"></a>组件越权风险</h3><p>防范措施</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:exported = &quot;false&quot;</span><br></pre></td></tr></table></figure><h3 id="WebView跨域访问风险"><a href="#WebView跨域访问风险" class="headerlink" title="WebView跨域访问风险"></a>WebView跨域访问风险</h3><h4 id="安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）"><a href="#安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）" class="headerlink" title="安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）"></a>安卓应用克隆漏洞原理分析及复现（CNVD-2017-36682）</h4><p><img src="/../image/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B01.png"></p><p><img src="/../image/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B02.png"></p><h4 id="ContentProvider目录遍历漏洞"><a href="#ContentProvider目录遍历漏洞" class="headerlink" title="ContentProvider目录遍历漏洞"></a>ContentProvider目录遍历漏洞</h4><h4 id="组件拒绝服务漏洞讲解"><a href="#组件拒绝服务漏洞讲解" class="headerlink" title="组件拒绝服务漏洞讲解"></a>组件拒绝服务漏洞讲解</h4><h4 id="安全审计工具Drozer的安装与使用"><a href="#安全审计工具Drozer的安装与使用" class="headerlink" title="安全审计工具Drozer的安装与使用"></a>安全审计工具Drozer的安装与使用</h4><p>下载地址：<a href="https://github.com/WithSecureLabs/drozer">https://github.com/WithSecureLabs/drozer</a></p><p>出现这个图片即算成功（中间过程复杂，都可以询问gpt）</p><p><img src="/../image/Drozerdownload.png"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><img src="/../image/drozer%E7%9A%84%E4%BD%BF%E7%94%A8.png"></p><h4 id="Drozer代码阅读"><a href="#Drozer代码阅读" class="headerlink" title="Drozer代码阅读"></a>Drozer代码阅读</h4><p>从drozer console connect命令中drozer.bat开始</p><p>drozer.bat</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">python.exe &quot;%~dp0drozer&quot; %*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android常见风险1</title>
      <link href="/2024/08/04/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A91/"/>
      <url>/2024/08/04/Android%E5%B8%B8%E8%A7%81%E9%A3%8E%E9%99%A91/</url>
      
        <content type="html"><![CDATA[<h2 id="安卓常见风险"><a href="#安卓常见风险" class="headerlink" title="安卓常见风险"></a>安卓常见风险</h2><h3 id="Android重打包风险"><a href="#Android重打包风险" class="headerlink" title="Android重打包风险"></a>Android重打包风险</h3><p>风险：插入广告、扣费</p><p>防范措施：使用一些混淆工具，阻止反编译，加壳</p><h3 id="敏感数据明文保存风险"><a href="#敏感数据明文保存风险" class="headerlink" title="敏感数据明文保存风险"></a>敏感数据明文保存风险</h3><p>含义：对app来说重要的数据</p><p>防范措施：不能放在公共区域</p><h3 id="组件越权风险"><a href="#组件越权风险" class="headerlink" title="组件越权风险"></a>组件越权风险</h3><p>防范措施</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:exported = &quot;false&quot;</span><br></pre></td></tr></table></figure><h3 id="WebView跨域访问风险"><a href="#WebView跨域访问风险" class="headerlink" title="WebView跨域访问风险"></a>WebView跨域访问风险</h3><p>（明天再更，难度太大，一时难以理解）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Arm</title>
      <link href="/2024/08/03/Arm/"/>
      <url>/2024/08/03/Arm/</url>
      
        <content type="html"><![CDATA[<h2 id="Arm汇编"><a href="#Arm汇编" class="headerlink" title="Arm汇编"></a>Arm汇编</h2><h3 id="工具网站"><a href="#工具网站" class="headerlink" title="工具网站"></a>工具网站</h3><p>谷歌官网：<a href="https://developer.arm.com/documentation-beta/">https://developer.arm.com/documentation-beta/</a></p><p>ARM汇编-opcode转换：<a href="http://armconverter.com/">http://armconverter.com</a></p><h3 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h3><p>1、立即数寻址：mov r0，#0x1</p><p>2、寄存器寻址：mov r0</p><p>3、寄存器间接寻址：ldr r0，[r1]</p><p>4、寄存器偏移寻址：mov r0，r1，[r1，#4]</p><p>5、寄存器基址变址寻址：ldr r0,[r1，#4]</p><p>6、多寄存器寻址：ldmia r0，{r1，r2，r3，r4}</p><p>7、相对寻址：bl label</p><p>8、堆栈寻址：stmfd sp!，{r1-r7，lr}</p><p>9、块拷贝寻址：stmia r0，{r1-r7}</p><h3 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h3><p>B label：直接跳，无条件，需要条件就B后面增加条件</p><p>BL：跳转之前，下一条指令地址保存到LR寄存器中，然后再调</p><p>MOV PC，LR：直接修改PC指针，实现跳转</p><p>LDR PC，0x?：和上一条一样，修改PC寄存器</p><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><p>参数小于等于4：用r0，r1，r2，r3</p><p>大于4：多出来的用栈</p><h3 id="内联汇编"><a href="#内联汇编" class="headerlink" title="内联汇编"></a>内联汇编</h3><h4 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h4><p>asm(“指令” ：输出 ：输入 ：变化寄存器);</p><h4 id="方式-1"><a href="#方式-1" class="headerlink" title="方式"></a>方式</h4><p>asm_volatile_(</p><p>​“mov r0，r1\n\t”</p><p>​“mov r2，r3\n\t”</p><p>​…………..</p><p>);volatile的作用是让代码不会被优化</p><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><p>输出：asm-&gt;C 用于定义输出的参数，通常只能是变量</p><p>r：任何可用寄存器</p><p>m：使用变量的内存地址</p><p>+：可读可写</p><p>&#x3D;：只写</p><p>&amp;：表示该输出操作数不能使用输入部分使用过的寄存器，只能用” +&amp; “ 或 “ &#x3D;&amp; “ 的方式使用</p><p>输入：C-&gt;asm 用于定义输入的参数，可以使用变量也可以使用立即数</p><p>r：可以使用任何可用的寄存器和立即数和变量</p><p>m：表示使用变量的内存地址</p><p>i：表示使用立即数</p><p>_volatile_：加上代表让编译器不优化</p><p>注意：可以字符串组合，但组合中间不能有回车换行</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dlfcn.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;elf.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> aa, <span class="type">int</span> bb, <span class="type">int</span> cc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;add %0, %1, %2&quot;</span> : <span class="string">&quot;=r&quot;</span>(ret) : <span class="string">&quot;r&quot;</span>(aa), <span class="string">&quot;r&quot;</span>(bb) : <span class="string">&quot;memory&quot;</span>);</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;add %0, %1, %2&quot;</span> : <span class="string">&quot;+r&quot;</span>(ret) : <span class="string">&quot;r&quot;</span>(ret),  <span class="string">&quot;r&quot;</span>(cc) : <span class="string">&quot;memory&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add2</span><span class="params">(<span class="type">int</span> aa, <span class="type">int</span> bb, <span class="type">int</span> cc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>, tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">asm</span>(</span><br><span class="line">    <span class="string">&quot;add %[bmTMP], %[bmAA], %[bmBB]\n\t&quot;</span></span><br><span class="line">    <span class="string">&quot;add %[bmRET], %[bmTMP], %[bmCC]\n\t&quot;</span></span><br><span class="line">    :[bmTMP]<span class="string">&quot;+r&quot;</span>(tmp), [bmRET]<span class="string">&quot;=r&quot;</span>(ret)</span><br><span class="line">   :[bmTMP]<span class="string">&quot;r&quot;</span>(aa), [bmBB]<span class="string">&quot;r&quot;</span>(bb),[bmCC]<span class="string">&quot;r&quot;</span>(cc)</span><br><span class="line">    :<span class="string">&quot;memory&quot;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, %[bmRET]&quot;</span> ::[bmRET]<span class="string">&quot;r&quot;</span>(ret):<span class="string">&quot;memory&quot;</span>);</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov pc, lr&quot;</span>);</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, #0x11&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r1, #0x22&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r2, #0x33&quot;</span></span><br><span class="line">        <span class="string">&quot;bl add&quot;</span></span><br><span class="line">       )</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="type">int</span> addRet = <span class="built_in">add</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="type">int</span> addRet2 = <span class="built_in">add2</span>(<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ret:%d\n&quot;</span>,addRet,addRet2);</span><br><span class="line">    <span class="keyword">return</span> addRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C调用汇编"><a href="#C调用汇编" class="headerlink" title="C调用汇编"></a>C调用汇编</h4><p>通常在 C 代码中嵌入汇编代码，通过内联汇编来执行特定的汇编指令</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">example</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> result;</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, #0x11\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r1, #0x22\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r2, #0x33\n&quot;</span></span><br><span class="line">        <span class="string">&quot;bl add\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov %[result], r0\n&quot;</span></span><br><span class="line">        : [result] <span class="string">&quot;=r&quot;</span> (result)  <span class="comment">// 输出操作数</span></span><br><span class="line">        :                        <span class="comment">// 无输入操作数</span></span><br><span class="line">        : <span class="string">&quot;r0&quot;</span>, <span class="string">&quot;r1&quot;</span>, <span class="string">&quot;r2&quot;</span>, <span class="string">&quot;memory&quot;</span>  <span class="comment">// 被破坏的寄存器</span></span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 现在 result 包含 add 函数的返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="汇编调用C"><a href="#汇编调用C" class="headerlink" title="汇编调用C"></a>汇编调用C</h4><p>汇编代码可以使用 <code>bl</code> 指令跳转到 C 函数，传递参数通过寄存器，并执行 C 函数的逻辑。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum: %d\n&quot;</span>, a + b + c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">example</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">asm</span>(<span class="string">&quot;mov r0, #1\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r1, #2\n&quot;</span></span><br><span class="line">        <span class="string">&quot;mov r2, #3\n&quot;</span></span><br><span class="line">        <span class="string">&quot;bl add\n&quot;</span></span><br><span class="line">        :  <span class="comment">// 无输出操作数</span></span><br><span class="line">        :  <span class="comment">// 无输入操作数</span></span><br><span class="line">        : <span class="string">&quot;r0&quot;</span>, <span class="string">&quot;r1&quot;</span>, <span class="string">&quot;r2&quot;</span>, <span class="string">&quot;memory&quot;</span>  <span class="comment">// 被破坏的寄存器</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改应用ARM代码实现破解功能"><a href="#修改应用ARM代码实现破解功能" class="headerlink" title="修改应用ARM代码实现破解功能"></a>修改应用ARM代码实现破解功能</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:extractNativeLibs=&quot;true&quot;</span><br><span class="line"></span><br><span class="line">android:extractNativeLibs=&quot;true&quot;：表示在应用安装时，APK 中的本地库（lib 目录中的 .so 文件）将被提取到设备的 /data/app/&lt;package-name&gt;/lib 目录中。这是 Android 系统的默认行为。在应用运行时，系统会从这个目录中加载本地库。</span><br><span class="line"></span><br><span class="line">android:extractNativeLibs=&quot;false&quot;：表示本地库将不会被提取到设备的 /data/app/&lt;package-name&gt;/lib 目录中。相反，系统会直接从 APK 文件中加载本地库。这可以减少设备上存储的重复文件，但要求应用的 APK 必须是完整且没有被压缩的，以确保本地库可以从 APK 文件中直接读取。</span><br></pre></td></tr></table></figure><p>IDA打开.so文件，把return 0全部修改为return 1</p><p><img src="/../image/arm1.png"></p><p>将修改后的so文件替换旧的，并进行对齐和签名</p><p>对齐操作</p><p><img src="/../image/arm2.png"></p><p>签名操作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Smali</title>
      <link href="/2024/08/02/Smali/"/>
      <url>/2024/08/02/Smali/</url>
      
        <content type="html"><![CDATA[<h2 id="Smali汇编"><a href="#Smali汇编" class="headerlink" title="Smali汇编"></a>Smali汇编</h2><h3 id="了解安卓虚拟机"><a href="#了解安卓虚拟机" class="headerlink" title="了解安卓虚拟机"></a>了解安卓虚拟机</h3><h4 id="Dalvik虚拟机"><a href="#Dalvik虚拟机" class="headerlink" title="Dalvik虚拟机"></a>Dalvik虚拟机</h4><p>JIT(Just-In-Time Compile 即时编译)，高频率使用代码空闲时间编译好并存储到内存</p><h4 id="Art虚拟机"><a href="#Art虚拟机" class="headerlink" title="Art虚拟机"></a>Art虚拟机</h4><p>AOT(Ahead-Of-Time 预先编译)一次编译好，oat文件</p><h3 id="头文件定义与接口实现"><a href="#头文件定义与接口实现" class="headerlink" title="头文件定义与接口实现"></a>头文件定义与接口实现</h3><p>(“&lt;&gt;”表示可选)</p><h4 id="class"><a href="#class" class="headerlink" title=".class"></a>.class</h4><p>作用：定义类，包括包名和类名</p><p>格式：.class &lt;访问权限&gt; [关键修饰字] &lt;完整类名&gt;  (“&lt;&gt;”表示可选)</p><h4 id="super"><a href="#super" class="headerlink" title=".super"></a>.super</h4><p>作用：定义所属父类</p><p>格式：.super &lt;父类完整类名&gt;</p><h4 id="source"><a href="#source" class="headerlink" title=".source"></a>.source</h4><p>作用：指定该smail代码所属java源文件</p><p>格式：.source &lt;java源代码名称&gt;</p><h4 id="implements"><a href="#implements" class="headerlink" title=".implements"></a>.implements</h4><p>作用： 声明实现接口类名称</p><p>格式：.implements &lt;接口类名&gt;</p><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>作用：相当于全局变量，跟类实例没关系，属于类</p><p>格式：.field &lt;访问权限&gt; static [修饰词] &lt;字段名&gt; : &lt;变量类型&gt;</p><p>​   .field &lt;访问权限&gt; static final &lt;变量名&gt; : &lt;常量类型&gt; &#x3D; 常量值</p><h4 id="普通变量"><a href="#普通变量" class="headerlink" title="普通变量"></a>普通变量</h4><p>作用：相当于局部变量，跟类实例有关系，不属于类，没有static修饰</p><p>格式：.field &lt;访问权限修饰符&gt; [非权限修饰符] &lt;变量名&gt; : &lt;变量类型&gt;</p><h3 id="方法定义"><a href="#方法定义" class="headerlink" title="方法定义"></a>方法定义</h3><p>标签：.method  .end 之间</p><p>格式：.method &lt;访问权限修饰符&gt; [非访问权限修饰符] &lt;方法名&gt; 签名</p><p>​&lt;.locals&gt;</p><p>​[.parameter]</p><p>​[.prologue]</p><p>​[.line]</p><p>​&lt;代码逻辑&gt;</p><p>​.end method</p><h4 id="其他语法知识点"><a href="#其他语法知识点" class="headerlink" title="其他语法知识点"></a>其他语法知识点</h4><p>clinit函数：静态代码static修饰的</p><p>direct methods：不能被子类继承、覆盖、修改</p><p>virtual methods：能被子类继承、覆盖、修改</p><h4 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h4><p>指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">invoke-virtual(调用实例的虚方法)</span><br><span class="line">invoke-super(调用实例的父类/基类方法)</span><br><span class="line">invoke-direct(调用实例的直接方法)</span><br><span class="line">invoke-static(调用实例的静态方法)</span><br><span class="line">invoke-static(调用实例的接口方法)</span><br></pre></td></tr></table></figure><p><img src="/../image/Smali.jpg"> </p><p><img src="/../image/Smali2.jpg"></p><h4 id="对象的创建"><a href="#对象的创建" class="headerlink" title="对象的创建"></a>对象的创建</h4><p>指令组合</p><p>new-instance 寄存器，类名</p><p>invoke-direct{寄存器，参数寄存器}，类名-&gt;&lt; init &gt;签名</p><p>return-object 寄存器</p><h4 id="修改应用Smali代码实现破解功能"><a href="#修改应用Smali代码实现破解功能" class="headerlink" title="修改应用Smali代码实现破解功能"></a>修改应用Smali代码实现破解功能</h4><p>反汇编成smali</p><p><img src="/../image/smali3.png"></p><p>使用jadx-gui-1.4.4查看源代码，在AndroidManifest.xml中查看包名</p><p><img src="/../image/smali4.png"></p><p>找到注册按钮</p><p><img src="/../image/smali5.png"></p><p>找到调用checkSN的函数</p><p><img src="/../image/smali6.png"></p><p><img src="/../image/smali7.png"></p><p>成功的语句块</p><p><img src="/../image/smali8.png"></p><p>失败的语句块</p><p><img src="/../image/smali9.png"></p><p>修改checkSN，在放回之前强制将v7改为true</p><p><img src="/../image/smali10.png"></p><p>将修改完后的smali进行回编</p><p><img src="/../image/smali11.png"></p><p>回编后的文件路径</p><p><img src="/../image/smali12.png"></p><p>要先删除原先安装的，再使用APK上上签进行签名,完成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ELF</title>
      <link href="/2024/08/01/ELF/"/>
      <url>/2024/08/01/ELF/</url>
      
        <content type="html"><![CDATA[<h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>Linux平台的一种可执行文件格式，Executable and Linkable Format(可执行 和 可链接 格式 )</p><p>的文件</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>C&#x2F;C++语言编译生成，动静态。x86汇编、arm汇编。执行速度快，逆行成本高。</p><h4 id="生成方式"><a href="#生成方式" class="headerlink" title="生成方式"></a>生成方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//call ndk-build.cmd NDK_PROJECT_PATH=. NDK_APPLICATION_MK=jni\\Application.mk</span><br><span class="line">//Application.mk、 Android.mk、xx.c源文件</span><br><span class="line">gcc test.c -c test.o &amp;&amp; gcc test.c -o test</span><br></pre></td></tr></table></figure><p>Main.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">soPath</span> <span class="operator">=</span> <span class="string">&quot;so/libhello-jni.so&quot;</span>;</span><br><span class="line">        <span class="type">ParseSo</span> <span class="variable">parseSo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ParseSo</span>(soPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//��ELF�ļ�ͷ��Ϣ</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Elf Header+++++++++++++++++&quot;</span>);</span><br><span class="line">        parseSo.readElfHeader(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//������ͷ����Ϣ</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Program Header Table+++++++++++++++++&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">pHeaderOffset</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_phoff);</span><br><span class="line">        <span class="type">int</span> <span class="variable">pHeaderCount</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_phnum);</span><br><span class="line"><span class="comment">//        parseSo.readProgramHeaderList(pHeaderOffset, pHeaderCount);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//����ͷ����Ϣ</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Section Header Table+++++++++++++++++&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sHeaderOffset</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_shoff);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sHeaderCount</span> <span class="operator">=</span> Utils.byte2Int(parseSo.type_32.hdr.e_shnum);</span><br><span class="line">        parseSo.readSectionHeaderList(sHeaderOffset, sHeaderCount);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//�����ű�</span></span><br><span class="line">        System.out.println(<span class="string">&quot;++++++++++++++++++++++Symbol Table+++++++++++++++++&quot;</span>);</span><br><span class="line">        parseSo.printSymbolTableList();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ParseSo.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.pediy.test.ElfType32.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ParseSo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">byte</span>[] byteArr;</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">ElfType32</span> <span class="variable">type_32</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType32</span>();</span><br><span class="line">    <span class="keyword">public</span>  <span class="type">ElfType64</span> <span class="variable">type_64</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType64</span>();</span><br><span class="line">    <span class="keyword">public</span>  String soPath;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParseSo</span><span class="params">(String pSoPath)</span> &#123;</span><br><span class="line">        soPath = pSoPath;</span><br><span class="line">        byteArr = Utils.readFile(soPath);</span><br><span class="line">        <span class="keyword">if</span> (byteArr == <span class="literal">null</span>)</span><br><span class="line">            System.out.println(<span class="string">&quot;read file byte failed...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readElfHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (offset &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ELf Header offset error&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        public byte[] e_ident = new byte[16];</span></span><br><span class="line"><span class="comment">//        public byte[] e_type = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_machine = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_version = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_entry = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_phoff = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shoff = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_flags = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] e_ehsize = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_phentsize = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_phnum = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shentsize = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shnum = new byte[2];</span></span><br><span class="line"><span class="comment">//        public byte[] e_shstrndx = new byte[2];</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">off</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;type_32.hdr.em.size(); i++)&#123;</span><br><span class="line">            System.arraycopy(byteArr, off, type_32.hdr.em.get(i), <span class="number">0</span>, type_32.hdr.em.get(i).length);</span><br><span class="line">            off += type_32.hdr.em.get(i).length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(type_32.hdr.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readProgramHeaderList</span><span class="params">(<span class="type">int</span> offset, <span class="type">int</span> count)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pHeaderSize</span> <span class="operator">=</span> Utils.byte2Short(type_32.hdr.e_phentsize);  <span class="comment">//����ͷ�ṹ���С</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;count; i++)&#123;</span><br><span class="line">            type_32.phdrList.add(readProgramHeader(offset+pHeaderSize*i));</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;ProgramHeader index:&quot;</span> +i+ <span class="string">&quot; :&quot;</span>);</span><br><span class="line">            System.out.println(type_32.phdrList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ElfType32.elf32_phdr <span class="title function_">readProgramHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line">        <span class="comment">//    public byte[] p_type = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_offset = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_vaddr = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_paddr = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_filesz = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_memsz = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_flags = new byte[4];</span></span><br><span class="line">        <span class="comment">//    public byte[] p_align = new byte[4];</span></span><br><span class="line">        ElfType32.<span class="type">elf32_phdr</span> <span class="variable">phdr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType32</span>.elf32_phdr();</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">0</span>, phdr.p_type, <span class="number">0</span>, phdr.p_type.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">4</span>, phdr.p_offset, <span class="number">0</span>, phdr.p_offset.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">8</span>, phdr.p_vaddr, <span class="number">0</span>, phdr.p_vaddr.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">12</span>, phdr.p_paddr, <span class="number">0</span>, phdr.p_paddr.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">16</span>, phdr.p_filesz, <span class="number">0</span>, phdr.p_filesz.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">20</span>, phdr.p_memsz, <span class="number">0</span>, phdr.p_memsz.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">24</span>, phdr.p_flags, <span class="number">0</span>, phdr.p_flags.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">28</span>, phdr.p_align, <span class="number">0</span>, phdr.p_align.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> phdr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readSectionHeaderList</span><span class="params">(<span class="type">int</span> offset, <span class="type">int</span> count)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sHeaderSize</span> <span class="operator">=</span> Utils.byte2Short(type_32.hdr.e_shentsize);</span><br><span class="line">        <span class="type">int</span> <span class="variable">strIndex</span> <span class="operator">=</span> Utils.byte2Int(type_32.hdr.e_shstrndx);</span><br><span class="line"></span><br><span class="line">        readSectionHeader(offset + sHeaderSize*strIndex);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;count; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == strIndex)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;SectionHeader index:&quot;</span> +i+ <span class="string">&quot; :&quot;</span>);</span><br><span class="line">            type_32.shdrList.add(readSectionHeader(offset + sHeaderSize*i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ElfType32.elf32_shdr <span class="title function_">readSectionHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line"><span class="comment">//        public byte[] sh_name = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_type = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_flags = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_addr = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_offset = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_size = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_link = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_info = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_addralign = new byte[4];</span></span><br><span class="line"><span class="comment">//        public byte[] sh_entsize = new byte[4];</span></span><br><span class="line">        ElfType32.<span class="type">elf32_shdr</span> <span class="variable">shdr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfType32</span>.elf32_shdr();</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">0</span>, shdr.sh_name, <span class="number">0</span>, shdr.sh_name.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">4</span>, shdr.sh_type, <span class="number">0</span>, shdr.sh_type.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">8</span>, shdr.sh_flags, <span class="number">0</span>, shdr.sh_flags.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">12</span>, shdr.sh_addr, <span class="number">0</span>, shdr.sh_addr.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">16</span>, shdr.sh_offset, <span class="number">0</span>, shdr.sh_offset.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">20</span>, shdr.sh_size, <span class="number">0</span>, shdr.sh_size.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">24</span>, shdr.sh_link, <span class="number">0</span>, shdr.sh_link.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">28</span>, shdr.sh_info, <span class="number">0</span>, shdr.sh_info.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">32</span>, shdr.sh_addralign, <span class="number">0</span>, shdr.sh_addralign.length);</span><br><span class="line">        System.arraycopy(byteArr, offset+<span class="number">36</span>, shdr.sh_entsize, <span class="number">0</span>, shdr.sh_entsize.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (Utils.byte2Int(shdr.sh_type))&#123;</span><br><span class="line">            <span class="keyword">case</span> ElfType32.SHT_STRTAB:&#123;</span><br><span class="line">                <span class="type">ElfStringTable</span> <span class="variable">elfStringTable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfStringTable</span>(byteArr, Utils.byte2Int(shdr.sh_offset), Utils.byte2Int(shdr.sh_size));</span><br><span class="line">                type_32.elfStringTables.add(elfStringTable);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> ElfType32.SHT_DYNSYM:&#123;  <span class="comment">//���ű�</span></span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">baseOffset</span> <span class="operator">=</span> Utils.byte2Int(shdr.sh_offset);</span><br><span class="line">                <span class="type">int</span> <span class="variable">symCount</span> <span class="operator">=</span> Utils.byte2Int(shdr.sh_size)/<span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                public byte[] st_name_ndx = new byte[4];</span></span><br><span class="line"><span class="comment">//                public byte[] st_value = new byte[4];</span></span><br><span class="line"><span class="comment">//                public byte[] st_size = new byte[4];</span></span><br><span class="line"><span class="comment">//                public byte[] st_info = new byte[1];</span></span><br><span class="line"><span class="comment">//                public byte[] st_other = new byte[1];</span></span><br><span class="line"><span class="comment">//                public byte[] st_shndx = new byte[2];</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;symCount; i++)&#123;</span><br><span class="line">                    <span class="type">ElfSymbolTable</span> <span class="variable">elfSymbolTable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ElfSymbolTable</span>();</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">0</span>+i*<span class="number">16</span>, elfSymbolTable.st_name_ndx, <span class="number">0</span>, elfSymbolTable.st_name_ndx.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">4</span>+i*<span class="number">16</span>, elfSymbolTable.st_value, <span class="number">0</span>, elfSymbolTable.st_value.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">8</span>+i*<span class="number">16</span>, elfSymbolTable.st_size, <span class="number">0</span>, elfSymbolTable.st_size.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">12</span>+i*<span class="number">16</span>, elfSymbolTable.st_info, <span class="number">0</span>, elfSymbolTable.st_info.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">13</span>+i*<span class="number">16</span>, elfSymbolTable.st_other, <span class="number">0</span>, elfSymbolTable.st_other.length);</span><br><span class="line">                    System.arraycopy(byteArr, baseOffset+<span class="number">14</span>+i*<span class="number">16</span>, elfSymbolTable.st_shndx, <span class="number">0</span>, elfSymbolTable.st_shndx.length);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">switch</span> (elfSymbolTable.getBinding())&#123;</span><br><span class="line">                        <span class="keyword">case</span> STB_LOCAL:</span><br><span class="line">                        <span class="keyword">case</span> STB_GLOBAL:&#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">switch</span> (elfSymbolTable.getType())&#123;</span><br><span class="line">                        <span class="keyword">case</span> STT_NOTYPE:&#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    type_32.elfSymbolTableList.add(elfSymbolTable);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">tmp</span> <span class="operator">=</span> type_32.elfStringTables.get(<span class="number">0</span>).getCStringByOffset(Utils.byte2Int(shdr.sh_name));</span><br><span class="line">        <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;sh_name: &quot;</span>+tmp <span class="comment">/*Utils.byte2Int(sh_name)*/</span></span><br><span class="line">                +<span class="string">&quot;\nsh_type:&quot;</span>+Utils.bytes2HexString(shdr.sh_type)</span><br><span class="line">                +<span class="string">&quot;\nsh_flags:&quot;</span>+Utils.bytes2HexString(shdr.sh_flags)</span><br><span class="line">                +<span class="string">&quot;\nsh_add:&quot;</span>+Utils.bytes2HexString(shdr.sh_addr)</span><br><span class="line">                +<span class="string">&quot;\nsh_offset:&quot;</span>+Utils.bytes2HexString(shdr.sh_offset)</span><br><span class="line">                +<span class="string">&quot;\nsh_size:&quot;</span>+Utils.bytes2HexString(shdr.sh_size)</span><br><span class="line">                +<span class="string">&quot;\nsh_link:&quot;</span>+Utils.bytes2HexString(shdr.sh_link)</span><br><span class="line">                +<span class="string">&quot;\nsh_info:&quot;</span>+Utils.bytes2HexString(shdr.sh_info)</span><br><span class="line">                +<span class="string">&quot;\nsh_addralign:&quot;</span>+Utils.bytes2HexString(shdr.sh_addralign)</span><br><span class="line">                +<span class="string">&quot;\nsh_entsize:&quot;</span>+ Utils.bytes2HexString(shdr.sh_entsize);</span><br><span class="line">        System.out.println(pri);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> shdr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printSymbolTableList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;type_32.elfSymbolTableList.size(); i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">symName</span> <span class="operator">=</span> Utils.byte2Int(type_32.elfSymbolTableList.get(i).st_name_ndx);</span><br><span class="line">            System.out.println(<span class="string">&quot;symbol index: &quot;</span> + i + <span class="string">&quot; :&quot;</span>);</span><br><span class="line">            System.out.println(type_32.elfStringTables.get(<span class="number">1</span>).getCStringByOffset(symName));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ElfType32.java、ElfType64.java、ElfStringTable.java、ElfSymbolTable.java就省略了，官网都能找到。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dex完整代码解析</title>
      <link href="/2024/07/26/Dex%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
      <url>/2024/07/26/Dex%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h4 id="DexFile-h"><a href="#DexFile-h" class="headerlink" title="DexFile.h"></a>DexFile.h</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2008 The Android Open Source Project</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Access .dex (Dalvik Executable Format) files.  The code here assumes that</span></span><br><span class="line"><span class="comment"> * the DEX file has been rewritten (byte-swapped, word-aligned) and that</span></span><br><span class="line"><span class="comment"> * the contents can be directly accessed as a collection of C arrays.  Please</span></span><br><span class="line"><span class="comment"> * see docs/dalvik/dex-format.html for a detailed description.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The structure and field names were chosen to match those in the DEX spec.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * It&#x27;s generally assumed that the DEX file will be stored in shared memory,</span></span><br><span class="line"><span class="comment"> * obviating the need to copy code and constant pool entries into newly</span></span><br><span class="line"><span class="comment"> * allocated storage.  Maintaining local pointers to items in the shared area</span></span><br><span class="line"><span class="comment"> * is valid and encouraged.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * All memory-mapped structures are 32-bit aligned unless otherwise noted.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LIBDEX_DEXFILE_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIBDEX_DEXFILE_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vm/Common.h&quot;</span>      <span class="comment">// basic type defs, e.g. u1/u2/u4/u8, and LOG</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;libdex/SysUtil.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * gcc-style inline management -- ensures we have a copy of all functions</span></span><br><span class="line"><span class="comment"> * in the library, so code that links against us will work whether or not</span></span><br><span class="line"><span class="comment"> * it was built with optimizations enabled.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _DEX_GEN_INLINES             <span class="comment">/* only defined by DexInlines.c */</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> DEX_INLINE extern __inline__</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> DEX_INLINE</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* DEX file magic number */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_MAGIC       <span class="string">&quot;dex\n&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* current version, encoded in 4 bytes of ASCII */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_MAGIC_VERS  <span class="string">&quot;036\0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * older but still-recognized version (corresponding to Android API</span></span><br><span class="line"><span class="comment"> * levels 13 and earlier</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_MAGIC_VERS_API_13  <span class="string">&quot;035\0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* same, but for optimized DEX header */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_OPT_MAGIC   <span class="string">&quot;dey\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_OPT_MAGIC_VERS  <span class="string">&quot;036\0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_DEP_MAGIC   <span class="string">&quot;deps&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 160-bit SHA-1 digest.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> &#123; kSHA1DigestLen = <span class="number">20</span>,</span><br><span class="line">       kSHA1DigestOutputLen = kSHA1DigestLen*<span class="number">2</span> <span class="number">+1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* general constants */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexEndianConstant = <span class="number">0x12345678</span>,    <span class="comment">/* the endianness indicator */</span></span><br><span class="line">    kDexNoIndex = <span class="number">0xffffffff</span>,           <span class="comment">/* not a valid index value */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Enumeration of all the primitive types.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">PrimitiveType</span> &#123;</span><br><span class="line">    PRIM_NOT        = <span class="number">0</span>,       <span class="comment">/* value is a reference type, not a primitive type */</span></span><br><span class="line">    PRIM_VOID       = <span class="number">1</span>,</span><br><span class="line">    PRIM_BOOLEAN    = <span class="number">2</span>,</span><br><span class="line">    PRIM_BYTE       = <span class="number">3</span>,</span><br><span class="line">    PRIM_SHORT      = <span class="number">4</span>,</span><br><span class="line">    PRIM_CHAR       = <span class="number">5</span>,</span><br><span class="line">    PRIM_INT        = <span class="number">6</span>,</span><br><span class="line">    PRIM_LONG       = <span class="number">7</span>,</span><br><span class="line">    PRIM_FLOAT      = <span class="number">8</span>,</span><br><span class="line">    PRIM_DOUBLE     = <span class="number">9</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * access flags and masks; the &quot;standard&quot; ones are all &lt;= 0x4000</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Note: There are related declarations in vm/oo/Object.h in the ClassFlags</span></span><br><span class="line"><span class="comment"> * enum.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    ACC_PUBLIC       = <span class="number">0x00000001</span>,       <span class="comment">// class, field, method, ic</span></span><br><span class="line">    ACC_PRIVATE      = <span class="number">0x00000002</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_PROTECTED    = <span class="number">0x00000004</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_STATIC       = <span class="number">0x00000008</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_FINAL        = <span class="number">0x00000010</span>,       <span class="comment">// class, field, method, ic</span></span><br><span class="line">    ACC_SYNCHRONIZED = <span class="number">0x00000020</span>,       <span class="comment">// method (only allowed on natives)</span></span><br><span class="line">    ACC_SUPER        = <span class="number">0x00000020</span>,       <span class="comment">// class (not used in Dalvik)</span></span><br><span class="line">    ACC_VOLATILE     = <span class="number">0x00000040</span>,       <span class="comment">// field</span></span><br><span class="line">    ACC_BRIDGE       = <span class="number">0x00000040</span>,       <span class="comment">// method (1.5)</span></span><br><span class="line">    ACC_TRANSIENT    = <span class="number">0x00000080</span>,       <span class="comment">// field</span></span><br><span class="line">    ACC_VARARGS      = <span class="number">0x00000080</span>,       <span class="comment">// method (1.5)</span></span><br><span class="line">    ACC_NATIVE       = <span class="number">0x00000100</span>,       <span class="comment">// method</span></span><br><span class="line">    ACC_INTERFACE    = <span class="number">0x00000200</span>,       <span class="comment">// class, ic</span></span><br><span class="line">    ACC_ABSTRACT     = <span class="number">0x00000400</span>,       <span class="comment">// class, method, ic</span></span><br><span class="line">    ACC_STRICT       = <span class="number">0x00000800</span>,       <span class="comment">// method</span></span><br><span class="line">    ACC_SYNTHETIC    = <span class="number">0x00001000</span>,       <span class="comment">// field, method, ic</span></span><br><span class="line">    ACC_ANNOTATION   = <span class="number">0x00002000</span>,       <span class="comment">// class, ic (1.5)</span></span><br><span class="line">    ACC_ENUM         = <span class="number">0x00004000</span>,       <span class="comment">// class, field, ic (1.5)</span></span><br><span class="line">    ACC_CONSTRUCTOR  = <span class="number">0x00010000</span>,       <span class="comment">// method (Dalvik only)</span></span><br><span class="line">    ACC_DECLARED_SYNCHRONIZED =</span><br><span class="line">                       <span class="number">0x00020000</span>,       <span class="comment">// method (Dalvik only)</span></span><br><span class="line">    ACC_CLASS_MASK =</span><br><span class="line">        (ACC_PUBLIC | ACC_FINAL | ACC_INTERFACE | ACC_ABSTRACT</span><br><span class="line">                | ACC_SYNTHETIC | ACC_ANNOTATION | ACC_ENUM),</span><br><span class="line">    ACC_INNER_CLASS_MASK =</span><br><span class="line">        (ACC_CLASS_MASK | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC),</span><br><span class="line">    ACC_FIELD_MASK =</span><br><span class="line">        (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL</span><br><span class="line">                | ACC_VOLATILE | ACC_TRANSIENT | ACC_SYNTHETIC | ACC_ENUM),</span><br><span class="line">    ACC_METHOD_MASK =</span><br><span class="line">        (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL</span><br><span class="line">                | ACC_SYNCHRONIZED | ACC_BRIDGE | ACC_VARARGS | ACC_NATIVE</span><br><span class="line">                | ACC_ABSTRACT | ACC_STRICT | ACC_SYNTHETIC | ACC_CONSTRUCTOR</span><br><span class="line">                | ACC_DECLARED_SYNCHRONIZED),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* annotation constants */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexVisibilityBuild         = <span class="number">0x00</span>,     <span class="comment">/* annotation visibility */</span></span><br><span class="line">    kDexVisibilityRuntime       = <span class="number">0x01</span>,</span><br><span class="line">    kDexVisibilitySystem        = <span class="number">0x02</span>,</span><br><span class="line"></span><br><span class="line">    kDexAnnotationByte          = <span class="number">0x00</span>,</span><br><span class="line">    kDexAnnotationShort         = <span class="number">0x02</span>,</span><br><span class="line">    kDexAnnotationChar          = <span class="number">0x03</span>,</span><br><span class="line">    kDexAnnotationInt           = <span class="number">0x04</span>,</span><br><span class="line">    kDexAnnotationLong          = <span class="number">0x06</span>,</span><br><span class="line">    kDexAnnotationFloat         = <span class="number">0x10</span>,</span><br><span class="line">    kDexAnnotationDouble        = <span class="number">0x11</span>,</span><br><span class="line">    kDexAnnotationString        = <span class="number">0x17</span>,</span><br><span class="line">    kDexAnnotationType          = <span class="number">0x18</span>,</span><br><span class="line">    kDexAnnotationField         = <span class="number">0x19</span>,</span><br><span class="line">    kDexAnnotationMethod        = <span class="number">0x1a</span>,</span><br><span class="line">    kDexAnnotationEnum          = <span class="number">0x1b</span>,</span><br><span class="line">    kDexAnnotationArray         = <span class="number">0x1c</span>,</span><br><span class="line">    kDexAnnotationAnnotation    = <span class="number">0x1d</span>,</span><br><span class="line">    kDexAnnotationNull          = <span class="number">0x1e</span>,</span><br><span class="line">    kDexAnnotationBoolean       = <span class="number">0x1f</span>,</span><br><span class="line"></span><br><span class="line">    kDexAnnotationValueTypeMask = <span class="number">0x1f</span>,     <span class="comment">/* low 5 bits */</span></span><br><span class="line">    kDexAnnotationValueArgShift = <span class="number">5</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* map item type codes */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexTypeHeaderItem               = <span class="number">0x0000</span>,</span><br><span class="line">    kDexTypeStringIdItem             = <span class="number">0x0001</span>,</span><br><span class="line">    kDexTypeTypeIdItem               = <span class="number">0x0002</span>,</span><br><span class="line">    kDexTypeProtoIdItem              = <span class="number">0x0003</span>,</span><br><span class="line">    kDexTypeFieldIdItem              = <span class="number">0x0004</span>,</span><br><span class="line">    kDexTypeMethodIdItem             = <span class="number">0x0005</span>,</span><br><span class="line">    kDexTypeClassDefItem             = <span class="number">0x0006</span>,</span><br><span class="line">    kDexTypeMapList                  = <span class="number">0x1000</span>,</span><br><span class="line">    kDexTypeTypeList                 = <span class="number">0x1001</span>,</span><br><span class="line">    kDexTypeAnnotationSetRefList     = <span class="number">0x1002</span>,</span><br><span class="line">    kDexTypeAnnotationSetItem        = <span class="number">0x1003</span>,</span><br><span class="line">    kDexTypeClassDataItem            = <span class="number">0x2000</span>,</span><br><span class="line">    kDexTypeCodeItem                 = <span class="number">0x2001</span>,</span><br><span class="line">    kDexTypeStringDataItem           = <span class="number">0x2002</span>,</span><br><span class="line">    kDexTypeDebugInfoItem            = <span class="number">0x2003</span>,</span><br><span class="line">    kDexTypeAnnotationItem           = <span class="number">0x2004</span>,</span><br><span class="line">    kDexTypeEncodedArrayItem         = <span class="number">0x2005</span>,</span><br><span class="line">    kDexTypeAnnotationsDirectoryItem = <span class="number">0x2006</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* auxillary data section chunk codes */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexChunkClassLookup            = <span class="number">0x434c4b50</span>,   <span class="comment">/* CLKP */</span></span><br><span class="line">    kDexChunkRegisterMaps           = <span class="number">0x524d4150</span>,   <span class="comment">/* RMAP */</span></span><br><span class="line"></span><br><span class="line">    kDexChunkEnd                    = <span class="number">0x41454e44</span>,   <span class="comment">/* AEND */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* debug info opcodes and constants */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    DBG_END_SEQUENCE         = <span class="number">0x00</span>,</span><br><span class="line">    DBG_ADVANCE_PC           = <span class="number">0x01</span>,</span><br><span class="line">    DBG_ADVANCE_LINE         = <span class="number">0x02</span>,</span><br><span class="line">    DBG_START_LOCAL          = <span class="number">0x03</span>,</span><br><span class="line">    DBG_START_LOCAL_EXTENDED = <span class="number">0x04</span>,</span><br><span class="line">    DBG_END_LOCAL            = <span class="number">0x05</span>,</span><br><span class="line">    DBG_RESTART_LOCAL        = <span class="number">0x06</span>,</span><br><span class="line">    DBG_SET_PROLOGUE_END     = <span class="number">0x07</span>,</span><br><span class="line">    DBG_SET_EPILOGUE_BEGIN   = <span class="number">0x08</span>,</span><br><span class="line">    DBG_SET_FILE             = <span class="number">0x09</span>,</span><br><span class="line">    DBG_FIRST_SPECIAL        = <span class="number">0x0a</span>,</span><br><span class="line">    DBG_LINE_BASE            = <span class="number">-4</span>,</span><br><span class="line">    DBG_LINE_RANGE           = <span class="number">15</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;header_item&quot; struct.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexHeader</span> &#123;</span><br><span class="line">    u1  magic[<span class="number">8</span>];           <span class="comment">/* includes version number */</span></span><br><span class="line">    u4  checksum;           <span class="comment">/* adler32 checksum */</span></span><br><span class="line">    u1  signature[kSHA1DigestLen]; <span class="comment">/* SHA-1 hash */</span></span><br><span class="line">    u4  fileSize;           <span class="comment">/* length of entire file */</span></span><br><span class="line">    u4  headerSize;         <span class="comment">/* offset to start of next section */</span></span><br><span class="line">    u4  endianTag;</span><br><span class="line">    u4  linkSize;</span><br><span class="line">    u4  linkOff;</span><br><span class="line">    u4  mapOff;</span><br><span class="line">    u4  stringIdsSize;</span><br><span class="line">    u4  stringIdsOff;</span><br><span class="line">    u4  typeIdsSize;</span><br><span class="line">    u4  typeIdsOff;</span><br><span class="line">    u4  protoIdsSize;</span><br><span class="line">    u4  protoIdsOff;</span><br><span class="line">    u4  fieldIdsSize;</span><br><span class="line">    u4  fieldIdsOff;</span><br><span class="line">    u4  methodIdsSize;</span><br><span class="line">    u4  methodIdsOff;</span><br><span class="line">    u4  classDefsSize;</span><br><span class="line">    u4  classDefsOff;</span><br><span class="line">    u4  dataSize;</span><br><span class="line">    u4  dataOff;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;map_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMapItem</span> &#123;</span><br><span class="line">    u2 type;              <span class="comment">/* type code (see kDexType* above) */</span></span><br><span class="line">    u2 unused;</span><br><span class="line">    u4 size;              <span class="comment">/* count of items of the indicated type */</span></span><br><span class="line">    u4 offset;            <span class="comment">/* file offset to the start of data */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;map_list&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMapList</span> &#123;</span><br><span class="line">    u4  size;               <span class="comment">/* #of entries in list */</span></span><br><span class="line">    DexMapItem list[<span class="number">1</span>];     <span class="comment">/* entries */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;string_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexStringId</span> &#123;</span><br><span class="line">    u4 stringDataOff;      <span class="comment">/* file offset to string_data_item */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;type_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTypeId</span> &#123;</span><br><span class="line">    u4  descriptorIdx;      <span class="comment">/* index into stringIds list for type descriptor */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;field_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexFieldId</span> &#123;</span><br><span class="line">    u2  classIdx;           <span class="comment">/* index into typeIds list for defining class */</span></span><br><span class="line">    u2  typeIdx;            <span class="comment">/* index into typeIds for field type */</span></span><br><span class="line">    u4  nameIdx;            <span class="comment">/* index into stringIds for field name */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;method_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMethodId</span> &#123;</span><br><span class="line">    u2  classIdx;           <span class="comment">/* index into typeIds list for defining class */</span></span><br><span class="line">    u2  protoIdx;           <span class="comment">/* index into protoIds for method prototype */</span></span><br><span class="line">    u4  nameIdx;            <span class="comment">/* index into stringIds for method name */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;proto_id_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexProtoId</span> &#123;</span><br><span class="line">    u4  shortyIdx;          <span class="comment">/* index into stringIds for shorty descriptor */</span></span><br><span class="line">    u4  returnTypeIdx;      <span class="comment">/* index into typeIds list for return type */</span></span><br><span class="line">    u4  parametersOff;      <span class="comment">/* file offset to type_list for parameter types */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;class_def_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexClassDef</span> &#123;</span><br><span class="line">    u4  classIdx;           <span class="comment">/* index into typeIds for this class */</span></span><br><span class="line">    u4  accessFlags;</span><br><span class="line">    u4  superclassIdx;      <span class="comment">/* index into typeIds for superclass */</span></span><br><span class="line">    u4  interfacesOff;      <span class="comment">/* file offset to DexTypeList */</span></span><br><span class="line">    u4  sourceFileIdx;      <span class="comment">/* index into stringIds for source file name */</span></span><br><span class="line">    u4  annotationsOff;     <span class="comment">/* file offset to annotations_directory_item */</span></span><br><span class="line">    u4  classDataOff;       <span class="comment">/* file offset to class_data_item */</span></span><br><span class="line">    u4  staticValuesOff;    <span class="comment">/* file offset to DexEncodedArray */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;type_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTypeItem</span> &#123;</span><br><span class="line">    u2  typeIdx;            <span class="comment">/* index into typeIds */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;type_list&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTypeList</span> &#123;</span><br><span class="line">    u4  size;               <span class="comment">/* #of entries in list */</span></span><br><span class="line">    DexTypeItem list[<span class="number">1</span>];    <span class="comment">/* entries */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;code_item&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The &quot;catches&quot; table is used when throwing an exception,</span></span><br><span class="line"><span class="comment"> * &quot;debugInfo&quot; is used when displaying an exception stack trace or</span></span><br><span class="line"><span class="comment"> * debugging. An offset of zero indicates that there are no entries.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexCode</span> &#123;</span><br><span class="line">    u2  registersSize;</span><br><span class="line">    u2  insSize;</span><br><span class="line">    u2  outsSize;</span><br><span class="line">    u2  triesSize;</span><br><span class="line">    u4  debugInfoOff;       <span class="comment">/* file offset to debug info stream */</span></span><br><span class="line">    u4  insnsSize;          <span class="comment">/* size of the insns array, in u2 units */</span></span><br><span class="line">    u2  insns[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">/* followed by optional u2 padding */</span></span><br><span class="line">    <span class="comment">/* followed by try_item[triesSize] */</span></span><br><span class="line">    <span class="comment">/* followed by uleb128 handlersSize */</span></span><br><span class="line">    <span class="comment">/* followed by catch_handler_item[handlersSize] */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;try_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexTry</span> &#123;</span><br><span class="line">    u4  startAddr;          <span class="comment">/* start address, in 16-bit code units */</span></span><br><span class="line">    u2  insnCount;          <span class="comment">/* instruction count, in 16-bit code units */</span></span><br><span class="line">    u2  handlerOff;         <span class="comment">/* offset in encoded handler data to handlers */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Link table.  Currently undefined.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexLink</span> &#123;</span><br><span class="line">    u1  bleargh;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotations_directory_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationsDirectoryItem</span> &#123;</span><br><span class="line">    u4  classAnnotationsOff;  <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">    u4  fieldsSize;           <span class="comment">/* count of DexFieldAnnotationsItem */</span></span><br><span class="line">    u4  methodsSize;          <span class="comment">/* count of DexMethodAnnotationsItem */</span></span><br><span class="line">    u4  parametersSize;       <span class="comment">/* count of DexParameterAnnotationsItem */</span></span><br><span class="line">    <span class="comment">/* followed by DexFieldAnnotationsItem[fieldsSize] */</span></span><br><span class="line">    <span class="comment">/* followed by DexMethodAnnotationsItem[methodsSize] */</span></span><br><span class="line">    <span class="comment">/* followed by DexParameterAnnotationsItem[parametersSize] */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;field_annotations_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexFieldAnnotationsItem</span> &#123;</span><br><span class="line">    u4  fieldIdx;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;method_annotations_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexMethodAnnotationsItem</span> &#123;</span><br><span class="line">    u4  methodIdx;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;parameter_annotations_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexParameterAnnotationsItem</span> &#123;</span><br><span class="line">    u4  methodIdx;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnotationSetRefList */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_set_ref_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationSetRefItem</span> &#123;</span><br><span class="line">    u4  annotationsOff;             <span class="comment">/* offset to DexAnnotationSetItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_set_ref_list&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationSetRefList</span> &#123;</span><br><span class="line">    u4  size;</span><br><span class="line">    DexAnnotationSetRefItem list[<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_set_item&quot;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationSetItem</span> &#123;</span><br><span class="line">    u4  size;</span><br><span class="line">    u4  entries[<span class="number">1</span>];                 <span class="comment">/* offset to DexAnnotationItem */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;annotation_item&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">NOTE:</span> this structure is byte-aligned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexAnnotationItem</span> &#123;</span><br><span class="line">    u1  visibility;</span><br><span class="line">    u1  annotation[<span class="number">1</span>];              <span class="comment">/* data in encoded_annotation format */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Direct-mapped &quot;encoded_array&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">NOTE:</span> this structure is byte-aligned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexEncodedArray</span> &#123;</span><br><span class="line">    u1  array[<span class="number">1</span>];                   <span class="comment">/* data in encoded_array format */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Lookup table for classes.  It provides a mapping from class name to</span></span><br><span class="line"><span class="comment"> * class definition.  Used by dexFindClass().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * We calculate this at DEX optimization time and embed it in the file so we</span></span><br><span class="line"><span class="comment"> * don&#x27;t need the same hash table in every VM.  This is slightly slower than</span></span><br><span class="line"><span class="comment"> * a hash table with direct pointers to the items, but because it&#x27;s shared</span></span><br><span class="line"><span class="comment"> * there&#x27;s less of a penalty for using a fairly sparse table.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexClassLookup</span> &#123;</span><br><span class="line">    <span class="type">int</span>     size;                       <span class="comment">// total size, including &quot;size&quot;</span></span><br><span class="line">    <span class="type">int</span>     numEntries;                 <span class="comment">// size of table[]; always power of 2</span></span><br><span class="line">    <span class="keyword">struct</span> &#123;</span><br><span class="line">        u4      classDescriptorHash;    <span class="comment">// class descriptor hash code</span></span><br><span class="line">        <span class="type">int</span>     classDescriptorOffset;  <span class="comment">// in bytes, from start of DEX</span></span><br><span class="line">        <span class="type">int</span>     classDefOffset;         <span class="comment">// in bytes, from start of DEX</span></span><br><span class="line">    &#125; table[<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Header added by DEX optimization pass.  Values are always written in</span></span><br><span class="line"><span class="comment"> * local byte and structure padding.  The first field (magic + version)</span></span><br><span class="line"><span class="comment"> * is guaranteed to be present and directly readable for all expected</span></span><br><span class="line"><span class="comment"> * compiler configurations; the rest is version-dependent.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Try to keep this simple and fixed-size.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexOptHeader</span> &#123;</span><br><span class="line">    u1  magic[<span class="number">8</span>];           <span class="comment">/* includes version number */</span></span><br><span class="line"></span><br><span class="line">    u4  dexOffset;          <span class="comment">/* file offset of DEX header */</span></span><br><span class="line">    u4  dexLength;</span><br><span class="line">    u4  depsOffset;         <span class="comment">/* offset of optimized DEX dependency table */</span></span><br><span class="line">    u4  depsLength;</span><br><span class="line">    u4  optOffset;          <span class="comment">/* file offset of optimized data tables */</span></span><br><span class="line">    u4  optLength;</span><br><span class="line"></span><br><span class="line">    u4  flags;              <span class="comment">/* some info flags */</span></span><br><span class="line">    u4  checksum;           <span class="comment">/* adler32 checksum covering deps/opt */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* pad for 64-bit alignment if necessary */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_OPT_FLAG_BIG            (1&lt;&lt;1)  <span class="comment">/* swapped to big-endian */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEX_INTERFACE_CACHE_SIZE    128     <span class="comment">/* must be power of 2 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Structure representing a DEX file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Code should regard DexFile as opaque, using the API calls provided here</span></span><br><span class="line"><span class="comment"> * to access specific structures.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DexFile</span> &#123;</span><br><span class="line">    <span class="comment">/* directly-mapped &quot;opt&quot; header */</span></span><br><span class="line">    <span class="type">const</span> DexOptHeader* pOptHeader;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* pointers to directly-mapped structs and arrays in base DEX */</span></span><br><span class="line">    <span class="type">const</span> DexHeader*    pHeader;</span><br><span class="line">    <span class="type">const</span> DexStringId*  pStringIds;</span><br><span class="line">    <span class="type">const</span> DexTypeId*    pTypeIds;</span><br><span class="line">    <span class="type">const</span> DexFieldId*   pFieldIds;</span><br><span class="line">    <span class="type">const</span> DexMethodId*  pMethodIds;</span><br><span class="line">    <span class="type">const</span> DexProtoId*   pProtoIds;</span><br><span class="line">    <span class="type">const</span> DexClassDef*  pClassDefs;</span><br><span class="line">    <span class="type">const</span> DexLink*      pLinkData;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * These are mapped out of the &quot;auxillary&quot; section, and may not be</span></span><br><span class="line"><span class="comment">     * included in the file.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">const</span> DexClassLookup* pClassLookup;</span><br><span class="line">    <span class="type">const</span> <span class="type">void</span>*         pRegisterMapPool;       <span class="comment">// RegisterMapClassPool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* points to start of DEX file data */</span></span><br><span class="line">    <span class="type">const</span> u1*           baseAddr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* track memory overhead for auxillary structures */</span></span><br><span class="line">    <span class="type">int</span>                 overhead;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* additional app-specific data structures associated with the DEX */</span></span><br><span class="line">    <span class="comment">//void*               auxData;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Utility function -- rounds up to the nearest power of 2.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">u4 <span class="title">dexRoundUpPower2</span><span class="params">(u4 val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Parse an optimized or unoptimized .dex file sitting in memory.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * On success, return a newly-allocated DexFile.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DexFile* <span class="title">dexFileParse</span><span class="params">(<span class="type">const</span> u1* data, <span class="type">size_t</span> length, <span class="type">int</span> flags)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bit values for &quot;flags&quot; argument to dexFileParse */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexParseDefault            = <span class="number">0</span>,</span><br><span class="line">    kDexParseVerifyChecksum     = <span class="number">1</span>,</span><br><span class="line">    kDexParseContinueOnError    = (<span class="number">1</span> &lt;&lt; <span class="number">1</span>),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Fix the byte ordering of all fields in the DEX file, and do</span></span><br><span class="line"><span class="comment"> * structural verification. This is only required for code that opens</span></span><br><span class="line"><span class="comment"> * &quot;raw&quot; DEX files, such as the DEX optimizer.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Return 0 on success.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dexSwapAndVerify</span><span class="params">(u1* addr, <span class="type">int</span> len)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Detect the file type of the given memory buffer via magic number.</span></span><br><span class="line"><span class="comment"> * Call dexSwapAndVerify() on an unoptimized DEX file, do nothing</span></span><br><span class="line"><span class="comment"> * but return successfully on an optimized DEX file, and report an</span></span><br><span class="line"><span class="comment"> * error for all other cases.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Return 0 on success.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dexSwapAndVerifyIfNecessary</span><span class="params">(u1* addr, <span class="type">int</span> len)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Check to see if the file magic and format version in the given</span></span><br><span class="line"><span class="comment"> * header are recognized as valid. Returns true if they are</span></span><br><span class="line"><span class="comment"> * acceptable.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dexHasValidMagic</span><span class="params">(<span class="type">const</span> DexHeader* pHeader)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Compute DEX checksum.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">u4 <span class="title">dexComputeChecksum</span><span class="params">(<span class="type">const</span> DexHeader* pHeader)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Free a DexFile structure, along with any associated structures.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dexFileFree</span><span class="params">(DexFile* pDexFile)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create class lookup table.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DexClassLookup* <span class="title">dexCreateClassLookup</span><span class="params">(DexFile* pDexFile)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Find a class definition by descriptor.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">const</span> DexClassDef* <span class="title">dexFindClass</span><span class="params">(<span class="type">const</span> DexFile* pFile, <span class="type">const</span> <span class="type">char</span>* descriptor)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Set up the basic raw data pointers of a DexFile. This function isn&#x27;t</span></span><br><span class="line"><span class="comment"> * meant for general use.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dexFileSetupBasicPointers</span><span class="params">(DexFile* pDexFile, <span class="type">const</span> u1* data)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the DexMapList of the file, if any */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexMapList* <span class="title">dexGetMap</span><span class="params">(<span class="type">const</span> DexFile* pDexFile)</span> </span>&#123;</span><br><span class="line">    u4 mapOff = pDexFile-&gt;pHeader-&gt;mapOff;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mapOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> (<span class="type">const</span> DexMapList*) (pDexFile-&gt;baseAddr + mapOff);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the const char* string data referred to by the given string_id */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetStringData</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="type">const</span> DexStringId* pStringId)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> u1* ptr = pDexFile-&gt;baseAddr + pStringId-&gt;stringDataOff;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Skip the uleb128 length.</span></span><br><span class="line">    <span class="keyword">while</span> (*(ptr++) &gt; <span class="number">0x7f</span>) <span class="comment">/* empty */</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> <span class="type">char</span>*) ptr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the StringId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexStringId* <span class="title">dexGetStringId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;stringIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pStringIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the UTF-8 encoded string with the specified string_id index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexStringById</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexStringId* pStringId = <span class="built_in">dexGetStringId</span>(pDexFile, idx);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetStringData</span>(pDexFile, pStringId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Return the UTF-8 encoded string with the specified string_id index,</span></span><br><span class="line"><span class="comment"> * also filling in the UTF-16 size (number of 16-bit code points).*/</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span>* <span class="title">dexStringAndSizeById</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx,</span></span></span><br><span class="line"><span class="params"><span class="function">        u4* utf16Size)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the TypeId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeId* <span class="title">dexGetTypeId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;typeIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pTypeIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the descriptor string associated with a given type index.</span></span><br><span class="line"><span class="comment"> * The caller should not free() the returned string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexStringByTypeIdx</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexTypeId* typeId = <span class="built_in">dexGetTypeId</span>(pDexFile, idx);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringById</span>(pDexFile, typeId-&gt;descriptorIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the MethodId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexMethodId* <span class="title">dexGetMethodId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;methodIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pMethodIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the FieldId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexFieldId* <span class="title">dexGetFieldId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;fieldIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pFieldIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the ProtoId with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexProtoId* <span class="title">dexGetProtoId</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;protoIdsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pProtoIds[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the parameter list from a ProtoId. The returns NULL if the ProtoId</span></span><br><span class="line"><span class="comment"> * does not have a parameter list.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeList* <span class="title">dexGetProtoParameters</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile *pDexFile, <span class="type">const</span> DexProtoId* pProtoId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pProtoId-&gt;parametersOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexTypeList*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pProtoId-&gt;parametersOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the ClassDef with the specified index */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexClassDef* <span class="title">dexGetClassDef</span><span class="params">(<span class="type">const</span> DexFile* pDexFile, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pDexFile-&gt;pHeader-&gt;classDefsSize);</span><br><span class="line">    <span class="keyword">return</span> &amp;pDexFile-&gt;pClassDefs[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* given a ClassDef pointer, recover its index */</span></span><br><span class="line"><span class="function">DEX_INLINE u4 <span class="title">dexGetIndexForClassDef</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(pClassDef &gt;= pDexFile-&gt;pClassDefs &amp;&amp;</span><br><span class="line">           pClassDef &lt; pDexFile-&gt;pClassDefs + pDexFile-&gt;pHeader-&gt;classDefsSize);</span><br><span class="line">    <span class="keyword">return</span> pClassDef - pDexFile-&gt;pClassDefs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the interface list for a DexClass */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeList* <span class="title">dexGetInterfacesList</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;interfacesOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexTypeList*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pClassDef-&gt;interfacesOff);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the Nth entry in a DexTypeList. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTypeItem* <span class="title">dexGetTypeItem</span><span class="params">(<span class="type">const</span> DexTypeList* pList,</span></span></span><br><span class="line"><span class="params"><span class="function">    u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pList-&gt;size);</span><br><span class="line">    <span class="keyword">return</span> &amp;pList-&gt;list[idx];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* return the type_idx for the Nth entry in a TypeList */</span></span><br><span class="line"><span class="function">DEX_INLINE u4 <span class="title">dexTypeListGetIdx</span><span class="params">(<span class="type">const</span> DexTypeList* pList, u4 idx)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexTypeItem* pItem = <span class="built_in">dexGetTypeItem</span>(pList, idx);</span><br><span class="line">    <span class="keyword">return</span> pItem-&gt;typeIdx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the static values list for a DexClass */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexEncodedArray* <span class="title">dexGetStaticValuesList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;staticValuesOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexEncodedArray*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pClassDef-&gt;staticValuesOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the annotations directory item for a DexClass */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationsDirectoryItem* <span class="title">dexGetAnnotationsDirectoryItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;annotationsOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationsDirectoryItem*)</span><br><span class="line">        (pDexFile-&gt;baseAddr + pClassDef-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the source file string */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetSourceFile</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;sourceFileIdx == <span class="number">0xffffffff</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringById</span>(pDexFile, pClassDef-&gt;sourceFileIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the size, in bytes, of a DexCode */</span></span><br><span class="line"><span class="function"><span class="type">size_t</span> <span class="title">dexGetDexCodeSize</span><span class="params">(<span class="type">const</span> DexCode* pCode)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Get the list of &quot;tries&quot; for the given DexCode. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexTry* <span class="title">dexGetTries</span><span class="params">(<span class="type">const</span> DexCode* pCode)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> u2* insnsEnd = &amp;pCode-&gt;insns[pCode-&gt;insnsSize];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Round to four bytes.</span></span><br><span class="line">    <span class="keyword">if</span> ((((<span class="type">uintptr_t</span>) insnsEnd) &amp; <span class="number">3</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        insnsEnd++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexTry*) insnsEnd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Get the base of the encoded data for the given DexCode. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> u1* <span class="title">dexGetCatchHandlerData</span><span class="params">(<span class="type">const</span> DexCode* pCode)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> DexTry* pTries = <span class="built_in">dexGetTries</span>(pCode);</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> u1*) &amp;pTries[pCode-&gt;triesSize];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get a pointer to the start of the debugging data */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> u1* <span class="title">dexGetDebugInfoStream</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexCode* pCode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pCode-&gt;debugInfoOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pDexFile-&gt;baseAddr + pCode-&gt;debugInfoOff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DexClassDef convenience - get class descriptor */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetClassDescriptor</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringByTypeIdx</span>(pDexFile, pClassDef-&gt;classIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DexClassDef convenience - get superclass descriptor */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetSuperClassDescriptor</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;superclassIdx == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexStringByTypeIdx</span>(pDexFile, pClassDef-&gt;superclassIdx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* DexClassDef convenience - get class_data_item pointer */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> u1* <span class="title">dexGetClassData</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexClassDef* pClassDef)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pClassDef-&gt;classDataOff == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> u1*) (pDexFile-&gt;baseAddr + pClassDef-&gt;classDataOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Get an annotation set at a particular offset. */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetAnnotationSetItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, u4 offset)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (offset == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationSetItem*) (pDexFile-&gt;baseAddr + offset);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* get the class&#x27; annotation set */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetClassAnnotationSet</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pAnnoDir-&gt;classAnnotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the class&#x27; field annotation list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexFieldAnnotationsItem* <span class="title">dexGetFieldAnnotations</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pAnnoDir-&gt;fieldsSize == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Skip past the header to the start of the field annotations.</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexFieldAnnotationsItem*) &amp;pAnnoDir[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get field annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetFieldAnnotationsSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pAnnoDir-&gt;fieldsSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return a pointer to the field&#x27;s annotation set */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetFieldAnnotationSetItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexFieldAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the class&#x27; method annotation list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexMethodAnnotationsItem* <span class="title">dexGetMethodAnnotations</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pAnnoDir-&gt;methodsSize == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Skip past the header and field annotations to the start of the</span></span><br><span class="line"><span class="comment">     * method annotations.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">const</span> u1* addr = (<span class="type">const</span> u1*) &amp;pAnnoDir[<span class="number">1</span>];</span><br><span class="line">    addr += pAnnoDir-&gt;fieldsSize * <span class="built_in">sizeof</span> (DexFieldAnnotationsItem);</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexMethodAnnotationsItem*) addr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get method annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetMethodAnnotationsSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pAnnoDir-&gt;methodsSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return a pointer to the method&#x27;s annotation set */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetMethodAnnotationSetItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexMethodAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get the class&#x27; parameter annotation list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexParameterAnnotationsItem* <span class="title">dexGetParameterAnnotations</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pAnnoDir-&gt;parametersSize == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Skip past the header, field annotations, and method annotations</span></span><br><span class="line"><span class="comment">     * to the start of the parameter annotations.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">const</span> u1* addr = (<span class="type">const</span> u1*) &amp;pAnnoDir[<span class="number">1</span>];</span><br><span class="line">    addr += pAnnoDir-&gt;fieldsSize * <span class="built_in">sizeof</span> (DexFieldAnnotationsItem);</span><br><span class="line">    addr += pAnnoDir-&gt;methodsSize * <span class="built_in">sizeof</span> (DexMethodAnnotationsItem);</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexParameterAnnotationsItem*) addr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get method annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetParameterAnnotationsSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationsDirectoryItem* pAnnoDir)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pAnnoDir-&gt;parametersSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the parameter annotation ref list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetRefList* <span class="title">dexGetParameterAnnotationSetRefList</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexParameterAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pItem-&gt;annotationsOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationSetRefList*) (pDexFile-&gt;baseAddr + pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get method annotation list size */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">int</span> <span class="title">dexGetParameterAnnotationSetRefSize</span><span class="params">(<span class="type">const</span> DexFile* pDexFile,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexParameterAnnotationsItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pItem-&gt;annotationsOff == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetParameterAnnotationSetRefList</span>(pDexFile, pItem)-&gt;size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the Nth entry from an annotation set ref list */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetRefItem* <span class="title">dexGetParameterAnnotationSetRef</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationSetRefList* pList, u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pList-&gt;size);</span><br><span class="line">    <span class="keyword">return</span> &amp;pList-&gt;list[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* given a DexAnnotationSetRefItem, return the DexAnnotationSetItem */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationSetItem* <span class="title">dexGetSetRefItemItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationSetRefItem* pItem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dexGetAnnotationSetItem</span>(pDexFile, pItem-&gt;annotationsOff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the Nth annotation offset from a DexAnnotationSetItem */</span></span><br><span class="line"><span class="function">DEX_INLINE u4 <span class="title">dexGetAnnotationOff</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexAnnotationSetItem* pAnnoSet, u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">assert</span>(idx &lt; pAnnoSet-&gt;size);</span><br><span class="line">    <span class="keyword">return</span> pAnnoSet-&gt;entries[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* return the Nth annotation item from a DexAnnotationSetItem */</span></span><br><span class="line"><span class="function">DEX_INLINE <span class="type">const</span> DexAnnotationItem* <span class="title">dexGetAnnotationItem</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> DexFile* pDexFile, <span class="type">const</span> DexAnnotationSetItem* pAnnoSet, u4 idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u4 offset = <span class="built_in">dexGetAnnotationOff</span>(pAnnoSet, idx);</span><br><span class="line">    <span class="keyword">if</span> (offset == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">const</span> DexAnnotationItem*) (pDexFile-&gt;baseAddr + offset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the type descriptor character associated with a given primitive</span></span><br><span class="line"><span class="comment"> * type. This returns &#x27;\0&#x27; if the type is invalid.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">dexGetPrimitiveTypeDescriptorChar</span><span class="params">(PrimitiveType type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the type descriptor string associated with a given primitive</span></span><br><span class="line"><span class="comment"> * type.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetPrimitiveTypeDescriptor</span><span class="params">(PrimitiveType type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the boxed type descriptor string associated with a given</span></span><br><span class="line"><span class="comment"> * primitive type. This returns NULL for an invalid type, including</span></span><br><span class="line"><span class="comment"> * particularly for type &quot;void&quot;. In the latter case, even though there</span></span><br><span class="line"><span class="comment"> * is a class Void, there&#x27;s no such thing as a boxed instance of it.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span>* <span class="title">dexGetBoxedTypeDescriptor</span><span class="params">(PrimitiveType type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Get the primitive type constant from the given descriptor character.</span></span><br><span class="line"><span class="comment"> * This returns PRIM_NOT (note: this is a 0) if the character is invalid</span></span><br><span class="line"><span class="comment"> * as a primitive type descriptor.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">PrimitiveType <span class="title">dexGetPrimitiveTypeFromDescriptorChar</span><span class="params">(<span class="type">char</span> descriptorChar)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">// LIBDEX_DEXFILE_H_</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="DexType-java"><a href="#DexType-java" class="headerlink" title="DexType.java"></a>DexType.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import org.jf.dexlib.Code.Instruction;</span></span><br><span class="line"><span class="comment">//import org.jf.dexlib.Code.InstructionIterator;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexType</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DexHeader dexHeader;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexStringId&gt; dexStringId; <span class="comment">//�����ַ���ƫ�ƴ洢</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexStringList;<span class="comment">//�����ַ���</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexTypeId&gt; dexTypeId;<span class="comment">//����dexTypeID</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexTypeList;<span class="comment">//����type</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexProtoId&gt; dexProtoId;<span class="comment">//����dexProtoID</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexProtoIdString;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexProtoIdType;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexTypeList&gt; dexTypeLists;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexProtoList;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexFieldId&gt; dexFieldId;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexFieldList;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexMethodId&gt; dexMethodId;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;String &gt; dexMethodList;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexClassDef&gt; dexClassDefs;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;DexClassData&gt; dexClassData;</span><br><span class="line">    <span class="keyword">public</span> DexMapList dexMapLists;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//���캯��</span></span><br><span class="line">    DexType()&#123;</span><br><span class="line">        dexHeader = <span class="keyword">new</span> <span class="title class_">DexHeader</span>();</span><br><span class="line"></span><br><span class="line">        dexStringId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexStringId&gt;();</span><br><span class="line">        dexStringList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexTypeId =  <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexTypeId &gt;();</span><br><span class="line">        dexTypeList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line">        dexTypeLists = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexTypeList&gt;();</span><br><span class="line"></span><br><span class="line">        dexProtoId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexProtoId&gt;();</span><br><span class="line">        dexProtoIdString = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line">        dexProtoIdType = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line">        dexProtoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexFieldId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexFieldId&gt;();</span><br><span class="line">        dexFieldList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexMethodId = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMethodId&gt;();</span><br><span class="line">        dexMethodList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        dexClassDefs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexClassDef&gt;();</span><br><span class="line">        dexClassData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexClassData&gt;();</span><br><span class="line"></span><br><span class="line">        dexMapLists = <span class="keyword">new</span> <span class="title class_">DexMapList</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexHeader&#123;</span></span><br><span class="line"><span class="comment">     *     u1 magic[8];                   //dex�汾��ʶ8��1�ֽ�</span></span><br><span class="line"><span class="comment">     *     u4 checksum;                   //adler32У��1��4�ֽ�</span></span><br><span class="line"><span class="comment">     *     u1 signature[kSHA1DigestLen];  //SHA-1��ϣֵ</span></span><br><span class="line"><span class="comment">     *     u4 fileSize;                   //�����ļ��Ĵ�С</span></span><br><span class="line"><span class="comment">     *     u4 headerSize;                 //DexHeader�Ľṹ��С</span></span><br><span class="line"><span class="comment">     *     u4 endianTag;                  //�ֽ�����</span></span><br><span class="line"><span class="comment">     *     u4 linkSize;                   //���Ӷδ�С</span></span><br><span class="line"><span class="comment">     *     u4 linkOff;                    //���Ӷ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 mapOff;                     //DexMapList���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 stringIdsSize;              //DexStringId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 stringIdsOff;               //DexStringId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 typeIdsSize;                //DexTupeID�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 typeIdsOff;                 //DexTypeId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 protoIdsSize;               //DexProtoId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 protoIdsOff;                //DexProtoId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 fieldIdsSize;               //DexFieldId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 fieldIdsOff;                //DexFieldId���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 methodIdsSize;              //DexMethodId�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 methodIdsOff;               //DexMethodID���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 classDefsSize;              //DexClassDef�ĸ���</span></span><br><span class="line"><span class="comment">     *     u4 classDefsOff;               //DexClassDef���ļ�ƫ��</span></span><br><span class="line"><span class="comment">     *     u4 dataSize;                   //���ݶεĴ�С</span></span><br><span class="line"><span class="comment">     *     u4 dataOff;                    //���ݶε��ļ�ƫ��</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexHeader</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] magic = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">8</span>];          <span class="comment">//dex�汾��ʶ</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] checksum = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//adler32У��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] signature = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">20</span>];     <span class="comment">//sha-1��ϣֵ</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fileSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//�����ļ��Ĵ�С</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] headerSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];     <span class="comment">//DexHeader�ṹ��С</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] endianTag = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];      <span class="comment">//��С��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] linkSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//���Ӷδ�С</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] linkOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//���Ӷ�ƫ��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] mapOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//DexMapList���ļ�ƫ��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] stringIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//DexStringId�ĸ���</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] stringIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//DexStringId���ļ�ƫ��</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] protoIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] protoIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fieldIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fieldIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] methodIdsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] methodIdsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classDefsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classDefsOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] dataSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] dataOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];       <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> List&lt;<span class="type">byte</span>[]&gt; em = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DexHeader</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.em.add(magic);</span><br><span class="line">            <span class="built_in">this</span>.em.add(checksum);</span><br><span class="line">            <span class="built_in">this</span>.em.add(signature);</span><br><span class="line">            <span class="built_in">this</span>.em.add(fileSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(headerSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(endianTag);</span><br><span class="line">            <span class="built_in">this</span>.em.add(linkSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(linkOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(mapOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(stringIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(stringIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(typeIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(typeIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(protoIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(protoIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(fieldIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(fieldIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(methodIdsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(methodIdsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(classDefsSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(classDefsOff);</span><br><span class="line">            <span class="built_in">this</span>.em.add(dataSize);</span><br><span class="line">            <span class="built_in">this</span>.em.add(dataOff);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexStringId&#123;</span></span><br><span class="line"><span class="comment">     *      u4 stringDataOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexStringId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] stringDataOff= <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexTypeId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 descriptorIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexTypeId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] descriptorIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexProtoId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 shortyIdx;</span></span><br><span class="line"><span class="comment">     *     u4 returnTypeIdx;</span></span><br><span class="line"><span class="comment">     *     u4 parametersOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexProtoId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] shortyIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] returnTypeIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] parametersOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> List&lt;DexTypeItem&gt; dexTypeItemList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexTypeItem&#123;</span></span><br><span class="line"><span class="comment">     *     u2 typeIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexTypeItem</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexTypeList&#123;</span></span><br><span class="line"><span class="comment">     *     u4 size;</span></span><br><span class="line"><span class="comment">     *     DexTypeItem list[11;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexTypeList</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] size=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexTypeItem&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexTypeItem&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexFieldId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 classIdx;</span></span><br><span class="line"><span class="comment">     *     u4 typeIdx;</span></span><br><span class="line"><span class="comment">     *     u4 nameIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexFieldId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] typeIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] nameIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMethodId&#123;</span></span><br><span class="line"><span class="comment">     *     u4 classIdx;</span></span><br><span class="line"><span class="comment">     *     u4 protoIdx;</span></span><br><span class="line"><span class="comment">     *     u4 nameIdx;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMethodId</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] protoIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] nameIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexClassDef&#123;</span></span><br><span class="line"><span class="comment">     *     u4 classIdx;</span></span><br><span class="line"><span class="comment">     *     u4 accessFlags;</span></span><br><span class="line"><span class="comment">     *     u4 superclassIdx;</span></span><br><span class="line"><span class="comment">     *     u4 interfacesOff;</span></span><br><span class="line"><span class="comment">     *     u4 sourceFileIdx;</span></span><br><span class="line"><span class="comment">     *     u4 annotationsOff;</span></span><br><span class="line"><span class="comment">     *     u4 classDataOff;</span></span><br><span class="line"><span class="comment">     *     u4 staticValuesOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexClassDef</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] accessFlags=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] superclassIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] interfacesOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] sourceFileIdx=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] annotationsOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] classDataOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] staticValuesOff=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexClassDataItem&#123;</span></span><br><span class="line"><span class="comment">     *     u4 staticFieldsSize;</span></span><br><span class="line"><span class="comment">     *     u4 instanceFieldsSize;</span></span><br><span class="line"><span class="comment">     *     u4 directMethodsSize;</span></span><br><span class="line"><span class="comment">     *     u4 virtualMethodsSize;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexClassDataItem</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] staticFieldsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] instanceFieldsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] directMethodsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] virtualMethodsSize = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexCodeItem</span>&#123;</span><br><span class="line">        <span class="type">short</span> registers_size ;</span><br><span class="line">        <span class="type">short</span> ins_size ;</span><br><span class="line">        <span class="type">short</span> outs_size ;</span><br><span class="line">        <span class="type">short</span> tries_size ;</span><br><span class="line">        <span class="type">int</span> debug_info_off ;</span><br><span class="line">        <span class="type">int</span> insns_size;</span><br><span class="line">        List&lt;<span class="type">byte</span>[]&gt; insns ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DexCodeItem</span><span class="params">(<span class="type">byte</span>[] pBuff, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line">            registers_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">0</span>);</span><br><span class="line">            ins_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">2</span>);</span><br><span class="line">            outs_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">4</span>);</span><br><span class="line">            tries_size = Utils.byte2Short_2(pBuff, pOff + <span class="number">6</span>);</span><br><span class="line">            debug_info_off = Utils.byte2Int_4(pBuff, pOff + <span class="number">8</span>);</span><br><span class="line">            insns_size = Utils.byte2Int_4(pBuff, pOff + <span class="number">12</span>);</span><br><span class="line">            insns = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            System.out.printf(<span class="string">&quot;\tCodeItem:\t.registers:%d, ������������:%d, ���������������ʱ��Ҫ�Ĳ�������:%d, try_item����:%d, %d,%d\r\n&quot;</span>, registers_size, ins_size, outs_size, tries_size, debug_info_off, insns_size);</span><br><span class="line">            <span class="type">byte</span>[] ttmp = <span class="keyword">new</span> <span class="title class_">byte</span>[insns_size*<span class="number">2</span>];</span><br><span class="line">            System.arraycopy(pBuff, pOff+<span class="number">16</span>, ttmp, <span class="number">0</span>, ttmp.length);</span><br><span class="line">            ParseDex.getOpcodeByIns2(ttmp);</span><br><span class="line"></span><br><span class="line"><span class="comment">//            for (int i=0; i&lt;insns_size; i++)&#123;</span></span><br><span class="line"><span class="comment">//                byte[] tmp = new byte[2];</span></span><br><span class="line"><span class="comment">//                System.arraycopy(pBuff, pOff + 16+i*2, tmp, 0, 2);</span></span><br><span class="line"><span class="comment">//                insns.add(tmp);</span></span><br><span class="line"><span class="comment">////                System.out.printf(&quot;\t\t&quot;+ParseDex.getOpcodeByIns2(tmp));</span></span><br><span class="line"><span class="comment">////                System.out.printf(&quot;: &quot; + Utils.bytes2HexString(tmp) + &quot;\r\n&quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;&quot;);</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSize_CodeItem</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> insns_size;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexField&#123;</span></span><br><span class="line"><span class="comment">     *     u4 fieldIdx;</span></span><br><span class="line"><span class="comment">     *     u4 accessFlags;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexField</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] fieldIdx = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] accessFlags = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMethod&#123;</span></span><br><span class="line"><span class="comment">     *     u4 methodIdx;</span></span><br><span class="line"><span class="comment">     *     u4 accessFlags;</span></span><br><span class="line"><span class="comment">     *     u4 codoOff;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMethod</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] methodIdx = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] accessFlags = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] codeOff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexClassData&#123;</span></span><br><span class="line"><span class="comment">     *     DexClassDataItem header;</span></span><br><span class="line"><span class="comment">     *     DexField* staticFields;</span></span><br><span class="line"><span class="comment">     *     DexField* instanceFields;</span></span><br><span class="line"><span class="comment">     *     DexMethod* directMethods;</span></span><br><span class="line"><span class="comment">     *     DexMethod* virtualMethods</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexClassData</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexClassDataItem&gt; dexClassDataItems = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexClassDataItem&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexField&gt; staticFields = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexField&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexField&gt; instanceFields = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexField&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexMethod&gt; directMethods = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMethod&gt;();</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexMethod&gt; virtualMethods = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMethod&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMapItem&#123;</span></span><br><span class="line"><span class="comment">     *     u2 type;</span></span><br><span class="line"><span class="comment">     *     u2 unused;</span></span><br><span class="line"><span class="comment">     *     u4 size;</span></span><br><span class="line"><span class="comment">     *     u4 offset;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMapItem</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] type=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] unused=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] size=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] offset=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * typedef struct DexMapList&#123;</span></span><br><span class="line"><span class="comment">     *     u4 size;</span></span><br><span class="line"><span class="comment">     *     DexMapItem list[11;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DexMapList</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">byte</span>[] size=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">public</span> ArrayList&lt;DexMapItem&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;DexMapItem&gt;();</span><br><span class="line">        <span class="keyword">public</span> Map&lt;Integer, String&gt; type_code = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">DexMapList</span><span class="params">()</span> &#123;</span><br><span class="line">            type_code.put(<span class="number">0x0000</span>, <span class="string">&quot;TYPE_HEADER_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0001</span>, <span class="string">&quot;TYPE_STRING_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0002</span>, <span class="string">&quot;TYPE_TYPE_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0003</span>, <span class="string">&quot;TYPE_PROTO_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0004</span>, <span class="string">&quot;TYPE_FIELD_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0005</span>, <span class="string">&quot;TYPE_METHOD_ID_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x0006</span>, <span class="string">&quot;TYPE_CLASS_DEF_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1000</span>, <span class="string">&quot;TYPE_MAP_LIST&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1001</span>, <span class="string">&quot;TYPE_TYPE_LIST&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1002</span>, <span class="string">&quot;TYPE_ANNOTATION_SET_REF_LIST&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x1003</span>, <span class="string">&quot;TYPE_ANNOTATION_SET_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2000</span>, <span class="string">&quot;TYPE_CLASS_DATA_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2001</span>, <span class="string">&quot;TYPE_CODE_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2002</span>, <span class="string">&quot;TYPE_STRING_DATA_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2003</span>, <span class="string">&quot;TYPE_DEBUG_INFO_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2004</span>, <span class="string">&quot;TYPE_ANNOTATION_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2005</span>, <span class="string">&quot;TYPE_ENCODED_ARRAY_ITEM&quot;</span>);</span><br><span class="line">            type_code.put(<span class="number">0x2006</span>, <span class="string">&quot;TYPE_ANNOTATIONS_DIRECTORY_ITEM&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">dexPath</span> <span class="operator">=</span> <span class="string">&quot;HelloWorld.dex&quot;</span>;</span><br><span class="line">    <span class="type">byte</span>[] fileByteArrays = Utils.readFile(dexPath);</span><br><span class="line">    <span class="keyword">if</span> (fileByteArrays == <span class="literal">null</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;read file filed&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="type">ParseDex</span> <span class="variable">parseDex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ParseDex</span>(fileByteArrays);</span><br><span class="line">    parseDex.parse();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ParseDex-java"><a href="#ParseDex-java" class="headerlink" title="ParseDex.java"></a>ParseDex.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jf.dexlib2.Opcode;</span><br><span class="line"><span class="keyword">import</span> org.jf.dexlib2.Opcodes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ParseDex</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="type">byte</span>[] byteData;</span><br><span class="line">    <span class="keyword">private</span> DexType dexType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ParseDex</span><span class="params">(<span class="type">byte</span>[] pArr)</span> &#123;</span><br><span class="line">        byteData = pArr;</span><br><span class="line">        dexType = <span class="keyword">new</span> <span class="title class_">DexType</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parse</span><span class="params">()</span>&#123;</span><br><span class="line">        parseHeader(<span class="number">0</span>);</span><br><span class="line">        printHeader();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">stringOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.stringIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">stringSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.stringIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexStringId(stringOff, stringSize);</span><br><span class="line">        printStrings();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">typeOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.typeIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">typeSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.typeIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexTypeId(typeOff, typeSize);</span><br><span class="line">        printTypes();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">protoOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.protoIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">protoSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.protoIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexProtoId(protoOff, protoSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">fieldOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.fieldIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">fieldSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.fieldIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexFieldId(fieldOff, fieldSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">methodOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.methodIdsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">methodSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.methodIdsSize, <span class="number">0</span>);</span><br><span class="line">        readDexMethodId(methodOff, methodSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">classOff</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.classDefsOff, <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">classSize</span> <span class="operator">=</span> Utils.byte2Int_4(dexType.dexHeader.classDefsSize, <span class="number">0</span>);</span><br><span class="line">        readDexClassDefsId(classOff, classSize);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexStringList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getTypeStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexTypeList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getProtoStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexProtoList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getFieldStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexFieldList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getMethodStringById</span><span class="params">(<span class="type">int</span> pId)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dexType.dexMethodList.get(pId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">parseHeader</span><span class="params">(<span class="type">int</span> offset)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (byteData == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;byteData is null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.arraycopy(byteData, 0, dexType.dexHeader.magic, 0, dexType.dexHeader.magic.length);</span></span><br><span class="line"><span class="comment">//        System.arraycopy(byteData, 0+dexType.dexHeader.magic.length, dexType.dexHeader.checksum, 0, dexType.dexHeader.checksum.length);</span></span><br><span class="line"><span class="comment">//        System.arraycopy(byteData, 0+dexType.dexHeader.checksum.length, dexType.dexHeader.signature, 0, dexType.dexHeader.signature.length);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">curPos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt; dexType.dexHeader.em.size(); i++)&#123;</span><br><span class="line">            System.arraycopy(byteData, curPos, dexType.dexHeader.em.get(i), <span class="number">0</span>, dexType.dexHeader.em.get(i).length);</span><br><span class="line">            curPos += dexType.dexHeader.em.get(i).length;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printHeader</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;magic&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.magic));</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;checksum&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.checksum));</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;signature&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.signature));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexStringId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexStringId</span> <span class="variable">t_dexStringId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexStringId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">4</span>, t_dexStringId.stringDataOff, <span class="number">0</span>, t_dexStringId.stringDataOff.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">dexStringId</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexStringId.stringDataOff, <span class="number">0</span>);</span><br><span class="line">            Utils.<span class="type">RETULEB128</span> <span class="variable">tmp</span> <span class="operator">=</span> Utils.readULEB128(byteData, dexStringId);</span><br><span class="line">            <span class="type">byte</span>[] strContent = Utils.copyNewBytes(byteData, dexStringId+tmp.readSize, tmp.retValue);</span><br><span class="line">            <span class="type">String</span> <span class="variable">realString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(strContent);</span><br><span class="line"></span><br><span class="line">            dexType.dexStringId.add(t_dexStringId);</span><br><span class="line">            dexType.dexStringList.add(realString);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printStrings</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------strings----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;dexType.dexStringList.size(); i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\t&quot;</span> + dexType.dexStringList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexTypeId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexTypeId</span> <span class="variable">t_dexTypeId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexTypeId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">4</span>, t_dexTypeId.descriptorIdx, <span class="number">0</span>, t_dexTypeId.descriptorIdx.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">dexTypeId</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexTypeId.descriptorIdx, <span class="number">0</span>);</span><br><span class="line">            dexType.dexTypeId.add(t_dexTypeId);</span><br><span class="line">            dexType.dexTypeList.add(getStringById(dexTypeId));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printTypes</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------types----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String one:dexType.dexTypeList) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\t&quot;</span> + one);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexProtoId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexProtoId</span> <span class="variable">t_dexProtoId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexProtoId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">12</span>*i+<span class="number">0</span>, t_dexProtoId.shortyIdx, <span class="number">0</span>, t_dexProtoId.shortyIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">12</span>*i+<span class="number">4</span>, t_dexProtoId.returnTypeIdx, <span class="number">0</span>, t_dexProtoId.returnTypeIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">12</span>*i+<span class="number">8</span>, t_dexProtoId.parametersOff, <span class="number">0</span>, t_dexProtoId.parametersOff.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">shorty_string</span> <span class="operator">=</span> getStringById(Utils.byte2Int_4(t_dexProtoId.shortyIdx, <span class="number">0</span>));</span><br><span class="line">            <span class="type">String</span> <span class="variable">return_type_idx</span> <span class="operator">=</span> getStringById(Utils.byte2Int_4(t_dexProtoId.returnTypeIdx, <span class="number">0</span>));</span><br><span class="line">            pri += (shorty_string + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            pri += (return_type_idx + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">parameters_Off</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexProtoId.parametersOff, <span class="number">0</span>);</span><br><span class="line">            pri += <span class="string">&quot;(&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (parameters_Off == <span class="number">0</span>)&#123;</span><br><span class="line">                dexType.dexProtoId.add(t_dexProtoId);</span><br><span class="line">                dexType.dexProtoList.add(getTypeStringById(Utils.byte2Int_4(t_dexProtoId.returnTypeIdx, <span class="number">0</span>)));</span><br><span class="line">                pri += <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">structCount</span> <span class="operator">=</span> Utils.byte2Int_4(byteData, parameters_Off);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;structCount; j++)&#123;</span><br><span class="line">                DexType.<span class="type">DexTypeItem</span> <span class="variable">t_dexTypeItem</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexTypeItem</span>();</span><br><span class="line">                System.arraycopy(byteData, parameters_Off+<span class="number">4</span>+j*t_dexTypeItem.typeIdx.length, t_dexTypeItem.typeIdx, <span class="number">0</span>, t_dexTypeItem.typeIdx.length);</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexTypeItem.typeIdx, <span class="number">0</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">p</span> <span class="operator">=</span> getTypeStringById(tmp);</span><br><span class="line">                pri += (p + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            pri += <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            dexType.dexProtoId.add(t_dexProtoId);</span><br><span class="line">            dexType.dexProtoList.add(getTypeStringById(Utils.byte2Int_4(t_dexProtoId.returnTypeIdx, <span class="number">0</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexFieldId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------fields----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexFieldId</span> <span class="variable">t_dexFieldId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexFieldId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">0</span>, t_dexFieldId.classIdx, <span class="number">0</span>, t_dexFieldId.classIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">2</span>, t_dexFieldId.typeIdx, <span class="number">0</span>, t_dexFieldId.typeIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">4</span>, t_dexFieldId.nameIdx, <span class="number">0</span>, t_dexFieldId.nameIdx.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">classIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexFieldId.classIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">typeIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexFieldId.typeIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">nameIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexFieldId.nameIdx, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            pri += (<span class="string">&quot;class:&quot;</span>+getTypeStringById(classIdx) + <span class="string">&quot;, type:&quot;</span> + getTypeStringById(typeIdx) + <span class="string">&quot;, name:&quot;</span>+getStringById(nameIdx));</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            dexType.dexFieldId.add(t_dexFieldId);</span><br><span class="line">            dexType.dexFieldList.add(getStringById(nameIdx));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexMethodId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------methods----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexMethodId</span> <span class="variable">t_dexMethodId</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexMethodId</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">0</span>, t_dexMethodId.classIdx, <span class="number">0</span>, t_dexMethodId.classIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">2</span>, t_dexMethodId.protoIdx, <span class="number">0</span>, t_dexMethodId.protoIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+<span class="number">8</span>*i+<span class="number">4</span>, t_dexMethodId.nameIdx, <span class="number">0</span>, t_dexMethodId.nameIdx.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">classIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexMethodId.classIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">protoIdx</span> <span class="operator">=</span> Utils.byte2Short_2(t_dexMethodId.protoIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">nameIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexMethodId.nameIdx, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            pri += (<span class="string">&quot;class:&quot;</span>+getTypeStringById(classIdx) + <span class="string">&quot;, proto:&quot;</span> + getProtoStringById(protoIdx) + <span class="string">&quot;, name:&quot;</span>+getStringById(nameIdx));</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            dexType.dexMethodId.add(t_dexMethodId);</span><br><span class="line">            dexType.dexMethodList.add(getStringById(nameIdx));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readDexClassDefsId</span><span class="params">(<span class="type">int</span> pOff, <span class="type">int</span> pCount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------------ClassDefs----------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;pCount; i++)&#123;</span><br><span class="line">            DexType.<span class="type">DexClassDef</span> <span class="variable">t_dexClassDef</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexClassDef</span>();</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">0</span>, t_dexClassDef.classIdx, <span class="number">0</span>, t_dexClassDef.classIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">4</span>, t_dexClassDef.accessFlags, <span class="number">0</span>, t_dexClassDef.accessFlags.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">8</span>, t_dexClassDef.superclassIdx, <span class="number">0</span>, t_dexClassDef.superclassIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">12</span>, t_dexClassDef.interfacesOff, <span class="number">0</span>, t_dexClassDef.interfacesOff.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">16</span>, t_dexClassDef.sourceFileIdx, <span class="number">0</span>, t_dexClassDef.sourceFileIdx.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">20</span>, t_dexClassDef.annotationsOff, <span class="number">0</span>, t_dexClassDef.annotationsOff.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">24</span>, t_dexClassDef.classDataOff, <span class="number">0</span>, t_dexClassDef.classDataOff.length);</span><br><span class="line">            System.arraycopy(byteData, pOff+i*<span class="number">32</span>+<span class="number">28</span>, t_dexClassDef.staticValuesOff, <span class="number">0</span>, t_dexClassDef.staticValuesOff.length);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">classIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.classIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">accessFlags</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.accessFlags, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">superclassIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.superclassIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">interfacesOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.interfacesOff, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">sourceFileIdx</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.sourceFileIdx, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">annotationsOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.annotationsOff, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">classDataOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.classDataOff, <span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">staticValuesOff</span> <span class="operator">=</span> Utils.byte2Int_4(t_dexClassDef.staticValuesOff, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">pri</span> <span class="operator">=</span> <span class="string">&quot;classIdx: &quot;</span> + getTypeStringById(classIdx) + <span class="string">&quot;\r\naccessFlags: &quot;</span> + accessFlags + <span class="string">&quot;\r\nsuperclassIdx: &quot;</span></span><br><span class="line">                    + getTypeStringById(superclassIdx) + <span class="string">&quot;\r\ninterfacesOff: &quot;</span>;</span><br><span class="line">            pri += (interfacesOff + <span class="string">&quot;\r\nsourceFileIdx: &quot;</span> + getStringById(sourceFileIdx) + <span class="string">&quot;\r\nannotationsOff: &quot;</span> + annotationsOff + <span class="string">&quot;\r\nclassDataOff: &quot;</span>);</span><br><span class="line">            pri += (classDataOff + <span class="string">&quot;\r\nstaticValuesOff: &quot;</span> + staticValuesOff);</span><br><span class="line">            System.out.println(pri);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (classDataOff == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">off</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            Utils.<span class="type">RETULEB128</span> <span class="variable">retuleb128</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">static_fields_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">instance_fields_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">direct_methods_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">            <span class="type">int</span> <span class="variable">virtual_methods_size</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">            off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;static_fields_size:&quot;</span> + static_fields_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;static_fields_size; j++)&#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">field_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getFieldStringById(field_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;instance_fields_size:&quot;</span> + instance_fields_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;static_fields_size; j++) &#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">field_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getFieldStringById(field_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;direct_methods_size:&quot;</span> + direct_methods_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;direct_methods_size; j++) &#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">method_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">code_off</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (code_off &lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getMethodStringById(method_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">                DexType.<span class="type">DexCodeItem</span> <span class="variable">t_dexCodeItem</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexCodeItem</span>(byteData, code_off);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;virtual_methods_size:&quot;</span> + virtual_methods_size + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;virtual_methods_size; j++) &#123;</span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">method_idx_diff</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">access_flags</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                retuleb128 = Utils.readULEB128(byteData, classDataOff + off);</span><br><span class="line">                <span class="type">int</span> <span class="variable">code_off</span> <span class="operator">=</span> retuleb128.retValue;</span><br><span class="line">                off += retuleb128.readSize;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (code_off &lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + getMethodStringById(method_idx_diff) + <span class="string">&quot;, &quot;</span> + access_flags);</span><br><span class="line">                DexType.<span class="type">DexCodeItem</span> <span class="variable">t_dexCodeItem</span> <span class="operator">=</span> dexType.<span class="keyword">new</span> <span class="title class_">DexCodeItem</span>(byteData, code_off);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getOpcodeByIns2</span><span class="params">(<span class="type">byte</span>[] insns)</span>&#123;</span><br><span class="line">        <span class="comment">//����λ��org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction  public static Instruction readFrom(DexBackedDexFile dexFile, DexReader reader) &#123;</span></span><br><span class="line">        <span class="type">Opcode</span> <span class="variable">opcode</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> insnsPosition=<span class="number">0</span>; insnsPosition&lt;insns.length; insnsPosition += (opcode.format.size/<span class="number">2</span>*<span class="number">2</span>))&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">opcodeValue</span> <span class="operator">=</span>  (insns[insnsPosition] &amp; <span class="number">255</span>);</span><br><span class="line">                <span class="keyword">if</span> (opcodeValue == <span class="number">0</span>) &#123;</span><br><span class="line">                    opcodeValue = (insns[insnsPosition] &amp; <span class="number">255</span>) | ((insns[insnsPosition + <span class="number">1</span>] &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                opcode = Opcodes.forApi(<span class="number">35</span>).getOpcodeByValue(opcodeValue);</span><br><span class="line">                <span class="type">byte</span>[] tmp = <span class="keyword">new</span> <span class="title class_">byte</span>[opcode.format.size/<span class="number">2</span>*<span class="number">2</span>];</span><br><span class="line">                System.arraycopy(insns, insnsPosition, tmp, <span class="number">0</span>, tmp.length);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;\t\t&quot;</span> + opcode.name + <span class="string">&quot; : &quot;</span> + Utils.bytes2HexString(tmp));</span><br><span class="line">                <span class="keyword">if</span> (opcode.format.size &lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Utils-java"><a href="#Utils-java" class="headerlink" title="Utils.java"></a>Utils.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pediy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Utils</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bytes2HexString</span><span class="params">(<span class="type">byte</span>[] bytes)</span>&#123;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;bytes.length;i++)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> bytes[i] &amp; <span class="number">0xff</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> Integer.toHexString(t).toUpperCase();</span><br><span class="line"><span class="keyword">if</span>(hex.length() &lt; <span class="number">2</span>)&#123;</span><br><span class="line">result.append(<span class="string">&quot;0&quot;</span>+hex);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result.append(hex);</span><br><span class="line">&#125;</span><br><span class="line">result.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bytes2HexStringBig</span><span class="params">(<span class="type">byte</span>[] bytes)</span>&#123;</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;bytes.length;i++)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> bytes[i] &amp; <span class="number">0xff</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> Integer.toHexString(t).toUpperCase();</span><br><span class="line"><span class="keyword">if</span>(hex.length() &lt; <span class="number">2</span>)&#123;</span><br><span class="line">result.append(<span class="string">&quot;0&quot;</span>+hex);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">result.append(hex);</span><br><span class="line">&#125;</span><br><span class="line">result.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readFile(String fileName)&#123;</span><br><span class="line"><span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">bos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"><span class="type">byte</span>[] temp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((size = fis.read(temp)) != -<span class="number">1</span>) &#123;</span><br><span class="line">bos.write(temp, <span class="number">0</span>, size);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bos.toByteArray();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;read file error:&quot;</span>+e.toString());</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fis != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">fis.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bos != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">bos.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] copyNewBytes(<span class="type">byte</span>[] addr,<span class="type">int</span> start,<span class="type">int</span> length)&#123;</span><br><span class="line"><span class="type">byte</span>[] destByte = <span class="keyword">new</span> <span class="title class_">byte</span>[length];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">destByte[i] = addr[start+i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> destByte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">byte2Int_4</span><span class="params">(<span class="type">byte</span>[] res, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">targets</span> <span class="operator">=</span> (res[pOff+<span class="number">0</span>] &amp; <span class="number">0xff</span>)</span><br><span class="line">| ((res[pOff+<span class="number">1</span>] &lt;&lt; <span class="number">8</span>) &amp; <span class="number">0xff00</span>)</span><br><span class="line">| ((res[pOff+<span class="number">2</span>] &lt;&lt; <span class="number">24</span>) &gt;&gt;&gt; <span class="number">8</span>)</span><br><span class="line">| (res[pOff+<span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line"><span class="keyword">return</span> targets;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">short</span> <span class="title function_">byte2Short_2</span><span class="params">(<span class="type">byte</span>[] b, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s0</span> <span class="operator">=</span> (<span class="type">short</span>) (b[pOff+<span class="number">0</span>] &amp; <span class="number">0xff</span>);<span class="comment">// 最低位</span></span><br><span class="line"><span class="type">short</span> <span class="variable">s1</span> <span class="operator">=</span> (<span class="type">short</span>) (b[pOff+<span class="number">1</span>] &amp; <span class="number">0xff</span>);</span><br><span class="line">s1 &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">s = (<span class="type">short</span>) (s0 | s1);</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RETULEB128</span>&#123;</span><br><span class="line"><span class="type">int</span> retValue;</span><br><span class="line"><span class="type">int</span> readSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> RETULEB128 <span class="title function_">readULEB128</span><span class="params">(<span class="type">byte</span>[] data, <span class="type">int</span> pOff)</span> &#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="type">RETULEB128</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RETULEB128</span>();</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">shift</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">bytesRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (pOff+i &gt;= data.length)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;pOff+i &gt;= data.length&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">currentByte</span> <span class="operator">=</span> data[pOff + i];</span><br><span class="line"></span><br><span class="line">bytesRead++;</span><br><span class="line">result |= (currentByte &amp; <span class="number">0x7F</span>) &lt;&lt; shift;</span><br><span class="line">shift += <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((currentByte &amp; <span class="number">0x80</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (bytesRead &gt; <span class="number">5</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;Invalid ULEB128 encoded data: more than 5 bytes&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret.retValue = result;</span><br><span class="line">ret.readSize = bytesRead;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;<span class="keyword">catch</span> (IOException ioe)&#123;</span><br><span class="line">ioe.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;file_gbk.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dex代码解析1</title>
      <link href="/2024/07/25/Dex%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%901/"/>
      <url>/2024/07/25/Dex%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%901/</url>
      
        <content type="html"><![CDATA[<h3 id="代码解析Dex文件"><a href="#代码解析Dex文件" class="headerlink" title="代码解析Dex文件"></a>代码解析Dex文件</h3><p>Android源码：<a href="http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java">http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java</a></p><p>Android文档：<a href="https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn">https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn</a></p><p>搜索DexHeader</p><p><img src="C:\Hexo-Blog\blog-demo\source\image\dexjx.png"></p><p>try、catch、finally三个语句的执行顺序</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果 try 块中没有异常抛出，程序会直接跳过 catch 块，执行 finally 块。</span><br><span class="line">如果 try 块中有异常抛出，并且有匹配的 catch 块处理该异常，先执行匹配的 catch 块，然后执行 finally 块。</span><br><span class="line">如果 try 块中有异常抛出，但没有匹配的 catch 块处理该异常，先执行 finally 块，然后将异常抛出至上层调用栈。</span><br></pre></td></tr></table></figure><p>System.arraycopy 方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//System.arraycopy 是 Java 中用于复制数组内容的方法。它的签名如下：</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">arraycopy</span><span class="params">(Object src, <span class="type">int</span> srcPos, Object dest, <span class="type">int</span> destPos, <span class="type">int</span> length)</span></span><br><span class="line"><span class="comment">/*其中：</span></span><br><span class="line"><span class="comment">src：源数组，即要从中复制数据的数组。</span></span><br><span class="line"><span class="comment">srcPos：源数组中开始复制的起始位置索引。</span></span><br><span class="line"><span class="comment">dest：目标数组，即要将数据复制到其中的数组。</span></span><br><span class="line"><span class="comment">destPos：目标数组中开始复制的起始位置索引。</span></span><br><span class="line"><span class="comment">length：要复制的元素数量*/</span></span><br></pre></td></tr></table></figure><p>System.out.printf方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.printf(<span class="string">&quot;%-12s: %s\r\n&quot;</span>, <span class="string">&quot;magic&quot;</span>, Utils.bytes2HexString(dexType.dexHeader.magic));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">printf 方法与 System.out.println 类似，但是它允许使用格式化字符串来定义输出的格式。</span><br><span class="line"><span class="string">&quot;%-12s: %s\r\n&quot;</span></span><br><span class="line">% 开始表示格式化标志的起始。</span><br><span class="line">- 表示左对齐（在字符串字段内，右对齐是默认的）。</span><br><span class="line"><span class="number">12</span> 表示最小宽度，确保输出的字符串至少占据 <span class="number">12</span> 个字符的宽度。</span><br><span class="line">s 表示后续参数是一个字符串。</span><br><span class="line">: 是一个字面值，即将在输出中显示 : 字符。</span><br><span class="line">%s 是格式化字符串的占位符，用来接收第一个参数 <span class="string">&quot;magic&quot;</span>。</span><br><span class="line">\r\n 表示换行符，确保每次输出后换行。</span><br><span class="line"><span class="string">&quot;magic&quot;</span>：作为格式化字符串的第一个参数，将填充到 %s 的位置。</span><br><span class="line">Utils.bytes2HexString(dexType.dexHeader.magic)：作为格式化字符串的第二个参数，调用 Utils.bytes2HexString 方法将 dexType.dexHeader.magic 转换为十六进制字符串表示。</span><br></pre></td></tr></table></figure><p>Utils.java（但是在进行位与操作时，会忽略符号位）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Utils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] readFile(String fileName)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            bot = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="type">byte</span>[] temp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>((size = fis.read(temp))!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bot.write(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> bos.toByteArray();</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;read file error:&quot;</span>+e.toString);</span><br><span class="line">        &#125;<span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(fis != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    fis.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    bot.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;close file error:&quot;</span>+e.toString);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">byte2Int_4</span><span class="params">(<span class="type">byte</span>[] res, <span class="type">int</span> pOff)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">targets</span> <span class="operator">=</span> (res[pOff+<span class="number">0</span>] &amp; <span class="number">0xff</span>)</span><br><span class="line">            |(res[pOff+<span class="number">1</span>] &amp; <span class="number">0xff00</span>)</span><br><span class="line">            |((res[pOff+<span class="number">2</span>] &lt;&lt;<span class="number">24</span>)&gt;&gt;&gt;<span class="number">8</span>)</span><br><span class="line">            |(res[pOff+<span class="number">3</span>]&lt;&lt;<span class="number">24</span>);</span><br><span class="line">        <span class="keyword">return</span> targets;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">RETULEB128</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> retValue;</span><br><span class="line">        <span class="type">int</span> readSize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> RETULEEB128 <span class="title function_">readULEB128</span><span class="params">(<span class="type">byte</span>[] data, <span class="type">int</span> pOff)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">RETULEB128</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RETULEB128</span>();</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shift</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">byteRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(pOff+i&gt;=data.length)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;pOff+i &gt;=data.length&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">currentByte</span> <span class="operator">=</span> data[pOff + i];</span><br><span class="line">                bytesRead++;</span><br><span class="line">                result |=(currentByte &amp; <span class="number">0x7F</span>)&lt;&lt;shift; <span class="comment">// 将当前字节的低7位加入到 result 中,0x7F二进制:0111 1111</span></span><br><span class="line">                shift +=<span class="number">7</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>((currentByte &amp; <span class="number">0x80</span>) == <span class="number">0</span>) <span class="comment">// 检查当前字节的最高位是否为0，如果为0，则表示这是最后一个字节,0x80二进制:1000 0000</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(byteRead &gt; <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;Invalid ULEB128 encoded data: more than 5 bytes&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ret.retValue = result;</span><br><span class="line">            ret.readSize = bytesRead;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dex文件基本结构</title>
      <link href="/2024/07/24/Dex%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
      <url>/2024/07/24/Dex%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="Dex文件基本结构"><a href="#Dex文件基本结构" class="headerlink" title="Dex文件基本结构"></a>Dex文件基本结构</h3><h3 id="Dex文件介绍"><a href="#Dex文件介绍" class="headerlink" title="Dex文件介绍"></a>Dex文件介绍</h3><p>含义：专门位移动端开发的一种可执行文件格式</p><p>优点：比class文件体积小，真内存小，加载速度快，堆栈加载速度快，类查找快等，更适合手机</p><p>生成：&#x2F;&#x2F;javac c\b\a\HelloWorld.java</p><p>​  &#x2F;&#x2F;dx –dex –output &#x3D; c\b\a\HelloWorld.dex c\b\a\HelloWorld.class&#x2F;&#x2F;这是旧版本的Android SDK写法</p><p>反编译smali</p><p><a href="https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn">https://source.android.com/docs/core/runtime/instruction-formats?hl=zh-cn</a></p><p><a href="https://source.android.com/docs/core/runtime/dex-format?hl=zh-cn">https://source.android.com/docs/core/runtime/dex-format?hl=zh-cn</a></p><p>其他名词解释：</p><p>odex(5.0引入)、oat(elf,包含 odex内容)、vdex(8.0引入)</p><p>png文件格式的</p><p><img src="/../image/dex.png"></p><p>生成代码如下图</p><p><img src="/../image/dex2.png"></p><p>注意下生成.dex的代码：1、要根据Android SDK的版本选择不同的命令</p><p>​2、输出目录要合法（gdp要善于利用）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;D:\Android SDK\build-tools\35.0.0\d8.bat&quot; --release --output D:\ideaprojects\untitled\src D:\ideaprojects\untitled\src\Main.class</span><br><span class="line">--release：编译时优化为 release 版本。</span><br><span class="line">--output D:\ideaprojects\untitled\src：指定输出目录为 D:\ideaprojects\untitled\src，这里不需要指定具体的文件名，d8 工具会自动根据输入的类文件生成相应的 .dex 文件。</span><br><span class="line">路径和空格问题：确保路径中的空格和斜杠使用正确。路径中的空格需要使用引号包裹，例如：&quot;D:\Android SDK\build-tools\35.0.0\d8.bat&quot;。</span><br><span class="line">输出目录设置：--output 参数后应该是一个目录路径，而不是一个具体的文件路径。</span><br></pre></td></tr></table></figure><p><img src="/../image/dex3.png"></p><p>用GDA可查看.dex文件的字节码</p><p><img src="/../image/dex4.png"></p><p>odex:Odex 文件是对应于 <code>.dex</code> 文件的一种优化版本，它会提前编译和优化 Dalvik 字节码，以加快应用程序的加载速度和执行效率。</p><p>oat:OAT 文件中包含了经过优化的本地机器代码，这些代码相比于解释执行的字节码（<code>.dex</code> 文件），在执行时可以更快速和高效。这种预先编译的方式可以显著提高应用程序的启动速度、响应速度和运行效率。</p><p>vdex:VDex文件包含了经过优化和验证的DEX文件的内容。在应用程序安装或首次运行时，系统会将原始的DEX文件转换为VDex文件。这种优化不仅包括了对DEX文件中字节码的优化，还包括了对DEX文件中数据的验证和校验。</p><p>dex文件结构</p><p><img src="/../image/dex5.jpg"></p><p>Dex Header：对整个文件进行描述</p><p>索引表：记录信息</p><p>Proto索引表：类似存放函数签名</p><p>Field索引表：成员变量</p><p>数据区：存储数据</p><p>Map块：告诉我们有哪些索引方式</p><p><img src="/../image/dex8.jpg"></p><p>具体作用：</p><p><img src="/../image/dex9.jpg"></p><h4 id="Leb128-Little-Endian-Base-128"><a href="#Leb128-Little-Endian-Base-128" class="headerlink" title="Leb128(Little-Endian Base 128)"></a>Leb128(Little-Endian Base 128)</h4><p>u表示unsigned，s表示signed，p1是dalvik独有的编码格式(后面说明)，是一种变长的整数压缩编码形式，通常由1-5byte组成，由一个int值再机器中占有4Byte。为了实现变长存储，节省空间，在Leb128格式中每个byte的最高位作为后续byte是否有效的标志位，1表示还有后续字节，0表示结束，后面7bits是有效数据，所有一个整数最大需要5byte存储</p><h4 id="Uleb128"><a href="#Uleb128" class="headerlink" title="Uleb128"></a>Uleb128</h4><p>将无符号整数写成二进制形式，从低位到高位每个7bits作为一个整体组合成一个组，最高字节不足7bit，用0填充到7bit，在每组最高位填入是否有高字节的标识，构成一个完整的字节，然后将所有字节小端序排列</p><ul><li>大端序（Big-Endian）将数据的低位字节存放在内存的高位地址，高位字节存放在低位地址。这种排列方式与数据用字节表示时的书写顺序一致，符合人类的阅读习惯。</li><li>小端序（Little-Endian），将一个多位数的低位放在较小的地址处，高位放在较大的地址处，则称<strong>小端序</strong>。小端序与人类的阅读习惯相反，但更符合计算机读取内存的方式，因为CPU读取内存中的数据时，是从低地址向高地址方向进行读取的。</li><li><img src="/../../../../Hexo-Blog/blog-demo/source/image/sandb.jpeg"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>APK基本结构</title>
      <link href="/2024/07/23/APK%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
      <url>/2024/07/23/APK%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="APK文件构成"><a href="#APK文件构成" class="headerlink" title="APK文件构成"></a>APK文件构成</h3><p>没有aidl文件的解决方法：在build.gradle中添加如下代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">    buildFeatures &#123;</span><br><span class="line">        aidl = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DexClassLoader</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DexClassLoader(参数<span class="number">1</span>，参数<span class="number">2</span>，参数<span class="number">3</span>，参数<span class="number">4</span>);</span><br><span class="line">参数<span class="number">1</span>：要加载的Jar的路径</span><br><span class="line">参数<span class="number">2</span>：缓存目录</span><br><span class="line">参数<span class="number">3</span>：Native目录，可以为空</span><br><span class="line">参数<span class="number">4</span>：父类加载器    </span><br></pre></td></tr></table></figure><h4 id="静态资源文件"><a href="#静态资源文件" class="headerlink" title="静态资源文件"></a>静态资源文件</h4><p>不需要编译的文件夹：assets</p><p>assets目录的添加方法：</p><p><img src="/../image/apk.png"></p><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">findViewById(R.id.btn_startLoad).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">AssetManager</span> <span class="variable">assetManager</span> <span class="operator">=</span> MainActivity.<span class="built_in">this</span>.getAssets();<span class="comment">//通过获取MainActivity实例的AssetManager对象，使我们能够访问和管理Android应用程序中包含的原始资产文件。</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> assetManager.open(<span class="string">&quot;test2.jar&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;jarSaveDir&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">        &#123;</span><br><span class="line">            dir.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;test.jar&quot;</span>;</span><br><span class="line">        <span class="type">File</span> <span class="variable">jar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">        <span class="keyword">if</span>(jar.exists())</span><br><span class="line">        &#123;</span><br><span class="line">            jar.delete;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">File</span> <span class="variable">jar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">        </span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(jar.getAbsolutePath(),<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//false: 这是 FileOutputStream 构造函数的第二个参数，它表示是否追加写入。在这里，false 表示不进行追加写入，而是直接覆盖原文件内容</span></span><br><span class="line">        <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>((len = in.read(buff))&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            fos.write(buff,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        fos.flush();</span><br><span class="line">        fos.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    loadJar();                                                    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadJar</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;jarSaveDir&quot;</span>);</span><br><span class="line">    <span class="type">File</span> <span class="variable">tmp</span> <span class="operator">=</span> Environment.getExternalStoragePublic(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;jarTmpDir&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;test2.jar&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">DexClassLoader</span> <span class="variable">loader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DexClassLoader</span>(FullFilePath,tmp.getAbsolutePath(),<span class="literal">null</span>,<span class="built_in">this</span>.getClassLoader());</span><br><span class="line">    <span class="comment">//这行代码的作用是创建一个 DexClassLoader 对象 loader，用于从指定的 DEX 文件 (fullFilePath) 加载类和资源。加载后的类和资源会存放在临时目录 (tmp.getAbsolutePath())，并使用当前类 (this) 的类加载器来加载。这样可以实现在 Android 应用程序运行时动态加载外部提供的类和资源，增强了应用的灵活性和扩展性。</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> loader.loadClass(<span class="string">&quot;com.example.mylibrary2.OneFun2&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ins_OneFun2</span> <span class="operator">=</span> clz.newInstance();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_add2</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;add2&quot;</span>,<span class="type">int</span>.class,<span class="type">int</span>.class);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ret</span> <span class="operator">=</span> method_add2.invoke(ins_OneFun2,<span class="number">11</span>,<span class="number">22</span>);</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;add2 ret &quot;</span>+(String)ret );</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="库文件"><a href="#库文件" class="headerlink" title="库文件"></a>库文件</h4><p>build.gradle-&gt;android-&gt;defaultConfig-&gt;ndk abiFilters-&gt;属性-&gt;abd install–abi arm64-v8a</p><p><img src="/../image/apk2.png"></p><p>注意：这里配置ndk的写法不同的版本会有不同</p><p>安卓apk文件代码</p><p><img src="/../image/apk3.png"></p><p>可以看到被安装到data.data中</p><p><img src="/../image/apk4.png"></p><p>强制安装x86架构的</p><p><img src="/../image/apk5.png"></p><h4 id="签名文件"><a href="#签名文件" class="headerlink" title="签名文件"></a>签名文件</h4><p>CERT.RSA、CERT.SF和MANIFEST.MF</p><p>生成Release版本的签名的方法</p><p><img src="/../image/apk6.png"></p><h4 id="编译资源文件"><a href="#编译资源文件" class="headerlink" title="编译资源文件"></a>编译资源文件</h4><p>编译的文件夹：res</p><p>代码会引用的文件，位置统一，名字固定，系统分配资源ID</p><h4 id="配置清单文件"><a href="#配置清单文件" class="headerlink" title="配置清单文件"></a>配置清单文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot; <span class="comment">&lt;!--允许使用不安全的传输协议--&gt;</span></span><br></pre></td></tr></table></figure><p>可用Android逆向助手 解码，这里注意java环境一定要配置好,我这里出现的问题是jre没配置</p><p><img src="/../image/apk7.jpg"></p><p>逆向时，可重点关注继承application的类，因为application的生命周期贯穿整个应用，重点看下图中标出的部分</p><p><img src="/../image/apk8.jpg"></p><h4 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h4><p>代码：classes.dexclasses.1.dexclasses2.dex（命名是固定的）</p><p>安装后会被放到私有目录下，Dalivik虚拟机加载运行</p><h4 id="资源映射文件"><a href="#资源映射文件" class="headerlink" title="资源映射文件"></a>资源映射文件</h4><p>resources.arsc(用010Editor打开)</p><p>包含了应用程序的ID和资源类型的映射关系</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础练习--四种方式遍历SDCard</title>
      <link href="/2024/07/22/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%81%8D%E5%8E%86SDCard/"/>
      <url>/2024/07/22/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%81%8D%E5%8E%86SDCard/</url>
      
        <content type="html"><![CDATA[<h3 id="四种方式遍历SDCard"><a href="#四种方式遍历SDCard" class="headerlink" title="四种方式遍历SDCard"></a>四种方式遍历SDCard</h3><h4 id="一、java语言"><a href="#一、java语言" class="headerlink" title="一、java语言"></a>一、java语言</h4><p>首先都要在清单文件中申请读、写、管理SDCard的权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>activity_main.xml，部分代码</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_start&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textAllCaps</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;遍历SDCard的Download目录&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_show&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    MyHandler handler;</span><br><span class="line">    ArrayList&lt;String&gt;al;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI01</span><span class="params">(String fp)</span></span><br><span class="line">    &#123;</span><br><span class="line">        fp = fp.replace(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(al.size()&lt;<span class="number">20</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            al.add(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            al.remove(<span class="number">0</span>);</span><br><span class="line">            al.add(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;al.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sb.append(al.get(i)+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        tv.setText(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceStage)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn</span> <span class="operator">=</span> binding.btnsStart;</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    tv.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    al.clear();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> Environment.getExternalStorageDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">MyThread</span>(handler,tmpPath).start();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyHandler.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MainActivity mainActivity;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">MyHandler</span><span class="params">(MainActivity mact)</span></span><br><span class="line">    &#123;</span><br><span class="line">        mainActivity = mact;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        <span class="keyword">switch</span>(msg.what)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                     mainActivity.updateUI01(msg.getData().getString(<span class="string">&quot;fp&quot;</span>));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;未知消息类型&quot;</span>+msg.what);</span><br><span class="line">                &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyThread.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    MyHandler myHandler;</span><br><span class="line">    String fp;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mm,String fpath)</span></span><br><span class="line">    &#123;</span><br><span class="line">        myHandler = mm;</span><br><span class="line">        fp = fpath;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getFiles</span><span class="params">(String path)</span></span><br><span class="line">    &#123;</span><br><span class="line">        File[] allFiles = <span class="keyword">new</span> <span class="title class_">File</span>(path).listFiles();</span><br><span class="line">        <span class="keyword">if</span>(file.isFile())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">            message.what = i;</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">            message.setData(bundle);</span><br><span class="line">            myHandler.sendMessage(message);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!file.getAbsolutePath().contains(<span class="string">&quot;.thumbnail&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                getFiles(file.getAbsolutePath());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">super</span>.run();</span><br><span class="line">                getFiles(fp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二、java反射"><a href="#二、java反射" class="headerlink" title="二、java反射"></a>二、java反射</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getFile2</span><span class="params">(Object path)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">cls_File</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.io.File&quot;</span>);</span><br><span class="line">    <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> cls_File.getConstructor(String.class);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">ins_file</span> <span class="operator">=</span> constructor.newInstance(path);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_listFiles</span> <span class="operator">=</span> cls_File.getMethod(<span class="string">&quot;ListFile&quot;</span>);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_isFile</span> <span class="operator">=</span> cls_File.getMthod(<span class="string">&quot;isFile&quot;</span>);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_getAbsolutePath</span> <span class="operator">=</span> cls_File.getMethod(<span class="string">&quot;getAbsolutePath&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">Class</span> <span class="variable">cls_String</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">    <span class="type">Class</span> <span class="variable">cls_CharSequence</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.CharSquence&quot;</span>);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">method_contains</span> <span class="operator">=</span> cls_String.getMethod(<span class="string">&quot;contains&quot;</span>,cls_CharSequence);</span><br><span class="line">    </span><br><span class="line">    Object[] files = (Object[])method_isFile.invoke(ins_file);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">obj_path</span> <span class="operator">=</span> method_getAbsolutePath.invoke(ins_file);</span><br><span class="line">    <span class="keyword">for</span>(Object one:files)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_one_path</span> <span class="operator">=</span> method_getAbsolutePath.invoke(one);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_isfile</span> <span class="operator">=</span> method_listFiles.invoke(one);</span><br><span class="line">        <span class="keyword">if</span>((<span class="type">boolean</span>)obj_isFile)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls_Message</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;android.os.Message&quot;</span>);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_obtain</span> <span class="operator">=</span> cls_Message.getMethod(<span class="string">&quot;obtain&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ins_message</span> <span class="operator">=</span> method_obtain.invoke(cls_Message);</span><br><span class="line">            <span class="type">Filed</span> <span class="variable">filed_what</span> <span class="operator">=</span> cls_Message.getField(<span class="string">&quot;what&quot;</span>);</span><br><span class="line">            filed_what.set(ins_message,<span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls_Bundle</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;android.os.Bundle&quot;</span>);</span><br><span class="line">            <span class="type">Constructor</span> <span class="variable">constructor_Bundle</span> <span class="operator">=</span> cls_Bundle.getConstructor();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">ins_Bundle</span> <span class="operator">=</span> constructor_Bundle.newInstance();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_putString</span> <span class="operator">=</span> cls_Bundle.getMethod(<span class="string">&quot;putString&quot;</span>,clsString,clsString);</span><br><span class="line">            method_putString.invoke(ins_Bundle,<span class="string">&quot;fp&quot;</span>,obj_one_path);</span><br><span class="line">            </span><br><span class="line">            <span class="type">Method</span> <span class="variable">method_setData</span> <span class="operator">=</span> cls_Message.getMethod(<span class="string">&quot;setData&quot;</span>,cls_Bundle);</span><br><span class="line">            method_setData.invoke(ins_message,ins_Bundle);</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!(<span class="type">boolean</span>)(method_contains.invoke(obj_one_path,<span class="string">&quot;.thumbnali&quot;</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            getFile(obj_one_path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三、JNI"><a href="#三、JNI" class="headerlink" title="三、JNI"></a>三、JNI</h4><p>前置知识</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//struct timeval tval; 定义了一个名为 tval 的结构体变量，其类型是 struct timeval</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">timeval</span> &#123;</span><br><span class="line">    <span class="type">long</span> tv_sec;  <span class="comment">// 秒</span></span><br><span class="line">    <span class="type">long</span> tv_usec; <span class="comment">// 微秒</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sleep_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> secs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">timeval</span> tval;</span><br><span class="line">    tval.tv_sec = secs/<span class="number">1000</span>;<span class="comment">// 将毫秒转换为秒部分</span></span><br><span class="line">    tval.tv_usec = (secs*<span class="number">1000</span>)%<span class="number">1000000</span>; <span class="comment">// 将毫秒转换为微秒部分,这里使用了取余运算符 % 来确保微秒数在 0 到 999999 之间。</span></span><br><span class="line">    <span class="built_in">select</span>(<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,&amp;tval);</span><br><span class="line">    <span class="comment">//select(0, NULL, NULL, NULL, &amp;tval); 是一个系统调用，通常在 Unix-like 系统（包括 Linux）中用于多路复用 I/O 操作。在这里，它被用来实现一个简单的睡眠功能，即暂停程序的执行一段时间，直到指定的时间间隔（由 tval 结构体指定）过去为止。</span></span><br><span class="line"><span class="comment">/*参数解释：</span></span><br><span class="line"><span class="comment">第一个参数 (nfds):</span></span><br><span class="line"><span class="comment">在此处设为 0，表示不监视任何文件描述符（通常是输入输出设备），因为我们只是希望进行定时等待，而不需要监听任何 I/O 事件。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">后续参数 (readfds, writefds, exceptfds):</span></span><br><span class="line"><span class="comment">这三个参数分别为读取、写入和异常文件描述符的集合，用于指定应该监视哪些文件描述符上的事件。在这里，我们将它们都设为 NULL，表示不监视任何文件描述符。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">最后一个参数 (timeout):</span></span><br><span class="line"><span class="comment">这是一个指向 struct timeval 结构体的指针，用来指定 select 函数应该等待的时间长度。具体地，它包含了两个成员：</span></span><br><span class="line"><span class="comment">tv_sec：等待的秒数部分。</span></span><br><span class="line"><span class="comment">tv_usec：等待的微秒数部分。</span></span><br><span class="line"><span class="comment">在这段代码中，通过设置 &amp;tval，即将 select 函数设定为等待 tval 所指定的时间长度。当 tval 中的时间过去后，select 函数返回，程序继续执行。*/</span></span><br><span class="line">    <span class="comment">//功能说明：这种用法实现了一个简单的延时功能。通过调整 tval 结构体中的 tv_sec 和 tv_usec 成员，可以精确地控制程序的睡眠时间。在这个例子中，程序将会休眠 secs 毫秒（即 secs 秒加上 secs * 1000 微秒）。    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">pthread_t</span> pid; <span class="comment">//这行代码是在 C 或 C++ 中声明了一个变量 pid，其类型为 pthread_t。这里的 pthread_t 是 POSIX 线程库中用来表示线程的数据类型。</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span>* <span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv  *env;</span><br><span class="line">    javaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env, <span class="number">0</span>);</span><br><span class="line">    ((PARAM*)args)-&gt;a = env;</span><br><span class="line">    </span><br><span class="line">    <span class="type">void</span>* ret = <span class="built_in">doWork2</span>(args);</span><br><span class="line">    javaVM-&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">    <span class="function"><span class="type">void</span>* <span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span>:</span></span><br><span class="line"><span class="function">/*这是一个函数定义，返回类型为 void*，接受一个 void* 类型的参数 args，通常用来传递函数的参数或数据。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">JNIEnv *env;</span>:</span><br><span class="line">JNIEnv 是一个结构体指针，用于与 Java 虚拟机进行通信，可以通过 javaVM 访问。</span><br><span class="line">    </span><br><span class="line">javaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env, <span class="number">0</span>);:</span><br><span class="line">javaVM 是一个指向 Java 虚拟机的指针或引用。</span><br><span class="line">AttachCurrentThread 函数用于将当前线程附加到 Java 虚拟机，以便在本地代码中与 Java 代码进行交互。通过此函数，可以获取当前线程的 JNIEnv 环境变量 env，从而能够调用 Java 方法和操作 Java 对象。</span><br><span class="line">第二个参数 <span class="number">0</span> 表示线程附加时使用默认的线程挂钩（Thread Attach Detach Support）。</span><br><span class="line"></span><br><span class="line">((PARAM*)args)-&gt;a = env;:</span><br><span class="line">将 args 强制转换为 PARAM* 类型，并将其中的 a 成员设置为当前的 env，即将 env 传递给 args 中的 a 成员。这样在后续的工作函数中可以使用 env 来与 Java 层交互。</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* ret = <span class="built_in">doWork2</span>(args);:</span><br><span class="line">调用函数 doWork2，并传递 args 参数。doWork2 函数执行具体的工作任务，可能会涉及到与 Java 层的交互或其他操作。它返回一个 <span class="type">void</span>* 类型的结果，将其赋给 ret 变量。</span><br><span class="line"></span><br><span class="line">javaVM-&gt;<span class="built_in">DetachCurrentThread</span>();:</span><br><span class="line">DetachCurrentThread 函数用于将当前线程从 Java 虚拟机中分离，结束与 Java 层的交互。这样做是为了避免资源泄漏或其他问题，确保线程的安全退出。*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">JNIEXPORT jint JNICALL <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm, <span class="type">void</span> *reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//注意不能在里面做耗时操作</span></span><br><span class="line">    <span class="comment">//void *reserved：这是一个保留参数，通常不会在函数体内使用。</span></span><br><span class="line">    <span class="comment">// 获取到 JavaVM</span></span><br><span class="line">    javaVM = vm;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印日志</span></span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>, <span class="string">&quot;JNI_OnLoad&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回 JNI 版本号</span></span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JNI_OnLoad 函数是 JNI 库加载时自动调用的初始化函数。它的主要作用是获取并保存 Java 虚拟机实例，并且可以执行一些初始化操作。返回的 JNI 版本号指示本地库需要的 JNI 接口版本。</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Java_a_b_c_practice_MainActivity_walkDir</span>(JNIEnv *env, jobject thiz, jstring dirPath_, jobject h_handler)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pthread_t</span> pid; <span class="comment">// 声明一个 pthread_t 类型的变量 pid，用来存储线程的标识符</span></span><br><span class="line"></span><br><span class="line">    PARAM* param = (PARAM*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(PARAM)); <span class="comment">// 分配 PARAM 结构体的内存空间，并将指针赋给 param</span></span><br><span class="line">    param-&gt;a = env; <span class="comment">// 将 JNIEnv 指针 env 赋给 param 结构体中的成员变量 a</span></span><br><span class="line">    param-&gt;b = env-&gt;<span class="built_in">NewGlobalRef</span>(thiz); <span class="comment">// 创建 thiz 对象的全局引用，并赋给 param 结构体中的成员变量 b</span></span><br><span class="line">    param-&gt;c = <span class="built_in">static_cast</span>&lt;jstring&gt;(env-&gt;<span class="built_in">NewGlobalRef</span>(dirPath_)); <span class="comment">// 将 dirPath_ 转换为 jstring 类型，并创建其全局引用，赋给 param 结构体中的成员变量 c</span></span><br><span class="line">    param-&gt;d = env-&gt;<span class="built_in">NewGlobalRef</span>(h_handler); <span class="comment">// 创建 h_handler 对象的全局引用，并赋给 param 结构体中的成员变量 d</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个新线程，并调用 subWalkDir 函数执行目录遍历操作，传入 param 结构体作为参数</span></span><br><span class="line">    <span class="built_in">pthread_create</span>(&amp;pid, <span class="number">0</span>, subWalkDir, param);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">DIR *dir = <span class="built_in">opendir</span>(dirPath);</span><br><span class="line"><span class="comment">/*opendir(dirPath)：</span></span><br><span class="line"><span class="comment">opendir 是 POSIX 标准库中用来打开目录的函数。</span></span><br><span class="line"><span class="comment">dirPath 是一个 const char * 类型的参数，表示要打开的目录的路径。</span></span><br><span class="line"><span class="comment">opendir 函数将指定路径 dirPath 的目录打开，并返回一个指向 DIR 结构体的指针 dir。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">DIR *dir：</span></span><br><span class="line"><span class="comment">dir 是一个指向 DIR 结构体的指针，用于表示打开的目录。在 POSIX 系统中，DIR 结构体用于维护目录流的状态信息。*/</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//dirent 是一个结构体，用于表示目录中的一个条目（文件或子目录</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">dirent</span> &#123;</span><br><span class="line">    <span class="type">ino_t</span> d_ino;           <span class="comment">/* inode number */</span></span><br><span class="line">    <span class="type">off_t</span> d_off;           <span class="comment">/* offset to the next dirent */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> d_reclen;<span class="comment">/* length of this record */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> d_type;  <span class="comment">/* type of file; not supported by all file system types */</span></span><br><span class="line">    <span class="type">char</span> d_name[<span class="number">256</span>];      <span class="comment">/* filename */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Eg:</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DIR *dir;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">dirent</span> *file;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打开目录</span></span><br><span class="line">    dir = <span class="built_in">opendir</span>(<span class="string">&quot;/path/to/directory&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (dir == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">perror</span>(<span class="string">&quot;opendir&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取目录中的每一个文件条目</span></span><br><span class="line">    <span class="keyword">while</span> ((file = <span class="built_in">readdir</span>(dir)) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;File name: %s\n&quot;</span>, file-&gt;d_name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭目录</span></span><br><span class="line">    <span class="built_in">closedir</span>(dir);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">jfieldID whatFieldID = env-&gt;<span class="built_in">GetFieldID</span>(cls, <span class="string">&quot;what&quot;</span>, <span class="string">&quot;I&quot;</span>);</span><br><span class="line"><span class="comment">/*jfieldID 是 JNI 中表示 Java 字段的数据类型，它用于唯一标识一个特定的 Java 字段。</span></span><br><span class="line"><span class="comment">env 是 JNI 环境指针，可以通过它来调用 JNI 的各种函数。</span></span><br><span class="line"><span class="comment">GetFieldID 是 JNI 提供的一个函数，用于获取指定 Java 类中的字段的 jfieldID。</span></span><br><span class="line"><span class="comment">cls 是一个 jclass 对象，表示要操作的 Java 类。通常通过 GetObjectClass 函数从 Java 对象获取。</span></span><br><span class="line"><span class="comment">&quot;what&quot; 是要获取的字段的名称，这里是一个 int 类型的字段名。</span></span><br><span class="line"><span class="comment">&quot;I&quot; 是 JNI 字段描述符，表示字段类型是 int。*/</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//点击按钮响应，和上面一样</span></span><br><span class="line"><span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">walkDir(tmpPath,handler);</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">walkDir</span><span class="params">(String fpath, MyHandler hHandler)</span>;</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line">#&lt;android/log.h&gt;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TAG <span class="string">&quot;qqqqqqqq&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...)__android_log_print(ANDROID_LOG_DEBUG,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...)__android_log_print(ANDROID_LOG_INFO,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGW(...)__android_log_print(ANDROID_LOG_WARN,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGE(...)__android_log_print(ANDROID_LOG_ERROR,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGF(...)__android_log_print(ANDROID_LOG_FATAL,TAG,__VA_ARGS__);</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> PATH_MAX_LEGTH = <span class="number">26</span>;</span><br><span class="line">JavaVM *javaVM;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PARAM</span></span><br><span class="line">&#123;</span><br><span class="line">    JNIEnv *a;</span><br><span class="line">    jobject b;</span><br><span class="line">    jstring c;</span><br><span class="line">    jobject d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sleep_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> secs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">timeval</span> tval;</span><br><span class="line">    tval.tv_sec = secs/<span class="number">1000</span>; <span class="comment">//将毫秒转换位秒</span></span><br><span class="line">    tval.tv_usec = (secs*<span class="number">1000</span>)%<span class="number">1000000</span>; <span class="comment">//将毫秒转换为微妙部分，这里使用了取余运算符 % 来确保微妙数在0 到 999999 之间。</span></span><br><span class="line">    <span class="built_in">select</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="literal">NULL</span>,NUll,<span class="literal">NULL</span>,&amp;tval);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">doWork</span><span class="params">(<span class="type">void</span> *args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PARAM tmp = *(PARAM*)args;</span><br><span class="line">    JNIEnv *env = tmp.a;</span><br><span class="line">    jobject thiz = tmp.b;</span><br><span class="line">    jstring dirPath_ = tmp.c;</span><br><span class="line">    jobject h_handler = tmp.d;</span><br><span class="line">    <span class="keyword">if</span>(dirPath_ == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath is null!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *dirPath = env-&gt;<span class="built_in">GetStringUTFchars</span>(dirPath_,<span class="literal">nullptr</span>);<span class="comment">//GetStringUTFChars 是 JNIEnv 提供的一个函数，用于获取一个 Java 字符串对象的 UTF-8 编码的 C 字符串表示</span></span><br><span class="line">    <span class="comment">//长度判断</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(dirPath) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath length is 0!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打开文件夹读取流</span></span><br><span class="line">    DIR *dir = <span class="built_in">opendir</span>(dirPath);</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">nullptr</span> == dir)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;can not open dir, check path or permission!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">dirent</span> *file;</span><br><span class="line">    <span class="keyword">while</span>((file = <span class="built_in">readdir</span>(dir))!=<span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断是不是 .或者 ..文件夹</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(file-&gt;d_name,<span class="string">&quot;.&quot;</span>) == <span class="number">0</span>||<span class="built_in">strcmp</span>(file-&gt;d_name,<span class="string">&quot;..&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> *path = <span class="keyword">new</span> <span class="type">char</span>[PATH_MAX_LEGTH];</span><br><span class="line">        <span class="built_in">memset</span>(path,<span class="number">0</span>,PATH_MAX_LEGTH);</span><br><span class="line">        <span class="built_in">strcpy</span>(path,dirpath);</span><br><span class="line">        <span class="built_in">strcat</span>(path,<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(path,file-&gt;d_name);</span><br><span class="line">        jstring tDir = env-&gt;<span class="built_in">NewStringUTF</span>(path);</span><br><span class="line">        <span class="comment">//GetStringUTFChars：从 jstring 中获取 UTF-8 编码的 C 字符串，用于读取 Java 字符串数据。</span></span><br><span class="line">        <span class="comment">//NewStringUTF：将 UTF-8 编码的 C 字符串转换为 Java 字符串对象，用于创建新的 Java 字符串。</span></span><br><span class="line">        <span class="keyword">if</span>(file-&gt;d_type == DT_DIR)  <span class="comment">//DT_DIR 是 &lt;dirent.h&gt; 头文件中定义的常量，表示目录的类型。</span></span><br><span class="line">        &#123;</span><br><span class="line">            PARAM param;</span><br><span class="line">            param.a = env;</span><br><span class="line">            param.b = thiz;<span class="comment">//这个thiz不理解</span></span><br><span class="line">            param.c = tDir;</span><br><span class="line">            param.d = h_handler;</span><br><span class="line">            <span class="built_in">doWork</span>(&amp;param);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//打印文件名</span></span><br><span class="line">            <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>,path);</span><br><span class="line">            jclass cls = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/os/Message&quot;</span>);</span><br><span class="line">            jmethodID obtainMethod = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls,<span class="string">&quot;obtain&quot;</span>,<span class="string">&quot;()Landroid/os/Message;&quot;</span>);</span><br><span class="line">            jobject ins_Message = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls,obtainMethod);</span><br><span class="line">            </span><br><span class="line">            jfieldID whatFieldID = env-&gt;<span class="built_in">GetFiledID</span>(cls,<span class="string">&quot;what&quot;</span>,<span class="string">&quot;I&quot;</span>);</span><br><span class="line">            <span class="comment">//参数解释</span></span><br><span class="line"><span class="comment">/*env：这是一个 JNIEnv* 类型的指针，它代表了JNI环境。</span></span><br><span class="line"><span class="comment">cls：这是一个 jclass 类型的对象，表示要操作的Java类的类对象。</span></span><br><span class="line"><span class="comment">&quot;what&quot;：这是要获取字段ID的字段名，这里是 &quot;what&quot;。</span></span><br><span class="line"><span class="comment">&quot;I&quot;：这是字段的签名，其中 &quot;I&quot; 表示这是一个整数类型的字段（Java中的 int）*/</span></span><br><span class="line">            env-&gt;<span class="built_in">SetIntField</span>(ins_Message,whatFieldID,<span class="number">1</span>);</span><br><span class="line">            jobject ins_bundle = env-&gt;<span class="built_in">NewObject</span>(cls_bundle,method_init_bundle);</span><br><span class="line">            <span class="comment">//clazz：表示要实例化的Java类的 jclass 对象，即类的句柄或引用。methodID：表示要调用的构造方法的 jmethodID 对象，它标识了要使用的构造方法。</span></span><br><span class="line">            jmethodID method_putString = env-&gt;<span class="built_in">GetMethodID</span>(cls_bundle,<span class="string">&quot;putString&quot;</span>,<span class="string">&quot;(Ljava/lang/String;Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">            jstring jstr_key = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;fp&quot;</span>);</span><br><span class="line">            evn-&gt;<span class="built_in">CallVoidMethod</span>(ins_bundle,method_putString,jstr_key,tDir);</span><br><span class="line">            </span><br><span class="line">            jmethodID method_setData = env-&gt;<span class="built_in">GetMethodID</span>(cls,<span class="string">&quot;setData&quot;</span>,<span class="string">&quot;(Landroid/os/Bundle;)V&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallVoidMethod</span>(ins_Message,method_setData,ins_bundle);</span><br><span class="line">            </span><br><span class="line">            jclass jcls_handler = env-&gt;<span class="built_in">GetObject</span>(h_handler);</span><br><span class="line">            jmethodID method_sendMessage = env-&gt;<span class="built_in">GetMethodID</span>(jcls_handler,<span class="string">&quot;sendMessage&quot;</span>,<span class="string">&quot;(Landroid/os/Message;)Z&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallBooleanMethod</span>(h_handler,method_sendMessage,ins_Message);</span><br><span class="line">            <span class="built_in">sleep_ms</span>(<span class="number">100</span>);        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放文件内存路径</span></span><br><span class="line">        <span class="keyword">delete</span> path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭读取流</span></span><br><span class="line">    <span class="built_in">closedir</span>(dir);</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(dirPath_,dirPath);    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>* <span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv *env;</span><br><span class="line">    javaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env,<span class="number">0</span>);</span><br><span class="line">    ((PARAM*)args)-&gt;a = env;</span><br><span class="line">    <span class="type">void</span> *ret = <span class="built_in">doWork</span>(args);</span><br><span class="line">    javaVM -&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT <span class="type">void</span> JNICALL</span><br><span class="line">MainActivity.<span class="built_in">waklDri</span>(JNIEnv *env,jobject thiz,jstring dirPath_, jobject h_handler)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pthread_t</span> pid;<span class="comment">//pthread_t 是用来表示线程的数据类型</span></span><br><span class="line">    PARAM* param = (PARAM*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(PARAM));</span><br><span class="line">    param-&gt;a = env;</span><br><span class="line">    param-&gt;b = env-&gt;<span class="built_in">NewGloblaRef</span>(thiz);</span><br><span class="line">    param-&gt;c = <span class="built_in">static_cast</span>&lt;jsting&gt;(env-&gt;<span class="built_in">NewGlobalRef</span>(dirPath_));<span class="comment">////static_cast 是 C++ 中的一种类型转换操作符，用于执行编译时的类型转换</span></span><br><span class="line">    <span class="comment">//在 JNI（Java Native Interface）中，env 是指向 JNI 环境的指针，NewGlobalRef 函数用于创建一个全局引用，确保对象在 Java 层面不会被垃圾回收器回收，直到显式释放为止</span></span><br><span class="line">    param-&gt;d = env-&gt;<span class="built_in">NewGlobalRef</span>(h_handler);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">pthread_create</span>(&amp;pid,<span class="number">0</span>,subWalkDir,param);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm,<span class="type">void</span> *reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取到JavaVM</span></span><br><span class="line">    javaVM = vm;</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;JNI_OnLoad&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四、ndk反射-和JNI差距不大"><a href="#四、ndk反射-和JNI差距不大" class="headerlink" title="四、ndk反射(和JNI差距不大)"></a>四、ndk反射(和JNI差距不大)</h4><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">walkDir2</span><span class="params">(String fpath, MyHandler hHandler)</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">walkDir2(tmpPath,handler);</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;android/log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TAG <span class="string">&quot;qqqqqqqq&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...)__android_log_print(ANDROID_LOG_DEBUG,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGI(...)__android_log_print(ANDROID_LOG_INFO,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGW(...)__android_log_print(ANDROID_LOG_WARN,TAG,__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGE(...)__android_log_print(ANDROID_LOG_ERROR,TAG__VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGF(...)__android_log_print(ANDROID_LOG_FATAL,TAG__VA__ARGS__);</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> PATH_MAX_LEGTH = <span class="number">26</span>;</span><br><span class="line">JavaVM *javaVM;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PARAM</span></span><br><span class="line">&#123;</span><br><span class="line">    JNIEnv *a;</span><br><span class="line">    jobject b;</span><br><span class="line">    jstring c;</span><br><span class="line">    jstring d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">sleep_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> secs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">timeval</span> tval;</span><br><span class="line">    tval.tv_sec = secs/<span class="number">1000</span>;</span><br><span class="line">    tval.tv_usec = (secs*<span class="number">1000</span>)%<span class="number">1000000</span>;</span><br><span class="line">    <span class="built_in">select</span>(<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,&amp;tval); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">doWork2</span><span class="params">(<span class="type">void</span> *args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PARAM tmp = *(PARAM*)args;</span><br><span class="line">    JNIEnv *env = tmp.a;</span><br><span class="line">    jobject thiz = tmp.b;</span><br><span class="line">    jstring dirPath_ = tmp.c;</span><br><span class="line">    jobject h_handler = tmp.d;</span><br><span class="line">    <span class="keyword">if</span>(dirPath_ == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath is null&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *dirPaht = env-&gt;<span class="built_in">GetStringUTFChars</span>(dirPath_,<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="comment">//长度判断</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(dirPath) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;dirPath length is 0!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;     </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    jclass cls_File = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;java/io/File&quot;</span>);</span><br><span class="line">    jmethodID methodID_init_File = env-&gt;<span class="built_in">GetMethodID</span>(cls_File,<span class="string">&quot;&lt;init&gt;&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">    <span class="comment">//&lt;init&gt; 是构造方法的特殊名称，用于表示构造方法。</span></span><br><span class="line">    jobject obj_File = env-&gt;<span class="built_in">NewObject</span>(cls_File,methodID_init_File,dirPath);</span><br><span class="line">    </span><br><span class="line">    jmethodID methodID_listFiles_File = env-&gt;<span class="built_in">GetMethod</span>(cls_File,<span class="string">&quot;listFiles&quot;</span>,<span class="string">&quot;()Ljava/io/File;&quot;</span>);</span><br><span class="line">    jobjectArray ins_Files = (jobjectArray)(env-&gt;<span class="built_in">CallObjectMethod</span>(obj_File,methodID_listFiles_File));</span><br><span class="line">    jsize size = env-&gt;<span class="built_in">GetArrayLength</span>(ins_Files);</span><br><span class="line">    </span><br><span class="line">    jmethodID methodID_isFile_File = env-&gt;<span class="built_in">GetMethodID</span>(cls_File,<span class="string">&quot;isFile&quot;</span>,<span class="string">&quot;()Z&quot;</span>);</span><br><span class="line">    jmethodID methoID_getAbsolutePath_File = env-&gt;<span class="built_in">GetMethod</span>(cls_File,<span class="string">&quot;getAbsolutePath&quot;</span>,<span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    jclass cls_String = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;java/lang/String&quot;</span>);</span><br><span class="line">    jmethodID methodID_contains_String = env-&gt;<span class="built_in">GetMethodID</span>(cls_String,<span class="string">&quot;contains&quot;</span>,<span class="string">&quot;(Ljava/lang/CharSequence;)Z&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    jstring jstring_tmp = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;.thumnail&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;(size);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        jobject jobject_InsFile = env-&gt;<span class="built_in">GetObjectArrayElement</span>(ins_Files,i);</span><br><span class="line">        jboolean isfile = env-&gt;<span class="built_in">CallBooleanMethod</span>(jobject_InsFile,methodID_isFile_File);</span><br><span class="line">        </span><br><span class="line">        jobject jstring_fpath = env-&gt;<span class="built_in">CallObjectMethod</span>(jobject_InsFile,methodID_getAbsolutePath_File);</span><br><span class="line">        jboolean iscontains = env-&gt;<span class="built_in">CallBooleanMethod</span>((jstring)jstring_fpah,methodID_contains_String,jstring_tmp);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(isfile)</span><br><span class="line">        &#123;</span><br><span class="line">            jclas cls = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/os/Message&quot;</span>);</span><br><span class="line">            jmethodID obtainMethod = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls,<span class="string">&quot;obtain&quot;</span>,<span class="string">&quot;()Landroid/os/Message;&quot;</span>);</span><br><span class="line">            jobject ins_Message = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls,obtainMethod);</span><br><span class="line">            </span><br><span class="line">            jfileID whatField = emv-&gt;<span class="built_in">GetFileID</span>(cls,<span class="string">&quot;what&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">SetIntField</span>(ins_Message,whatField,<span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            jclass cls_bundle = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/os/Bundle&quot;</span>);</span><br><span class="line">            jmethodID method_init_bundle = env-&gt;<span class="built_in">GetMethodID</span>(cls_bundle,&lt;init&gt;,<span class="string">&quot;()V&quot;</span>);</span><br><span class="line">            jobject ins_bundle = env-&gt;<span class="built_in">NewObject</span>(cls_bundle, method_init_bundle);</span><br><span class="line">            </span><br><span class="line">            jmethodID method_putString = env-&gt;<span class="built_in">GetMethodID</span>(cls_bundle,<span class="string">&quot;putString&quot;</span>,<span class="string">&quot;(Ljava/lang/String;Ljava/lang/String)V&quot;</span>);</span><br><span class="line">            jstring jstr_key = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;fp&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallVoidMethod</span>(ins_bundle,method_putString,jstr_key,(jstring)jstring_fpath);</span><br><span class="line">            </span><br><span class="line">            jmethodID method_setData = env-&gt;<span class="built_in">GetMethodID</span>(cls,<span class="string">&quot;setData&quot;</span>,<span class="string">&quot;(Landroid/os/Bundle;)V&quot;</span>);</span><br><span class="line">            env-&gt;<span class="built_in">CallVoidMehtod</span>(ins_Message,method_setData,ins_bundle);</span><br><span class="line">            </span><br><span class="line">            jclass jcls_handler = env-&gt;<span class="built_in">GetObjectClass</span>(h_handler);</span><br><span class="line">            jmethodID method_sendMessage = env-&gt;<span class="built_in">GetMethodID</span>(jcls_handler,<span class="string">&quot;sendMessage&quot;</span>,<span class="string">&quot;(Landroid/os/Message;)Z&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            env-&gt;<span class="built_in">CallBooleanMethod</span>(h_handler,method_sendMessage,ins_Message);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">sleep_ms</span>(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!iscontains)</span><br><span class="line">        &#123;</span><br><span class="line">            PARAM param;</span><br><span class="line">            param.a = env;</span><br><span class="line">            param.b = thiz;</span><br><span class="line">            param.c = (jstring)jstring_fpath;</span><br><span class="line">            param.d = h_handler;</span><br><span class="line">            <span class="built_in">doWork2</span>(&amp;param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringUTFChars</span>(dirPath_,dirPath);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">subWalkDir</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIE *env;</span><br><span class="line">    javaVM-&gt;AttachCurrentThread)(&amp;env,<span class="number">0</span>);</span><br><span class="line"><span class="comment">/*&amp;env：这是一个 JNIEnv* 类型的指针，用于接收当前线程附加后的JNI环境。</span></span><br><span class="line"><span class="comment">0：这个参数是一个可选的 void* 类型的数据指针，用于在线程附加时传递额外的数据。在这里，使用 0 表示不传递任何额外数据。*/</span></span><br><span class="line">    ((PARAM*)args)-&gt;a = env;</span><br><span class="line">    </span><br><span class="line">    <span class="type">void</span> *ret = <span class="built_in">doWork2</span>(args);</span><br><span class="line">    javaVM-&gt;<span class="built_in">DetachCurrentThread</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT <span class="type">void</span> JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_practice_MainActivity_walkDir</span><span class="params">(JNIEnv *env, jobject thiz, jstring dirPath_, jobject h_handler)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">pthread_t</span> pid;</span><br><span class="line">    PARAM *param = (PARAM*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(PARAM));</span><br><span class="line">    param-&gt;a = env;</span><br><span class="line">    param-&gt;b = env-&gt;<span class="built_in">NewGlobalRes</span>(thiz);</span><br><span class="line">    param-&gt;c = <span class="built_in">static_cast</span>&lt;jstring&gt;(env-&gt;<span class="built_in">NewGlobalRef</span>(dirPath_));</span><br><span class="line">    param-&gt;d = env-&gt;<span class="built_in">NewGlobalRef</span>(h_handler);</span><br><span class="line">    <span class="built_in">pthread_create</span>(&amp;pid,<span class="number">0</span>,sunWalkDir,param);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm,<span class="type">void</span> *reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取到JavaVM</span></span><br><span class="line">    javaVm = vm;</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;JNI_OnLoad&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--NDK编程</title>
      <link href="/2024/07/21/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-NDK%E7%BC%96%E7%A8%8B/"/>
      <url>/2024/07/21/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-NDK%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="NDK"><a href="#NDK" class="headerlink" title="NDK"></a>NDK</h3><p>定义：NDK编程指的是使用Android Native Development Kit（NDK）进行开发，它允许开发者使用C和C++等原生编程语言来编写Android应用的部分代码，通常是处理性能要求高或者需要直接访问设备硬件的功能</p><h4 id="JNI函数命名规则"><a href="#JNI函数命名规则" class="headerlink" title="JNI函数命名规则"></a>JNI函数命名规则</h4><p>Java + 包名 + 类名 + 函数名（以_间隔）,Eg：Java_a_b_c_ndk_MainActivity_getLength</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Java_a_b_c_ndk_MainActivity_getLength</span>(JNIEnv *env, jobject thiz, jstring param)&#123;&#125;</span><br><span class="line"><span class="comment">/*每个参数的含义</span></span><br><span class="line"><span class="comment">JNIEnv env:</span></span><br><span class="line"><span class="comment">JNIEnv 是一个指向JNI环境的指针，它提供了一系列的JNI函数和数据结构，用于在Java虚拟机（JVM）中操作Java对象、调用Java方法、异常处理等。通过 env 参数，本地代码能够与JVM进行交互，执行JNI操作。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">jobject thiz:</span></span><br><span class="line"><span class="comment">jobject 是JNI中的一个泛型类型，表示一个Java对象的引用。在本例中，thiz 参数代表了调用本地方法的Java对象的引用。通常情况下，它指向当前实例对象，即调用本地方法的对象实例。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">jstring param:</span></span><br><span class="line"><span class="comment">jstring 是JNI中表示Java字符串的类型。在JNI中，字符串类型需要特殊处理，因为Java中的字符串和C/C++中的字符串表示方式不同。param 参数表示从Java层传递过来的字符串参数。*/</span></span><br></pre></td></tr></table></figure><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p><img src="/../image/ndk.jpg"></p><h4 id="函数签名"><a href="#函数签名" class="headerlink" title="函数签名"></a>函数签名</h4><p>查看函数签名的方法</p><p><img src="/../image/ndk1.png"></p><p>输入： javap -s a.b.c.ndk01.MainActivity</p><p><img src="/../image/ndk2.jpg"></p><h4 id="读写SDCard"><a href="#读写SDCard" class="headerlink" title="读写SDCard"></a>读写SDCard</h4><p>申请读、写、管理SDCard权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.ndk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.ndk.databinding.ActivityMainBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">MY_PERMISSION_REQUEST_WRITE_CODE</span> <span class="operator">=</span> <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Used to load the &#x27;ndk&#x27; library on application startup.</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;ndk&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">testFun</span><span class="params">(String a,<span class="type">double</span> b,<span class="type">long</span> c)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">        testFun(<span class="string">&quot;aa&quot;</span>,<span class="number">4.5</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Example of a call to a native method</span></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> binding.sampleText;</span><br><span class="line">        tv.setText(stringFromJNI());</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> ContextCompat.checkSelfPermission(MainActivity.<span class="built_in">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE);<span class="comment">//这里注意：Manifest一定要选android</span></span><br><span class="line">                <span class="keyword">if</span>(ret == PackageManager.PERMISSION_GRANTED)</span><br><span class="line">                &#123;</span><br><span class="line"><span class="comment">//PackageManager.PERMISSION_GRANTED: 这个常量的值是 0，表示应用程序已被授予了该权限。</span></span><br><span class="line"><span class="comment">//PackageManager.PERMISSION_DENIED: 这个常量的值是 -1，表示应用程序未被授予该权限，可能是因为尚未请求权限或用户显式拒绝了。</span></span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;已经有写SDCard的权限了&quot;</span>);</span><br><span class="line">                                            <span class="type">String</span> <span class="variable">fp1</span> <span class="operator">=</span> Environment.getExternalStoragePublicDictory(Environment.DIRECTORY_DOWNLOADS).getAbsoultaePath();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">fc</span> <span class="operator">=</span> readSDCardFile(fp1+<span class="string">&quot;/b.txt&quot;</span>);</span><br><span class="line">                        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;文件内容：&quot;</span>+fc);</span><br><span class="line">               </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;还没有写SDcard的权限&quot;</span>);</span><br><span class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,MY_PERMISSION_REQUEST_WRITE_CODE)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionResult</span><span class="params">(<span class="type">int</span> requestCode,<span class="meta">@Nonull</span> String[] permission,<span class="meta">@Nonull</span> <span class="type">int</span>[] grantResults)</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">/*requestCode：用于标识权限请求的请求码，通常是在发起权限请求时传递的。</span></span><br><span class="line"><span class="comment">permissions：请求的权限数组，包含了应用程序请求的权限列表。</span></span><br><span class="line"><span class="comment">grantResults：授权结果数组，包含了对应于请求权限数组中每个权限的授权结果、(PackageManager.PERMISSION_GRANTED 或 PackageManager.PERMISSION_DENIED)。*/</span></span><br><span class="line">            <span class="built_in">super</span>.onRequestPermissionResult(requestCode,permission,grantResult);</span><br><span class="line">            swtich(requetsCode)<span class="comment">//注意：break不要忘了写</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> MY_PERMISSION_RQQUEST_WRITE_CODE:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(grantResult.length&gt;<span class="number">0</span>&amp;&amp;grantResults[<span class="number">0</span>]!=-<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;写SDcard权限申请成功&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;写SDcard权限申请失败&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">33</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;这是申请其他权限的结果&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * A native method that is implemented by the &#x27;ndk&#x27; native library,</span></span><br><span class="line"><span class="comment">     * which is packaged with this application.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">stringFromJNI</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">getLength</span><span class="params">(String param)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">readSDCardFile</span><span class="params">(String filePath)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">include &lt;jni.h&gt;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;android/log.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGI(...) __android_log_print(ANDROID_LOG_INFO,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);<span class="comment">//注意别写错</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGD(...) __android_log_print(ANDROID_LOG_WARN,,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGW(...) __android_log_print(ANDROID_LOG_WARN,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGE(...) __android_log_print(ANDROID_LOG_ERROR,<span class="string">&quot;qqqqqqqq&quot;</span>, __VA_ARGS__);</span></span><br><span class="line"><span class="comment">/*#define LOGI(...)：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#define 是 C/C++ 语言中的预处理指令，用于定义宏。</span></span><br><span class="line"><span class="comment">LOGI 是宏的名称，可以根据需要自定义。在这里，LOGI 可以用来打印信息级别的日志。</span></span><br><span class="line"><span class="comment">__android_log_print()：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">__android_log_print() 是 Android NDK 提供的一个函数，用于在 Android 的 LogCat 中打印日志信息。</span></span><br><span class="line"><span class="comment">它接受多个参数，包括日志级别、标签和日志内容等。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ANDROID_LOG_INFO：</span></span><br><span class="line"><span class="comment">ANDROID_LOG_INFO 是 __android_log_print() 函数的第一个参数，表示日志级别为信息（INFO）。其他常用的日志级别还包括 ANDROID_LOG_DEBUG、ANDROID_LOG_WARN 等。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> &quot;qqqqqqqq&quot;：</span></span><br><span class="line"><span class="comment">&quot;qqqqqqqq&quot; 是日志的标签，用于在 LogCat 中识别和过滤日志条目。可以根据实际需求修改为其他标签。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> __VA_ARGS__：</span></span><br><span class="line"><span class="comment">__VA_ARGS__ 是一个特殊的宏，表示宏中的可变参数列表。在这里，它用来接收 LOGI 宏的所有额外参数，并将它们传递给 __android_log_print() 函数。*/</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_stringFromJNI</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        JNIEnv* env,</span></span></span><br><span class="line"><span class="params"><span class="function">        jobject <span class="comment">/* this */</span>)</span> </span>&#123;</span><br><span class="line">    std::string hello = <span class="string">&quot;Hello from C++&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;<span class="built_in">NewStringUTF</span>(hello.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_getLength</span><span class="params">(JNIEnv *env, jobject thiz, jstring param)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_readSDCardFile</span><span class="params">(JNIEnv *env, jobject thiz, jstring file_path)</span> </span>&#123;</span><br><span class="line">    jstring jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">    <span class="type">char</span>*tmp = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFChars</span>(jstring_ret,<span class="number">0</span>);</span><br><span class="line">    <span class="type">char</span>* filePath = (<span class="type">char</span> *)env-&gt;<span class="built_in">GetStringUTFChars</span>(file_path,<span class="number">0</span>);<span class="comment">//JNI_TRUE：表示返回的字符串是从 Java 字符串复制出来的，即 JNI 在返回的字符串中创建了一个新的副本。</span></span><br><span class="line">   <span class="comment">// JNI_FALSE：表示返回的字符串是直接指向 Java 字符串的内部缓冲区，没有进行复制。这种情况下，应该避免在本地代码中修改字符串内容，以免影响 Java 层原始数据。</span></span><br><span class="line">   FILE *fp;</span><br><span class="line">   fp = <span class="built_in">fopen</span>(filePath,<span class="string">&quot;r&quot;</span>);<span class="comment">//&quot;r&quot; 表示以只读方式打开文件。这意味着你可以从文件中读取数据，但不能写入或修改文件内容。</span></span><br><span class="line">   <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">LOGE</span>(<span class="string">&quot;fp == NULL, %s&quot;</span>,filePath);</span><br><span class="line">       <span class="keyword">return</span> jstring_ret;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span> (<span class="built_in">fgets</span>(buff,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">LOGI</span>(<span class="string">&quot;fgets :%s&quot;</span>,buff);</span><br><span class="line">   &#125;</span><br><span class="line">   env-&gt;<span class="built_in">ReleaseStringChars</span>(jstring_ret, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">const</span> jchar *&gt;(tmp));<span class="comment">//reinterpret_cast 是 C++ 中的类型转换操作符</span></span><br><span class="line">   jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(buff);</span><br><span class="line">   <span class="keyword">return</span> jstring_ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h4><p>含义：在运行时检查或操作类、方法、属性等程序结构的能力。通俗地讲，反射允许程序在运行时动态地获取信息和操作对象，而不需要在编译时就知道这些信息。</p><p>1、获取类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;类名全路径&quot;</span>)</span><br><span class="line">类名.class</span><br><span class="line">实例.getClass</span><br></pre></td></tr></table></figure><p>2、获取方法和属性</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclaredMethods();</span><br><span class="line">类.getDeclaredConstructors();</span><br><span class="line">类.getMethod();</span><br><span class="line">类.getDeclaredFields();</span><br></pre></td></tr></table></figure><p>3、调用方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">方法.invoke();</span><br></pre></td></tr></table></figure><p>用法详细解释</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclareMethods();</span><br><span class="line"><span class="comment">//这个方法返回一个 Method 对象数组，代表了该类中所有声明的方法，包括 public、protected、default（包级别）和 private 方法，但不包括从父类继承的方法。</span></span><br><span class="line"><span class="comment">//语法：Method[] methods = 类.getDeclaredMethods();</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line">Method[] methods = clazz.getDeclaredMethods();</span><br><span class="line"><span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">    System.out.println(method.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclaredConstructors();</span><br><span class="line"><span class="comment">//这个方法返回一个 Constructor 对象数组，代表了该类中所有声明的构造函数，包括 public、protected、default 和 private 构造函数。</span></span><br><span class="line"><span class="comment">//语法：Constructor&lt;?&gt;[] constructors = 类.getDeclaredConstructors();</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line">Constructor&lt;?&gt;[] constructors = clazz.getDeclaredConstructors();</span><br><span class="line"><span class="keyword">for</span> (Constructor&lt;?&gt; constructor : constructors) &#123;</span><br><span class="line">    System.out.println(constructor.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getMethod();</span><br><span class="line"><span class="comment">//这个方法用于获取指定方法名和参数类型的 Method 对象，只能获取到 public 方法，包括从父类继承而来的 public 方法。</span></span><br><span class="line"><span class="comment">//语法：Method method = 类.getMethod(&quot;methodName&quot;, parameterTypes);</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line"><span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;someMethod&quot;</span>, String.class, <span class="type">int</span>.class);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类.getDeclaredFields();</span><br><span class="line"><span class="comment">//这个方法返回一个 Field 对象数组，代表了该类中所有声明的字段（成员变量），包括 public、protected、default 和 private 字段</span></span><br><span class="line"><span class="comment">//语法：Field[] fields = 类.getDeclaredFields();</span></span><br><span class="line">Class&lt;?&gt; clazz = MyClass.class;</span><br><span class="line">Field[] fields = clazz.getDeclaredFields();</span><br><span class="line"><span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">    System.out.println(field.getName());</span><br><span class="line">&#125;</span><br><span class="line">Eg:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, my name is &quot;</span> + name + <span class="string">&quot; and I am &quot;</span> + age + <span class="string">&quot; years old.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">privateMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is a private method.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflectionExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        Class&lt;Person&gt; personClass = Person.class;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取所有声明的字段</span></span><br><span class="line">        Field[] fields = personClass.getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出字段的名称和值</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>); <span class="comment">// 因为字段是私有的，需要设置可访问</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">fieldName</span> <span class="operator">=</span> field.getName();</span><br><span class="line">            System.out.println(<span class="string">&quot;Field name: &quot;</span> + fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">Field name: name</span><br><span class="line">Field name: age</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        clz = Class.forName(<span class="string">&quot;a.b.c.ndk.Student&quot;</span>);</span><br><span class="line">        Method[] declaredMethods = clz.getDeclareMethods();</span><br><span class="line">        <span class="keyword">for</span>(Method method :declareMethods)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line">            <span class="type">String</span> <span class="variable">returnType</span> <span class="operator">=</span> method.getReturnType().getSimpleName();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;method:&quot;</span>+methodName+<span class="string">&quot;,&quot;</span>+returnType);</span><br><span class="line">        &#125;</span><br><span class="line">        Constructor[] declaredConstructors = clz.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span>(Constructor constructor:declareConstructors)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> constructor.getName();</span><br><span class="line">            <span class="type">String</span> <span class="variable">returnType</span> <span class="operator">=</span> constructor.toGenericString();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;Constructor:&quot;</span>+methodName<span class="string">&quot;,&quot;</span>+returnType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> Student.class;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_study</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;study&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor_Student</span> <span class="operator">=</span> clz.getConstructor(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student)constructor_Student.newInstance(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;lisi&quot;</span>,<span class="number">25</span>&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_study.invoke(student,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">77</span>&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;study ret:&quot;</span>+(String) obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> one.getClass();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_getAge0</span> <span class="operator">=</span> clz.getDeclaredMethod(<span class="string">&quot;getAge&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;&#125;);</span><br><span class="line">        method_getAge0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//Method method_getAge = clz.getMethod(&quot;getAge&quot;,new Class[]&#123;&#125;); 只能获取public方法</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_getAge0.invoke(one,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;getAge ret:&quot;</span>+(<span class="type">int</span>) obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        e.printStaceTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.ndk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String studentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">studentAge</span> <span class="operator">=</span> <span class="number">22</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String studentName, <span class="type">int</span> studentAge)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentName = studentName;</span><br><span class="line">        <span class="built_in">this</span>.studentAge = studentAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String studentName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.studentName = studentName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">study</span><span class="params">(<span class="type">int</span> flag)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;name:&quot;</span> + studentName +<span class="string">&quot;,age:&quot;</span> + studentAge + <span class="string">&quot;,flag:&quot;</span> + flag);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;studyRet&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calaLength</span><span class="params">(String param)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> param.length();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> studentAge;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="NDK反射Java层"><a href="#NDK反射Java层" class="headerlink" title="NDK反射Java层"></a>NDK反射Java层</h4><p>含义：NDK（Native Development Kit）是用于在 C&#x2F;C++ 中编写代码并与 Java 层交互的工具集。在需要从 C&#x2F;C++ 层访问 Java 层的情况下，可以通过 JNI（Java Native Interface）来实现。</p><p>1、获取类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jclass <span class="title function_">GetObjectClass</span><span class="params">(对象)</span>;</span><br><span class="line">jclass <span class="title function_">FindClass</span><span class="params">(<span class="string">&quot;类名&quot;</span>)</span>;</span><br></pre></td></tr></table></figure><p>2、获取方法ID  (javap -s a.b.c.javareflection.Student获取签名)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jmethodID <span class="title function_">GetMethonID</span><span class="params">(jclass clazz, const <span class="type">char</span>*name, const <span class="type">char</span>*sig)</span>;</span><br><span class="line">jmethodID <span class="title function_">GetStaticMethodID</span><span class="params">(jclass clazz, const <span class="type">char</span>* name,const <span class="type">char</span>*sig)</span>;    </span><br></pre></td></tr></table></figure><p>3、调用方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">CallVoidMethod</span><span class="params">(jobject obj,jmethodID methodID,......)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">CallStaticVoidMethod</span><span class="params">(jclass clazz, jmethodID methoID,......)</span>;</span><br><span class="line">jobject <span class="title function_">CallObjectMethod</span><span class="params">(JNIEnv*,jobject,jmethodID,.......)</span>;</span><br></pre></td></tr></table></figure><p>4、获取和设置成员变量</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GetFieldID;</span><br><span class="line">GetObjectField;</span><br><span class="line">SetObjectField;</span><br></pre></td></tr></table></figure><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;callJavaFunFromJNI ret :&quot;</span>+callJavaFunFromJNI(one));</span><br><span class="line">Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;callJavaFunFromJNI ret :&quot;</span>+callStaticJavaFunFromJNI());</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">callJavaFunFromJNI</span><span class="params">(Student param)</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">callStaticJavaFunFromJNI</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>native-lib.cpp，部分代码</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jint JNICALL</span><br><span class="line">MainActivity.<span class="built_in">callJavaFunFromJNI</span>(JNIEnv *env, jobject thiz,jobject param)</span><br><span class="line">&#123;</span><br><span class="line">    jclass jclass_student = env-&gt;<span class="built_in">GetObjectClass</span>(param);</span><br><span class="line">    jclass jclass_student2 = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;a/b/c/ndk/Student&quot;</span>);</span><br><span class="line">    jmethoID jmethodID_study = env-?<span class="built_in">GetMethod</span>(jclass_student,<span class="string">&quot;study&quot;</span>,<span class="string">&quot;(I)Ljava/lang/String;&quot;</span>);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">34</span>;</span><br><span class="line">    jobject jobject_ret = env-&gt;<span class="built_in">CallObjectMethod</span>(param,jmethodid_study,flag);<span class="comment">//注意：不能直接传入值，要放个参数，否则会报错</span></span><br><span class="line">    <span class="type">char</span>* t = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFchars</span>((jstring)jobject_ret,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;ndk call study ret: %s&quot;</span>,t);</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL    </span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk_MainActivity_callStaticJavaFunFromJNI</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass jclass_student2 = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;a/b/c/ndk/Student&quot;</span>);</span><br><span class="line">    jmethoID jmethodId_calcLength = env-&gt;<span class="built_in">GetStaticMethodID</span>(jclass_student2,<span class="string">&quot;calcLength&quot;</span>,<span class="string">&quot;(Ljava/lang/String;)I&quot;</span>);</span><br><span class="line">    jstring jstring_param = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;hahahaha&quot;</span>);</span><br><span class="line">    jint jint_ret = env-&gt;<span class="built_in">CallStaticIntMethod</span>(jclass_student2,jmethodId_calcLength,jstring_param);</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;ndk call calcLength ret:%d&quot;</span>,jint_ret);</span><br><span class="line">    <span class="keyword">return</span> jstring_param;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="NDK反射获取包名"><a href="#NDK反射获取包名" class="headerlink" title="NDK反射获取包名"></a>NDK反射获取包名</h4><p>查看系统源码：<a href="http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java">http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java</a></p><p>native-lib.cpp，部分代码</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过反射获取整个应用的ActivityThread类，获取类里面的静态函数，这个函数返回的是ActivityThread的一个实例，通过这个实例调用成员函数，得到上下文</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_k02s10_MainActivity_getPkgName</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass cls_ActivityThread = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/app/ActivityThread&quot;</span>);</span><br><span class="line">    jmethodID jmethodId_currentActivityThread = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls_ActivityThread, <span class="string">&quot;currentActivityThread&quot;</span>, <span class="string">&quot;()Landroid/app/ActivityThread;&quot;</span>);</span><br><span class="line">    jobject ins_currentActivityThread = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls_ActivityThread, jmethodId_currentActivityThread);</span><br><span class="line"></span><br><span class="line">    jmethodID jmethodId_getApplication = env-&gt;<span class="built_in">GetMethodID</span>(cls_ActivityThread, <span class="string">&quot;getApplication&quot;</span>, <span class="string">&quot;()Landroid/app/Application;&quot;</span>);</span><br><span class="line">    jobject ins_mInitialApplication = env-&gt;<span class="built_in">CallObjectMethod</span>(ins_currentActivityThread, jmethodId_getApplication);</span><br><span class="line"></span><br><span class="line">    jclass cls_Application = env-&gt;<span class="built_in">GetObjectClass</span>(ins_mInitialApplication);</span><br><span class="line">    jmethodID jmethodId_getPackageName = env-&gt;<span class="built_in">GetMethodID</span>(cls_Application, <span class="string">&quot;getPackageName&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line">    jstring pkgName = (jstring)env-&gt;<span class="built_in">CallObjectMethod</span>(ins_mInitialApplication, jmethodId_getPackageName);</span><br><span class="line">    <span class="keyword">return</span> pkgName;</span><br><span class="line">&#125;                                  </span><br></pre></td></tr></table></figure><h4 id="动态注册JNI函数"><a href="#动态注册JNI函数" class="headerlink" title="动态注册JNI函数"></a>动态注册JNI函数</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* name;  <span class="comment">// Java 中调用本地方法的方法名</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* signature;  <span class="comment">// Java 方法的签名</span></span><br><span class="line">    <span class="type">void</span>* fnPtr;  <span class="comment">// 指向本地方法实现的函数指针</span></span><br><span class="line">&#125; JNINativeMethod;</span><br></pre></td></tr></table></figure><p>RegisterNatives</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 是 JNI（Java Native Interface）中的一个函数，用于注册本地方法（native methods）</span></span><br><span class="line"><span class="comment">//原型：</span></span><br><span class="line"><span class="function">JNIEXPORT jint JNICALL</span></span><br><span class="line"><span class="function"><span class="title">RegisterNatives</span><span class="params">(JNIEnv *env, jclass cls, <span class="type">const</span> JNINativeMethod *methods, jint nMethods)</span></span>;</span><br><span class="line">env：JNI 环境指针，通过它可以访问 JNI 提供的方法和功能。</span><br><span class="line">cls：要注册本地方法的 Java 类的 jclass 对象。</span><br><span class="line">methods：一个 JNINativeMethod 结构体数组，定义了要注册的本地方法。</span><br><span class="line">nMethods：要注册的本地方法的数量。</span><br></pre></td></tr></table></figure><p>GetEnv</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">jint result = vm-&gt;<span class="built_in">GetEnv</span>(&amp;env, JNI_VERSION_1_4);</span><br><span class="line"><span class="comment">/*vm 是一个 JavaVM* 类型的指针，代表了 Java 虚拟机。</span></span><br><span class="line"><span class="comment">&amp;env 是 JNIEnv* 类型指针的地址，通过传递 &amp;env，GetEnv 函数会将当前线程的 JNI 环境指针写入到 env 变量中。</span></span><br><span class="line"><span class="comment">JNI_VERSION_1_4 是希望使用的 JNI 版本。*/</span></span><br></pre></td></tr></table></figure><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">getPkgName2222</span><span class="params">()</span>;</span><br><span class="line">Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;jni22222 return:&quot;</span>+getPkgName2222());</span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">jstring <span class="title">getAAAA</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass cls_ActivityThread = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;android/app/ActivityThread&quot;</span>);</span><br><span class="line">    jmethodID jmethodId_currentActivityThread = env-&gt;<span class="built_in">GetStaticMethodID</span>(cls_ActivityThread, <span class="string">&quot;currentActivityThread&quot;</span>, <span class="string">&quot;()Landroid/app/ActivityThread;&quot;</span>);</span><br><span class="line">    jobject ins_currentActivityThread = env-&gt;<span class="built_in">CallStaticObjectMethod</span>(cls_ActivityThread, jmethodId_currentActivityThread);</span><br><span class="line"></span><br><span class="line">    jmethodID jmethodId_getApplication = env-&gt;<span class="built_in">GetMethodID</span>(cls_ActivityThread, <span class="string">&quot;getApplication&quot;</span>, <span class="string">&quot;()Landroid/app/Application;&quot;</span>);</span><br><span class="line">    jobject ins_mInitialApplication = env-&gt;<span class="built_in">CallObjectMethod</span>(ins_currentActivityThread, jmethodId_getApplication);</span><br><span class="line"></span><br><span class="line">    jclass cls_Application = env-&gt;<span class="built_in">GetObjectClass</span>(ins_mInitialApplication);</span><br><span class="line">    jmethodID jmethodId_getPackageName = env-&gt;<span class="built_in">GetMethodID</span>(cls_Application, <span class="string">&quot;getPackageName&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>);</span><br><span class="line">    jstring pkgName = (jstring)env-&gt;<span class="built_in">CallObjectMethod</span>(ins_mInitialApplication, jmethodId_getPackageName);</span><br><span class="line"></span><br><span class="line">    jstring ret = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot; from getAAAA!!!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm,<span class="type">void</span>* reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv* env = <span class="literal">NULL</span>;</span><br><span class="line">    jint restule = <span class="number">-1</span>;</span><br><span class="line">    vm-&gt;<span class="built_in">GetEnv</span>((<span class="type">void</span>**)(&amp;env),JNI_VERSION_1_4);</span><br><span class="line">    </span><br><span class="line">    JNINativeMethod methods[] = &#123;&#123;<span class="string">&quot;getPkgName2222&quot;</span>&#125;,<span class="string">&quot;()Ljava/lang/String;&quot;</span>,(<span class="type">void</span>*)getAAAA&#125;;</span><br><span class="line">    env-&gt;<span class="built_in">Register</span>(cls_MainActivity,methods,<span class="built_in">sizeof</span>(methods)/<span class="built_in">sizeof</span>(JNINativeMethod));</span><br><span class="line">    </span><br><span class="line">    result = JNI_VERSION_1_4;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--Binder</title>
      <link href="/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-Binder/"/>
      <url>/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-Binder/</url>
      
        <content type="html"><![CDATA[<h3 id="Binder"><a href="#Binder" class="headerlink" title="Binder"></a>Binder</h3><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>在清单中申请权限</p><p>application外</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.IINTERNET&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application内</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyService&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span>//<span class="attr">用于指定一个组件是否启用</span>（<span class="attr">可用</span>）。<span class="attr">它通常用于表明组件是否可以响应用户交互操作</span>，<span class="attr">如点击或者触摸等</span>。</span></span><br><span class="line"><span class="tag">    <span class="attr">android:process</span>=<span class="string">&quot;:server&quot;</span>&gt;</span>//android:process 是一个用于指定组件应该运行的进程名称的属性。</span><br><span class="line">在 Android 中，默认情况下，所有的组件（活动、服务、接收器等）都在应用的主进程中运行。这意味着它们共享同一个进程空间和资源。</span><br><span class="line">通过设置 android:process 属性，可以使得特定的组件在一个独立的进程中运行，而不是与主进程共享</span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.server.student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span>         </span><br></pre></td></tr></table></figure><p>MainActivity.java没有特别的代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>MyService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Binder</span> <span class="variable">mBinder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binder</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code,<span class="meta">@NonNull</span> Parcel data,<span class="meta">@Nullable</span> Parcel reply,<span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException<span class="comment">//表示在进行跨进程通信（IPC）时可能发生的异常情况。</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">/*code：这是一个整数参数，表示客户端请求的操作代码（或者称为事务码）。客户端和服务端之间的通信通过这个代码来区分不同的请求或操作。在客户端调用远程服务的方法时，通常会将一个特定的事务码作为参数传递给服务端，服务端在 onTransact 方法中根据这个事务码来确定具体要执行的操作。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">data：这是一个 Parcel 对象，用于在客户端和服务端之间传输数据。Parcel 是 Android 中用于高效传输数据的类，可以将对象序列化为字节流，然后在不同进程之间进行传递。在 onTransact 方法中，data 参数包含了客户端传递给服务端的请求数据和参数。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">reply：这也是一个 Parcel 对象，用于存储服务端向客户端返回的响应数据。在 onTransact 方法中，服务端可以通过修改 reply 对象来返回处理结果给客户端。客户端在调用远程方法后，会等待服务端处理完成并将结果填充到 reply 中，然后解析并处理返回结果。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">flags：</span></span><br><span class="line"><span class="comment">这是一个整数参数，用于指示当前事务的特性或标志。在 onTransact 方法中，flags 可以用来描述事务的一些额外信息，例如事务的方向（入站或出站）、是否需要将数据进行回复等。具体的标志值和含义可以根据具体的 IPC 使用场景而定，例如 FLAG_ONEWAY 表示单向通信，不需要返回结果。*/</span></span><br><span class="line">        <span class="keyword">if</span>(code == REQUEST_CODE)</span><br><span class="line">        &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readSting();<span class="comment">//readString() 是 Parcel 类提供的方法之一，用于在跨进程通信中读取字符串数据</span></span><br><span class="line">            <span class="type">ing</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">            <span class="keyword">if</span>(reply != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                reply.writeInt(age);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code,data,reply,flags);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,Integer&gt; info = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">23</span>);</span><br><span class="line">        info.put(<span class="string">&quot;lisi&quot;</span>,<span class="number">19</span>);</span><br><span class="line">        info.put(<span class="string">&quot;wangwu&quot;</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> info.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String name, <span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(name,age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>在清单中申请权限(application外)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permisson</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permissoin.INTERNET&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permisson</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">queries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.usebindrserver&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">queries</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;queries&gt; 元素是 Android 11（API 级别 30）引入的新特性，用于声明应用程序需要访问的其他应用程序的信息。它允许开发者在应用安装时就声明需要访问的其他应用程序，以便系统在运行时检查和控制访问权限。--&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    Button btn_bindService,btn_searchAge;</span><br><span class="line">    IBinder binder;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ServiceConnection</span> <span class="variable">serviceConnection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName,IBinder iBinder)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = IBinder;</span><br><span class="line"><span class="comment">/*componentName 参数：</span></span><br><span class="line"><span class="comment">ComponentName 对象用于表示你所连接的服务组件的名称。</span></span><br><span class="line"><span class="comment">它包含两部分信息：包名和类名，用于唯一标识服务组件。</span></span><br><span class="line"><span class="comment">你可以通过 componentName 参数获取到服务组件的详细信息，如输出日志或者进行其他逻辑处理。*/</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">bindRemoteService</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;android.intent.action.server.student&quot;</span>;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(action);</span><br><span class="line">        intnt.setPackage(<span class="string">&quot;a.b.c.usebinderserver&quot;</span>);<span class="comment">//setPackage 方法用于设置 Intent 的目标包名，即指定你希望发送这个 Intent 给哪个应用程序。</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="built_in">this</span>.bindService(intent,serviceConnection,BIND_AUTO_CREATE);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;bindRemoteService result:&quot;</span> + bt);    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = findViewById(R.id.tv_view);</span><br><span class="line">        btn_bindService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_searchAge = findViewById(R.btn_searchAge);</span><br><span class="line">        btn_bindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                bindRemoteService();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_searchAge.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;qqqq-client&quot;</span>,<span class="string">&quot;开始查询&quot;</span>);</span><br><span class="line">                getRemoteAge(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getRemoteAge</span><span class="params">(String name)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Parcel</span> <span class="variable">data</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">            <span class="type">Parcel</span> <span class="variable">reply</span> <span class="operator">=</span> Parce.obtain();<span class="comment">//注意下，Parcel对象也是通过.obtain()获得</span></span><br><span class="line">            data.wtiteString(name);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(binder == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                binder.transact(REQUEST_CODE,data,reply,<span class="number">0</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> reply.readInt();</span><br><span class="line">                tv.setText(<span class="string">&quot;年龄查询结果：&quot;</span>+age);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">            &#123;</span><br><span class="line">                ee.printStackTrace();</span><br><span class="line">                tv.setText(ee.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--sdcard &amp;&amp; Binder</title>
      <link href="/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-sdcard-Handler/"/>
      <url>/2024/07/20/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-sdcard-Handler/</url>
      
        <content type="html"><![CDATA[<h3 id="读写SDCard"><a href="#读写SDCard" class="headerlink" title="读写SDCard"></a>读写SDCard</h3><p>Android高版本不能使用http协议，需要在清单文件中添加(application内)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot;</span><br><span class="line"><span class="comment">&lt;!--这个属性用于指示应用是否允许使用明文网络流量，即未加密的网络请求，比如 HTTP 请求。--&gt;</span></span><br></pre></td></tr></table></figure><p>在清单文件里面申请使用网络权限、读SD卡的权限、写SD卡的权限、管理SD卡的权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.INTERNET&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.READ_EXTERNAL_STORAGE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.WRITE_EXTERNAL_STORAGE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permisson.MANAGE_EXTERNAL_STORAGE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> findViewById(R.id.tv_downloadResult);</span><br><span class="line">    tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">DownloadZip</span> <span class="variable">downloadZip</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DownloadZip</span>(tv);</span><br><span class="line">            downloadZip.execute(<span class="string">&quot;http:192.168.31.197/down/test/zip&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    findViedById(R.id.btn_startUnzip).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">((View view)</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">UnzipFile</span> <span class="variable">unzipFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UnzipFile</span>(tv);</span><br><span class="line">            unzipFile.execute(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;                                                      </span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DownloadZip.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadZip</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;String,String,String&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//AsyncTask是一个用于在后台线程中执行耗时操作（如网络请求、文件读写等）的类，同时允许你在操作完成后更新UI</span></span><br><span class="line">    <span class="comment">//Params（第一个String）：这是传递给execute()方法的参数的类型</span></span><br><span class="line">    <span class="comment">//Progress（第二个String）：这是onProgressUpdate()方法接收的进度更新信息的类型。</span></span><br><span class="line">    <span class="comment">//Result（第三个String）：这是doInBackground()方法执行完成后返回的结果的类型。</span></span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DownloadZip</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">doInBackground</span><span class="params">(String...String)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//doInBackground 方法是 AsyncTask 类中的一个关键方法，用于执行那些应该在后台线程中运行的耗时操作。</span></span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">httpURLConnection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//HttpURLConnection 是 Java 标准库中的一个类，用于处理 HTTP 请求和响应。它是 URLConnection 的一个子类，专门用于 HTTP 通信。</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//InputStream 是 Java 中的一个抽象类，用于表示字节输入流的所有类的超类。在文件下载的场景中，InputStream 用于从 HTTP 响应中读取数据。</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">outputStreamToFile</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//FileOutputStream 是 Java 标准库中的一个类，用于向文件写入数据。</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(string[<span class="number">0</span>]);</span><br><span class="line">            httpURLConnection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            httpURLConnection.connect();</span><br><span class="line">            <span class="keyword">if</span>(httpURLConnection.getResponseCode != HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                Log.d(<span class="string">&quot;DownloadZip&quot;</span>,<span class="string">&quot;nor error code&quot;</span> + httpURLConnection.getResponseCode());</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;code error&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            inputStream = httpURLConnection.getInputStream();</span><br><span class="line">            </span><br><span class="line">            <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS+<span class="string">&quot;/&quot;</span>+<span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                dir.mkdir</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">            <span class="keyword">if</span>(file.exists)</span><br><span class="line">            &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">            outputStreamToFile = <span class="keyword">new</span> <span class="title class_">File</span>(file.getAbsolutePath);</span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> count;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                count = inputStream.read(buffer);</span><br><span class="line">                <span class="keyword">if</span>(count == -<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                outputStreamFile.write(buffer,<span class="number">0</span>,count);</span><br><span class="line">            &#125;</span><br><span class="line">            outputStreamToFile.close();</span><br><span class="line">            ret = <span class="string">&quot;success&quot;</span>;</span><br><span class="line">                </span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">            ret = <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(inputStream !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(httpURLConnection !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    httpURLConnection.disconnect();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">            &#123;</span><br><span class="line">                ee.pringStackTrace;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(String s)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostExecute(s);</span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载success&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//rotected void onPostExecute(String s) 是一个通常在AsyncTask中重写的方法，用于在后台任务执行完毕后（即doInBackground方法完成后）在主线程（UI线程）上执行的操作。这里的参数String s是doInBackground方法返回的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UnzipFile.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnzipFile</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;String, String, String&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UnzipFile</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">doInBackground</span><span class="params">(String...strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ZipInputStream</span> <span class="variable">zipInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">           <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> +<span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">            <span class="keyword">if</span>(file.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">jieyaDir</span> <span class="operator">=</span> dir.getAbsolutePath();</span><br><span class="line">                inputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                zipInputStream = <span class="keyword">new</span> <span class="title class_">ZipInputStream</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(inputStream));</span><br><span class="line">                <span class="comment">//这是ZipInputStream类型的一个变量，用于引用新创建的ZipInputStream对象。之后，你可以使用这个变量来读取ZIP文件中的内容。</span></span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                ZipEntry zipEntry;</span><br><span class="line">                <span class="keyword">while</span>((zipEntry = zipInputStream.getNextEntry())!=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> zipEntry.getName();</span><br><span class="line">                    <span class="keyword">if</span>(zipEntry.isDirectory())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">subDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(jieyaDir + <span class="string">&quot;/&quot;</span> + fileName);</span><br><span class="line">                        subDir.mkdirs();</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">int</span> rCount;</span><br><span class="line">                    <span class="type">FileOutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(jieyaDir + <span class="string">&quot;/&quot;</span>+ fileName);</span><br><span class="line">                    <span class="keyword">while</span>((rCount = zipInputStream.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        fout.write(buffer,<span class="number">0</span>,rCount);</span><br><span class="line">                    &#125;</span><br><span class="line">                    fout.close();</span><br><span class="line">                    zipInputStream.closeEntry();</span><br><span class="line">                &#125;</span><br><span class="line">                zipInputStream.close();</span><br><span class="line">                ret = <span class="string">&quot;unzip success&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="string">&quot;file not exists&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   </span><br><span class="line">       &#125;<span class="keyword">catch</span>(Exception ee)</span><br><span class="line">       &#123;</span><br><span class="line">           ee.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">        <span class="meta">@Overrride</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(String s)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onPostExecute(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">&quot;unzip success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压失败&quot;</span>);</span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Handler"><a href="#Handler" class="headerlink" title="Handler"></a>Handler</h3><p>MainActivity，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler myHandler;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI01</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI02</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;02&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI03</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;03&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle saveInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savaInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">SubThreadCreateHandler</span> <span class="variable">subThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubThreadCreateHandler</span>();</span><br><span class="line">        subThread.start();</span><br><span class="line">        myHandler = <span class="keyword">new</span> <span class="title class_">MyHandler</span>(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//Handler handler = new Handler(Looper.getMainLooper())&#123;&#125;</span></span><br><span class="line">        <span class="comment">//Looper.getMainLooper() 是用来获取主线程的消息循环器（Looper）的静态方法。如果不显式指定消息循环器，它会默认获取主线程的消息循环器。</span></span><br><span class="line">        <span class="type">SubThreadCreateHandler</span> <span class="variable">subThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubThreadCreateHandler</span>();</span><br><span class="line">        subThread.start();</span><br><span class="line">        <span class="comment">//子线程用sendMessage给主线程发消息</span></span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(myHandler);</span><br><span class="line">        myThread.start();</span><br><span class="line">        <span class="comment">//子线程用post给主线程发消息</span></span><br><span class="line">        myHandler.post(<span class="keyword">new</span> <span class="title class_">Runnable</span>)()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">try</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">catch</span>(InterruptedException e)</span><br><span class="line">                    &#123;</span><br><span class="line">                        e.printStackTrace;</span><br><span class="line">                    &#125;</span><br><span class="line">                    updateUI01();</span><br><span class="line">                    updateUI02();</span><br><span class="line">                    tv.setText(<span class="string">&quot;i:&quot;</span>+i);</span><br><span class="line">                &#125;</span><br><span class="line">         <span class="comment">//使用 Handler 中的 post 方法，将一个 Runnable 对象提交到 Handler 所关联的消息队列中执行</span></span><br><span class="line">         <span class="comment">//这里的 myHandler 是一个 Handler 对象，通过 post 方法，将一个 Runnable 对象提交到 Handler 所关联的消息队列中。这个 Runnable 对象的 run 方法将会在主线程中执行</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//主线程做完事情后，把结果通过子线程的handler发送给子线程使用</span></span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">        message.what = <span class="number">99</span>;</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bunlde</span>();</span><br><span class="line">        bundle.putString(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这条内容先放入Bundle,然后通过Messsage传递&quot;</span>);</span><br><span class="line">        message.setData(bundle);</span><br><span class="line">        subThred.subHandler.sendMessage(meassage);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyHandler</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span>(MainActivity pMainActivity)</span><br><span class="line">&#123;</span><br><span class="line">    mainActivity = pMainActivity;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NoNull</span> Message msg)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">    Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;in handleMessage&quot;</span>);</span><br><span class="line">    <span class="keyword">switch</span>(msg.what)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI01();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI02();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mianActivity.updateUI03();</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyThread.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler mh;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mh)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mh = mh;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.run();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();<span class="comment">//这里创建Message对象是用.obtain();</span></span><br><span class="line">            message.what = i;</span><br><span class="line">            mh.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SubThreadCreateHandler.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubThreadCreateHandler</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> SubHandler subHandler;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubHandler</span> (Looper myLooper)&#123;&#125;</span><br><span class="line">        <span class="meta">@Override</span> </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;in subHandler&quot;</span>);</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">data</span> <span class="operator">=</span> msg.getData();</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;get String:&quot;</span>+data.getString(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.run();</span><br><span class="line">            Looper.prepare();<span class="comment">//Looper.prepare() 方法用于为当前线程创建一个消息循环器（Looper）</span></span><br><span class="line">            subHandler = <span class="keyword">new</span> <span class="title class_">SubHandler</span>(Looper.myLooper());</span><br><span class="line">            <span class="comment">//subHandler 是一个 SubHandler 对象，通过 new SubHandler(Looper.myLooper()) 创建。这里的 Looper.myLooper() 表示获取当前线程的消息循环器，然后将其作为参数传递给 SubHandler 的构造函数。</span></span><br><span class="line">            Looper.loop();<span class="comment">//Looper.loop() 是一个无限循环，它开始运行消息循环。</span></span><br><span class="line">            </span><br><span class="line">      </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android开发基础总结--四大组件</title>
      <link href="/2024/07/19/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/"/>
      <url>/2024/07/19/Android%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="认识安卓四大组件"><a href="#认识安卓四大组件" class="headerlink" title="认识安卓四大组件"></a>认识安卓四大组件</h2><h3 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h3><h4 id="创建一个新的界面的步骤"><a href="#创建一个新的界面的步骤" class="headerlink" title="创建一个新的界面的步骤"></a>创建一个新的界面的步骤</h4><p>1、通过Intent启动</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,SubActivity02.class)</span><br></pre></td></tr></table></figure><p>2、新的界面绑定.xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_sub02)</span><br></pre></td></tr></table></figure><p>3、清单文件注册新的Activity</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SubActivity02&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、新的Activity要继承Activity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity02</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br></pre></td></tr></table></figure><h4 id="Activity界面切换"><a href="#Activity界面切换" class="headerlink" title="Activity界面切换"></a>Activity界面切换</h4><p>1、老方法(通过复写onActivityResult函数来接受返回结果)，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, <span class="meta">@Nullable</span> Intent data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="keyword">if</span>(data == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(resultCode == requestCode &amp;&amp; requestCode == <span class="number">234</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;key1&quot;</span>);</span><br><span class="line">        Log.i(<span class="string">&quot;This is ret&quot;</span>,ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">&#123;</span><br><span class="line">    btn_start = findViewById(R.id.btn_startActivity);</span><br><span class="line">    btn_start.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.onClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);</span><br><span class="line">            stratActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity03.class);</span><br><span class="line">        startActivityForResult(intent, <span class="number">234</span>);<span class="comment">//234是请求码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、新方法接受返回结果(通过ActivityResultLauncher)，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ActivityReustltLauncher</span> <span class="variable">launcher</span> <span class="operator">=</span> registerForActivity(<span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(), <span class="keyword">new</span> <span class="title class_">ActivityResultCallback</span>&lt;Activity&gt;()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(ActivityResult result)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(lotTag, result.getData().getStringExtra(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    btn_startForResult = findViewById(R.id.btn_startActivityGetResult);</span><br><span class="line">    btn_saartForResult.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListerer()&#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity03);</span><br><span class="line">        launcher.launch(intent);</span><br><span class="line">    &#125;);                                                      </span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/*ActivityResultLauncher 和 registerForActivityResult:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ActivityResultLauncher 是一个接口，用于启动目标活动并接收其结果。</span></span><br><span class="line"><span class="comment">registerForActivityResult 是一个新的方法，用于注册一个能够处理特定结果的 ActivityResultLauncher 实例。它接受两个参数：</span></span><br><span class="line"><span class="comment">第一个参数是一个 ActivityResultContract 的实例，用于指定要执行的操作类型。在这里使用的是 ActivityResultContracts.StartActivityForResult()，表示注册一个能够处理 startActivityForResult 操作的 launcher。</span></span><br><span class="line"><span class="comment">第二个参数是一个 ActivityResultCallback&lt;ActivityResult&gt; 的实例，用于处理从目标活动返回的结果。</span></span><br><span class="line"><span class="comment">onActivityResult 方法:</span></span><br><span class="line"><span class="comment">这是注册的 ActivityResultCallback 的实现部分。</span></span><br><span class="line"><span class="comment">当目标活动返回结果时，系统将调用 onActivityResult 方法，并传递一个 ActivityResult 对象作为参数。</span></span><br><span class="line"><span class="comment">在这里，通过 result.getData().getStringExtra(&quot;key1&quot;) 获取从目标活动返回的数据中名为 &quot;key1&quot; 的字符串数据，并将其记录到日志中。*/</span></span><br></pre></td></tr></table></figure><p>SubActivity03.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity03</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br><span class="line">&#123;</span><br><span class="line">    TestView tv;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="built_in">super</span>.onCreate(savadInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_03);</span><br><span class="line">    tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickerListener()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">            intent.setClass(SubActivity03.<span class="built_in">this</span>, MainActivity.class);</span><br><span class="line">            intent.putExtra(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这是结果1，来自SubActivity03&quot;</span>);</span><br><span class="line">            setResult(<span class="number">234</span>, intent);</span><br><span class="line">            SunActivity03.<span class="built_in">this</span>.finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p>1、通过startService、stopService，部分代码</p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyService01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_startService = findViewById(R.id.btn_startService);</span><br><span class="line">btn_startService.setOnClickeListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">            startService(intent);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;);</span><br><span class="line">btn_stopService = findViewById(R.id.btn_stopService);</span><br><span class="line">btn_stopService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickLintener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">            stopService(intent);</span><br><span class="line">        &#125;                                    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2、通过bindService和unbindService，部分代码</p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyBindService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ServiceConnection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iBinder <span class="keyword">instanceof</span> MyBindService.MyBinder)</span><br><span class="line">        &#123;</span><br><span class="line">            myBinder = (MyBinderService.MyBinder)iBinder;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(logTag,<span class="string">&quot;onServiceDisconnected&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//componentName 参数表示成功绑定的服务的组件名称</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">btn_bindService = findViewBtId(R.id.btn_bindService);</span><br><span class="line">btn_binService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyBindService.class);</span><br><span class="line">           bindService(intent, conn, Context.BIND_AUTO_CREATE);</span><br><span class="line">       <span class="comment">//Context.BIND_AUTO_CREATE 是一个标志位，表示如果Service还未创建，则在绑定时会自动创建它。</span></span><br><span class="line">       &#125;                              </span><br><span class="line">&#125;);</span><br><span class="line">btn_unBindService = findViewById(R.id.btn_unbindService);</span><br><span class="line">btn_unBindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                unbindService(conn);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//在Android开发中，绑定Service和解绑Service通常需要成对使用，确保在不需要与Service通信时及时解绑，避免资源浪费或内存泄漏。</span></span><br><span class="line">        <span class="comment">//如果未绑定Service就调用 unbindService(conn)，会引发异常，因此通常在执行解绑操作之前需要先确认是否已经绑定了Service</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>MyBindService，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBindService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">logTag</span> <span class="operator">=</span> <span class="string">&quot;qqqqqqqq&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyBinder</span> <span class="variable">binder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyBinder</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyBinder</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(logTag,<span class="string">&quot;in MyBinder&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> MyBinderService <span class="title function_">getServiceBinder</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> MyBinderService.<span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onCreate;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onDertroy;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Nullable</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> binder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onUnbind</span><span class="params">(Intent intent)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(logTag, <span class="string">&quot;onUnbind&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onUnbind(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BroadcastReceiver介绍"><a href="#BroadcastReceiver介绍" class="headerlink" title="BroadcastReceiver介绍"></a>BroadcastReceiver介绍</h3><h4 id="静态注册"><a href="#静态注册" class="headerlink" title="静态注册"></a>静态注册</h4><p>无序广播</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.MyReceiver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--android:exported=&quot;false&quot; 指定了该接收器是否能被其他应用组件调用或者是从外部调用。false 表示这个接收器仅对自己的应用可见，其他应用无法直接调用它。--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;intent-filter&gt; 标签定义了接收器可以处理的广播意图（Intent）过滤器。&lt;action&gt; 标签用于指定接收器要处理的广播动作（Action）。在这个例子中，动作名称是 &quot;golvRuleaaa&quot;。这表示接收器只会对发送这个特定动作的广播进行处理。--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有序广播(设置优先级)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver01&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exprted</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="动态注册-在MainActivity中"><a href="#动态注册-在MainActivity中" class="headerlink" title="动态注册(在MainActivity中)"></a>动态注册(在MainActivity中)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceive01</span>();</span><br><span class="line"><span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceive02</span>();</span><br><span class="line"><span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line"><span class="type">IntentFileter</span> <span class="variable">intentFileter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">intentFliter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver02, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver03, intentFilter);</span><br></pre></td></tr></table></figure><p>有序广播和无序广播，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_sendBroadcast = findViewById(R.id.btn_broadcast);</span><br><span class="line">btn_sendBroadcast = setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyReceiver.class);</span><br><span class="line">            intent.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">            intent.putRxtra(<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;这是无序广播的内容1&quot;</span>);</span><br><span class="line">            sendBroadcast(intent);</span><br><span class="line">        &#125;                                    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line"><span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line"><span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line"><span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">intentFilter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver02, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver03, intentFilter);</span><br><span class="line">btn_orderBroadcast = findViewById(R.id.btn_orderBroadcast);</span><br><span class="line">btn_orderBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnCLickListener)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent.setAction = <span class="string">&quot;guolvRuleaaa&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;这是原始数据&quot;</span>;</span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">extData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        sendOrderedBroadcast(intent, <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">MyReceiver</span>(),<span class="literal">null</span>,<span class="number">0</span>,data,extData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sendOrderedBroadcast共有8个参数</span></span><br><span class="line"><span class="comment">/*1、Intent intent：</span></span><br><span class="line"><span class="comment">表示要发送的广播的意图（Intent）。这个意图描述了广播的动作（Action）、数据（Data）、类别（Category）等信息。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">2、String receiverPermission：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定接收者（Broadcast Receiver）的权限。如果指定了权限，则只有持有相同权限的接收者才能接收到这个广播。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">3、BroadcastReceiver resultReceiver：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，表示最终接收广播结果的 BroadcastReceiver。如果为 null，则系统会忽略这个参数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4、Handler scheduler：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定接收者接收广播的消息队列。如果为 null，则系统会使用当前线程的消息队列来处理广播接收者。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">5、int initialCode：</span></span><br><span class="line"><span class="comment">这是一个整型参数，用于指定初始的广播接收者接收到的初始代码值。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">6、String initialData：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，表示初始广播接收者接收到的初始数据。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">7、Bundle initialExtras：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定初始广播接收者接收到的初始扩展数据（Extras）。</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">8、String[] initialPermissions：</span></span><br><span class="line"><span class="comment">这是一个可选的参数，用于指定初始广播接收者接收到的初始权限。*/</span></span><br></pre></td></tr></table></figure><p>OrderReceiver01.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver01</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver01,&quot;</span>,<span class="string">&quot;接收到内容&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被OrderReceive01修改&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderReceiver02.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver02</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;guolvRuleaaa&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver02&quot;</span>,<span class="string">&quot;接收到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被OrderReceiver02修改&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderReceiver03.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver03</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver03&quot;</span>,<span class="string">&quot;接收到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被OrderReceiver03修改&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Content-Provider"><a href="#Content-Provider" class="headerlink" title="Content Provider"></a>Content Provider</h3><p>在数据库的清单中申请创建权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">permisson</span> <span class="attr">android:name</span>=<span class="string">&quot;myDB.permisson&quot;</span> <span class="attr">android:protectionLevel</span>=<span class="string">&quot;normal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">permisson</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在要使用该数据库的Moudle的清单文件中申请使用权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDB.permission&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java，部分代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;content://a.b.c.db.authority/user&quot;</span>);</span><br><span class="line"><span class="comment">//Uri.parse() 是 Uri 类的静态方法，用于将字符串表示的 URI 解析为 Uri 对象</span></span><br><span class="line">btn_add = findViewById(R.id.btn_add);</span><br><span class="line">btn_add.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(<span class="string">&quot;uid&quot;</span>,uid++);</span><br><span class="line">        valuse.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;hyq&quot;</span>);</span><br><span class="line">        valuse.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">        values.put(<span class="string">&quot;score&quot;</span>,<span class="number">78</span>);</span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">        contentResolver.insert(uri,values);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">btn_del = findViewById(R.id.btn_del);</span><br><span class="line">btn_del.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnclickListener()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">            <span class="type">int</span> <span class="variable">delCount</span> <span class="operator">=</span> contentResolver.delete(uri,<span class="string">&quot;uid&gt;?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;4&quot;</span>&#125;);</span><br><span class="line">            <span class="keyword">if</span>(delCount &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(logTag,<span class="string">&quot;del Count:&quot;</span> + delCount);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用 getContentResolver() 获取到 ContentResolver 实例后，调用其 delete 方法时，它会根据提供的 Uri 找到匹配的 ContentProvider，然后调用该 ContentProvider 中定义的 delete 方法来执行删除操作。这个过程是通过 Android 系统内部的内容提供器机制来实现的。</span></span><br><span class="line">&#125;);</span><br><span class="line">btn_update = findViewById(R.id.btn_update);</span><br><span class="line">btn_update.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ContentValues values= <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        vlaues.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">        <span class="type">ing</span> <span class="variable">updateCount</span> <span class="operator">=</span> contentResolver.update(uri,values,<span class="string">&quot;uid=?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;3&quot;</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span>(updateCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;update Count&quot;</span>+updateCount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;                              </span><br><span class="line">&#125;);</span><br><span class="line">btn_search = findViewById(R.id.btn_search);</span><br><span class="line">btn_search = setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contetnResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursr</span> <span class="operator">=</span> contentResolver.query(uri,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;uid&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;score&quot;</span>&#125;,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span>(cursor == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(cursor.moveToNext())</span><br><span class="line">        &#123;</span><br><span class="line">             <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span>                              cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;uid&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;age&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> score= cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;score&quot;</span>));</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;uid=&quot;</span>+uid+<span class="string">&quot;,name=&quot;</span>+name+<span class="string">&quot;,age=&quot;</span>+age+<span class="string">&quot;,score=&quot;</span>+score);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*contentResolver.query(uri, ...)：</span></span><br><span class="line"><span class="comment">contentResolver 是通过 getContentResolver() 方法获取的 ContentResolver 实例，用于与应用程序中的内容提供器进行通信。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">query(uri, ...) 是 ContentResolver 提供的方法，用于执行查询操作。</span></span><br><span class="line"><span class="comment">uri：</span></span><br><span class="line"><span class="comment">uri 是一个统一资源标识符（URI），用于指定要查询的数据集合的位置和结构。在 Android 中，每个内容提供器都有一个唯一的 URI，用于访问其数据。在你的代码中，uri 可能是你在 MainActivity 中定义的某个位置的 URI，用于访问特定的数据表或者特定的数据集合。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">new String[]&#123;&quot;uid&quot;, &quot;name&quot;, &quot;age&quot;, &quot;score&quot;&#125;：</span></span><br><span class="line"><span class="comment">这部分定义了要返回的列集合，即投影。在查询结果中，只会包含这些列的数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">null, null, null：</span></span><br><span class="line"><span class="comment">这三个 null 分别代表查询的选择条件 (selection 参数，类似 SQL 中的 WHERE 子句)，选择条件参数 (selectionArgs 参数)，以及查询结果的排序方式 (sortOrder 参数)。</span></span><br><span class="line"><span class="comment">在这里，它们都是 null，表示查询将返回指定表格的所有数据，没有额外的筛选条件或排序要求。*/</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>DBHelper.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DBHelper</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DBNAME</span> <span class="operator">=</span> <span class="string">&quot;myDbName.db&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">VERSION</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_USER</span> <span class="operator">=</span> <span class="string">&quot;user&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DBHelper</span><span class="params">(<span class="meta">@Nullable</span> Contextt context, <span class="meta">@Nullable</span> String name, <span class="meta">@Nullable</span> SQLiteDatabase.CursorFactory factory, <span class="type">int</span> version)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, DBNAME,factory, VERSION);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStr</span> <span class="operator">=</span> <span class="string">&quot;create table if not exits &quot;</span> + TABLE_USER +</span><br><span class="line">            <span class="string">&quot;(uid INTERGER PRIMARY KEY AUTOINCREMENT,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;name VARCHAR(30),&quot;</span>+</span><br><span class="line">            <span class="string">&quot;age INTERGER,&quot;</span>+</span><br><span class="line">            <span class="string">&quot;score DOUBLE)&quot;</span>;</span><br><span class="line">        <span class="comment">//注意一定要加空格，否则会出错</span></span><br><span class="line">        sqLiteDatabase.execSQL(sqlStr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase,<span class="type">int</span> i,<span class="type">int</span> i1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyProvider.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyProvider</span> <span class="keyword">extends</span> <span class="title class_">ContentProvider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AUTHORITY_PROVIDER</span> <span class="operator">=</span> <span class="string">&quot;a.b.c.db2.authority&quot;</span>;<span class="comment">//定义了内容 提供器的授权信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CODE_PROVIDER_USER</span> <span class="operator">=</span> <span class="number">11</span>;<span class="comment">//用于标识用户表格的 Uri 匹配码</span></span><br><span class="line">    <span class="keyword">private</span> DBHelper dbHelper;</span><br><span class="line">    <span class="keyword">private</span> SqLiteDatabase db;</span><br><span class="line">    uriMatcher = <span class="keyword">new</span> <span class="title class_">UriMatcher</span>(UriMather.NO_MATCH);<span class="comment">//UriMatcher.NO_MATCH 表示没有匹配时的返回值</span></span><br><span class="line">    uriMatcher.addURI(AUTHRITY_PROVIDER,DBHelper.TABLE_USER,CODE_PROVIDER_USER);</span><br><span class="line">    <span class="comment">//addURI(AUTHRITY_PROVIDER, DBHelper.TABLE_USER, CODE_PROVIDER_USER) 将指定的授权和路径模式与匹配码关联起来。在这里，AUTHRITY_PROVIDER 是授权信息，DBHelper.TABLE_USER 是表格名，CODE_PROVIDER_USER 是匹配码。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dbHelper = <span class="keyword">new</span> <span class="title class_">DBHelper</span>(getContext(),<span class="string">&quot;&quot;</span>,<span class="literal">null</span>,<span class="number">1</span>);</span><br><span class="line">        db = dbHelper.getWritableDatabase();</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(1,&#x27;张三&#x27;,19,87)&quot;</span> );</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(2,&#x27;李四&#x27;,18,87)&quot;</span> );</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//onCreate 方法在内容提供器创建时调用。返回 false，表示内容提供器的初始化失败。通常应该在这里进行初始化操作，并返回相应的结果。</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] strings, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] string1, <span class="meta">@Nullable</span> String s1)</span><span class="comment">//@NonNull Uri uri 是一个在Java或Kotlin中常见的注解语法，用于表示参数 uri 不应为 null</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"><span class="comment">/*Uri uri：表示要查询的数据的 URI（统一资源标识符）。</span></span><br><span class="line"><span class="comment">String[] strings：表示查询中的投影列（要返回的列）。</span></span><br><span class="line"><span class="comment">String s：表示查询中的选择条件（类似 SQL 中的 WHERE 子句）。</span></span><br><span class="line"><span class="comment">String[] strings1：表示查询中的选择条件参数（用于替换选择条件中的占位符）。</span></span><br><span class="line"><span class="comment">String s1：表示查询结果的排序方式（类似 SQL 中的 ORDER BY 子句）。*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(<span class="meta">@NonNull</span> Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTableName</span><span class="params">(Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(uriMatcher.match(uri)==CODE_PROVIDER_USER)</span><br><span class="line">        &#123;</span><br><span class="line">            tableName = DBHelper.TABLE_USER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tableName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentvalues)</span></span><br><span class="line">    &#123;<span class="comment">//@Nullable ContentValues contentValues：包含要插入的数据的键值对。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tablename))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">insetCount</span> <span class="operator">=</span> db.insert(tableName,<span class="literal">null</span>,contentValues);</span><br><span class="line">        <span class="keyword">if</span>(inserCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;insert ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;insert fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@NonNUll</span> Uri uri, <span class="meta">@Nullabe</span> String s, <span class="meta">@Nullable</span> String[] strings)</span><span class="comment">/*NonNull Uri uri：用于指定要操作的数据的 URI。</span></span><br><span class="line"><span class="comment">@Nullable String s：表示删除操作的选择条件（类似 SQL 中的 WHERE 子句）。</span></span><br><span class="line"><span class="comment">@Nullable String[] strings：表示删除操作的选择条件参数（用于替换选择条件中的占位符）*/</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">deleteCount</span> <span class="operator">=</span> db.delete(tableName,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(deleteCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;delete ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;delete fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deleteCOunt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentValues,<span class="meta">@Nullabel</span> String s,<span class="meta">@Nullable</span> String[] strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateCount</span> <span class="operator">=</span> db.update(tableName,contentValues,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(updateCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;update ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;upadte fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> updateCount;            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础6--NDK编程1</title>
      <link href="/2024/07/18/Android%E5%9F%BA%E7%A1%806-NDK%E7%BC%96%E7%A8%8B1/"/>
      <url>/2024/07/18/Android%E5%9F%BA%E7%A1%806-NDK%E7%BC%96%E7%A8%8B1/</url>
      
        <content type="html"><![CDATA[<h4 id="Android项目中创建Library模块"><a href="#Android项目中创建Library模块" class="headerlink" title="Android项目中创建Library模块"></a>Android项目中创建Library模块</h4><p>步骤：项目名称右键-&gt;New-&gt;Moudle-&gt;Android Library</p><p>编译：</p><p>编译单独模块：选中模块-&gt;Build-&gt;Make Moudle</p><p>旧版本产出位置：模块\build\intermediates\packaged-classed\debug\</p><p>新版本产出位置：模块\build\intermediates\arr_main_jar\debug\</p><h4 id="使用Android-SDK中的dx工具生成"><a href="#使用Android-SDK中的dx工具生成" class="headerlink" title="使用Android SDK中的dx工具生成"></a>使用Android SDK中的dx工具生成</h4><p>dx位置：AndroidSDK根目录\build-tools\28.0.3\dx.bat</p><p>用法：dx.bat–dex–output&#x3D;xx srcDir</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set filename=test2.jar</span><br><span class="line">set srcDir=D:\__job\study20230717-pkgJar\pkgJarForLoad\mylibrary1\build\intermediates\aar_main_jar\debug\</span><br><span class="line">set dx=&quot;D:\Android SDK\build-tools\34.0.0\d8.bat&quot;</span><br><span class="line">del  out\%filename%</span><br><span class="line">call %dx% --dex --output=out\%filename%  %srcDir%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h4 id="使用gradlew生成"><a href="#使用gradlew生成" class="headerlink" title="使用gradlew生成"></a>使用gradlew生成</h4><p>模块内build.gradle添加：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">task makeJar(type:Copy)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">//删除旧的jar</span><br><span class="line"></span><br><span class="line">delete &#x27;build/libs/test.jar&#x27;</span><br><span class="line"></span><br><span class="line">//设置源.jar目录</span><br><span class="line"></span><br><span class="line">from(&#x27;build/intermediates/arr_main_jar/release&#x27;)</span><br><span class="line"></span><br><span class="line">//设置产出目录</span><br><span class="line"></span><br><span class="line">into(&#x27;build/libs/&#x27;)</span><br><span class="line"></span><br><span class="line">//设置源目录内文件过滤</span><br><span class="line"></span><br><span class="line">include(&#x27;classes.jar&#x27;)</span><br><span class="line"></span><br><span class="line">//重命名</span><br><span class="line"></span><br><span class="line">rename(&#x27;classes.jar&#x27;,&#x27;test.jar)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目根目录执行Ctrl+Enter:</p><p>gradlew makeJar</p><h4 id="NDK编程"><a href="#NDK编程" class="headerlink" title="NDK编程"></a>NDK编程</h4><p>创建NDK项目及JNI函数</p><p>创建NDK项目：</p><p>1、下载ndk</p><p>2、创建so项目</p><p>NDK（Native Development Kit）是Android提供的一个工具集，允许开发者使用C或C++等本地语言编写部分Android应用的代码，并通过JNI（Java Native Interface）与Java代码进行交互。NDK主要用于提高应用程序的性能、复用现有的本地代码库以及访问设备硬件等功能</p><p>创建JNI函数</p><p>1、函数命名规则</p><p>2、参数</p><p>JNI（Java Native Interface）是Java提供的一种机制，用于实现Java代码与本地（Native）代码（如C、C++等）之间的交互和通信。它允许Java应用程序调用本地方法（Native Method），也允许本地方法调用Java代码。</p><h4 id="函数签名"><a href="#函数签名" class="headerlink" title="函数签名"></a>函数签名</h4><p>作用：函数的身份证</p><p>方法：javap -s a.b.cjavareflection.Student获取签名</p><p>例子(  descriptor: (Ljava&#x2F;lang&#x2F;String;DJ)I)</p><h4 id="读写SD卡文件"><a href="#读写SD卡文件" class="headerlink" title="读写SD卡文件"></a>读写SD卡文件</h4><p>权限：静态申请权限、动态申请权限、检查自己权限</p><p>读取文件：fopen、fgets、fput、fclose</p><p>MainActivity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.ndk01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.PackageManagerCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.ndk01.databinding.ActivityMainBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">MY_PERMISSIONS_REQUEST_WRITE_CODE</span> <span class="operator">=</span> <span class="number">11</span>;</span><br><span class="line">    <span class="comment">// Used to load the &#x27;ndk01&#x27; library on application startup.</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;ndk01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">testFun</span><span class="params">(String a,Double b,<span class="type">long</span> c)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionsResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="type">int</span>[] grantResults)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="keyword">switch</span>(requestCode)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> MY_PERMISSIONS_REQUEST_WRITE_CODE:</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;写SDCard权限申请成功&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;写SDCard权限申请失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">33</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;这里是申请其他权限的结果&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">        testFun(<span class="string">&quot;aa&quot;</span>,<span class="number">4.5</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Example of a call to a native method</span></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> binding.sampleText;</span><br><span class="line">        tv.setText(stringFromJNI());</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> ContextCompat.checkSelfPermission(MainActivity.<span class="built_in">this</span>, Manifest.permission.WRITE_EXTERNAL_STORAGE);<span class="comment">// ContextCompat这里选Android</span></span><br><span class="line">                <span class="keyword">if</span>(ret == PackageManager.PERMISSION_GRANTED)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;已经有写SDCar的权限&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fp1</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fc</span> <span class="operator">=</span> readSDcardFile(fp1+<span class="string">&quot;b.txt&quot;</span>);</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;文件内容&quot;</span> + fc);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;qqqqqq&quot;</span>,<span class="string">&quot;还没有写SDCar的权限&quot;</span>);</span><br><span class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="built_in">this</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,MY_PERMISSIONS_REQUEST_WRITE_CODE);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * A native method that is implemented by the &#x27;ndk01&#x27; native library,</span></span><br><span class="line"><span class="comment">     * which is packaged with this application.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">stringFromJNI</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">getlength</span><span class="params">(String param)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">readSDcardFile</span><span class="params">(String filepath)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.Ndk01&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jni.h</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">extern <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line"><span class="title function_">Java_a_b_c_ndk01_MainActivity_readSDcardFile</span><span class="params">(JNIEnv *env, jobject thiz, jstring filepath)</span> ;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement readSDcardFile()</span></span><br></pre></td></tr></table></figure><p>native-lib.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk01_MainActivity_readSDcardFile</span><span class="params">(JNIEnv *env, jobject thiz, jstring filepath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span>* filePath = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFChars</span>(filepath,<span class="number">0</span>);</span><br><span class="line">    FILE *fp;</span><br><span class="line">    jstring jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">    <span class="type">char</span> *tmp = (<span class="type">char</span>*)env-&gt;<span class="built_in">GetStringUTFChars</span>(jstring_ret,<span class="number">0</span>);</span><br><span class="line">    fp = <span class="built_in">fopen</span>(filePath,<span class="string">&quot;r&quot;</span>);<span class="comment">//&quot;r&quot;：只读模式，文件必须存在。</span></span><br><span class="line">    <span class="keyword">if</span>(fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGE</span>(<span class="string">&quot;fp == NULL, %s&quot;</span>,filePath);</span><br><span class="line">        <span class="keyword">return</span> jstring_ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fgets</span>(buff,<span class="number">1024</span>,fp)!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">LOGI</span>(<span class="string">&quot;fgets :%s&quot;</span>,buff)</span><br><span class="line">    &#125;</span><br><span class="line">    env-&gt;<span class="built_in">ReleaseStringChars</span>(jstring_ret,<span class="built_in">reinterpret_cast</span>&lt;<span class="type">const</span> jchar*&gt;(tmp));</span><br><span class="line">    jstring_ret = env-&gt;<span class="built_in">NewStringUTF</span>(buff);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JNI-签名规则"><a href="#JNI-签名规则" class="headerlink" title="JNI 签名规则"></a>JNI 签名规则</h3><p>在JNI中，方法签名采用一种特定的格式，用于描述Java方法的参数类型和返回值类型。格式为：</p><ul><li>参数类型：<ul><li><code>Z</code>：boolean</li><li><code>B</code>：byte</li><li><code>C</code>：char</li><li><code>S</code>：short</li><li><code>I</code>：int</li><li><code>J</code>：long</li><li><code>F</code>：float</li><li><code>D</code>：double</li><li><code>Lfully/qualified/ClassName;</code>：对象类型，如 <code>Ljava/lang/String;</code></li><li><code>[Type</code>：数组类型，如 <code>[I</code> 表示 <code>int[]</code></li><li><code>(</code> 和 <code>)</code>：分别用于标识方法的开始和结束</li></ul></li></ul><h4 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h4><p>作用：获取和操作已经装载的类。</p><p>函数：</p><p>1、获取类：</p><p>1.1Class.forName(“类名全路径”)  1.2类名.class c  1.3实例.getClass()</p><p>2、获取方法和属性：</p><p>2.1 类.getDeclareMethods() 2.2类.getDeclaredConstructors()  2.3类.getMethod()  2.4类.getDeclaredFields()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> Student.class;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_study</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;study&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor_Student</span> <span class="operator">=</span> clz.getConstructor(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,<span class="type">int</span>.class&#125;);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) constructor_Student.newInstance(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;lisi&quot;</span>,<span class="number">25</span>&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_study.invoke(student,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">77</span>&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqqq&quot;</span>,<span class="string">&quot;study ret:&quot;</span> + (String) obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">    &#123;</span><br><span class="line">        ee.printStackTrace();</span><br></pre></td></tr></table></figure><p>3、调用方法:</p><p>3.1方法.invoke()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fun3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clz</span> <span class="operator">=</span> one.getClass();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_getAge0</span> <span class="operator">=</span> clz.getDeclaredMethod(<span class="string">&quot;getAge&quot;</span>);</span><br><span class="line">        method_getAge0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method_getAge</span> <span class="operator">=</span> clz.getMethod(<span class="string">&quot;getAge&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;&#125;);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj_ret</span> <span class="operator">=</span> method_getAge.invoke(one,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;&#125;);</span><br><span class="line">        Log.i(<span class="string">&quot;qqqqqqq&quot;</span>,<span class="string">&quot;getAge ret&quot;</span>+(<span class="type">int</span>)obj_ret);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">    &#123;</span><br><span class="line">        ee.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="NDK反射Java层"><a href="#NDK反射Java层" class="headerlink" title="NDK反射Java层"></a>NDK反射Java层</h4><p>作用：NDK层代码可以获取、调用java层方法和变量</p><p>函数：</p><p>1、获取类：</p><p>1.1jclass GetObjectClass(对象)  1.2jclass FindClass(“类名”)</p><p>2、获取方法ID:(javap -s a.b.c.javareflectiontest.Student获取签名)</p><p>2.1jmetthodID GetMethodID(jclass,const char*name,const char(sig))</p><p>2.2jmethodID GetstaticMethodID(jclass clazz,const char*name,const char(sig))</p><p>3、调用方法：</p><p>3.1void CallVoidMethod(jobject obj,jmethodID,methodID,…)</p><p>3.2void CallStaticVoidMethod(jclass clazz,jmethodID,methodID,….)</p><p>3.3jobject CallObjectMethod(JNEnv*,jobject,jmethodID,….)</p><p>4、获取和设置成员变量</p><p>4.1GetFieldID</p><p>4.2GetObjectField</p><p>4.3SetObjectField</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL</span></span><br><span class="line"><span class="function"><span class="title">Java_a_b_c_ndk01_MainActivity_callStaticJavaFunJNI</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jclass jclass_student2 = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;a/b/c/ndk01/Student&quot;</span>);</span><br><span class="line">    jmethodID jmethodId_calcLength = env-&gt;<span class="built_in">GetStaticMethodID</span>(jclass_student2,<span class="string">&quot;calcLength&quot;</span>, <span class="string">&quot;(Ljava/lang/String;)I&quot;</span>);</span><br><span class="line">    jstring jstring_param = env-&gt;<span class="built_in">NewStringUTF</span>(<span class="string">&quot;hahahaha&quot;</span>);</span><br><span class="line">    jint jint_ret = env-&gt;<span class="built_in">CallStaticIntMethod</span>(jclass_student2,jmethodId_calcLength,jstring_param);</span><br><span class="line">    <span class="built_in">LOGI</span>(<span class="string">&quot;ndk call calcLength ret: %d&quot;</span>,jint_ret);</span><br><span class="line">    <span class="keyword">return</span> jstring_param;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础5</title>
      <link href="/2024/07/17/Android%E5%9F%BA%E7%A1%805/"/>
      <url>/2024/07/17/Android%E5%9F%BA%E7%A1%805/</url>
      
        <content type="html"><![CDATA[<h4 id="Binder功能简介"><a href="#Binder功能简介" class="headerlink" title="Binder功能简介"></a>Binder功能简介</h4><p>用途：Binder是一种进程间通信的机制。</p><p>特点：虚拟物理设备驱动，像人血管一样，穿梭在各个组件和进程之间，多进程通信，采用C&#x2F;S架构。</p><p>参与角色：</p><p>Client进程：使用服务的进程需等待Server注册后，再向ServiceManager获取服务。</p><p>Server进程：提供服务的进程。需先向ServiceManager进行注册。</p><p>ServiceManager进程：管理注册过的服务。</p><p>Binder驱动：负责进程之间Binder通信的建立，Binder在进程之间的传递，Binder引用计数管理，数据包在进程之间的传递和交互等一系列底层支持。</p><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><p>安全优势：传统的进程通信方式对于通信双方的身份并没有做出严格的验证，比如Socket通信的IP地址是客户端手动填入，很容易进行伪造。Binder机制从协议本身就支持对通信双方做身份校验，为每个APP分配UID，进程的UID是鉴别进程身份的重要标志，从而大大提高了安全性。</p><p>性能优势：</p><p>共享内存：数据拷贝0次，但复杂且容易产生安全问题</p><p>Binder：数据拷贝1次，兼顾简单已用和安全问题</p><p>传统Socket&#x2F;管道&#x2F;消息队列：数据拷贝2次。</p><h4 id="代码例子并升级代码1"><a href="#代码例子并升级代码1" class="headerlink" title="代码例子并升级代码1"></a>代码例子并升级代码1</h4><p>步骤：</p><p>​服务端：1、继承Service  2、编写AndroidManifest.xml</p><p>​客户端：1、编写Service的连接，并获取远程Ibinder  2、实现绑定Service代码  3、实现获取信息功能的代码</p><h4 id="UseBinderService"><a href="#UseBinderService" class="headerlink" title="UseBinderService"></a>UseBinderService</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Binder</span> <span class="variable">mBinder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binder</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(code == REQUEST_CODE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">                <span class="keyword">if</span>(reply !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    reply.writeInt(age);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">            <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Binder</span> <span class="variable">mBinder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binder</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(code == REQUEST_CODE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">                <span class="keyword">if</span>(reply !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    reply.writeInt(age);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">            <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.UseBinderServer&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyService&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:process</span>=<span class="string">&quot;:server&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.server.student&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="UseBinderClient"><a href="#UseBinderClient" class="headerlink" title="UseBinderClient"></a>UseBinderClient</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    Button btn_bindService,btn_searchAge;</span><br><span class="line">    IBinder binder;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ServiceConnection</span> <span class="variable">serviceConnection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = iBinder;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">bindRemoteService</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;android.intent.action.server.student&quot;</span>;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(action);</span><br><span class="line">        intent.setPackage(<span class="string">&quot;a.b.c.usebinderserver&quot;</span>);<span class="comment">//这里认真点，不要加package</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="built_in">this</span>.bindService(intent, serviceConnection,BIND_AUTO_CREATE);</span><br><span class="line">        Log.i(<span class="string">&quot;ttttt-client&quot;</span>,<span class="string">&quot;bindRemoteService result:&quot;</span> + bt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        tv = findViewById(R.id.tv_view);</span><br><span class="line">        btn_bindService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_searchAge = findViewById(R.id.btn_searchAge);</span><br><span class="line">        btn_bindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                bindRemoteService();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_searchAge.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;tttt-client&quot;</span>,<span class="string">&quot;开始查询&quot;</span>);</span><br><span class="line">                getRemoteAge(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getRemoteAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">data</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">reply</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        data.writeString(name);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(binder == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            binder.transact(REQUEST_CODE,data,reply,<span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> reply.readInt();</span><br><span class="line">            tv.setText(<span class="string">&quot;查询年龄结果：&quot;</span>+age);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">            tv.setText(ee.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">queries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.usebinderserver&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">queries</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.UseBinderClient&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>优化1：</p><p>​服务端：1、继承Service——优化创建Binder类实现传输和数据提供方法  2、编写AndroidManifest.xml</p><p>​客户端：1、编写Service的连接，并获取远程Ibinder——编写代理类管理Binder  2、实现绑定Service代码  3、实现获取信息功能代码——优化编写接口</p><h4 id="UseBinderService-1"><a href="#UseBinderService-1" class="headerlink" title="UseBinderService"></a>UseBinderService</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServerBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span> <span class="keyword">implements</span> <span class="title class_">IStudentInterface</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">        <span class="keyword">if</span> (code == REQUEST_CODE)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">            Log.i(<span class="string">&quot;ttttttt-service&quot;</span>, <span class="string">&quot;recv :&quot;</span>+studentName);</span><br><span class="line">            <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">            Log.i(<span class="string">&quot;ttttttt-service&quot;</span>, <span class="string">&quot;return :&quot;</span>+age);</span><br><span class="line">            <span class="keyword">if</span> (reply != <span class="literal">null</span>)</span><br><span class="line">                reply.writeInt(age);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Integer&gt; info = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span> <span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(<span class="string">&quot;zhangsan&quot;</span>,<span class="number">23</span>);</span><br><span class="line">        info.put(<span class="string">&quot;lisi&quot;</span>,<span class="number">19</span>);</span><br><span class="line">        info.put(<span class="string">&quot;wangwu&quot;</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> info.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String name,<span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        info.put(name,age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ServerBinder.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServerBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span> <span class="keyword">implements</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="keyword">return</span> student.getAge(name);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, <span class="meta">@NonNull</span> Parcel data, <span class="meta">@Nullable</span> Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> RemoteException</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (code == REQUEST_CODE) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">studentName</span> <span class="operator">=</span> data.readString();</span><br><span class="line">                <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> getStudentAge(studentName);</span><br><span class="line">                <span class="keyword">if</span> (reply != <span class="literal">null</span>) &#123;</span><br><span class="line">                    reply.writeInt(age);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IStudentInterface.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//查询年龄接口</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UseBinderClient-1"><a href="#UseBinderClient-1" class="headerlink" title="UseBinderClient"></a>UseBinderClient</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    Button btn_bindService,btn_searchAge;</span><br><span class="line">    IStudentInterface binder;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ServiceConnection</span> <span class="variable">serviceConnection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = BinderProxy.asInerface(iBinder);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">        &#123;</span><br><span class="line">            binder = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">bindRemoteService</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> <span class="string">&quot;android.intent.action.server.student&quot;</span>;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(action);</span><br><span class="line">        intent.setPackage(<span class="string">&quot;a.b.c.usebinderserver&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">bt</span> <span class="operator">=</span> <span class="built_in">this</span>.bindService(intent, serviceConnection,BIND_AUTO_CREATE);</span><br><span class="line">        Log.i(<span class="string">&quot;ttttt-client&quot;</span>,<span class="string">&quot;bindRemoteService result:&quot;</span> + bt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        tv = findViewById(R.id.tv_view);</span><br><span class="line">        btn_bindService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_searchAge = findViewById(R.id.btn_searchAge);</span><br><span class="line">        btn_bindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                bindRemoteService();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_searchAge.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;tttt-client&quot;</span>,<span class="string">&quot;开始查询&quot;</span>);</span><br><span class="line">                binder.getStudentAge(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BinderProxy.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BinderProxy</span> <span class="keyword">implements</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> IBinder mRemoteBinder;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BinderProxy</span><span class="params">(IBinder mRemoteBinder)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mRemoteBinder = mRemoteBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">data</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        <span class="type">Parcel</span> <span class="variable">reply</span> <span class="operator">=</span> Parcel.obtain();</span><br><span class="line">        data.writeString(name);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(mRemoteBinder== <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> age;</span><br><span class="line">            &#125;</span><br><span class="line">            mRemoteBinder.transact(REQUEST_CODE,data,reply,<span class="number">0</span>);</span><br><span class="line">            age = reply.readInt();</span><br><span class="line">            <span class="keyword">return</span> age;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IStudentInterface <span class="title function_">asInerface</span><span class="params">(IBinder iBinder)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(iBinder == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(iBinder <span class="keyword">instanceof</span> IStudentInterface)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (IStudentInterface) iBinder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BinderProxy</span>(iBinder);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IStudetnInterface.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.usebinderclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IStudentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//查询年龄接口</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getStudentAge</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：Android11及以后的版本要在客户端加上服务端的包名</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">queries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">android:name</span>=<span class="string">&quot;a.b.c.usebinderserver&quot;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="attr">queries</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在AndroidManifest.xml文件中，<code>&lt;queries&gt;</code>元素是用于声明应用需要的查询信息，这主要用于提高应用的安全性和隐私性，特别是在Android 11（API 级别 30）及更高版本中。<code>&lt;queries&gt;</code>元素允许应用声明它可以查询哪些其他应用的数据或组件，这有助于系统更好地管理应用的权限和可见性。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础4</title>
      <link href="/2024/07/16/Android%E5%9F%BA%E7%A1%804/"/>
      <url>/2024/07/16/Android%E5%9F%BA%E7%A1%804/</url>
      
        <content type="html"><![CDATA[<h4 id="Apache一些常用名命令："><a href="#Apache一些常用名命令：" class="headerlink" title="Apache一些常用名命令："></a>Apache一些常用名命令：</h4><p># 安装服务<br>httpd -k install -n apache</p><p># 启动服务<br>net start apache<br>httpd -k start -n apache</p><p># 关闭服务<br>net stop apache<br>httpd -k stop -n apache</p><p># 重启服务<br>httpd -k restart -n apache</p><p># 卸载服务<br>## 卸载服务时先停止<br>httpd -k stop -n apache<br>## 再卸载服务<br>httpd -k uninstall -n apache</p><h4 id="下载zip文件知识点："><a href="#下载zip文件知识点：" class="headerlink" title="下载zip文件知识点："></a>下载zip文件知识点：</h4><p>(1)使用HttpURLConnection进行http下载</p><p>(2)使用AsyncTask创建异步任务</p><p>(3)申请权限</p><h4 id="将zip文件写到sdcard知识点"><a href="#将zip文件写到sdcard知识点" class="headerlink" title="将zip文件写到sdcard知识点"></a>将zip文件写到sdcard知识点</h4><p>(1)创建保存目录</p><p>(2)写文件</p><p>(3)下载完成返回标志</p><h4 id="解压zip文件到指定目录知识点"><a href="#解压zip文件到指定目录知识点" class="headerlink" title="解压zip文件到指定目录知识点"></a>解压zip文件到指定目录知识点</h4><p>(1)将zip包内文件解压到指定目录</p><p>(2)将zip文件删除</p><p>注意：Android高版本不能使用http协议</p><p>解决方法：清单文件里面添加(application中)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:usesCleartextTraffic=&quot;true&quot;</span><br></pre></td></tr></table></figure><p>注意：还需要在清单里面申请使用网络的权限(application外)、读sd卡权限、写sd卡权限、管理sd卡权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testdwonloadzip;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> findViewById(R.id.tv_downResult);</span><br><span class="line">        findViewById(R.id.btn_startDownload).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">DownloadZip</span> <span class="variable">downloadZip</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DownloadZip</span>(tv);</span><br><span class="line">                downloadZip.execute(<span class="string">&quot;http://192.168.31.197/down/test.zip&quot;</span>);<span class="comment">//由于没有下载资源，就不实操了</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        findViewById(R.id.btn_startzip).setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">UnzipFile</span> <span class="variable">unzipFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UnzipFile</span>(tv);</span><br><span class="line">                unzipFile.execute(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DownloadZip.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testdwonloadzip;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadZip</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;String,String,String&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DownloadZip</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">doInBackground</span><span class="params">(String... strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">httpURLConnection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        OutputStream outputStream;</span><br><span class="line">        FileOutputStream outputStreamToFle;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(strings[<span class="number">0</span>]);</span><br><span class="line">            httpURLConnection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            httpURLConnection.connect();</span><br><span class="line">            <span class="keyword">if</span> (httpURLConnection.getResponseCode() != HttpURLConnection.HTTP_OK) &#123;</span><br><span class="line">                Log.d(<span class="string">&quot;DownloadZip&quot;</span>, <span class="string">&quot;nor error code&quot;</span> + httpURLConnection.getResponseCode());</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;code error&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            inputStream = httpURLConnection.getInputStream();</span><br><span class="line">            outputStream = httpURLConnection.getOutputStream();</span><br><span class="line"></span><br><span class="line">            <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (dir.exists()) &#123;</span><br><span class="line">                dir.mkdir();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">fullFile</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFile);</span><br><span class="line">            <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">            outputStreamToFle = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file.getAbsoluteFile());</span><br><span class="line"></span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> count;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                count = inputStream.read(buffer);</span><br><span class="line">                <span class="keyword">if</span> (count == -<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                outputStreamToFle.write(buffer, <span class="number">0</span>, count);</span><br><span class="line">            &#125;</span><br><span class="line">            outputStreamToFle.close();</span><br><span class="line">            ret = <span class="string">&quot;success&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">            ret = <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(inputStream !=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(httpURLConnection!=<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    httpURLConnection.disconnect();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">            &#123;</span><br><span class="line">                ee.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(String s)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostExecute(s);</span><br><span class="line">        <span class="keyword">if</span>(ret.equals(<span class="string">&quot;success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载success&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;下载fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UnzipFile.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testdwonloadzip;</span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipOutputStream;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnzipFile</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ZipInputStream</span> <span class="variable">zipInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UnzipFile</span><span class="params">(TextView ptv)</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv = ptv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Object <span class="title function_">doInBackground</span><span class="params">(Object[] objects)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;zipSaveDir/&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">fullFilePath</span> <span class="operator">=</span> dir + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;2058.zip&quot;</span>;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fullFilePath);</span><br><span class="line">            <span class="keyword">if</span>(file.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">jieyaDir</span> <span class="operator">=</span> dir.getAbsolutePath();</span><br><span class="line">                inputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                zipInputStream = <span class="keyword">new</span> <span class="title class_">ZipInputStream</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(inputStream));</span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                ZipEntry zipEntry;</span><br><span class="line">                <span class="keyword">while</span>((zipEntry = zipInputStream.getNextEntry())!= <span class="literal">null</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> zipEntry.getName();</span><br><span class="line">                    <span class="keyword">if</span>(zipEntry.isDirectory())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">subDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(jieyaDir + <span class="string">&quot;/&quot;</span>+fileName);</span><br><span class="line">                        subDir.mkdirs();</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">int</span> rCount;</span><br><span class="line"></span><br><span class="line">                    <span class="type">FileOutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(jieyaDir + <span class="string">&quot;/&quot;</span>+fileName);</span><br><span class="line">                    <span class="keyword">while</span>((rCount = zipInputStream.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        fout.write(buffer,<span class="number">0</span>,rCount);</span><br><span class="line">                    &#125;</span><br><span class="line">                    fout.close();</span><br><span class="line">                    zipInputStream.closeEntry();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                zipInputStream.close();</span><br><span class="line">                ret = <span class="string">&quot;unzip success&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ret = <span class="string">&quot;file not exits&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(Object o)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostExecute(o);</span><br><span class="line">        <span class="keyword">if</span>(ret.equals(<span class="string">&quot;unzip success&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;解压失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="认识Handler"><a href="#认识Handler" class="headerlink" title="认识Handler"></a>认识Handler</h4><p>简介：Handler是一套Android消息传递机制，主要用于线程间通信，异步消息处理。</p><p>场景：主线程负责更新UI，子线程干活并反馈给主线程结果</p><p>使用例子：</p><p>1、sendMessage、post区别？</p><p>看一看Handler类源码post函数</p><p>2、主线程handler、子线程handler区别？</p><p>3、Message是个容器，卡车，装箱</p><p>4、先写代码，然后画个图？</p><p>和SDK的消息队列一样</p><h4 id="底层原理：线程同步"><a href="#底层原理：线程同步" class="headerlink" title="底层原理：线程同步"></a>底层原理：线程同步</h4><p>线程同步回顾：</p><p>synchronized、wait()、notify()</p><p>模型：</p><p>生产者消费者</p><h4 id="底层原理：线程同步-缓冲区："><a href="#底层原理：线程同步-缓冲区：" class="headerlink" title="底层原理：线程同步-缓冲区："></a>底层原理：线程同步-缓冲区：</h4><p>具备条件：</p><p>使用synchronized</p><p>有入队操作</p><p>有出队操作</p><p>生产者：Handler</p><p>生产消息：sendMessage post</p><p>目标：Msg.target &#x3D; this</p><p>消费者：Looper</p><p>如何消费：</p><p>1、死循环获取消息loop()</p><p>2、队列获取消息 next()</p><p>3、派发消息 对应Handle的处理函数handleMessage()</p><p>MainActivity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyHandler myHandler;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI01</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI02</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;02&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUI03</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;03&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updataUI04</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        tv.setText(<span class="string">&quot;04&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        myHandler = <span class="keyword">new</span> <span class="title class_">MyHandler</span>(<span class="built_in">this</span>);</span><br><span class="line">        <span class="type">SubThreadCreateHander</span> <span class="variable">subThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubThreadCreateHander</span>();</span><br><span class="line">        subThread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程</span></span><br><span class="line">        tv =findViewById(R.id.tv_view);</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="literal">false</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//子线程使用sendMessage给主线程发消息</span></span><br><span class="line">                    <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(myHandler);</span><br><span class="line">                    myThread.start();</span><br><span class="line">                    <span class="comment">//子线程使用post给主线程发消息(这里不是很理解)</span></span><br><span class="line">                    myHandler.post(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">try</span> &#123;</span><br><span class="line">                                    Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                                    updateUI01();</span><br><span class="line">                                    updateUI02();</span><br><span class="line">                                    tv.setText(<span class="string">&quot;i:&quot;</span>+i);</span><br><span class="line">                                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//子线程使用sendMessage给主线程发消息</span></span><br><span class="line">                <span class="comment">//MyThread myThread = new MyThread(myHandler);</span></span><br><span class="line">                <span class="comment">//myThread.start();</span></span><br><span class="line">                <span class="comment">//子线程使用post给主线程发消息(这里不是很理解)</span></span><br><span class="line">                <span class="comment">//myHandler.post(new Runnable() &#123;</span></span><br><span class="line"><span class="comment">//                    @Override</span></span><br><span class="line"><span class="comment">//                    public void run()</span></span><br><span class="line"><span class="comment">//                    &#123;</span></span><br><span class="line"><span class="comment">//                        for(int i=0;i&lt;5;i++)</span></span><br><span class="line"><span class="comment">//                        &#123;</span></span><br><span class="line"><span class="comment">//                            try &#123;</span></span><br><span class="line"><span class="comment">//                                Thread.sleep(2000);</span></span><br><span class="line"><span class="comment">//                                updateUI01();</span></span><br><span class="line"><span class="comment">//                                updateUI02();</span></span><br><span class="line"><span class="comment">//                                tv.setText(&quot;i:&quot;+i);</span></span><br><span class="line"><span class="comment">//                            &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                                throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">//                            &#125;</span></span><br><span class="line"><span class="comment">//                        &#125;</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;);</span></span><br><span class="line">                <span class="comment">//主线程做完事情后，把结果通过子线程的handler发送给子线程用</span></span><br><span class="line">                <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">                message.what = <span class="number">99</span>;</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                bundle.putString(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这条内容是先放入Bundle,然后通过Message传递&quot;</span>);</span><br><span class="line">                message.setData(bundle);</span><br><span class="line">                subThread.subHandler.sendMessage(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyHandler</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">extends</span> <span class="title class_">Handler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MainActivity mainActivity;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyHandler</span><span class="params">(MainActivity pmainActivity)</span></span><br><span class="line">    &#123;</span><br><span class="line">        mainActivity = pmainActivity;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        Log.i(<span class="string">&quot;MyHandler&quot;</span>,<span class="string">&quot;in handleMessage&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (msg.what)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI01();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI02();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updateUI03();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            &#123;</span><br><span class="line">                mainActivity.updataUI04();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyThread</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler mh;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mh)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mh = mh;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.run();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">            message.what =i;</span><br><span class="line">            mh.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>SubThreadCreateHander</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.testhandler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> MyHandler mh;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyThread</span><span class="params">(MyHandler mh)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.mh = mh;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.run();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> Message.obtain();</span><br><span class="line">            message.what =i;</span><br><span class="line">            mh.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Handler总结"><a href="#Handler总结" class="headerlink" title="Handler总结"></a>Handler总结</h4><p>在Android开发中，Handler是一种用于与线程间通信的机制，它允许你发送和处理消息和Runnable对象，从而在不同的线程之间执行代码。主要用途是在后台线程执行耗时操作后，将结果传递给主线程更新UI，或者实现定时任务等功能。</p><h3 id="主要用途和特点："><a href="#主要用途和特点：" class="headerlink" title="主要用途和特点："></a>主要用途和特点：</h3><ol><li><p><strong>线程间通信</strong>：</p><ul><li>在Android中，UI更新必须在主线程(UI线程)中执行，而耗时操作（如网络请求、文件读写等）需要在后台线程执行，为了在这两者之间进行通信，可以使用Handler机制。</li></ul></li><li><p><strong>消息处理和处理机制</strong>：</p><ul><li>Handler可以用来发送消息（Message）或者投递任务（Runnable）到特定的线程消息队列中，这些消息或任务会按照一定的顺序执行。</li></ul></li><li><p><strong>主要组件</strong>：</p><ul><li><strong>Looper</strong>：一个线程本地的消息循环机制，用来不断地从消息队列中取出消息或任务，并将其分发给对应的Handler处理。</li><li><strong>MessageQueue</strong>：用来存放所有待处理的消息或任务。</li><li><strong>HandlerThread</strong>：一种带有Looper的线程类，通常用于后台线程的创建和消息处理。</li></ul></li><li><p><strong>主要方法和用法</strong>：</p><ul><li>**sendMessage(Message)**：将Message对象发送到Handler关联的消息队列中。</li><li>**post(Runnable)**：将Runnable对象发送到Handler关联的消息队列中，用于执行一些任务。</li><li>**handleMessage(Message)**：处理从消息队列中取出的Message对象，通常在Handler的子类中重写这个方法来处理消息。</li></ul></li><li><p>主线程操作：发送消息到主线程，在主线程中使用Handler，可以将消息或任务发送到主线程的消息队列中，以便在主线程上处理UI更新和其他操作。</p><p><strong>示例：</strong></p><p>假设在一个后台线程中执行了一个耗时操作（例如网络请求），操作完成后需要更新UI显示结果。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在主线程中创建Handler，用于处理后台线程发送的消息</span></span><br><span class="line"><span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()) &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.handleMessage(msg);</span><br><span class="line">        <span class="comment">// 处理消息，更新UI</span></span><br><span class="line">        <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> MESSAGE_NETWORK_RESPONSE:</span><br><span class="line">                <span class="type">String</span> <span class="variable">response</span> <span class="operator">=</span> (String) msg.obj;</span><br><span class="line">                textView.setText(response); <span class="comment">// 更新UI显示网络请求的结果</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 可以处理更多的消息类型</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在后台线程中执行耗时操作，操作完成后发送消息到主线程更新UI</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 模拟网络请求耗时操作</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>); <span class="comment">// 模拟耗时3秒的网络请求</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 网络请求完成后，发送消息给主线程更新UI</span></span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> handler.obtainMessage();</span><br><span class="line">        message.what = MESSAGE_NETWORK_RESPONSE;</span><br><span class="line">        message.obj = <span class="string">&quot;Response from server&quot;</span>; <span class="comment">// 假设这是网络请求返回的数据</span></span><br><span class="line">        handler.sendMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>在这个示例中：</p><ul><li>主线程中创建了一个Handler对象，并重写了<code>handleMessage</code>方法来处理接收到的消息。</li><li>在后台线程中执行了一个模拟的网络请求耗时操作（通过Thread.sleep来模拟），操作完成后通过Handler发送了一个包含网络请求结果的消息到主线程。</li><li>主线程接收到消息后，根据消息的类型（<code>MESSAGE_NETWORK_RESPONSE</code>），更新了TextView的显示内容。</li></ul><p>这样，通过Handler可以实现在后台线程执行耗时操作后，将结果发送到主线程更新UI的功能。</p><h3 id="2-后台线程操作：发送消息到后台线程"><a href="#2-后台线程操作：发送消息到后台线程" class="headerlink" title="2. 后台线程操作：发送消息到后台线程"></a>2. 后台线程操作：发送消息到后台线程</h3><p>尽管主要用途是在主线程和后台线程之间进行通信，但是也可以使用Handler在后台线程之间发送消息。这种情况比较少见，但在特定场景下可能会有用，例如在一个长时间运行的后台线程中执行任务，然后将任务结果或状态消息发送给另一个后台线程</p><p><strong>示例：</strong></p><p>假设有两个后台线程，一个线程负责执行某种计算任务，另一个线程监听并处理计算结果。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建两个Handler，分别用于两个后台线程之间通信</span></span><br><span class="line"><span class="type">Handler</span> <span class="variable">backgroundHandler1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()); <span class="comment">// 用于处理后台任务1</span></span><br><span class="line"><span class="type">Handler</span> <span class="variable">backgroundHandler2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.getMainLooper()); <span class="comment">// 用于处理后台任务2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 后台线程1执行计算任务，并将结果发送给后台线程2</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 模拟计算任务</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> performCalculation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将计算结果发送给后台线程2</span></span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> backgroundHandler2.obtainMessage();</span><br><span class="line">        message.what = MESSAGE_CALCULATION_RESULT;</span><br><span class="line">        message.arg1 = result;</span><br><span class="line">        backgroundHandler2.sendMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 后台线程2监听并处理计算结果</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 监听后台线程1发送的消息</span></span><br><span class="line">        backgroundHandler2.post(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">// 处理收到的消息</span></span><br><span class="line">                <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                    <span class="keyword">case</span> MESSAGE_CALCULATION_RESULT:</span><br><span class="line">                        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> msg.arg1;</span><br><span class="line">                        <span class="comment">// 处理计算结果</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="comment">// 可以处理更多的消息类型</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础3</title>
      <link href="/2024/07/15/Android%E5%9F%BA%E7%A1%803/"/>
      <url>/2024/07/15/Android%E5%9F%BA%E7%A1%803/</url>
      
        <content type="html"><![CDATA[<h4 id="Content-Provider-介绍"><a href="#Content-Provider-介绍" class="headerlink" title="Content Provider 介绍"></a>Content Provider 介绍</h4><p>Content Provider属于Android应用程序的组件之一，作为应用程序的组件之一，作为应用程序之间唯一的共享数据的途径，Content Provider为存储和读取数据提供了统一的接口。Content Provider主要的功能就是存储并检索数据以及向其他应用程序提供访问数据的接口。Android系统为一些常见的数据类型(如音乐、视频、图像、手机通讯录联系人信息等)内置了一系列的Content Provider，这些都位于android.provider包下。持有特定的许可，可以在自己开发的应用程序中，可以在自己开发的应用程序中访问这些Content Provider，应用程序可以实现数据共享让自己的数据和其他应用程序共享</p><p>让自己的数据和其他应用程序共享有两种方式：</p><p>创建自己的Content Provider(即继承ContentProvider子类)将自己的数据添加到已有的Content Provider中去</p><p>后者需要保证现有的Content Provider和自己的数据类型相同且具有该Content Provider的写入权限</p><h4 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h4><p>Content Provider将其存储的数据以数据表形式提供给访问者，在数据表中，每一行为一条记录，每一列为具有特定类型和意义的数据。每一条数据记录都包括一个”ID“数值字段，该字段标识一条数据</p><h4 id="访问Content-Provider中的数据："><a href="#访问Content-Provider中的数据：" class="headerlink" title="访问Content Provider中的数据："></a>访问Content Provider中的数据：</h4><p>访问Content Provider中的数据主要ContentResolver对象，ContentResolver可以用来对Content Provider中的数据进行查询query()、插入insert()、修改update()和删除delete()等操作，以查询为例，查询一个Content Provider需要掌握如下的信息：</p><p>唯一标识Content Provider的URI需要访问的数据字段名称该数据字段的数据类型</p><p>查询Content Provider的方法有两个：ContentResolver的query()和Activity对象的managedQuery()</p><h4 id="提供的函数"><a href="#提供的函数" class="headerlink" title="提供的函数"></a>提供的函数</h4><p>query()查询，insert()插入，update()更新,delete()删除，getType()得到数据  类型，onCreate()创建时的回调函数</p><h4 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h4><p>定义一个CONTENT_URI常量</p><p>定义一个类，继承Content Provider</p><p>实现query(),delete(),update(),insert(),onCreate(),getType()方法</p><p>在自己创建的模块的AndroidManifest.xml中创建权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDB.permossion&quot;</span> <span class="attr">android:protectionLevel</span>=<span class="string">&quot;normal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在AndroidManifest中申请权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDb.permisson&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br></pre></td></tr></table></figure><p>db AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;myDb.permisson&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uses-permission</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SubActivity02&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.SubActivity03&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyService01&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyBindService&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.MyReceiver&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver01&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver03&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;guolvRuleaaa&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DBHelper.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.db2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DBHelper</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DBNAME</span> <span class="operator">=</span> <span class="string">&quot;myDbName.db&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  <span class="type">int</span> <span class="variable">VERSION</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_USER</span> <span class="operator">=</span> <span class="string">&quot;user&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DBHelper</span><span class="params">(<span class="meta">@Nullable</span> Context context, <span class="meta">@Nullable</span> String name, <span class="meta">@Nullable</span> SQLiteDatabase.CursorFactory factory, <span class="type">int</span> version)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, DBNAME, factory, VERSION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStr</span> <span class="operator">=</span> <span class="string">&quot;CREATE TABLE IF NOT EXISTS &quot;</span> + TABLE_USER+<span class="comment">//EXISTS后面一定要加空格</span></span><br><span class="line">                <span class="string">&quot;(uid INTERGER PRIMARY KEY AUTOINCREMENT,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;name VARCHAR(30),&quot;</span>+</span><br><span class="line">                <span class="string">&quot;age INTERGER,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;score DOUBLE)&quot;</span>;</span><br><span class="line">        sqLiteDatabase.execSQL(sqlStr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase, <span class="type">int</span> i, <span class="type">int</span> i1)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyProvider.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.db2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentProvider;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.UriMatcher;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyProvider</span> <span class="keyword">extends</span> <span class="title class_">ContentProvider</span><span class="comment">//MyProvider 类继承自 ContentProvider，这意味着它是一个自定义内容提供器，必须实现一些方法来处理数据的访问请求</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> UriMatcher uriMacher;<span class="comment">//UriMatcher 类型的静态变量，用于匹配 Uri。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AUTHRITY_PROVIDER</span> <span class="operator">=</span> <span class="string">&quot;a.b.c.db2.authority&quot;</span>;<span class="comment">//定义了内容提供器的授权信息，通常是包名加上 &quot;.authority&quot;。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CODE_PROVIDER_USER</span> <span class="operator">=</span> <span class="number">11</span>;<span class="comment">//CODE_PROVIDER_USER: 定义了一个常量，用于标识用户表格的 Uri 匹配码。</span></span><br><span class="line">    <span class="keyword">private</span> DBHelper dbHelper;</span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase db;</span><br><span class="line">    <span class="keyword">static</span></span><br><span class="line">    &#123;</span><br><span class="line">        uriMacher = <span class="keyword">new</span> <span class="title class_">UriMatcher</span>(UriMatcher.NO_MATCH);<span class="comment">//UriMatcher.NO_MATCH 表示没有匹配时的返回值。</span></span><br><span class="line">        uriMacher.addURI(AUTHRITY_PROVIDER,DBHelper.TABLE_USER,CODE_PROVIDER_USER);<span class="comment">//addURI(AUTHRITY_PROVIDER, DBHelper.TABLE_USER, CODE_PROVIDER_USER) 将指定的授权和路径模式与匹配码关联起来。在这里，AUTHRITY_PROVIDER 是授权信息，DBHelper.TABLE_USER 是表格名，CODE_PROVIDER_USER 是匹配码。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dbHelper = <span class="keyword">new</span> <span class="title class_">DBHelper</span>(getContext(),<span class="string">&quot;&quot;</span>,<span class="literal">null</span>,<span class="number">1</span>);</span><br><span class="line">        db = dbHelper.getWritableDatabase();</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(1,&#x27;张三&#x27;,19,87)&quot;</span> );</span><br><span class="line">        db.execSQL(<span class="string">&quot;insert into &quot;</span>+DBHelper.TABLE_USER+<span class="string">&quot; values(2,&#x27;李四&#x27;,18,87)&quot;</span> );</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//onCreate 方法在内容提供器创建时调用。当前实现直接返回 false，表示内容提供器的初始化失败。通常应该在这里进行初始化操作，并返回相应的结果。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] strings, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] strings1, <span class="meta">@Nullable</span> String s1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">(<span class="meta">@NonNull</span> Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTableName</span><span class="params">(Uri uri)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(uriMacher.match(uri)==CODE_PROVIDER_USER)</span><br><span class="line">        &#123;</span><br><span class="line">            tableName = DBHelper.TABLE_USER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tableName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri <span class="title function_">insert</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentValues)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">insertCount</span> <span class="operator">=</span> db.insert(tableName,<span class="literal">null</span>,contentValues);</span><br><span class="line">        <span class="keyword">if</span>(insertCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;insert ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvier&quot;</span>,<span class="string">&quot;insert fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">deleteCount</span> <span class="operator">=</span> db.delete(tableName,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(deleteCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;delete ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;delete fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deleteCount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> ContentValues contentValues, <span class="meta">@Nullable</span> String s, <span class="meta">@Nullable</span> String[] strings)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(tableName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateCount</span> <span class="operator">=</span> db.update(tableName,contentValues,s,strings);</span><br><span class="line">        <span class="keyword">if</span>(updateCount &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;update ok&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(<span class="string">&quot;MyProvider&quot;</span>,<span class="string">&quot;updata fail&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> updateCount;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四大组件汇总代码"><a href="#四大组件汇总代码" class="headerlink" title="四大组件汇总代码"></a>四大组件汇总代码</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentResolver;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.IntentFilter;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResult;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultCallback;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultLauncher;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContract;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.MyReceiver;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.OrderReceiver01;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.OrderReceiver02;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.MyReceiver.OrderReceiver03;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.service.MyBindService;</span><br><span class="line"><span class="keyword">import</span> a.b.c.myapplication.service.MyService01;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    Button btn_start,btn_startForResult;</span><br><span class="line">    Button btn_startService,btn_stopService;</span><br><span class="line">    Button btn_binService,btn_unBindService;</span><br><span class="line">    Button btn_sendBroadcast,btn_orderBroadcast;</span><br><span class="line">    MyBindService.MyBinder myBinder;</span><br><span class="line">    String logtag=<span class="string">&quot;qqqqqq&quot;</span>;</span><br><span class="line">    Button btn_add,btn_del,btn_update,btn_search;</span><br><span class="line">    <span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;content://a.b.c.db.authority/user&quot;</span>);<span class="comment">//Uri.parse() 是 Uri 类的静态方法，用于将字符串表示的 URI 解析为 Uri 对象</span></span><br><span class="line"><span class="comment">//老方法，通过复写onActivityResult函数来接受返回结构</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        super.onActivityResult(requestCode, resultCode, data);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        if(data == null)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if(resultCode == requestCode &amp;&amp; requestCode == 234)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            String ret = data.getStringExtra(&quot;key1&quot;);</span></span><br><span class="line"><span class="comment">//            Log.i(&quot;This is ret&quot;,ret);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;MissingInflatedId&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_start = findViewById(R.id.btn_startActivity);</span><br><span class="line">        btn_start.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);<span class="comment">//第一个参数：谁下发的命令，第二个参数：打开哪个Activity</span></span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 新方法接受返回结果</span></span><br><span class="line">        <span class="type">ActivityResultLauncher</span> <span class="variable">launcher</span> <span class="operator">=</span> registerForActivityResult(<span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(), <span class="keyword">new</span> <span class="title class_">ActivityResultCallback</span>&lt;ActivityResult&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(ActivityResult result)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(logtag,result.getData().getStringExtra(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_startForResult = findViewById(R.id.btn_startActivityGetResult);</span><br><span class="line">        btn_startForResult.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,SubActivity03.class);</span><br><span class="line"><span class="comment">//                startActivityForResult(intent,234);</span></span><br><span class="line">                launcher.launch(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_startService = findViewById(R.id.btn_startService);</span><br><span class="line">        btn_startService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                startService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_stopService = findViewById(R.id.btn_stopService);</span><br><span class="line">        btn_stopService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                stopService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">ServiceConnection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceConnection</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(iBinder <span class="keyword">instanceof</span> MyBindService.MyBinder)</span><br><span class="line">                &#123;</span><br><span class="line">                    myBinder = (MyBindService.MyBinder) iBinder;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Log.i(logtag, <span class="string">&quot;onServiceDisconnected&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        btn_binService = findViewById(R.id.btn_bindService);</span><br><span class="line">        btn_binService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,MyBindService.class);</span><br><span class="line">                bindService(intent,conn,  Context.BIND_AUTO_CREATE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_unBindService = findViewById(R.id.btn_unbindService);</span><br><span class="line">        btn_unBindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyBindService.class);</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    unbindService(conn);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_sendBroadcast = findViewById(R.id.btn_broadcast);</span><br><span class="line">        btn_sendBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intetnt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyReceiver.class);</span><br><span class="line">                intetnt.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                intetnt.putExtra(<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;这是无序广播内容1&quot;</span>);</span><br><span class="line">                sendBroadcast(intetnt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line">        <span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line">        <span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line">        <span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">        registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver02,intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver03,intentFilter);</span><br><span class="line"></span><br><span class="line">        btn_orderBroadcast = findViewById(R.id.btn_orderBroadcast);</span><br><span class="line">        btn_orderBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;这是原始数据&quot;</span>;</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">extData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line"></span><br><span class="line">                sendOrderedBroadcast(intent,<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">MyReceiver</span>(),<span class="literal">null</span>,<span class="number">0</span>,data,extData);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_add = findViewById(R.id.btn_add);</span><br><span class="line">        btn_add.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">                values.put(<span class="string">&quot;uid&quot;</span>,uid++);</span><br><span class="line">                values.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">                values.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">                values.put(<span class="string">&quot;socre&quot;</span>,<span class="string">&quot;78&quot;</span>);</span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                contentResolver.insert(uri,values);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_del = findViewById(R.id.btn_del);</span><br><span class="line">        btn_del.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                <span class="type">int</span> <span class="variable">delCount</span> <span class="operator">=</span> contentResolver.delete(uri,<span class="string">&quot;uid&gt; ?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;4&quot;</span>&#125;);</span><br><span class="line">                <span class="keyword">if</span>(delCount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;del Count: &quot;</span> + delCount);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_update = findViewById(R.id.btn_update);</span><br><span class="line">        btn_update.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line"></span><br><span class="line">                values.put(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                <span class="type">int</span> <span class="variable">updateCount</span> <span class="operator">=</span> contentResolver.update(uri,values,<span class="string">&quot;uid=?&quot;</span>,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;3&quot;</span>&#125;);</span><br><span class="line">                <span class="keyword">if</span>(updateCount&gt;<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;updata Count&quot;</span>+updateCount);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_search = findViewById(R.id.btn_search);</span><br><span class="line">        btn_search.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//select(字段1，字段2，字段3) from tablename where xx=xx&quot;;</span></span><br><span class="line">                <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> getContentResolver();</span><br><span class="line">                <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> contentResolver.query(uri,<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;uid&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;score&quot;</span>&#125;,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">if</span>(cursor==<span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(cursor.moveToNext())</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">uid</span> <span class="operator">=</span> cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;uid&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;age&quot;</span>));</span><br><span class="line">                    <span class="meta">@SuppressLint(&quot;Range&quot;)</span> <span class="type">int</span> score= cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;score&quot;</span>));</span><br><span class="line">                    Log.i(logtag,<span class="string">&quot;uid=&quot;</span>+uid+<span class="string">&quot;,name=&quot;</span>+name+<span class="string">&quot;,age=&quot;</span>+age+<span class="string">&quot;,score=&quot;</span>+score);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Activity生命周期"><a href="#Activity生命周期" class="headerlink" title="Activity生命周期"></a>Activity生命周期</h4><p>activity三种状态：</p><p>(1)active：当Activity运行在屏幕前台(处于当前任务活动栈的最上面)，此时它获取了焦点能响应用户的操作，属于活动状态，同一个时刻只会有一个Activity处于活动(Active)。</p><p>(2)paused：当Activity失去焦点但仍对用户可见(如在它之上有另一个透明的Activity或Toast、AlertDialog等弹出弹窗时)它处于暂停状态。暂停的Activity仍然是存活状态(它保留者所有的状态和成员信息并保持窗口管理器的连接)，但是在系统内存极小时可以被系统杀掉。</p><p>(3)stopped：完全被另一个Activity遮挡时处于停止状态，它仍然在内存中保留着所有的状态和成员信息。这是对用户不可见，当其他地方需要内存时它往往被系统杀掉。</p><h4 id="Activity七个方法"><a href="#Activity七个方法" class="headerlink" title="Activity七个方法"></a>Activity七个方法</h4><p>(1)onCreate()：在Activity创建时调用，通常做一些初始化设置，不可见，只在Activity创建时执行一次</p><p>(2)onStart()：在Activity即将可见时调用，可见，在Activity中多次调用，不在前台，不可交互，初始化工作</p><p>(3)onResume：在Activity获取焦点开始与用户交互时调用，在前台，开启动画和独占设备</p><p>(4)onPause()：在当前Activity被其它Activity覆盖或锁屏时调用，可见，程序状态的保持，独占设备和动画的关闭，以及一些数据的保存最好在onPause中进行，但不能太耗时</p><p>(5)onStop()：在Activity对用户不可见时调用，不可见，其对象还在内存中，系统内存不足时可能不会执行onStop()方法</p><p>(6)onDestroy()：在Activity销毁时调用</p><p>(7)onRestart()：在Activity从停止状态再次启动时调用</p><h4 id="android三个嵌套循环"><a href="#android三个嵌套循环" class="headerlink" title="android三个嵌套循环"></a>android三个嵌套循环</h4><p>(1)Activity完整的生命周期：从第一次调用onCreate()开始直到调用onDestroy()结束。</p><p>(2)Activity的可视生命周期：从调用onStart()到相应的调用onStop()。在这两个方法之间，可以保持显示Activity所需要的资源。如在onStart()注册一个广播接收者监听影响你的UI的改变，在onStop()中注销。</p><p>(3)Activity的前台生命周期：从调用onResume()到相应的调用onPause()。</p><h4 id="Service的生命周期"><a href="#Service的生命周期" class="headerlink" title="Service的生命周期"></a>Service的生命周期</h4><p>Service的完整生命周期从调用onCreate()开始知道调用onDestroy()结束。</p><h4 id="Service有两种使用方法："><a href="#Service有两种使用方法：" class="headerlink" title="Service有两种使用方法："></a>Service有两种使用方法：</h4><p>(1)以调用Context.startService()启动，而以调用Context.stopService结束。这种情况下的Service是通过其他组件调用startService()被创建。这种service方法可以无限地运行下去，必须调用stopSelf()方法或者其他组件调用stopService()来停止它，当service被停止时，系统会销毁它</p><p>(2)以调用Context.bindService()方法建立，以调用Context.unbindService()关闭。这种情况下的Service时通过其他组件(一个客户)调用unbindService()方法来关闭这种连接。一个service可以同时和多个客户绑定，当多个客户都解除绑定之后，系统会销毁service。</p><h4 id="BroadcastReceive广播接收器生命周期"><a href="#BroadcastReceive广播接收器生命周期" class="headerlink" title="BroadcastReceive广播接收器生命周期"></a>BroadcastReceive广播接收器生命周期</h4><p>生命周期只有十秒左右，如果在onReceive()内做超过十秒内的事情，就会报ANR(Application No Response)程序无响应的错误信息。它的生命周期为从回调onReceive()方法开始到该方法返回结果后结束</p><h4 id="一个activity的启动过程"><a href="#一个activity的启动过程" class="headerlink" title="一个activity的启动过程"></a>一个activity的启动过程</h4><p>每一个Activity都处于某一个状态，对于开发者来说，是无法控制其应用程序处于某一个状态的，这些均由系统来完成。</p><p>(1)第一个Activity的启动顺序：onCreate()-&gt;onStart()-&gt;onResume()</p><p>(2)当另一个Activity启动时：第一个Activity onPause()-&gt;第二个Activity onCreate()-&gt;onStart()-&gt;onResume()-&gt;第一个Activity onStop();</p><p>(3)当返回到第一个Activity时：第二个Activity onPause()-&gt;第一个Activity onRestart()-&gt;onStart()-&gt;onResume()-&gt;第二个Activity onStop()-&gt;onDestroy()</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础2</title>
      <link href="/2024/07/14/Android%E5%9F%BA%E7%A1%802/"/>
      <url>/2024/07/14/Android%E5%9F%BA%E7%A1%802/</url>
      
        <content type="html"><![CDATA[<h4 id="Activity的使用"><a href="#Activity的使用" class="headerlink" title="Activity的使用"></a>Activity的使用</h4><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResult;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultCallback;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultLauncher;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContract;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line">    Button btn_start,btn_startForResult;</span><br><span class="line">    String logtag=<span class="string">&quot;hyqhyqhyq&quot;</span>;</span><br><span class="line"><span class="comment">//老方法，通过复写onActivityResult函数来接受返回结构</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        super.onActivityResult(requestCode, resultCode, data);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        if(data == null)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if(resultCode == requestCode &amp;&amp; requestCode == 234)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            String ret = data.getStringExtra(&quot;key1&quot;);</span></span><br><span class="line"><span class="comment">//            Log.i(&quot;This is ret&quot;,ret);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_start = findViewById(R.id.btn_startActivity);</span><br><span class="line">        btn_start.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);<span class="comment">//第一个参数：谁下发的命令，第二个参数：打开哪个Activity</span></span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 新方法接受返回结果</span></span><br><span class="line">        <span class="type">ActivityResultLauncher</span> <span class="variable">launcher</span> <span class="operator">=</span> registerForActivityResult(<span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(), <span class="keyword">new</span> <span class="title class_">ActivityResultCallback</span>&lt;ActivityResult&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(ActivityResult result)</span></span><br><span class="line">            &#123;</span><br><span class="line">                Log.i(logtag,result.getData().getStringExtra(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_startForResult = findViewById(R.id.btn_startActivityGetResult);</span><br><span class="line">        btn_startForResult.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,SubActivity03.class);</span><br><span class="line"><span class="comment">//                startActivityForResult(intent,234);</span></span><br><span class="line">                launcher.launch(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*ActivityResultLauncher 和 registerForActivityResult:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ActivityResultLauncher 是一个接口，用于启动目标活动并接收其结果。</span></span><br><span class="line"><span class="comment">registerForActivityResult 是一个新的方法，用于注册一个能够处理特定结果的 ActivityResultLauncher 实例。它接受两个参数：</span></span><br><span class="line"><span class="comment">第一个参数是一个 ActivityResultContract 的实例，用于指定要执行的操作类型。在这里使用的是 ActivityResultContracts.StartActivityForResult()，表示注册一个能够处理 startActivityForResult 操作的 launcher。</span></span><br><span class="line"><span class="comment">第二个参数是一个 ActivityResultCallback&lt;ActivityResult&gt; 的实例，用于处理从目标活动返回的结果。</span></span><br><span class="line"><span class="comment">onActivityResult 方法:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这是注册的 ActivityResultCallback 的实现部分。</span></span><br><span class="line"><span class="comment">当目标活动返回结果时，系统将调用 onActivityResult 方法，并传递一个 ActivityResult 对象作为参数。</span></span><br><span class="line"><span class="comment">在这里，通过 result.getData().getStringExtra(&quot;key1&quot;) 获取从目标活动返回的数据中名为 &quot;key1&quot; 的字符串数据，并将其记录到日志中。</span></span><br><span class="line"><span class="comment">Log.i(logtag, ...):</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Log.i 是 Android 提供的日志输出方法，用于记录信息级别的日志。</span></span><br><span class="line"><span class="comment">logtag 应该是一个字符串常量，用于标识日志的来源或者类别。*/</span></span><br></pre></td></tr></table></figure><p>activity_main.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_startActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;启动Activity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_startActivityGetResult&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;启动Activity并获取返回结果&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SubActivity02.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity02</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        setContentView(R.layout.activity_sub02);</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        Log.i(<span class="string">&quot;This is SubActivity02&quot;</span>,<span class="string">&quot;SubActivity02 onCreate&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_sub02.xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:id=<span class="string">&quot;@+id/main&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;我是第二个Activity&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;50dp&quot;</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>SubActivity03.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity03</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br><span class="line">&#123;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_sub03);</span><br><span class="line">        tv = findViewById(R.id.tv_setResult);</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setClass(SubActivity03.<span class="built_in">this</span>,MainActivity.class);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;这是结果1,来自SubActivity03&quot;</span>);</span><br><span class="line">                setResult(<span class="number">234</span>,intent);</span><br><span class="line">                SubActivity03.<span class="built_in">this</span>.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_sub03.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是第三个Activity&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_setResult&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;50dp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;我是第三个Activity&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_setResult&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;50dp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Service介绍"><a href="#Service介绍" class="headerlink" title="Service介绍"></a>Service介绍</h4><p>Service是android系统的四大组件之一，是一种长生命周期的，没有可视化界面，运行于后台的一种服务程序</p><h4 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h4><p>(1)Started Service被开启的service通过其他组件调用startService()被创建，这种service可以无限地运行下去，必须调用stopSelf()方法或者其他组件调用stopService()来停止它，当service被停止时，系统会销毁它</p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyService01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_startService = findViewById(R.id.btn_startService);</span><br><span class="line">        btn_startService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                startService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_stopService = findViewById(R.id.btn_stopService);</span><br><span class="line">        btn_stopService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyService01.class);</span><br><span class="line">                stopService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>activity_main.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_startService&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;启动Service&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_stopService&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;停止Service&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(2)Bounded Service被绑定地service是当其他组件(一个客户)调用bindService()来创建的，客户可以通过一个IBinder接口和service进行通信，客户可以通过unbindService()方法来关闭这种连接，一个service可以同时和多个客户绑定，当多个客户都解除绑定之后，系统会销毁service </p><p>在清单文件中注册Service</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">&quot;.service.MyBindService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity.java </p><p>注意：复制粘贴时，启动哪个activity要注意，这里卡了好久</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_binService = findViewById(R.id.btn_bindService);</span><br><span class="line">   btn_binService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,MyBindService.class);</span><br><span class="line">           bindService(intent,conn, <span class="number">0</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">   btn_unBindService = findViewById(R.id.btn_unbindService);</span><br><span class="line">   btn_unBindService.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyBindeService.class);</span><br><span class="line">           <span class="keyword">try</span></span><br><span class="line">           &#123;</span><br><span class="line">               unbindService(conn);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">catch</span> (Exception e)</span><br><span class="line">           &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><p>MyBinderService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBindService</span> <span class="keyword">extends</span> <span class="title class_">Service</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyBinder</span> <span class="variable">binder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyBinder</span>();</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">logTag</span> <span class="operator">=</span> <span class="string">&quot;MyBinderService&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBinder</span> <span class="keyword">extends</span> <span class="title class_">Binder</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyBinder</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Log.i(logTag,<span class="string">&quot;in MyBinder&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> MyBindService <span class="title function_">getService</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> MyBindService.<span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> binder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onUnbind</span><span class="params">(Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.i(logTag, <span class="string">&quot;onUnbind&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onUnbind(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="BroadcastReceiver介绍"><a href="#BroadcastReceiver介绍" class="headerlink" title="BroadcastReceiver介绍"></a>BroadcastReceiver介绍</h4><p>BroadcastReceiver(广播接受器)是Android系统的四大组件之一，用于监听 &#x2F; 接受 应用发出的广播消息，并做出响应</p><p>应用场景：不同组件之间通信(包括应用内 &#x2F; 不同应用之间)；与Android系统在特定情况下的通信(如电话呼入时、网络可用时)；多线程通信</p><p>Android广播分为两个角色：广播发送者、广播接受者</p><h4 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h4><p>(Android中的广播使用了设计模式中的观察者模式)：基于消息的发布&#x2F;订阅事件模型</p><p>模型中有3个角色：</p><p>消息订阅者(广播接受者)&#x2F;消息发布者(广播发布者)&#x2F;消息中心(AMS，即Activity Manager Service)</p><p>广播接收者通过Binder机制在AMS注册</p><p>广播发送者通过Binder机制向AMS发送广播</p><p>AMS根据广播发送者要求，在已注册列表中，寻找合适的广播接收者(寻找依据：IntentFilter&#x2F;Permission)</p><p>AMS将广播发送到合适的广播接收者相应的消息循环队列中</p><h4 id="注册的方式分为两种：静态注册、动态注册"><a href="#注册的方式分为两种：静态注册、动态注册" class="headerlink" title="注册的方式分为两种：静态注册、动态注册"></a>注册的方式分为两种：静态注册、动态注册</h4><p>(1)静态注册</p><p>在AndroidManifest.xml里面通过标签声明，当此App首次启动时，系统会自动实例化mBroadReceive类，并注册到系统中，静态注册是常驻广播，不受任何组件生命周期的影响</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.MyReceiver&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span>//android:exported=&quot;false&quot; 指定了该接收器是否能被其他应用组件调用或者是从外部调用。false 表示这个接收器仅对自己的应用可见，其他应用无法直接调用它。</span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span>//<span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span> 标签定义了接收器可以处理的广播意图（Intent）过滤器。<span class="tag">&lt;<span class="name">action</span>&gt;</span> 标签用于指定接收器要处理的广播动作（Action）。在这个例子中，动作名称是 &quot;golvRuleaaa&quot;。这表示接收器只会对发送这个特定动作的广播进行处理。</span><br><span class="line">                <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        &lt;/receiver</span><br></pre></td></tr></table></figure><p>(2)动态注册</p><p>在代码中通过调用Context的regisertReceiver()方法进行动态注册BroadReceiver，注册广播后，要在相应位置记得销毁广播，即在onPause()中unregisertReceiver(mBroadcastReceiver)，当此Activity实例化时，会动态将MyBroadcastReceiver注册到系统中，当此Activity销毁时，动态注册的MyBroadReceiver将不再接受到相应的广播</p><p>注意：动态广播最好在Activity中的onResume()注册、onPause注销。</p><p>原因：</p><p>对于动态广播，有注册就必然得有注销，否则会导致内存泄露</p><p>重复注册、重复注销也不允许</p><p>动态注册是非常驻广播，灵活，跟随组件的生命周期变化</p><p>在AndroidManifest.xml中注册，并设置优先级(静态注册)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver01&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver02&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyReceiver.OrderReceiver03&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;golvRuleaaa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在MainActivity中动态注册</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line"><span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line"><span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line"><span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">intentFilter.addAction(<span class="string">&quot;golvRuleaaa&quot;</span>);</span><br><span class="line">registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">registerReceiver(orderReceiver02,intentFilter);</span><br><span class="line">registerReceiver(orderReceiver03,intentFilter);</span><br></pre></td></tr></table></figure><p>MainActivity.java(包括了无序广播和有效广播)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">btn_sendBroadcast = findViewById(R.id.btn_broadcast);</span><br><span class="line">        btn_sendBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intetnt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, MyReceiver.class);</span><br><span class="line">                intetnt.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                intetnt.putExtra(<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;这是无序广播内容1&quot;</span>);</span><br><span class="line">                sendBroadcast(intetnt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderReceiver01</span> <span class="variable">orderReceiver01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver01</span>();</span><br><span class="line">        <span class="type">OrderReceiver02</span> <span class="variable">orderReceiver02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver02</span>();</span><br><span class="line">        <span class="type">OrderReceiver03</span> <span class="variable">orderReceiver03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderReceiver03</span>();</span><br><span class="line">        <span class="type">IntentFilter</span> <span class="variable">intentFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">        registerReceiver(orderReceiver01, intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver02,intentFilter);</span><br><span class="line">        registerReceiver(orderReceiver03,intentFilter);</span><br><span class="line"></span><br><span class="line">        btn_orderBroadcast = findViewById(R.id.btn_orderBroadcast);</span><br><span class="line">        btn_orderBroadcast.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.setAction(<span class="string">&quot;guolvRuleaaa&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> <span class="string">&quot;这是原始数据&quot;</span>;</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">extData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line"></span><br><span class="line">                sendOrderedBroadcast(intent,<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">MyReceiver</span>(),<span class="literal">null</span>,<span class="number">0</span>,data,extData);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>MyReceiver.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyReceiver</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//Log.i(&quot;MyReceiver&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver01&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OrderReceiver01.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver01</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver01&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被修改OrderReceive01修改&quot;</span>);</span><br><span class="line">            <span class="comment">//Log.i(&quot;OrderReceiver01&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderReceiver02.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver02</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver02&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被修改OrderReceive02修改&quot;</span>);</span><br><span class="line">            <span class="comment">//Log.i(&quot;OrderReceiver01&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OrderReceiver03.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> a.b.c.myapplication.MyReceiver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderReceiver03</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">        <span class="keyword">if</span>(action.equals(<span class="string">&quot;guolvRuleaaa&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getResultData();</span><br><span class="line">            Log.i(<span class="string">&quot;OrderReceiver03&quot;</span>,<span class="string">&quot;接受到内容,&quot;</span>+data);</span><br><span class="line">            setResultData(<span class="string">&quot;内容已经被修改OrderReceive03修改&quot;</span>);</span><br><span class="line">            <span class="comment">//Log.i(&quot;OrderReceiver01&quot;,intent.getStringExtra(&quot;key2&quot;));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础1</title>
      <link href="/2024/07/13/Android%E5%9F%BA%E7%A1%801/"/>
      <url>/2024/07/13/Android%E5%9F%BA%E7%A1%801/</url>
      
        <content type="html"><![CDATA[<h4 id="Android项目结构"><a href="#Android项目结构" class="headerlink" title="Android项目结构"></a>Android项目结构</h4><p>Android:列出我们经常会用到的内容，比如：Java文件，布局文件等等。</p><p>1、mainifests：其中显示的是安卓的全局描述文件。</p><p>2、java：显示java的源码文件。</p><p>3、res：显示的是资源文件，比如常见的类文件，图片资源文件等等。</p><p>Project:列出我们项目当中的全部文件</p><h4 id="创建AVD并启动安卓模拟器"><a href="#创建AVD并启动安卓模拟器" class="headerlink" title="创建AVD并启动安卓模拟器"></a>创建AVD并启动安卓模拟器</h4><p>模拟器就是模拟手机，平板等安卓设备。在这个模拟器上面测试设备，就可以开发出兼容性较好的设备。从而节约我们的开发成本。</p><p>AVD:安卓虚拟设备的简称。可以用于设置模拟器的硬件列表，模拟器的外观，以及支持安卓系统版本等等。模拟器本身没有操作窗口，需要借助AVD才能实现。</p><h4 id="安卓模拟器的基本配置"><a href="#安卓模拟器的基本配置" class="headerlink" title="安卓模拟器的基本配置"></a>安卓模拟器的基本配置</h4><p>将模拟器的使用语言设置成为简体中文</p><p>模拟器设置成可调试</p><h4 id="创建一个按钮"><a href="#创建一个按钮" class="headerlink" title="创建一个按钮"></a>创建一个按钮</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#FF5722&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_test&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;这是一个按钮&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">&quot;60dp&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>注意显示背景颜色要将values下的themes.xml的</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.Test02&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.Test02&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.DarkActionBar.Bridge&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在MainActivity.java中绑定按钮(通过绑定id的方式)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Button btn=findViewById(R.id.btn_test);</span><br></pre></td></tr></table></figure><p>设置按钮点击响应事件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Button btn=findViewById(R.id.btn_test);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span></span><br><span class="line">            &#123;</span><br><span class="line">                tv.setText(<span class="string">&quot;按钮被点击了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="Android介绍"><a href="#Android介绍" class="headerlink" title="Android介绍"></a>Android介绍</h4><p>Android是一种基于Linux是自由及开放源代码的操纵系统，Android分为四个层，从高层到到底层分别是应用程序层、应用程序框架层、系统运行库层和Linux内核层</p><h4 id="Andorid四大组件"><a href="#Andorid四大组件" class="headerlink" title="Andorid四大组件"></a>Andorid四大组件</h4><p>Android有四大基本组件：Activity、Service服务、BroadcastReceiver广播接收器、Content Provider内容提供者</p><h4 id="Activity介绍"><a href="#Activity介绍" class="headerlink" title="Activity介绍"></a>Activity介绍</h4><p>1、Activity是一个应用程序组件，提供一个屏幕，用户可以用来交互为了完成某项任务</p><p>2、Activity中所有操作系统都与用户密切相关，是一个负责于用户交互的组件，可以通过setConetentwView(View)来显示指定控件</p><p>3、在一个android应用中，一个Activity通常就是一个单独的屏幕，它上面可以显示一些控件也可以监听并处理用户的事件做出响应。Activity之间通过Intent进行通信</p><h4 id="Activity四种基本状态"><a href="#Activity四种基本状态" class="headerlink" title="Activity四种基本状态"></a>Activity四种基本状态</h4><p>(1)Active&#x2F;Running</p><p>一个新的Activity启动入栈后，它显示在屏幕的最前端，处于栈的最顶端(Activity栈顶)，此时它处于可见并可与用户交互的激活状态，叫做活动状态或者运行状态</p><p>(2)Paused</p><p>当Activity失去焦点，被一个新的非全屏的Activity或者一个透明的Activity被放置在栈顶，此时的状态叫做暂停状态(Paused)。此时它依然与窗口管理器保持连接，Activity依然保持活力(保持所有的状态，成员信息，和窗口管理器保持连接)，但是在系统内存极端低下的时候被强行终止掉。所以它依然可见，但已经失去了焦点故不可与用户进行交互。</p><p>(3) Stopped</p><p>如果一个Activity被另外的Activity完全覆盖掉，叫做停止状态(Stopped)。它依然保持所有状态和成员信息，但是它不再可见，所以它的窗口被隐藏，当系统内存需要被用在其他地方的时候，Stopped的Activity将被强行终止掉</p><p>(4)Killed</p><p>如果一个Activity是Paused或者Stopped状态，系统可以将该Activity从内存中删除，Android系统采用两种方式进行删除，要么要求该Activity结束，要么要求终止它的进程。当该Activity再次显示给用户时，它必须重新开始和重置前面的状态</p><h4 id="Activity状态转换："><a href="#Activity状态转换：" class="headerlink" title="Activity状态转换："></a>Activity状态转换：</h4><p>当一个Activity实例被创建、销毁或者启动另外一个Activity时，它在这四种状态之间进行转换，这种转换的发送依赖于用户程序的动作。</p><h4 id="Activity栈"><a href="#Activity栈" class="headerlink" title="Activity栈"></a>Activity栈</h4><p>Android是通过一种Activity栈的方式来管理Activity的，一个Activity的实例决定它在栈中的位置。处于前台的Activity总是在栈的顶端，当前台的Activity因为异常或是其它原因被销毁时，处于栈第二层的Activity将被激活，上浮到栈顶。当新的Activity启动入栈时，原Activity会被压入到栈的第二层。一个Activity在栈中的位置变化反映了它在不同状态间的转换</p><p>通过以下代码将Activity和.xml文件进行绑定</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_main);</span><br></pre></td></tr></table></figure><p>创建一个新的界面的步骤</p><p>1、通过Intent启动</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, SubActivity02.class);<span class="comment">//第一个参数：谁下发的命令，第二个参数：打开哪个Activity</span></span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>2、新的界面绑定.xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setContentView(R.layout.activity_sub02)</span><br></pre></td></tr></table></figure><p>3、清单文件要注册新的Activity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;activity android:name=<span class="string">&quot;.SubActivity02&quot;</span>&gt;</span><br><span class="line">&lt;/activity&gt;</span><br></pre></td></tr></table></figure><p>4、新的Activity要继承Activity</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubActivity02</span> <span class="keyword">extends</span> <span class="title class_">Activity</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/12/java%E5%9F%BA%E7%A1%804/"/>
      <url>/2024/07/12/java%E5%9F%BA%E7%A1%804/</url>
      
        <content type="html"><![CDATA[<h4 id="线程的概念"><a href="#线程的概念" class="headerlink" title="线程的概念"></a>线程的概念</h4><p>线程是指在一个进程中执行的独立的、可调度的执行单元。在JAVA中，线程是Thread类的实例，可以通过继承Thread类或实现Runnable接口来创建线程。每个线程都有自己的执行路径和执行状态，可以共享进程的资源，例如内存、文件句柄等，因此线程之间的通信和协作比进程之间更加高效。</p><h4 id="线程的结构"><a href="#线程的结构" class="headerlink" title="线程的结构"></a>线程的结构</h4><p>在JAVA中，线程的结构通常包括ID、程序计数器、寄存器集合、堆栈和状态等。线程ID是一个唯一标识符，用于区分不同的线程。程序计数器用于当前线程的执行的位置，寄存器集合用于保存线程的上下文信息，堆栈用于保存线程的局部变量和方法用栈，状态用于记录线程的执行状态，例如就行、运行、阻塞等。</p><h4 id="线程的创建和启动"><a href="#线程的创建和启动" class="headerlink" title="线程的创建和启动"></a>线程的创建和启动</h4><p>在JAVA中，线程的创建和启动可以通过继承Thread类或实现Runnable接口来实现。例如，可以创建一个继承Thread类的子类，并重写run（）方法来定义线程的执行逻辑，让后通过start（）方法来启动线程。也可以创建一个实现Runnable接口的类，并实现run（）方法来定义线程的执行逻辑，然后通过创建Thread对象并传入Runnable对象来启动线程。</p><h4 id="线程的同步和协作"><a href="#线程的同步和协作" class="headerlink" title="线程的同步和协作"></a>线程的同步和协作</h4><p>在JAVA中，线程的并发执行可能会导致一些问题，例如竞态条件、死锁、饥饿等。为了避免这些问题，需要使用同步机制，例如锁、信号量、条件变量等，来保证线程之间的互斥和协作。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>线程的优点：</p><p>1、提高系统吞吐率 2、提高IO效率 3、充分利用多核资源</p><p>线程的缺点：</p><p>1、安全问题 2、资源竞争 3、上下文切换 4、可靠性</p><h4 id="继承Thread类创建线程"><a href="#继承Thread类创建线程" class="headerlink" title="继承Thread类创建线程"></a>继承Thread类创建线程</h4><p>在Java中，可以通过继承Thread类来创建线程。例如，可以创建一个继承Thread类的子类，并重写run（)方法来定义线程的执行逻辑，然后通过调start（）方法来启动线程。</p><h4 id="线程的生命周期"><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h4><p>在Java中，线程的生命周期通常包括新建、就绪、运行、阻塞和终止等状态。新建状态是指线程对象被创建但还没启动的状态；就绪状态是指线程已经准备好执行但还没获得CPU资源的状态；阻塞状态是指线程因为某些原因暂时停止执行的状态；终止状态是指线程完毕或者因为异常等原因被终止的状态。</p><h4 id="线程的优先级"><a href="#线程的优先级" class="headerlink" title="线程的优先级"></a>线程的优先级</h4><p>在Java中，每个线程都有一个优先级，用于指定线程在竞争CPU资源时的优先级。线程的优先级可以通过setPriority（）方法来设置，取值范围为1~10，其中1为最低优先级，10为最高优先级。线程的优先级并不是绝对的，只是一个相对的概念，具体的调度顺序还受到操作系统和CPU的影响。</p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>继承Thread类是Java中多线程编程的一种常见方式，它可以提高程序的性能和响应速度，但也需要注意线程之间同步和协作，以避免出现问题。了解Java中继承Thread类的多线程编程，可以帮助我们更好地理解并发编程的本质，提高程序的可靠性性能。同时，了解线程的优先级、异常处理、停止和调试等方面的知识，可以帮助我们更好地掌握线程编程的技巧和方法。</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        TestThread01 testThread01_1=<span class="keyword">new</span> <span class="title class_">TestThread01</span>(<span class="number">1</span>,<span class="number">4</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        TestThread01 testThraad01_2=<span class="keyword">new</span> <span class="title class_">TestThread01</span>(<span class="number">1</span>,<span class="number">4</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        testThread01_1.start();</span><br><span class="line">        testThraad01_2.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;main Thread finished&quot;</span>);</span><br><span class="line">        TestThread02 testThread02_1=<span class="keyword">new</span> <span class="title class_">TestThread02</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程状态：&quot;</span>+testThread02_1.getState());</span><br><span class="line">        testThread02_1.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;线程状态：&quot;</span>+testThread02_1.getState());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testThread02_1.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程状态：&quot;</span>+testThread02_1.getState());</span><br><span class="line">        System.out.println(<span class="string">&quot;main Thread finished&quot;</span>);</span><br><span class="line">        TestThread02 testThread02_2=<span class="keyword">new</span> <span class="title class_">TestThread02</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        testThread02_2.setPriority(<span class="number">6</span>);</span><br><span class="line">        testThread02_2.start();</span><br><span class="line">        <span class="type">TestThread03</span> <span class="variable">testThread03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread03</span>();</span><br><span class="line">        testThread03.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        testThread03.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;main Thread finished&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestThread01</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> loopCount;</span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">TestThread01</span><span class="params">(<span class="type">int</span> pId,<span class="type">int</span> pLoopCount,String pName)</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">this</span>.id=pId;</span><br><span class="line">       <span class="built_in">this</span>.loopCount=pLoopCount;</span><br><span class="line">       <span class="built_in">this</span>.setName(pName);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;loopCount;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;Thread Name:&quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;, loop:&quot;</span>+i);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>TestThread02</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread02</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> loopCount;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestThread02</span><span class="params">(<span class="type">int</span> pId,<span class="type">int</span> pLoopCount,String pName)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.id=pId;</span><br><span class="line">        <span class="built_in">this</span>.loopCount=pLoopCount;</span><br><span class="line">        <span class="built_in">this</span>.setName(pName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;loopCount;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Thread Name:&quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;, loop:&quot;</span>+i);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestThread03</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread03</span> <span class="keyword">extends</span> <span class="title class_">Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是守护线程吗？&quot;</span>+<span class="built_in">this</span>.isDaemon());</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现Runnable接口"><a href="#实现Runnable接口" class="headerlink" title="实现Runnable接口"></a>实现Runnable接口</h4><h4 id="Runnable接口简介"><a href="#Runnable接口简介" class="headerlink" title="Runnable接口简介"></a>Runnable接口简介</h4><p>1、Runnable接口位于java.lang包中</p><p>2、Runnable接口描述了一个可以作为线程运行的类</p><p>3、只包含一个方法：void run()</p><h4 id="为什么要使用Runnable接口"><a href="#为什么要使用Runnable接口" class="headerlink" title="为什么要使用Runnable接口"></a>为什么要使用Runnable接口</h4><p>1、适用于多线程编程</p><p>2、实现Runnable接口的类可以被多个线程执行</p><p>3、避免Java单继承限制</p><h4 id="如何实现Runnable接口"><a href="#如何实现Runnable接口" class="headerlink" title="如何实现Runnable接口"></a>如何实现Runnable接口</h4><p>1、创建一个类，实现Runnable接口</p><p>2、重写run()方法，定义线程要执行的任务</p><p>3、创建Thread对象，将Runnable实现类的实例作为参数传递</p><p>4、调用Thread对象的start（）方法启动线程</p><h4 id="Runnable接口与Thread类的关系"><a href="#Runnable接口与Thread类的关系" class="headerlink" title="Runnable接口与Thread类的关系"></a>Runnable接口与Thread类的关系</h4><p>Runnable接口通常与Thread类一起使用</p><p>Thread类实现了Runnable接口</p><p>Thread类提供了更多线程管理功能，如设置优先级、线程状态查询等</p><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><p>Runnable接口用于避免单继承局限性</p><p>实现Runnable接口的类更方便</p><p>与Thread类结合使用，实现灵活的线程管理</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">myRunnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line">        myRunnable.run();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myRunnable,<span class="string">&quot;thread01&quot;</span>);</span><br><span class="line">        thread01.start();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myRunnable,<span class="string">&quot;thread02&quot;</span>);</span><br><span class="line">        thread01.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="线程启动"><a href="#线程启动" class="headerlink" title="线程启动"></a>线程启动</h4><p>使用Thread类创建线程</p><p>实现Runnable接口或者继承Thread类</p><p>调用start（）方法启动线程</p><h4 id="线程调度"><a href="#线程调度" class="headerlink" title="线程调度"></a>线程调度</h4><p>线程调度由操作系统管理</p><p>Java提供了线程优先级设置</p><p>优先级范围：1（最低）到10（最高）</p><h4 id="线程挂起"><a href="#线程挂起" class="headerlink" title="线程挂起"></a>线程挂起</h4><p>使用Thread.sleep方法让线程暂停</p><p>使用TimeUnit类让线程暂停</p><p>使用LockSupport让线程变相暂停(注意：先解除休眠再休眠不会进入死循环)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.LockSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t1.setName(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        t3.setName(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        t1.setPriority(<span class="number">1</span>);</span><br><span class="line">        t2.setPriority(<span class="number">5</span>);</span><br><span class="line">        t3.setPriority(<span class="number">10</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">        <span class="type">MyThreadSleep</span> <span class="variable">myThreadSleep</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThreadSleep</span>();</span><br><span class="line">        myThreadSleep.start();</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t4.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        LockSupport.unpark(t4);</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">t5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        t5.start();</span><br><span class="line">        LockSupport.unpark(t5);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h4><p>线程调度：操作系统管理，Java提供优先级设置</p><p>线程挂起：说了3种</p><h4 id="线程间的通信"><a href="#线程间的通信" class="headerlink" title="线程间的通信"></a>线程间的通信</h4><p>Object:wait()、notify（）和notifyAll方法</p><p>wait（）来自Object</p><p>sleep不会释放锁，需要捕捉异常；wait会释放锁</p><h4 id="使用synchronized和volatile关键字"><a href="#使用synchronized和volatile关键字" class="headerlink" title="使用synchronized和volatile关键字"></a>使用synchronized和volatile关键字</h4><p>volatile修饰变量，多个角色操作同一个变量</p><p>synchronized修饰代码段，可以是块，也可以是方法</p><h4 id="Condition-await-、signal-和signalAll-方法"><a href="#Condition-await-、signal-和signalAll-方法" class="headerlink" title="Condition: await()、signal()和signalAll()方法"></a>Condition: await()、signal()和signalAll()方法</h4><p>使用方法跟wait雷同，升级版</p><p>优势1：多个condition条件</p><p>优势2：不担心唤醒和等待的顺序问题</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testWait</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Supermarket sm= <span class="keyword">new</span> <span class="title class_">Supermarket</span>();</span><br><span class="line"></span><br><span class="line">        Thread[] producers = <span class="keyword">new</span>  <span class="title class_">Thread</span>[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt; producers.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            producers[i] = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Producter</span>(sm),<span class="keyword">new</span> <span class="title class_">String</span>(i+<span class="string">&quot;号生产者&quot;</span>));</span><br><span class="line">            producers[i].start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Thread[] consumers = <span class="keyword">new</span> <span class="title class_">Thread</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt; consumers.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            consumers[i] = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Consumer</span>(sm),<span class="keyword">new</span> <span class="title class_">String</span>(i+<span class="string">&quot;号消费者&quot;</span>));</span><br><span class="line">            consumers[i].start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testCondition</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition01</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition02</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Condition</span> <span class="variable">condition03</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程执行第一步&quot;</span>);</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                condition01.await();</span><br><span class="line">                System.out.println(<span class="string">&quot;condition01 wake&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">                condition02.signal();</span><br><span class="line">                condition03.await();</span><br><span class="line">                System.out.println(<span class="string">&quot;condition03 wake&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span> (InterruptedException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            condition01.signal();</span><br><span class="line">            condition02.await();</span><br><span class="line">            System.out.println(<span class="string">&quot;condition02 wake&quot;</span>);</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">            condition03.signal();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//testWait();</span></span><br><span class="line">        testCondition();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Supermarket</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Supermarket</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">curGoodCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">maxGoodCount</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(curGoodCount&lt;maxGoodCount)</span><br><span class="line">        &#123;</span><br><span class="line">            curGoodCount++;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;在加紧生产，货架现有&quot;</span>+curGoodCount+<span class="string">&quot;个商品&quot;</span>);</span><br><span class="line">            notify();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">sub</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(curGoodCount&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            curGoodCount--;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;又来购物了，还剩&quot;</span>+curGoodCount+<span class="string">&quot;还剩&quot;</span>+curGoodCount+<span class="string">&quot;个商品&quot;</span>);</span><br><span class="line">            notify();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Producer</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Producter</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    Supermarket supermarket;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Producter</span><span class="params">(Supermarket su)</span></span><br><span class="line">    &#123;</span><br><span class="line">        supermarket = su;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            supermarket.add();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Consumer</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    Supermarket supermarket;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(Supermarket su)</span></span><br><span class="line">    &#123;</span><br><span class="line">        supermarket = su;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            supermarket.sub();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    Supermarket supermarket;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(Supermarket su)</span></span><br><span class="line">    &#123;</span><br><span class="line">        supermarket = su;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            supermarket.sub();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="InetAddress类概述"><a href="#InetAddress类概述" class="headerlink" title="InetAddress类概述"></a>InetAddress类概述</h4><p>用途：InetAddress类用于网络编程，它提供了IP地址和主机名之间的映射。</p><p>特点：InetAddress类没有公共构造函数，我们只能通过类的方法来创建其对象。</p><p>InetAddress类的使用</p><p>构造：getByAddress(String host)：此方法接受一个主机名作为参数，返回该主机名的InetAddress对象。</p><p>使用：getHostAddress():此方法返回Inetddress对象的主机名。如果对象是通过IP地址创建的，那么它将返回IP地址作为主机名。</p><p>getLocalHost():此方法返回一个InetAddress对象，该对象表示本地主机。它是获取本地主机名和IP地址的一种快捷方式。</p><p>其它：</p><p>配合NetworkInterface使用</p><p>看不懂、、、对计算机 网络没有概念</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">macBytes2String</span><span class="params">(<span class="type">byte</span>[] buf)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(buf==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;buf.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">tmp</span> <span class="operator">=</span> Integer.toHexString(buf[i]&amp;<span class="number">0xFF</span>);</span><br><span class="line">            <span class="keyword">if</span>(tmp.length()==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString().toUpperCase();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnknownHostException, SocketException &#123;</span><br><span class="line">        <span class="comment">//InetAddress</span></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">inet01</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);<span class="comment">//根据域名获取对应的InetAddress对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Host Name:&quot;</span> + inet01.getHostName());<span class="comment">//获取解析后的主机名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;IP Address:&quot;</span> + inet01.getHostAddress());<span class="comment">//获取解析后的IP地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">inet02</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;36.155.132.76&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Host Name:&quot;</span> + inet02.getHostName());</span><br><span class="line">        System.out.println(<span class="string">&quot;IP Address:&quot;</span> + inet02.getHostAddress());</span><br><span class="line"></span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">inet03</span> <span class="operator">=</span> InetAddress.getLocalHost();<span class="comment">//获取本地主机的InetAddress对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Host Name:&quot;</span> + inet03.getHostName());<span class="comment">//获取本地主机的主机名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;IP Address:&quot;</span> + inet03.getHostAddress());<span class="comment">//获取本地主机的IP地址</span></span><br><span class="line">        Enumeration&lt;NetworkInterface&gt; networkInerfaces = NetworkInterface.getNetworkInterfaces();<span class="comment">//获取当前主机上所有网络接口的枚举</span></span><br><span class="line">        <span class="comment">//外层的 while 循环遍历每个网络接口，内层的 while 循环遍历每个接口的InetAddress对象。</span></span><br><span class="line">        <span class="keyword">while</span>(networkInerfaces.hasMoreElements())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">NetworkInterface</span> <span class="variable">nif</span> <span class="operator">=</span> networkInerfaces.nextElement();</span><br><span class="line">            Enumeration&lt;InetAddress&gt;inetAddresses=nif.getInetAddresses();<span class="comment">//获取当前网络接口的所有接口地址</span></span><br><span class="line">            <span class="keyword">while</span>(inetAddresses.hasMoreElements())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">InetAddress</span> <span class="variable">addr</span> <span class="operator">=</span> inetAddresses.nextElement();</span><br><span class="line">                List&lt;InterfaceAddress&gt; interfaceAddress=nif.getInterfaceAddresses();</span><br><span class="line">                System.out.println(interfaceAddress);</span><br><span class="line">                System.out.println(nif.getDisplayName());<span class="comment">//获取网络接口的显示名称</span></span><br><span class="line">                System.out.println(nif.getName());<span class="comment">//获取网络接口的名称</span></span><br><span class="line">                System.out.println(addr.getHostName());<span class="comment">//获取InetAddress对象的主机名</span></span><br><span class="line">                System.out.println(addr.getAddress());<span class="comment">//获取InetAddress对象的原始IP地址</span></span><br><span class="line">                <span class="type">byte</span>[] mac = nif.getHardwareAddress();<span class="comment">//获取网络接口的物理地址（MAC地址</span></span><br><span class="line">                System.out.println(macBytes2String(mac));</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="URL的概念"><a href="#URL的概念" class="headerlink" title="URL的概念"></a>URL的概念</h4><p>URL(统一资源定位器)是互联网上用于秒速信息位置的一种方式。</p><p>他是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。</p><p>结构：<a href="https://blog.csdn.net/xinzi123/arcle/detail8?w=445&id=5">https://blog.csdn.net/xinzi123/arcle/detail8?w=445&amp;id=5</a></p><p>协议：&#x2F;&#x2F;域名:端口&#x2F;目录&#x2F;目录？参数1&#x3D;参数1值&amp;参数2&#x3D;参数2值</p><h4 id="URL的创建"><a href="#URL的创建" class="headerlink" title="URL的创建"></a>URL的创建</h4><p>在Java中，我们可以使用Java.net.URL类来创建URL对象</p><h4 id="同步请求"><a href="#同步请求" class="headerlink" title="同步请求"></a>同步请求</h4><p>同步请求是指客户端发出请求后，必须等待服务器回应才能进行下一步操作。</p><p>在此期间，客户端不能做其他操作，这种方式的好处是编程模型简单，缺点是等待服务器响应的时间可能会很长</p><h4 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h4><p>URL是互联网上的资源地址，java提供了URL类来操作URL</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">            HttpURLConnection conn=(HttpURLConnection) url.openConnection();</span><br><span class="line">            conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept-Charset&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> conn.getResponseCode();</span><br><span class="line">            <span class="keyword">if</span>(responseCode==HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                InputStream inputStream=conn.getInputStream();</span><br><span class="line">                <span class="type">InputStreamReader</span> <span class="variable">inputStreamReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                Stream&lt;String&gt; stringStream = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(inputStreamReader).lines();</span><br><span class="line">                <span class="type">String</span> <span class="variable">streamToString</span> <span class="operator">=</span> stringStream.collect(Collectors.joining());</span><br><span class="line">                System.out.println(streamToString);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;error Code:&quot;</span>+responseCode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">post</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">            HttpURLConnection conn=(HttpURLConnection) url.openConnection();</span><br><span class="line">            conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept-Charset&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">            conn.setDoInput(<span class="literal">true</span>);</span><br><span class="line">            conn.setDoOutput(<span class="literal">true</span>);</span><br><span class="line">            conn.setUseCaches(<span class="literal">false</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(conn.getOutputStream()));</span><br><span class="line">            writer.write(<span class="string">&quot;ddfsadfasdf&quot;</span>);</span><br><span class="line">            writer.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> conn.getResponseCode();</span><br><span class="line">            <span class="keyword">if</span>(responseCode==HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                InputStream inputStream=conn.getInputStream();</span><br><span class="line">                <span class="type">InputStreamReader</span> <span class="variable">inputStreamReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                Stream&lt;String&gt; stringStream = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(inputStreamReader).lines();</span><br><span class="line">                <span class="type">String</span> <span class="variable">streamToString</span> <span class="operator">=</span> stringStream.collect(Collectors.joining());</span><br><span class="line">                System.out.println(streamToString);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;error Code:&quot;</span>+responseCode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">downloadFile</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">            HttpURLConnection conn=(HttpURLConnection) url.openConnection();</span><br><span class="line">            conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept-Charset&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">            conn.connect();</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> conn.getResponseCode();</span><br><span class="line">            <span class="keyword">if</span>(responseCode==HttpURLConnection.HTTP_OK)</span><br><span class="line">            &#123;</span><br><span class="line">                InputStream inputStream=conn.getInputStream();</span><br><span class="line">                <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;downloadFileDir&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">                &#123;</span><br><span class="line">                    dir.mkdirs();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dir,<span class="string">&quot;fname.html&quot;</span>);</span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file);</span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> len=-<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>((len=inputStream.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    fos.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">                &#125;</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;error Code:&quot;</span>+responseCode);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//同步get请求</span></span><br><span class="line">        <span class="comment">//get();</span></span><br><span class="line">        <span class="comment">//同步post请求</span></span><br><span class="line">        <span class="comment">//post();</span></span><br><span class="line">        <span class="comment">//下载文件</span></span><br><span class="line">        downloadFile();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="异步请求"><a href="#异步请求" class="headerlink" title="异步请求"></a>异步请求</h4><h4 id="Okhttp3的优点"><a href="#Okhttp3的优点" class="headerlink" title="Okhttp3的优点"></a>Okhttp3的优点</h4><p>提供了对HTTP&#x2F;2和SPDY的支持，这使得对同一个主机发出的所有请求都可以共享相同的套接字连接</p><p>如果HTTP&#x2F;2和SPDY不可用，OkHttp会使用连接池来复用连接以提高效率</p><p>提供了对GZIP的默认支持来降低传输内容的大小</p><p>提供了对HTTP响应的缓存机制，可以避免不必要的网络请求</p><p>当网络出现问题是，Okhttp会自动重试一个主机的多个IP地址</p><h4 id="Okhttp3使用教程"><a href="#Okhttp3使用教程" class="headerlink" title="Okhttp3使用教程"></a>Okhttp3使用教程</h4><p>GRADLE引入包</p><p>创建OkHttpClient实例</p><p>简单来说，通过OkHttpClient可以发送一个Http请求，并读取该Http请求的响应，它是一个生产Call的工厂。</p><p>此外，收益于一个共享的响应缓存&#x2F;线程池&#x2F;复用的连接等因素，绝大多数应用使用一个OkHttpClient实例，便可以满足整个应用的Http请求</p><p>GET和POST</p><p>HTTP头部的设置和读取</p><p>HTTP头的数据结构是Map&lt;String,List<String>&gt;类型。也就是说，对于每个HTTP头，可能有多个值。但是大部分HTTP头都只有一个值，只有少部分HTTP头允许多个值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> okhttp3.*;</span><br><span class="line"><span class="keyword">import</span> org.jetbrains.annotations.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.SecureRandom;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyNet</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> OkHttpClient okHttpClient;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyNet</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个 OkHttpClient.Builder 实例，用于配置 OkHttpClient</span></span><br><span class="line">        OkHttpClient.<span class="type">Builder</span> <span class="variable">clientBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder();</span><br><span class="line">        clientBuilder.readTimeout(<span class="number">20</span>, TimeUnit.SECONDS);</span><br><span class="line">        clientBuilder.connectTimeout(<span class="number">5</span>,TimeUnit.SECONDS);</span><br><span class="line">        clientBuilder.writeTimeout(<span class="number">60</span>,TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置自定义的 SSL 套接字工厂</span></span><br><span class="line">        clientBuilder.sslSocketFactory(mySslSocketFactory());</span><br><span class="line">        <span class="comment">// 设置自定义的主机名验证器，这里简单返回 true，表示不进行主机名验证</span></span><br><span class="line">        clientBuilder.hostnameVerifier(<span class="keyword">new</span> <span class="title class_">HostnameVerifier</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">verify</span><span class="params">(String s, SSLSession sslSession)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 构建 OkHttpClient 实例</span></span><br><span class="line">        okHttpClient = clientBuilder.build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义一个内部类 TrustAllCerts，实现 X509TrustManager 接口</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">TrustAllCerts</span> <span class="keyword">implements</span> <span class="title class_">X509TrustManager</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 空实现，表示信任所有客户端证书</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkClientTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 空实现，表示信任所有客户端证书</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkServerTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回空的证书数组，表示不接受任何证书颁发机构的证书</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">X509Certificate</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> SSLSocketFactory <span class="title function_">mySslSocketFactory</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">SSLSocketFactory</span> <span class="variable">sslSocketFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">SSLContext</span> <span class="variable">sslContext</span> <span class="operator">=</span> SSLContext.getInstance(<span class="string">&quot;TLS&quot;</span>);</span><br><span class="line">            sslContext.init(<span class="literal">null</span>,<span class="keyword">new</span> <span class="title class_">TrustManager</span>[]&#123;<span class="keyword">new</span> <span class="title class_">TrustAllCerts</span>()&#125;,<span class="keyword">new</span> <span class="title class_">SecureRandom</span>());</span><br><span class="line">            sslSocketFactory = sslContext.getSocketFactory();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sslSocketFactory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">interface</span> <span class="title class_">MyCallBack</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">success</span><span class="params">(Call call,Response response)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">failed</span><span class="params">(Call call ,IOException e)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">(String url,MyCallBack myCallBack)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Request.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder();</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> builder.get().url(url).build();</span><br><span class="line">        <span class="type">Call</span> <span class="variable">call</span> <span class="operator">=</span> okHttpClient.newCall(request);</span><br><span class="line">        call.enqueue(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NotNull</span> Call call, <span class="meta">@NotNull</span> IOException e)</span></span><br><span class="line">            &#123;</span><br><span class="line">                myCallBack.failed(call,e);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NotNull</span> Call call, <span class="meta">@NotNull</span> Response response)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">            &#123;</span><br><span class="line">                myCallBack.success(call,response);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">post</span><span class="params">(String url, Map&lt;String,String&gt; bodyMap, MyCallBack myCallBack)</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Socket通信"><a href="#Socket通信" class="headerlink" title="Socket通信"></a>Socket通信</h4><p>Socket通信基本步骤</p><p>创建Socket</p><p>绑定Socket到地址和端口</p><p>监听连接</p><p>接受连接</p><p>发送和接受数据</p><p>关闭Socket</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//            DatagramSocket datagramSocket = DatagramSocket(2343);</span></span><br><span class="line">                <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">7890</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;服务器已启动。&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端已经连接:&quot;</span> + socket.getInetAddress().getHostAddress());</span><br><span class="line"></span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">                <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//接收一次数据</span></span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">bytesRead</span> <span class="operator">=</span> inputStream.read(buffer);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">requestData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(buffer, <span class="number">0</span>, bytesRead);</span><br><span class="line">                    System.out.println(<span class="string">&quot;接收到客户端发送的数据：&quot;</span> + requestData);</span><br><span class="line">                    <span class="comment">//根据不同数据，不同格式，走不同的数据处理分支</span></span><br><span class="line">                    <span class="keyword">if</span> (requestData.equals(<span class="string">&quot;exit&quot;</span>))&#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//发送一次数据</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">responseData</span> <span class="operator">=</span> <span class="string">&quot;hello client!&quot;</span>;</span><br><span class="line">                outputStream.write(responseData.getBytes());</span><br><span class="line">                System.out.println(<span class="string">&quot;向客户端发送响应数据:&quot;</span> + responseData);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                socket.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception ee)&#123;</span><br><span class="line">                ee.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//            DatagramSocket datagramSocket = DatagramSocket(2343);</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">7890</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;服务器已启动。&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                socket = serverSocket.accept();</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端已经连接:&quot;</span> + socket.getRemoteSocketAddress() + <span class="string">&quot;, 端口:&quot;</span> + socket.getPort());</span><br><span class="line"></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Service</span>(socket)).start();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)&#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Clientv1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Clientv1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;192.168.31.106&quot;</span>, <span class="number">7890</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">            <span class="type">OutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//数据源可以是命令行窗口的用户输入，也可以是一个文件里面的内容，也可以是其他数据</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">send1</span> <span class="operator">=</span> <span class="string">&quot;hello server&quot;</span>;</span><br><span class="line">            outputStream.write(send1.getBytes());</span><br><span class="line">            System.out.println(<span class="string">&quot;向服务器发送数据:&quot;</span> + send1);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">send2</span> <span class="operator">=</span> <span class="string">&quot;exit&quot;</span>;</span><br><span class="line">            outputStream.write(send2.getBytes());</span><br><span class="line">            System.out.println(<span class="string">&quot;向服务器发送数据:&quot;</span> + send2);</span><br><span class="line"></span><br><span class="line">            <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">bytesRead</span> <span class="operator">=</span> inputStream.read(buff);</span><br><span class="line">            <span class="type">String</span> <span class="variable">recv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(buff, <span class="number">0</span>, bytesRead);</span><br><span class="line">            System.out.println(<span class="string">&quot;接收到服务器返回数据：&quot;</span> + recv);</span><br><span class="line"></span><br><span class="line">            socket.close();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ee)&#123;</span><br><span class="line">            ee.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Service</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">OutputStream</span> <span class="variable">output</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Socket</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ObjectOutputStream oos= <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">PrintWriter</span> <span class="variable">pw</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Service</span><span class="params">(Socket s)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            input = s.getInputStream();</span><br><span class="line">            output = s.getOutputStream();</span><br><span class="line"></span><br><span class="line">            oos = <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(output);</span><br><span class="line">            oos.writeInt(<span class="number">1314</span>);</span><br><span class="line">            oos.writeDouble(<span class="number">13.14</span>);</span><br><span class="line">            <span class="type">Student</span> <span class="variable">st</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">567</span>);</span><br><span class="line">            oos.writeObject(st);</span><br><span class="line">            oos.flush();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span>  String sName;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> sId;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String sName, <span class="type">int</span> sId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sName = sName;</span><br><span class="line">        <span class="built_in">this</span>.sId = sId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sName=&#x27;&quot;</span> + sName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, sId=&quot;</span> + sId +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础3</title>
      <link href="/2024/07/11/java%E5%9F%BA%E7%A1%803/"/>
      <url>/2024/07/11/java%E5%9F%BA%E7%A1%803/</url>
      
        <content type="html"><![CDATA[<h4 id="异常简介"><a href="#异常简介" class="headerlink" title="异常简介"></a>异常简介</h4><p>Java中的异常又称为例外，是一个程序执行期间发生的事件，它中断正在执行程序的正常指令流。为了能够及时有效地处理程序中的运行错误，必须使用异常类，这可以让程序具有记号的容错性且更加健壮</p><p>在Java中一个异常的产生，主要有如下三种原因：</p><p>1、Java内部错误发生异常，Java虚拟机产生的异常</p><p>2、编写的程序代码中的错误所产生的异常，例如空指针异常、数组越界异常等</p><p>3、通过throw语句手动生成的异常，一般用来告知该方法的调用者一些必要信息</p><p>我们把生成异常对象，并把它提交给运行系统的过程称为抛出（throw）异常。运行时系统在方法的调用堆栈中查找，直到找到能够处理该类型异常的对象，这一个过程为捕获（catch）异常。</p><h4 id="异常分类"><a href="#异常分类" class="headerlink" title="异常分类"></a>异常分类</h4><p>为了能够及时有效地处理程序中的运行错误，Java专门引入了异常类。在Java中所有异常类型都是内置类java.lang.Throwable类的子类，即Throwable位于异常类层次结构的顶层。Throwable类下有连个异常分支Exception和Error</p><p>Throwable类是所有异常和错误的超类，下面有Error和Exception两个子类分别表示错误和异常。其中异常类Exception又分为运行时异常和非运行时异常，这两种异常有很大的区别，也称为不检查异常（Unchecked Exception）和检查异常（Checked Exception）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> m=Integer.parseInt(<span class="string">&quot;334sdfsd&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;m:&quot;</span>+m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> IOException<span class="comment">//throws IOException: 这表明方法可能会抛出IOException异常。</span></span><br><span class="line">    <span class="comment">// 在Java中，如果一个方法可能会抛出检查异常（即必须在方法签名中声明的异常），那么必须使用throws关键字来声明这些异常。</span></span><br><span class="line">    <span class="comment">// 在这个例子中，test2()方法声明可能会抛出IOException异常。</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IOException</span>(<span class="string">&quot;IO出问题了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            test();</span><br><span class="line">            test2();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        catch(NumberFormatException numberFormatException)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            numberFormatException.printStackTrace();</span></span><br><span class="line"><span class="comment">//            System.out.println(numberFormatException.getMessage());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">catch</span>(Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//catch (NumberFormatException numberFormatException) &#123; ... &#125;: 如果在 try 块中出现了 NumberFormatException 异常（即字符串无法被解析为整数），则控制流会跳到 catch 块处理异常。</span></span><br><span class="line"><span class="comment">//numberFormatException.printStackTrace();: 这行代码打印异常的跟踪栈信息，显示异常发生的位置和调用序列。</span></span><br><span class="line"><span class="comment">//System.out.println(numberFormatException.getMessage());: 这行代码打印异常的消息。在这种情况下，异常消息通常是描述问题的文本，例如 &quot;For input string: &quot;334dsfs&quot;&quot;，指出哪里出现了问题。</span></span><br></pre></td></tr></table></figure><h4 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h4><p>如果Java提供的内置异常不能满足程序设计的需求，这时我们可以自己设计Java类库或框架，其中包括异常类型。实现自定义异常类需要继承Exception类或其子类，如果自定义运行时异常类需继承RuntimeException类或其子类</p><p>语法形式：</p><p><class>&lt;自定义异常名&gt;<extends><Exception></p><p>编码规范：</p><p>一般将自定义异常类的类名命名为XXXException，其中XXX用来代表该异常的作用</p><h4 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h4><p>自定义异常类一般包含两个二构造方法：一个是无参的默认构造方法，另一个构造方法以字符串的形式接受一个定制的异常消息，并将该消息传递给超类的构造方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> <span class="keyword">throws</span> MyException</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MyException</span>(<span class="string">&quot;分母不能是0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a/b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(div(<span class="number">8</span>,<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (MyException me)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;出现异常，被catch捕捉到&quot;</span>);</span><br><span class="line">            System.out.println(me.getMessage());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;进入finally块&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结尾return前&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="输入数据流与输出数据流"><a href="#输入数据流与输出数据流" class="headerlink" title="输入数据流与输出数据流"></a>输入数据流与输出数据流</h4><p> 什么是I&#x2F;O</p><p>Java中I&#x2F;O操作主要是指使用Java进行输入，输出操作。java所有的I&#x2F;O机制都是基于数据流进行输入输出，这些数据表示了字符或者字节数据的流动序列。Java的I&#x2F;O流提供了读写数据的标准方法。任何Java中表示数据源的对象都会提供以数据流的方式读写它数据的方法</p><h4 id="数据流的基本概念"><a href="#数据流的基本概念" class="headerlink" title="数据流的基本概念"></a>数据流的基本概念</h4><p>数据流：一组有序，有起点和终点的字节的数据序列。包括输入流和输出流。</p><p>输入流（Input Stream）:</p><p>程序从输入流读取数据源。数据源包括外界（键盘、文件、网络、、），即是将数据源读入到程序的通信通道。</p><p>输出流：</p><p>程序向输出流写入数据。将程序中的数据输出到外界（显示器、打印机、文件、网络、、、）的通信通道</p><p>数据流分类：</p><p>1、字节流：数据流中最小的数据单元是字节</p><p>2、字符流：数据流中最小的数据单元是字符，Java中的字符是Unicode编码，一个字符占用两个字节</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        for(int i=0;i&lt; args.length;i++) &#123;</span></span><br><span class="line"><span class="comment">//            //打印命令行参数</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;参数&quot; + i + &quot;:&quot; + args[i]);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">            <span class="comment">//标准io System.in System.out</span></span><br><span class="line"><span class="comment">//        int userInput;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;请输入一个字符:&quot;);</span></span><br><span class="line"><span class="comment">//        try&#123;</span></span><br><span class="line"><span class="comment">//            while((userInput=System.in.read())!=&#x27;q&#x27;)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println((char)userInput);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//        &#125;catch (IOException e)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(e.toString());</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="type">InputStreamReader</span> <span class="variable">ir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in);</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(ir);</span><br><span class="line">        String s;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取用户输入的一行字符串</span></span><br><span class="line">           <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               s=in.readLine();</span><br><span class="line">               <span class="keyword">if</span>(s.equals(<span class="string">&quot;exit&quot;</span>))</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               System.out.println(s);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="文件数据流"><a href="#文件数据流" class="headerlink" title="文件数据流"></a>文件数据流</h4><p>流的原理：</p><p>输入流(input):将外部的文件通过流读取到内存中</p><p>输出流(output)：将内存中的文件通过流输出到硬盘等存储设备中</p><p>分类：</p><p>按照操作单位分为：字节流，字符流</p><p>按照流向不同分为：输入流，输出流</p><p>按照角色不同分为：节点流，处理流</p><p>FileInputStream</p><p>1、FIleInputStream(File file):通过打开一个到实际文件的连接来创建一个FIleInputStream对象，该文件通过文件系统中的FIle对象file指定。</p><p>2、FileInputStream(String name):通过打开一个到实际文件的连接来创建一个FileInputStrem对象，该文件通过文件系统中的路径路径名name来指定</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//字节流操作文件</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">byte</span> buff[]=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> cnt=System.in.read(buff);</span><br><span class="line">            FileOutputStream fileOutputStream=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;read.txt&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">            fileOutputStream.write(buff,<span class="number">0</span>,cnt);</span><br><span class="line">            fileOutputStream.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fileInputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;read.txt&quot;</span>);</span><br><span class="line">            <span class="type">byte</span> buffer[]=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> readLen=-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>((readLen= fileInputStream.read(buffer,<span class="number">0</span>,buffer.length))!=-<span class="number">1</span>&amp;&amp; readLen&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">byte</span> tmp[] = <span class="keyword">new</span> <span class="title class_">byte</span>[readLen];</span><br><span class="line">                System.arraycopy(buffer,<span class="number">0</span>,tmp,<span class="number">0</span>,readLen);</span><br><span class="line">                System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(tmp ));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h4><p>IO体系中的二FileReader：</p><p>FileReader是针对字符型文件（后缀.txt）的流，根据定义的不同也可以称其为字符流，结点流，输入流</p><p>FileReader的使用：</p><p>1、实例花一个FIle类用于操作的对象</p><p>2、实例化一个FIleReader类并且将file对象作为参数传入他的构造器中。</p><p>3、用FileReader的方法将数据读入</p><p>FileReader读入数据的方法是read()方法</p><p>-&gt;read()的空参构造器；返回读入的第一个字符并继续往下读，如果读到最后一个元素返回-1</p><p>-&gt;read(char cbuf[])一次读入cbuf中字符个元素的个数如果达到文件末尾返回-1</p><p>4、关闭流close（）;方法流不会自动关闭，必须手动关闭，不然会浪费资源</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.security.jgss.GSSUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//字节流操作文件</span></span><br><span class="line">        <span class="comment">/*try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            byte buff[]=new byte[1024];</span></span><br><span class="line"><span class="comment">            int cnt=System.in.read(buff);</span></span><br><span class="line"><span class="comment">            FileOutputStream fileOutputStream=new FileOutputStream(&quot;read.txt&quot;,true);</span></span><br><span class="line"><span class="comment">            fileOutputStream.write(buff,0,cnt);</span></span><br><span class="line"><span class="comment">            fileOutputStream.close();</span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ioe)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ioe.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        FileInputStream fileInputStream = null;</span></span><br><span class="line"><span class="comment">        try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            fileInputStream = new FileInputStream(&quot;read.txt&quot;);</span></span><br><span class="line"><span class="comment">            byte buffer[]=new byte[1024];</span></span><br><span class="line"><span class="comment">            int readLen=-1;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            while((readLen= fileInputStream.read(buffer,0,buffer.length))!=-1&amp;&amp; readLen&gt;0)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                byte tmp[] = new byte[readLen];</span></span><br><span class="line"><span class="comment">                System.arraycopy(buffer,0,tmp,0,readLen);</span></span><br><span class="line"><span class="comment">                System.out.println(new String(tmp ));</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ioe)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ioe.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="comment">//字符文件操作</span></span><br><span class="line">        <span class="comment">/*try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            File file = new File(&quot;a.txt&quot;);</span></span><br><span class="line"><span class="comment">            FileWriter fileWriter=new FileWriter(file);</span></span><br><span class="line"><span class="comment">            fileWriter.write(&quot;这是文件内容&quot;);</span></span><br><span class="line"><span class="comment">            fileWriter.close();</span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ioe)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ioe.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        try</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            File file =new File(&quot;a.txt&quot;);</span></span><br><span class="line"><span class="comment">            FileReader fileReader=new FileReader(file);</span></span><br><span class="line"><span class="comment">            int readLen=-1;</span></span><br><span class="line"><span class="comment">            int ct=-1;</span></span><br><span class="line"><span class="comment">            while ((ct=fileReader.read())!=-1)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                System.out.println((char) ct);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;catch (IOException ee)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            ee.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="comment">//2种转换</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;read .txt&quot;</span>);</span><br><span class="line">            <span class="type">InputStreamReader</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(input);</span><br><span class="line">            FileOutputStream output=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;b.txt&quot;</span>);</span><br><span class="line">            OutputStreamWriter outputStreamWriter=<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(output);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字节流–过滤流"><a href="#字节流–过滤流" class="headerlink" title="字节流–过滤流"></a>字节流–过滤流</h4><p>缓冲区数据流：</p><p>缓冲区数据流有BufferedInputStream和BufferedOutputStream</p><p>网上错误说法：在关闭一个缓冲区输出流之前，要使用flush（）方法，强制输出剩余数据，确保缓冲区里的所有数据全部写入输出流，错误说法。</p><p>数据数据流：</p><p>之前说的数据流中，处理的数据不是字节就是字节数组，但是有很多时候，不只是只有这两种数据，所以就要用专门的过滤数据流来处理，这里给出DataInputStream，DataOutputStream，他们允许对Java基本类型进行处理。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//缓冲区流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;input.bin&quot;</span>);</span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;out.bin&quot;</span>);</span><br><span class="line">            BufferedInputStream bufferedInputStream=<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(in);</span><br><span class="line">            BufferedOutputStream bufferedOutputStream=<span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(out);</span><br><span class="line">            <span class="type">int</span> data;</span><br><span class="line">            <span class="keyword">while</span>((data= bufferedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bufferedOutputStream.write(data);</span><br><span class="line">            &#125;</span><br><span class="line">            bufferedInputStream.close();</span><br><span class="line">            bufferedOutputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">          <span class="comment">//数据流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataOutputStream dataOutputStream=<span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(out);</span><br><span class="line"></span><br><span class="line">            dataOutputStream.writeInt(<span class="number">123</span>);</span><br><span class="line">            dataOutputStream.writeDouble(<span class="number">3.515</span>);</span><br><span class="line">            dataOutputStream.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">            dataOutputStream.close();</span><br><span class="line">            out.close();</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataInputStream dataInputStream=<span class="keyword">new</span> <span class="title class_">DataInputStream</span>(in);</span><br><span class="line">            <span class="type">int</span> num=dataInputStream.readInt();</span><br><span class="line">            <span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> dataInputStream.readDouble();</span><br><span class="line">            <span class="type">boolean</span> flag=dataInputStream.readBoolean();</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d,%f,%b&quot;</span>,num,pi,flag);</span><br><span class="line">            dataInputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字节流–可持久化"><a href="#字节流–可持久化" class="headerlink" title="字节流–可持久化"></a>字节流–可持久化</h4><p>可持久化就是对象通过描述自己状态的数值来记录自己的过程</p><p>当一个类实现Serializable接口时，表面该类加入了对象串行化协议</p><p>需要注意的是，要使一个java对象可序列化，必须实现Serializable接口。这个接口没有任何方法，只是一个标记接口，用于告诉java虚拟机这个类可以被序列化。</p><p>字节流–管道流、对象流</p><p>管道数据流：PipedOutputStream和PipedInputStream，管道的两端建立连接后就可以通信</p><p>对象流：ObjectOutputStream和ObjectInputStream，将一个对象示例写入文件</p><p>transient关键字用于标记一个变量不需要被序列化</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name,<span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//缓冲区流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;input.bin&quot;</span>);</span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;out.bin&quot;</span>);</span><br><span class="line">            BufferedInputStream bufferedInputStream=<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(in);</span><br><span class="line">            BufferedOutputStream bufferedOutputStream=<span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(out);</span><br><span class="line">            <span class="type">int</span> data;</span><br><span class="line">            <span class="keyword">while</span>((data= bufferedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bufferedOutputStream.write(data);</span><br><span class="line">            &#125;</span><br><span class="line">            bufferedInputStream.close();</span><br><span class="line">            bufferedOutputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数据流对象</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataOutputStream dataOutputStream=<span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(out);</span><br><span class="line"></span><br><span class="line">            dataOutputStream.writeInt(<span class="number">123</span>);</span><br><span class="line">            dataOutputStream.writeDouble(<span class="number">3.515</span>);</span><br><span class="line">            dataOutputStream.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">            dataOutputStream.close();</span><br><span class="line">            out.close();</span><br><span class="line">            FileInputStream in=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;dataOut.bin&quot;</span>);</span><br><span class="line">            DataInputStream dataInputStream=<span class="keyword">new</span> <span class="title class_">DataInputStream</span>(in);</span><br><span class="line">            <span class="type">int</span> num=dataInputStream.readInt();</span><br><span class="line">            <span class="type">double</span> <span class="variable">pi</span> <span class="operator">=</span> dataInputStream.readDouble();</span><br><span class="line">            <span class="type">boolean</span> flag=dataInputStream.readBoolean();</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d,%f,%b&quot;</span>,num,pi,flag);</span><br><span class="line">            dataInputStream.close();</span><br><span class="line">            in.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张三&quot;</span>,<span class="number">18</span>);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileOutputStream out=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;objectOut.bin&quot;</span>);</span><br><span class="line">            ObjectOutputStream objectOutputStream=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(out);</span><br><span class="line">            objectOutputStream.writeObject(person01);</span><br><span class="line">            objectOutputStream.close();</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;objectOut.bin&quot;</span>);</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(in);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Person</span> <span class="variable">person02</span> <span class="operator">=</span> (Person) objectInputStream.readObject();</span><br><span class="line">                objectInputStream.close();</span><br><span class="line">                System.out.println(<span class="string">&quot;\r\n&quot;</span>+person02.getName()+person02.getAge()+<span class="string">&quot;,&quot;</span>+person02.getAge());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                objectInputStream.readObject();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>管道</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PipedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PipedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PipedOutputStream</span> <span class="variable">pipedOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedOutputStream</span>();</span><br><span class="line">        <span class="type">PipedInputStream</span> <span class="variable">pipedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedInputStream</span>(pipedOutputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//线程1</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">writeThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pipedOutputStream.write(<span class="string">&quot;hello world&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">            &#123;</span><br><span class="line">                ioe.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//线程2</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">readThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">int</span> data;</span><br><span class="line">                <span class="keyword">while</span>((data=pipedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println((<span class="type">char</span>)data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        writeThread.start();</span><br><span class="line">        readThread.start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writeThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            readThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符流–缓冲区读者写者"><a href="#字符流–缓冲区读者写者" class="headerlink" title="字符流–缓冲区读者写者"></a>字符流–缓冲区读者写者</h4><p>缓冲区的出现，提高了对数据的读写效率，缓冲区要结合流才可以使用，缓冲区是在流的基础上对流的功能进行增强</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">PipedOutputStream</span> <span class="variable">pipedOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedOutputStream</span>();</span><br><span class="line">        <span class="type">PipedInputStream</span> <span class="variable">pipedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PipedInputStream</span>(pipedOutputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//线程1</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">writeThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pipedOutputStream.write(<span class="string">&quot;hello world&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">            &#123;</span><br><span class="line">                ioe.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//线程2</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">readThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="type">int</span> data;</span><br><span class="line">                <span class="keyword">while</span>((data=pipedInputStream.read())!=-<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.println((<span class="type">char</span>)data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e)</span><br><span class="line">            &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        writeThread.start();</span><br><span class="line">        readThread.start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writeThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            readThread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//字符流 缓冲区</span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">FileReader</span> <span class="variable">fileReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;test.iml&quot;</span>);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(fileReader);</span><br><span class="line">            String line;</span><br><span class="line">            <span class="type">FileWriter</span> <span class="variable">fileWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;b.iml&quot;</span>);</span><br><span class="line">            <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(fileWriter);</span><br><span class="line">            <span class="keyword">while</span>((line=reader.readLine())!=<span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                writer.write(line+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            writer.close();</span><br><span class="line">            fileReader.close();</span><br><span class="line">            fileWriter.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioe)</span><br><span class="line">        &#123;</span><br><span class="line">            ioe.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="File类概述"><a href="#File类概述" class="headerlink" title="File类概述"></a>File类概述</h4><p>java.io.File类:文件和文件目录路径的抽象表示形式，与平台无关</p><p>File类中涉及到的关于文件或文件目录的创建、删除、重命名、修改时间、文件大小等方法，并未涉及到写入或读取文件内容的操作。如果需要读取或写入文件内容，必须使用IO流来完成</p><p>想要在Java程序中表示一个真实存在的文件或目录，那么必须有一个File对象，但是Java程序中的一个File对象，可能没有一个真实存在的文件或目录</p><h4 id="绝对路径-vs-相对路径"><a href="#绝对路径-vs-相对路径" class="headerlink" title="绝对路径 vs 相对路径"></a>绝对路径 vs 相对路径</h4><p>1、绝对路径：是一个固定的路径，从盘符开始</p><p>2、相对路径：是相对于某个位置开始</p><p>main（）方法中的相对路径是相对于当前工程</p><p>单元测试方法中的相对路径是相对于当前模块</p><h4 id="路径分隔符："><a href="#路径分隔符：" class="headerlink" title="路径分隔符："></a>路径分隔符：</h4><p>1、路径中的每级目录之间用一个路径分隔符隔开</p><p>2、路径分隔符和系统有关：</p><p>windows和DOS系统默认使用”\“来表示</p><p>UNIX和URL使用“\”来表示</p><p>3、Java程序支持跨平台运行，因此路径分隔符要慎用。</p><p>为了解决这个隐患，File类提供了一个常量：</p><p>public static final String separator:根据操作系统，动态的提供分隔符。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//File类的使用</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;src/a.txt&quot;</span>);</span><br><span class="line">        System.out.println(file.getAbsoluteFile());</span><br><span class="line">        System.out.println(file.getParent());</span><br><span class="line">        System.out.println(file.getPath());</span><br><span class="line">        System.out.println(file.getCanonicalPath());</span><br><span class="line">        System.out.println(file.canWrite());</span><br><span class="line">        System.out.println(file.isFile());</span><br><span class="line">        System.out.println(file.isDirectory());</span><br><span class="line">        System.out.println(file.getName());</span><br><span class="line">        System.out.println(file.length());</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;最后修改时间&quot;</span>+simpleDateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>(file.lastModified())));</span><br><span class="line">        System.out.println(File.separator);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="随机访问文件"><a href="#随机访问文件" class="headerlink" title="随机访问文件"></a>随机访问文件</h4><p>使用随机访问文件，我们可以从文件读取以及写入文件。使用文件输入和输出流读取和写入时顺序过程。</p><p>使用随机访问文件，可以在文件中的任何位置读取或写入。</p><p>RandomAccessFile类的一个对象可以进行随机文件访问。可以读&#x2F;写字节和所有原始类型的值到一个文件</p><p>RandomAccessFile可以直接使用其readUTF()和writeUTF()方法处理字符串。</p><p>RandomAccessFile类在不在InputStream和OutputStream类的层次结构中。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//File类的使用</span></span><br><span class="line"><span class="comment">//        File file = new File(&quot;src/a.txt&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getAbsoluteFile());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getParent());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getPath());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getCanonicalPath());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.canWrite());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.isFile());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.isDirectory());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.getName());</span></span><br><span class="line"><span class="comment">//        System.out.println(file.length());</span></span><br><span class="line"><span class="comment">//        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;最后修改时间&quot;+simpleDateFormat.format(new Date(file.lastModified())));</span></span><br><span class="line"><span class="comment">//        System.out.println(File.separator);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//随机读写文件</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;randomAccessFile.txt&quot;</span>;</span><br><span class="line">       <span class="type">File</span> <span class="variable">fo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">       <span class="keyword">if</span>(!fo.exists())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="type">RandomAccessFile</span> <span class="variable">randomAccessFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(fo.getPath(),<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">           randomAccessFile.writeInt(<span class="number">1234</span>);</span><br><span class="line">           randomAccessFile.writeDouble(<span class="number">5.67</span>);</span><br><span class="line">           randomAccessFile.writeUTF(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">           randomAccessFile.close();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">RandomAccessFile</span> <span class="variable">randomAccessFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(fo.getPath(),<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">intVal</span> <span class="operator">=</span> randomAccessFile.readInt();</span><br><span class="line">       <span class="type">Double</span> <span class="variable">doubleVal</span> <span class="operator">=</span> randomAccessFile.readDouble();</span><br><span class="line">       System.out.println(<span class="string">&quot;int:&quot;</span>+intVal+<span class="string">&quot;,double&quot;</span>+doubleVal);</span><br><span class="line">       <span class="type">long</span> <span class="variable">cur</span> <span class="operator">=</span> randomAccessFile.getFilePointer();</span><br><span class="line">       randomAccessFile.seek(<span class="number">4</span>);</span><br><span class="line">       randomAccessFile.writeDouble(<span class="number">8.99</span>);</span><br><span class="line">       randomAccessFile.seek(cur);</span><br><span class="line">       randomAccessFile.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">RandomAccessFile</span> <span class="variable">randomAccessFile2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RandomAccessFile</span>(fo.getPath(),<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">intVal2</span> <span class="operator">=</span> randomAccessFile2.readInt();</span><br><span class="line">        <span class="type">Double</span> <span class="variable">doubleVal2</span> <span class="operator">=</span> randomAccessFile2.readDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;int:&quot;</span>+intVal2+<span class="string">&quot;,double&quot;</span>+doubleVal2);</span><br><span class="line">        <span class="type">long</span> <span class="variable">cur2</span> <span class="operator">=</span> randomAccessFile.getFilePointer();</span><br><span class="line">        randomAccessFile2.seek(<span class="number">4</span>);</span><br><span class="line">        randomAccessFile2.writeDouble(<span class="number">0.00</span>);</span><br><span class="line">        randomAccessFile2.seek(cur);</span><br><span class="line">        randomAccessFile2.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//要注意文件是否已经存在！！！</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础2</title>
      <link href="/2024/07/10/java%E5%9F%BA%E7%A1%802/"/>
      <url>/2024/07/10/java%E5%9F%BA%E7%A1%802/</url>
      
        <content type="html"><![CDATA[<h4 id="多态性，对象转换类型"><a href="#多态性，对象转换类型" class="headerlink" title="多态性，对象转换类型"></a>多态性，对象转换类型</h4><p>父类不能强转成子类</p><h4 id="关键字static"><a href="#关键字static" class="headerlink" title="关键字static"></a>关键字static</h4><p>static关键字表示静态，可以修饰成员变量、方法和代码块。</p><p>static修饰成员变量：</p><p>1、被static修饰的属性所用对象共享同一个值</p><p>2、被static修饰的属性值会被保存在内存的方法区中</p><p>3、当该类的所有对象共享一个资源时，将这个资源设置为静态能够节省内存</p><p>4、静态属性使用类名调用</p><p>5、静态属性也称类属性</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Cat cat01=<span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        Cat cat02=<span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        cat01.name=<span class="string">&quot;小黄&quot;</span>;</span><br><span class="line">        cat01.eat(<span class="string">&quot;面包&quot;</span>);</span><br><span class="line">        Cat.eat(<span class="string">&quot;鱼&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Cat.name=<span class="string">&quot;小白&quot;</span>;</span><br><span class="line">        Cat.eat(<span class="string">&quot;鱼&quot;</span>);</span><br><span class="line">        cat01.eat(<span class="string">&quot;面包&quot;</span>);</span><br><span class="line">        cat02.eat(<span class="string">&quot;饺子&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        cat02.name=<span class="string">&quot;小黑&quot;</span>;</span><br><span class="line">        cat02.eat(<span class="string">&quot;饺子&quot;</span>);</span><br><span class="line">        cat01.eat(<span class="string">&quot;面包&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">(String food)</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(name+<span class="string">&quot;吃&quot;</span>+food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>static修饰方法:</p><p>1、被static修饰的方法称之为静态方法、类方法</p><p>2、静态方法可以直接使用类名无需实例化对象</p><p>3、静态方法中无法调用普通（实例）属性和方法，因为静态方法中没有this</p><p>4、如果一个不需要访问当前类中的实例成员就可以定义称静态的</p><p>5、静态方法不能被重写</p><h4 id="abstract关键字"><a href="#abstract关键字" class="headerlink" title="abstract关键字"></a>abstract关键字</h4><p>abstract表示抽象的，可以修饰类和方法。</p><h3 id="方法重写规则与包装类型"><a href="#方法重写规则与包装类型" class="headerlink" title="方法重写规则与包装类型"></a>方法重写规则与包装类型</h3><h4 id="重写方法规则一："><a href="#重写方法规则一：" class="headerlink" title="重写方法规则一："></a>重写方法规则一：</h4><p>方法名和形式参数必须具有完全相同的签名，返回类型也必须一致。方法可以改变返回类型，但子类的返回类型必须时父类返回类型的子类型。例如，如果父类的方法返回一个Object，子类的重写方法可以返回一个String，但重写方法不能返回Integer,因为String不是Integer的子类型</p><p>子类重写的方法可以改变其访问权限，比如将父类中的Protected方法重写为public方法</p><p> 子类重写的方法不能抛出比父类中被重写的方法更广泛的异常</p><h4 id="重写方法规则二"><a href="#重写方法规则二" class="headerlink" title="重写方法规则二:"></a>重写方法规则二:</h4><p>如果一个类声明了一个带有final关键字，表明此方法为不可变的，不能被重写</p><p> 子类可以重写父类中被声明为static的方法，但必须保持方法的签名（方法名和参数列表）完全一致</p><p>子类重写的方法可以调用父类中被重写的方法，而且可以使用super关键字在子类中直接调用父类中被重写的方法</p><h4 id="包装类型"><a href="#包装类型" class="headerlink" title="包装类型"></a>包装类型</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> age=<span class="number">18</span>;</span><br><span class="line">        Integer age2=Integer.valueOf(<span class="number">19</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;age &quot;</span>+age);</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2.intValue());</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2.toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2);</span><br><span class="line">        System.out.println(<span class="string">&quot;age2 &quot;</span>+age2.byteValue());<span class="comment">//取位数最低的一字节</span></span><br><span class="line">        Boolean isObj=Boolean.valueOf(age2 <span class="keyword">instanceof</span> Object);</span><br><span class="line">        System.out.println(<span class="string">&quot;isObj:&quot;</span>+isObj.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接口的定义和实现"><a href="#接口的定义和实现" class="headerlink" title="接口的定义和实现"></a>接口的定义和实现</h4><p>接口的关键字：interface</p><p>在定义一个接口时，我们需要把public class xxx 中的class改成interface，即public interface xxx ,这就是定义了一个接口。</p><h4 id="接口中的定义的方法与常量"><a href="#接口中的定义的方法与常量" class="headerlink" title="接口中的定义的方法与常量"></a>接口中的定义的方法与常量</h4><p>在定义方法时，例如我们定义一个run方法与go方法，我们可以写成public abstract void run();和 public abstract void go();但是因为在接口的定义中都是public  abstract，因此我们只需要写：void run();和void go();即可。即直接写：方法类型+方法名（参数 类型）即可。</p><p>在定义常量时，因为接口中所有的常量都是public static void final, 而final类是无法被继承的，所以我们不经常在接口中定义常量</p><p>接口及其实现类，implements关键字</p><p>由于接口仅仅能给我们定义一个方法，无法让我们去实例化（即实现它），因此我们需要再写一个实现类来实现它，而这个实现类的名字就是接口名+Impl</p><p>Impl就是implements，而想要实现接口中的类，就需要重写接口中的所有方法</p><h4 id="接口与继承的不同"><a href="#接口与继承的不同" class="headerlink" title="接口与继承的不同"></a>接口与继承的不同</h4><p>接口为多继承，而extend是单继承，例如我们在这里再定义一个TimerServi的接口，我们可以再UserService实现类中再继承一个TimeService，只要重写TimeService中的方法即可</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> implents UserService, TimeService&#123;&#125;</span><br></pre></td></tr></table></figure><p>Main函数</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Cat cat=<span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        cat.sleep();</span><br><span class="line">        cat.hunt();</span><br><span class="line">        cat.playwithme();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Animal接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Pet接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Pet</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">playwithme</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Hunt接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Hunt</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">hunt</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cat类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">implements</span> <span class="title class_">Animal</span>,Hunt,Pet</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;睡觉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hunt</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打猎&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playwithme</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃饭&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="内部类与匿名类"><a href="#内部类与匿名类" class="headerlink" title="内部类与匿名类"></a>内部类与匿名类</h4><p>Java中的类有两种重要的成员，即成员变量和方法。其实Java还允许类有一种成员，即在一个类中声明另一个类，这就是内部类，而包含内部类的类叫做外嵌类</p><p>内部类与外嵌类之间的关系如下：</p><p>内部类可以使用外嵌类的成员变量和方法</p><p>内部类中不可以声明类变量和类方法</p><p>外嵌类可以使用内部类声明对象作为外嵌类的成员</p><p>内部类仅供它的外嵌类使用，其他类不可以用某个类的内部类声明对象</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Farm farm=<span class="keyword">new</span> <span class="title class_">Farm</span>(<span class="string">&quot;红星农场&quot;</span>);</span><br><span class="line">        farm.cow.speak();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Farm类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Farm</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String farmName;</span><br><span class="line">    <span class="keyword">public</span> Cow cow=<span class="keyword">new</span> <span class="title class_">Cow</span>(<span class="number">5</span>,<span class="string">&quot;hyq&quot;</span>);</span><br><span class="line">    Farm(String pFarmName)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.farmName=pFarmName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Cow</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> String cowName;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line">        Cow(<span class="type">int</span> pAge,String pCowName)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">this</span>.age=pAge;</span><br><span class="line">            <span class="built_in">this</span>.cowName=pCowName;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我是&quot;</span>+cowName+<span class="string">&quot;,年龄&quot;</span>+age+<span class="string">&quot;我所在农场: &quot;</span>+farmName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>内部类可以被修饰为static内部类，类是一种数据类型，那么static内部类就是外嵌类中的一种静态数据类型，这样其他类就可以使用static内部类来声明创建对象了。（注意：static内部类不能操作外嵌类中的实例成员变量）</p><h4 id="和类有关的匿名类"><a href="#和类有关的匿名类" class="headerlink" title="和类有关的匿名类"></a>和类有关的匿名类</h4><p>我们可以直接使用一个类的子类的类体创建一个对象。再创建子类对象时，使用的是父类的构造方法和类体，这个类体被认为是子类去掉类声明之后的类体，称作匿名类</p><p>Main</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Farm farm=<span class="keyword">new</span> <span class="title class_">Farm</span>(<span class="string">&quot;红星农场&quot;</span>);</span><br><span class="line">        farm.cow.speak();</span><br><span class="line">       Speak speak=<span class="keyword">new</span> <span class="title class_">Speak</span>()</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span></span><br><span class="line">           &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;hello ! 一&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Speak</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;hello ! 二&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Speak类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Speak</span></span><br><span class="line">&#123;</span><br><span class="line">    Speak()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是父类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>匿名对象的引用可以传递给一个匹配的参数，匿名类常用的方式是向方法的参数传值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Main中的代码片段      </span></span><br><span class="line">A a=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.f(<span class="keyword">new</span> <span class="title class_">Speak</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;hello ! 三&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Speak类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Speak</span></span><br><span class="line">&#123;</span><br><span class="line">    Speak()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是父类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">speakhello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="和接口有关的匿名类"><a href="#和接口有关的匿名类" class="headerlink" title="和接口有关的匿名类"></a>和接口有关的匿名类</h4><p>我们可以直接使用接口名和一个类体创建一个匿名对象，这个类体被称为是实现了这个接口的类去掉声明后的类体，称为匿名类。</p><p>如果某个方法的参数是接口类型，那么可以使用接口名和类体组合创建一个匿名对象传递给这个方法的参数，但类体必须重写接口中的所有方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Main中的代码片段 </span></span><br><span class="line"><span class="comment">//和接口有关的匿名类</span></span><br><span class="line">        <span class="type">Cubic</span> <span class="variable">cubic</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cubic</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> x * x * x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(cubic.getCubic(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">Cubic</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> x * x * x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.getCubic(<span class="number">4</span>));</span><br><span class="line"><span class="comment">//Cubic类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Cubic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//传参方法</span></span><br><span class="line">B b=<span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        b.g(<span class="keyword">new</span> <span class="title class_">Cubic</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getCubic</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> x*x*x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="数组声明与定义区别"><a href="#数组声明与定义区别" class="headerlink" title="数组声明与定义区别"></a>数组声明与定义区别</h4><p>对于变量来说，Java 定义就是声明</p><p>例如：int[] a; 我们可说它是定义也可以说它是声明</p><h4 id="定义初始化方法（见下方代码）"><a href="#定义初始化方法（见下方代码）" class="headerlink" title="定义初始化方法（见下方代码）"></a>定义初始化方法（见下方代码）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//数组定义</span></span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">4</span>];</span><br><span class="line">        <span class="type">int</span> arr3_len=<span class="number">5</span>;</span><br><span class="line">        <span class="type">int</span>[] arr3=<span class="keyword">new</span> <span class="title class_">int</span>[arr3_len];</span><br><span class="line">        <span class="comment">//错误演示</span></span><br><span class="line">        <span class="comment">//int[] arr4;</span></span><br><span class="line">        <span class="comment">//arr4=&#123;4,5,6&#125;;  错误原因，定义和初始化必须在一起</span></span><br><span class="line">        <span class="comment">//int[] arr4=new int[]&#123;5,6,7,8&#125; 错误原因，不可指定长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//访问元素</span></span><br><span class="line">        <span class="type">int</span>[] arr4=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">        <span class="type">int</span> one=arr4[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt; arr4.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;arr4 下标&quot;</span>+i+<span class="string">&quot;:&quot;</span>+arr4[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数组的复制 拷贝</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//浅拷贝</span></span><br><span class="line">        <span class="type">int</span>[] arr5=arr4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//深拷贝</span></span><br><span class="line">        <span class="type">int</span>[] arr6= <span class="keyword">new</span> <span class="title class_">int</span>[arr4.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;arr4.length;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            arr6[j]=arr4[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i:arr6)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] arr7=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        System.arraycopy(arr4,<span class="number">0</span>,arr7,<span class="number">1</span>,arr4.length);</span><br><span class="line">        <span class="comment">//不规则数组</span></span><br><span class="line">        <span class="type">int</span>[][] arr8=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>][];</span><br><span class="line">        arr8[<span class="number">0</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">        arr8[<span class="number">1</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        arr8[<span class="number">2</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        arr8[<span class="number">3</span>]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> m=<span class="number">0</span>;m&lt;arr8.length;m++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> n=<span class="number">0</span>;n&lt;arr8[m].length;n++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(arr8[m][n]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>Java.lang.String是java的字符串类. String是一个不可变的对象，所有对String修改的操作都需要构造新的String实例。</p><p>java.lang.StringBuffer与java.lang.StringBuilder是可变的字符串对象，StringBuilder较快但是线程不安全，在对线程安全没有要求时我们通常使用StringBuilder</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span>[] data=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>&#125;;</span><br><span class="line">        String s1= <span class="keyword">new</span> <span class="title class_">String</span>(data);</span><br><span class="line">        String s2= <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;efg&quot;</span>);</span><br><span class="line">        String s3=<span class="string">&quot;hijk&quot;</span>;</span><br><span class="line">        String s4=<span class="string">&quot;lmn&quot;</span>;</span><br><span class="line">        String s5=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        StringBuffer sb=<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s3);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            s5=s3+i;</span><br><span class="line">            sb.append(i);</span><br><span class="line">            System.out.println(s5);</span><br><span class="line">            System.out.println(sb.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><p>集合与数组</p><p>容器的分类：</p><p>Collection：List、Set</p><p>Map：HashMap、HashTable、TreeMap、ConcurrHashMap</p><p>List 有序集合，允许重复的元素</p><p>Set无序集合，不允许重复的元素</p><p>HashMap：采用散列算法来实现，底层用哈希表来存储数据，因此要求键不能重复。线程不安全，HashMap在查找、删除、修改方面效率都非常高。允许key或value为null</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//List</span></span><br><span class="line">        List myList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        myList.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        myList.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        myList.add(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        myList.add(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;myList.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(myList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        Iterator it=myList.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            Object o=it.next();</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;String&gt; aList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        aList.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        <span class="comment">//HashMap</span></span><br><span class="line">        Map&lt;String,String&gt;map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;福建省&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;湖南省&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;海南省&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;String,String&gt; entry:map.entrySet())</span><br><span class="line">        &#123;</span><br><span class="line">            String key=entry.getKey();</span><br><span class="line">            String val=entry.getValue();</span><br><span class="line">            System.out.println(<span class="string">&quot;key&quot;</span>+key+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;val&quot;</span>+val);</span><br><span class="line">        &#125;</span><br><span class="line">        Iterator&lt;Map.Entry&lt;String,String&gt;&gt;entries=map.entrySet().iterator();</span><br><span class="line">        <span class="keyword">while</span>(entries.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            Map.Entry&lt;String,String&gt;entry=entries.next();</span><br><span class="line">            String key= entry.getKey();</span><br><span class="line">            String val=entry.getValue();</span><br><span class="line">            System.out.println(<span class="string">&quot;key&quot;</span>+key+<span class="string">&quot;,val&quot;</span>+val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String oneKey:map.keySet())</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String oneVal:map.values())</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础1</title>
      <link href="/2024/07/09/java%E5%9F%BA%E7%A1%801/"/>
      <url>/2024/07/09/java%E5%9F%BA%E7%A1%801/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h4 id="查看对象在内存中的布局"><a href="#查看对象在内存中的布局" class="headerlink" title="查看对象在内存中的布局"></a>查看对象在内存中的布局</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">import</span> org.openjdk.jol.info.ClassLayout;</span><br><span class="line">System.out.println(ClassLayout.parseInstance(student).toPrintable());</span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>单行：Ctrl + &#x2F;</p><p>多行：Ctrl + shift + &#x2F;  常用于：说明方法作用或一段代码功能</p><p>文档：&#x2F;** 常用于：类定义或公有方法定义的前面</p><h4 id="创建数组类"><a href="#创建数组类" class="headerlink" title="创建数组类"></a>创建数组类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt;arraylist=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br></pre></td></tr></table></figure><p>常量关键字：final</p><p>算数左移（符号位不变，右边补零p&lt;&lt;3）</p><p>算数右移（符号位不变，左边补符号位p&gt;&gt;3）</p><p>逻辑右移（左边补0 p&gt;&gt;&gt;3）</p><h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">q&gt;r?a:b</span><br></pre></td></tr></table></figure><h4 id="instance判断是否是Student类的实例"><a href="#instance判断是否是Student类的实例" class="headerlink" title="instance判断是否是Student类的实例"></a>instance判断是否是Student类的实例</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(s1 <span class="keyword">instanceof</span> student)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.pritln(<span class="string">&quot;s1是student的实例&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>boolean类型的不能转换成其他类型</p><p>在混合运算中，容量小的类型自动转换为大容量的数据类型，排序如下：</p><p>byte,short,char-&gt;int-&gt;long-&gt;float-&gt;double</p><p>byte,short,char之间不会相互转换，他们三者在计算时首先会转换为int类型</p><p>容量大的数据类型转换为容量小的类型时要加上强制转换符</p><p>有多种类型的数据混合运算时，系统首先自动将所有的数据转换成容量最大的那种数据类型，然后进行计算</p><p>默认出现小数都算double</p><p>默认出现数字都算int</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i1=<span class="number">123</span>;</span><br><span class="line">        <span class="type">int</span> i2=<span class="number">456</span>;</span><br><span class="line">        <span class="type">double</span> d1=(i1+i2)*<span class="number">1.2</span>;<span class="comment">//自动类型转换</span></span><br><span class="line">        <span class="type">float</span> f1=(<span class="type">float</span>)((i1+i2)*<span class="number">1.2</span>);</span><br><span class="line">        <span class="type">byte</span> b1=<span class="number">67</span>;</span><br><span class="line">        <span class="type">byte</span> b2=<span class="number">89</span>;</span><br><span class="line">        <span class="type">byte</span> b3=(<span class="type">byte</span>)(b1+b2);</span><br><span class="line">        <span class="type">double</span> d2=<span class="number">1e200</span>;</span><br><span class="line">        System.out.println(d2);</span><br><span class="line">        <span class="type">float</span> f2=(<span class="type">float</span>)(d2);</span><br><span class="line">        System.out.println(f2);<span class="comment">//打印输出 f2 的值。由于 d2 超出了 float 的表示范围，所以 f2 将会是特定的值，通常是 Infinity 或 -Infinity，这取决于 d2 的正负。</span></span><br><span class="line">        <span class="type">float</span> f3=<span class="number">1.23f</span>;</span><br><span class="line">        <span class="type">long</span> l1=<span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> l2=<span class="number">3000000L</span>;</span><br><span class="line">        <span class="type">float</span> f4=l1+l2+f3;</span><br><span class="line">        System.out.println(f4);</span><br><span class="line">        <span class="type">long</span> l3=(<span class="type">long</span>)f4;</span><br><span class="line">        System.out.println(l3);</span><br><span class="line">        <span class="type">byte</span> a=(<span class="type">byte</span>)<span class="number">128</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for循环遍历数组"><a href="#for循环遍历数组" class="headerlink" title="for循环遍历数组"></a>for循环遍历数组</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i:arr)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类的定义格式（移动窗口例子）"><a href="#类的定义格式（移动窗口例子）" class="headerlink" title="类的定义格式（移动窗口例子）"></a>类的定义格式（移动窗口例子）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyFrame myFrame=<span class="keyword">new</span> <span class="title class_">MyFrame</span>();</span><br><span class="line">        myFrame.createWindow();</span><br><span class="line">        myFrame.walk();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFrame</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> selfWidth=<span class="number">500</span>,selfHeigth=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x=<span class="number">200</span>,y=<span class="number">300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> screenWidth=<span class="number">0</span>,screenHeigth=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> ScreenWidth=<span class="number">0</span>,ScreenHeight=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> loopCount=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> flagX=<span class="literal">true</span>,flagY=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> Frame frame;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createWindow</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建窗口</span></span><br><span class="line">        frame=<span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">&quot;台球窗口例子&quot;</span>);</span><br><span class="line">        <span class="comment">//窗口的可见性</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//窗口的大小</span></span><br><span class="line">        frame.setSize(selfWidth,selfHeigth);</span><br><span class="line">        <span class="comment">//窗口的背景色</span></span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">10</span>,<span class="number">10</span>,<span class="number">200</span>));</span><br><span class="line">        <span class="comment">//窗口位置</span></span><br><span class="line">        frame.setLocation(x,y);</span><br><span class="line">        <span class="comment">//窗口的大小是否可改变</span></span><br><span class="line">        frame.setResizable(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获取屏幕尺寸</span></span><br><span class="line">        Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();</span><br><span class="line">        screenWidth=screenSize.width;</span><br><span class="line">        screenHeigth= screenSize.height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">walk</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            loopCount+=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">4</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span>||(x+selfWidth)&gt;screenWidth)</span><br><span class="line">            &#123;</span><br><span class="line">                flagX=!flagX;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(y&lt;<span class="number">0</span>||(y+selfHeigth)&gt;screenHeigth)</span><br><span class="line">            &#123;</span><br><span class="line">                flagY=!flagY;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flagX)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                x-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flagY)</span><br><span class="line">            &#123;</span><br><span class="line">                y+=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                y-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            frame.setLocation(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="继承的基本概念"><a href="#继承的基本概念" class="headerlink" title="继承的基本概念"></a>继承的基本概念</h4><p>访问父类用super.</p><h4 id="访问权限控制"><a href="#访问权限控制" class="headerlink" title="访问权限控制"></a>访问权限控制</h4><p>private：只能在类内部访问（权限要求最高，能被访问的范围越小）。</p><p>default（啥也不写，默认的）：包级权限，可以被同包的其他类访问</p><p>protected:可以被子类访问，也可以被同包的其他类访问到， protected在被同包的类访问的基础上，还能被其他包的子类访 问。</p><p>public：可以在类外部访问（权限要求最低）</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
